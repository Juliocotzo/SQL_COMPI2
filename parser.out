Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALL
    ALTER
    ANY
    AS
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    COLUMN
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    CURRENT_USER
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    DIV
    D_OR
    ELSE
    ENCODE
    END
    ENUM
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FOREIGN
    FROM
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ONLY
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RENAME
    RETURNING
    RIGHT
    ROUND
    SCALE
    SELECT
    SESSION_USER
    SET
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    TYPE
    UNION
    UNKNOWN
    UPDATE
    USING
    VALUES
    WHEN
    WHERE
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     instruccion -> drop_database_instr
Rule 8     instruccion -> use_database_instr
Rule 9     use_database_instr -> USE ID PTCOMA
Rule 10    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 11    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 12    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 13    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 14    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 15    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 16    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 17    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 18    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 19    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 20    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 21    createDB_unParam -> OWNER ID
Rule 22    createDB_unParam -> OWNER IGUAL ID
Rule 23    createDB_unParam -> MODE ENTERO
Rule 24    createDB_unParam -> MODE IGUAL ENTERO
Rule 25    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 26    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 27    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 28    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 29    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 30    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 31    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 32    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 33    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 34    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 35    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 36    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 37    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 38    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 39    constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 40    campos_c -> campos_c COMA ID
Rule 41    campos_c -> ID
Rule 42    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 43    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 44    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 45    cuerpo_createTable_lista -> cuerpo_createTable
Rule 46    cuerpo_createTable -> ID TIPO_DATO
Rule 47    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 48    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 49    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 50    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 51    cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 52    cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 53    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 54    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 55    TIPO_DATO -> TEXT
Rule 56    TIPO_DATO -> FLOAT
Rule 57    TIPO_DATO -> INTEGER
Rule 58    TIPO_DATO -> SMALLINT
Rule 59    TIPO_DATO -> MONEY
Rule 60    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 61    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 62    TIPO_DATO -> BIGINT
Rule 63    TIPO_DATO -> REAL
Rule 64    TIPO_DATO -> DOUBLE PRECISION
Rule 65    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 66    TIPO_DATO -> INTERVAL
Rule 67    TIPO_DATO -> TIME
Rule 68    TIPO_DATO -> TIMESTAMP
Rule 69    TIPO_DATO -> DATE
Rule 70    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 71    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 72    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 73    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 74    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 75    TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 76    extract_time -> YEAR
Rule 77    extract_time -> DAY
Rule 78    extract_time -> MONTH
Rule 79    extract_time -> HOUR
Rule 80    extract_time -> MINUTE
Rule 81    extract_time -> SECOND
Rule 82    agrupacion_expresion -> PAR_A expresion PAR_C
Rule 83    expresion -> CADENA
Rule 84    expresion -> ENTERO
Rule 85    expresion -> FLOTANTE
Rule 86    expresion -> ID
Rule 87    expresion -> ID PUNTO ID
Rule 88    expresion -> expresion SUMA expresion
Rule 89    expresion -> expresion RESTA expresion
Rule 90    expresion -> expresion DIVISION expresion
Rule 91    expresion -> expresion ASTERISCO expresion
Rule 92    expresion -> TRUE
Rule 93    expresion -> FALSE
Rule 94    string_type -> CADENA
Rule 95    string_type -> ID
Rule 96    expresion_relacional -> expresion MAYQUE expresion
Rule 97    expresion_relacional -> expresion MENQUE expresion
Rule 98    expresion_relacional -> expresion MAYIGQUE expresion
Rule 99    expresion_relacional -> expresion MENIGQUE expresion
Rule 100   expresion_relacional -> expresion DOBLEIG expresion
Rule 101   expresion_relacional -> expresion IGUAL expresion
Rule 102   expresion_relacional -> expresion NOIG expresion
Rule 103   expresion_relacional -> expresion NOIGUAL expresion
Rule 104   expresion_relacional -> expresion
Rule 105   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 106   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 107   expresion_logica -> NOT expresion_relacional
Rule 108   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALL                  : 
ALTER                : 
AND                  : 105
ANY                  : 
AS                   : 
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 91
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 62
BY                   : 
CADENA               : 83 94
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 72 74
CHARACTER            : 70 73 75
CHECK                : 37
COLUMN               : 
COMA                 : 40 44 60 61
CONSTRAINT           : 54
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 13 14 15 16 17 18 19 20 25 26 27 28 42 43
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 
DATABASE             : 10 11 13 14 15 16 17 18 19 20 25 26 27 28
DATABASES            : 12
DATE                 : 69
DATE_PART            : 
DAY                  : 77
DECIMAL              : 60
DECODE               : 
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 90
DOBLEIG              : 100
DOUBLE               : 64
DROP                 : 10 11
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 23 24 29 30 31 32 33 34 35 36 60 60 61 61 70 71 72 73 84
ENUM                 : 
EXCEPT               : 
EXISTS               : 11 15 16 19 20 27 28
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 93
FLOAT                : 56
FLOOR                : 
FLOTANTE             : 85
FOREIGN              : 
FOREING              : 39 52
FROM                 : 
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 79
ID                   : 9 10 11 13 14 15 16 17 18 19 20 21 22 25 26 27 28 29 30 31 32 33 34 35 36 39 39 39 40 41 42 43 43 46 47 48 48 49 50 51 52 52 52 54 86 87 87 95
IF                   : 11 15 16 19 20 27 28
IGUAL                : 22 24 30 31 32 32 34 35 36 36 101
IN                   : 
INHERITS             : 43
INNER                : 
INSERT               : 
INTEGER              : 57
INTERSECT            : 
INTERVAL             : 65 66
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 39 47 51 52
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 98
MAYMAY               : 
MAYQUE               : 96
MD5                  : 
MENIGQUE             : 99
MENMEN               : 
MENQUE               : 97
MIN                  : 
MINUTE               : 80
MIN_SCALE            : 
MOD                  : 
MODE                 : 23 24 29 30 31 32 33 34 35 36
MODULO               : 
MONEY                : 59
MONTH                : 78
MULTI                : 
NATURAL              : 
NOIG                 : 102
NOIGUAL              : 103
NOT                  : 15 16 19 20 27 28 49 107
NOTNULL              : 
NOW                  : 
NULL                 : 49 50
NUMERIC              : 61
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 14 16 18 20 26 28 106
ORDER                : 
OUTER                : 
OWNER                : 21 22 29 30 31 32 33 34 35 36
PAR_A                : 37 38 39 39 42 43 43 51 52 52 53 60 61 70 71 72 73 74 75 82
PAR_C                : 37 38 39 39 42 43 43 51 52 52 53 60 61 70 71 72 73 74 75 82
PI                   : 
POWER                : 
PRECISION            : 64
PRIMARY              : 47 51
PTCOMA               : 9 10 11 12 13 14 15 16 17 18 19 20 25 26 27 28 42 43
PUNTO                : 87
RADIANS              : 
RANDOM               : 
REAL                 : 63
REFERENCES           : 39 48 52
RENAME               : 
REPLACE              : 14 16 18 20 26 28
RESTA                : 89
RETURNING            : 
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 81
SELECT               : 
SESSION_USER         : 
SET                  : 
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 12
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 58
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 88
SYMMETRIC            : 
S_OR                 : 
TABLE                : 42 43
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 55
THEN                 : 
TIME                 : 67
TIMESTAMP            : 68
TO                   : 65
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 92
TYPE                 : 
UNION                : 
UNIQUE               : 38 53
UNKNOWN              : 
UPDATE               : 
USE                  : 9
USING                : 
VALUES               : 
VARCHAR              : 71
VARYING              : 70
WHEN                 : 
WHERE                : 
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 76
error                : 

Nonterminals, with rules where they appear

TIPO_DATO            : 46 47 48 49 50
agrupacion_expresion : 
campos_c             : 38 40 53
constraint_esp       : 54
createDB_dosParam    : 25 26 27 28
createDB_insrt       : 4
createDB_unParam     : 17 18 19 20
create_Table_isnrt   : 5
cuerpo_createTable   : 44 45
cuerpo_createTable_lista : 42 43 44
drop_database_instr  : 7
expresion            : 82 88 88 89 89 90 90 91 91 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104
expresion_logica     : 37
expresion_relacional : 105 105 106 106 107 108
extract_time         : 65 65
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
show_databases_instr : 6
string_type          : 
use_database_instr   : 8

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . drop_database_instr
    (8) instruccion -> . use_database_instr
    (13) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (14) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (15) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (16) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (17) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (18) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (19) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (25) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (26) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (42) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (43) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (12) show_databases_instr -> . SHOW DATABASES PTCOMA
    (10) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (11) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (9) use_database_instr -> . USE ID PTCOMA

    CREATE          shift and go to state 9
    SHOW            shift and go to state 10
    DROP            shift and go to state 11
    USE             shift and go to state 12

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    drop_database_instr            shift and go to state 7
    use_database_instr             shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . drop_database_instr
    (8) instruccion -> . use_database_instr
    (13) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (14) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (15) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (16) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (17) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (18) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (19) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (25) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (26) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (42) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (43) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (12) show_databases_instr -> . SHOW DATABASES PTCOMA
    (10) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (11) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (9) use_database_instr -> . USE ID PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 9
    SHOW            shift and go to state 10
    DROP            shift and go to state 11
    USE             shift and go to state 12

    instruccion                    shift and go to state 13
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    drop_database_instr            shift and go to state 7
    use_database_instr             shift and go to state 8

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    USE             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 4 (instruccion -> createDB_insrt .)
    USE             reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    USE             reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    DROP            reduce using rule 6 (instruccion -> show_databases_instr .)
    USE             reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (7) instruccion -> drop_database_instr .

    CREATE          reduce using rule 7 (instruccion -> drop_database_instr .)
    SHOW            reduce using rule 7 (instruccion -> drop_database_instr .)
    DROP            reduce using rule 7 (instruccion -> drop_database_instr .)
    USE             reduce using rule 7 (instruccion -> drop_database_instr .)
    $end            reduce using rule 7 (instruccion -> drop_database_instr .)


state 8

    (8) instruccion -> use_database_instr .

    CREATE          reduce using rule 8 (instruccion -> use_database_instr .)
    SHOW            reduce using rule 8 (instruccion -> use_database_instr .)
    DROP            reduce using rule 8 (instruccion -> use_database_instr .)
    USE             reduce using rule 8 (instruccion -> use_database_instr .)
    $end            reduce using rule 8 (instruccion -> use_database_instr .)


state 9

    (13) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (14) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (15) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (16) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (17) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (18) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (19) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (25) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (26) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (27) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (42) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (43) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    DATABASE        shift and go to state 14
    OR              shift and go to state 15
    TABLE           shift and go to state 16


state 10

    (12) show_databases_instr -> SHOW . DATABASES PTCOMA

    DATABASES       shift and go to state 17


state 11

    (10) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (11) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA

    DATABASE        shift and go to state 18


state 12

    (9) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 19


state 13

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 14

    (13) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (15) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (17) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (19) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (25) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 20
    IF              shift and go to state 21


state 15

    (14) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (16) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (18) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (26) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 22


state 16

    (42) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (43) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 23


state 17

    (12) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 24


state 18

    (10) drop_database_instr -> DROP DATABASE . ID PTCOMA
    (11) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 25
    IF              shift and go to state 26


state 19

    (9) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 27


state 20

    (13) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (17) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (25) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (21) createDB_unParam -> . OWNER ID
    (22) createDB_unParam -> . OWNER IGUAL ID
    (23) createDB_unParam -> . MODE ENTERO
    (24) createDB_unParam -> . MODE IGUAL ENTERO
    (29) createDB_dosParam -> . OWNER ID MODE ENTERO
    (30) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (36) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 28
    OWNER           shift and go to state 31
    MODE            shift and go to state 32

    createDB_unParam               shift and go to state 29
    createDB_dosParam              shift and go to state 30

state 21

    (15) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (19) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 33


state 22

    (14) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (16) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (18) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (26) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 34


state 23

    (42) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (43) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 35


state 24

    (12) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 12 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 12 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 12 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 12 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 12 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 25

    (10) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 36


state 26

    (11) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 37


state 27

    (9) use_database_instr -> USE ID PTCOMA .

    CREATE          reduce using rule 9 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 9 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 9 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 9 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 9 (use_database_instr -> USE ID PTCOMA .)


state 28

    (13) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 13 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 13 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 13 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 13 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 13 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 29

    (17) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 38


state 30

    (25) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 39


state 31

    (21) createDB_unParam -> OWNER . ID
    (22) createDB_unParam -> OWNER . IGUAL ID
    (29) createDB_dosParam -> OWNER . ID MODE ENTERO
    (30) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (31) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (32) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 40
    IGUAL           shift and go to state 41


state 32

    (23) createDB_unParam -> MODE . ENTERO
    (24) createDB_unParam -> MODE . IGUAL ENTERO
    (33) createDB_dosParam -> MODE . ENTERO OWNER ID
    (34) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (36) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 42
    IGUAL           shift and go to state 43


state 33

    (15) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (19) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 44


state 34

    (14) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (16) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (18) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (26) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 45
    IF              shift and go to state 46


state 35

    (42) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (44) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (45) cuerpo_createTable_lista -> . cuerpo_createTable
    (46) cuerpo_createTable -> . ID TIPO_DATO
    (47) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (48) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (49) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (50) cuerpo_createTable -> . ID TIPO_DATO NULL
    (51) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (52) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (53) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (54) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 47
    PRIMARY         shift and go to state 50
    FOREING         shift and go to state 51
    UNIQUE          shift and go to state 52
    CONSTRAINT      shift and go to state 53

    cuerpo_createTable_lista       shift and go to state 48
    cuerpo_createTable             shift and go to state 49

state 36

    (10) drop_database_instr -> DROP DATABASE ID PTCOMA .

    CREATE          reduce using rule 10 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 10 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 10 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 10 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 10 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 37

    (11) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 54


state 38

    (17) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 17 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 17 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 17 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 17 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 17 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 39

    (25) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 40

    (21) createDB_unParam -> OWNER ID .
    (29) createDB_dosParam -> OWNER ID . MODE ENTERO
    (30) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 21 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 55


state 41

    (22) createDB_unParam -> OWNER IGUAL . ID
    (31) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (32) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 56


state 42

    (23) createDB_unParam -> MODE ENTERO .
    (33) createDB_dosParam -> MODE ENTERO . OWNER ID
    (34) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 23 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 57


state 43

    (24) createDB_unParam -> MODE IGUAL . ENTERO
    (35) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (36) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 58


state 44

    (15) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (19) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 59


state 45

    (14) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (18) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (26) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (21) createDB_unParam -> . OWNER ID
    (22) createDB_unParam -> . OWNER IGUAL ID
    (23) createDB_unParam -> . MODE ENTERO
    (24) createDB_unParam -> . MODE IGUAL ENTERO
    (29) createDB_dosParam -> . OWNER ID MODE ENTERO
    (30) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (36) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 60
    OWNER           shift and go to state 31
    MODE            shift and go to state 32

    createDB_unParam               shift and go to state 61
    createDB_dosParam              shift and go to state 62

state 46

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 63


state 47

    (46) cuerpo_createTable -> ID . TIPO_DATO
    (47) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (48) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (49) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (50) cuerpo_createTable -> ID . TIPO_DATO NULL
    (55) TIPO_DATO -> . TEXT
    (56) TIPO_DATO -> . FLOAT
    (57) TIPO_DATO -> . INTEGER
    (58) TIPO_DATO -> . SMALLINT
    (59) TIPO_DATO -> . MONEY
    (60) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (61) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (62) TIPO_DATO -> . BIGINT
    (63) TIPO_DATO -> . REAL
    (64) TIPO_DATO -> . DOUBLE PRECISION
    (65) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (66) TIPO_DATO -> . INTERVAL
    (67) TIPO_DATO -> . TIME
    (68) TIPO_DATO -> . TIMESTAMP
    (69) TIPO_DATO -> . DATE
    (70) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (71) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (72) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (73) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (74) TIPO_DATO -> . CHAR PAR_A PAR_C
    (75) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 65
    FLOAT           shift and go to state 66
    INTEGER         shift and go to state 67
    SMALLINT        shift and go to state 68
    MONEY           shift and go to state 69
    DECIMAL         shift and go to state 70
    NUMERIC         shift and go to state 71
    BIGINT          shift and go to state 72
    REAL            shift and go to state 73
    DOUBLE          shift and go to state 74
    INTERVAL        shift and go to state 75
    TIME            shift and go to state 76
    TIMESTAMP       shift and go to state 77
    DATE            shift and go to state 78
    CHARACTER       shift and go to state 79
    VARCHAR         shift and go to state 80
    CHAR            shift and go to state 81

    TIPO_DATO                      shift and go to state 64

state 48

    (42) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (44) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 82
    COMA            shift and go to state 83


state 49

    (45) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 45 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 45 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 50

    (51) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 84


state 51

    (52) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 85


state 52

    (53) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 86


state 53

    (54) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 87


state 54

    (11) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 88


state 55

    (29) createDB_dosParam -> OWNER ID MODE . ENTERO
    (30) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 89
    IGUAL           shift and go to state 90


state 56

    (22) createDB_unParam -> OWNER IGUAL ID .
    (31) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (32) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 22 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 91


state 57

    (33) createDB_dosParam -> MODE ENTERO OWNER . ID
    (34) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 92
    IGUAL           shift and go to state 93


state 58

    (24) createDB_unParam -> MODE IGUAL ENTERO .
    (35) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (36) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 24 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 94


state 59

    (15) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (19) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (21) createDB_unParam -> . OWNER ID
    (22) createDB_unParam -> . OWNER IGUAL ID
    (23) createDB_unParam -> . MODE ENTERO
    (24) createDB_unParam -> . MODE IGUAL ENTERO
    (29) createDB_dosParam -> . OWNER ID MODE ENTERO
    (30) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (36) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 95
    OWNER           shift and go to state 31
    MODE            shift and go to state 32

    createDB_unParam               shift and go to state 96
    createDB_dosParam              shift and go to state 97

state 60

    (14) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 14 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 14 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 14 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 14 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 14 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 61

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 98


state 62

    (26) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 99


state 63

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 100


state 64

    (46) cuerpo_createTable -> ID TIPO_DATO .
    (47) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (48) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (49) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (50) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 46 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 46 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 101
    REFERENCES      shift and go to state 102
    NOT             shift and go to state 103
    NULL            shift and go to state 104


state 65

    (55) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 55 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 55 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 55 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 55 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 55 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 55 (TIPO_DATO -> TEXT .)


state 66

    (56) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 56 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 56 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 56 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 56 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 56 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 56 (TIPO_DATO -> FLOAT .)


state 67

    (57) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 57 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 57 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 57 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 57 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 57 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 57 (TIPO_DATO -> INTEGER .)


state 68

    (58) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 58 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 58 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 58 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 58 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 58 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 58 (TIPO_DATO -> SMALLINT .)


state 69

    (59) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 59 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 59 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 59 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 59 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 59 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 59 (TIPO_DATO -> MONEY .)


state 70

    (60) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 105


state 71

    (61) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 106


state 72

    (62) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 62 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 62 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 62 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 62 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 62 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 62 (TIPO_DATO -> BIGINT .)


state 73

    (63) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 63 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 63 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 63 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 63 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 63 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 63 (TIPO_DATO -> REAL .)


state 74

    (64) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 107


state 75

    (65) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (66) TIPO_DATO -> INTERVAL .
    (76) extract_time -> . YEAR
    (77) extract_time -> . DAY
    (78) extract_time -> . MONTH
    (79) extract_time -> . HOUR
    (80) extract_time -> . MINUTE
    (81) extract_time -> . SECOND

    PRIMARY         reduce using rule 66 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 66 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 66 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 66 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 66 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 66 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 109
    DAY             shift and go to state 110
    MONTH           shift and go to state 111
    HOUR            shift and go to state 112
    MINUTE          shift and go to state 113
    SECOND          shift and go to state 114

    extract_time                   shift and go to state 108

state 76

    (67) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 67 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 67 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 67 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 67 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 67 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 67 (TIPO_DATO -> TIME .)


state 77

    (68) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 68 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 68 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 68 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 68 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 68 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 68 (TIPO_DATO -> TIMESTAMP .)


state 78

    (69) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 69 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 69 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 69 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 69 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 69 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 69 (TIPO_DATO -> DATE .)


state 79

    (70) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (73) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (75) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 115
    PAR_A           shift and go to state 116


state 80

    (71) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 117


state 81

    (72) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (74) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 118


state 82

    (42) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 119
    INHERITS        shift and go to state 120


state 83

    (44) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (46) cuerpo_createTable -> . ID TIPO_DATO
    (47) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (48) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (49) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (50) cuerpo_createTable -> . ID TIPO_DATO NULL
    (51) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (52) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (53) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (54) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 47
    PRIMARY         shift and go to state 50
    FOREING         shift and go to state 51
    UNIQUE          shift and go to state 52
    CONSTRAINT      shift and go to state 53

    cuerpo_createTable             shift and go to state 121

state 84

    (51) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 122


state 85

    (52) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 123


state 86

    (53) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (40) campos_c -> . campos_c COMA ID
    (41) campos_c -> . ID

    ID              shift and go to state 125

    campos_c                       shift and go to state 124

state 87

    (54) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (37) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (38) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (39) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 127
    UNIQUE          shift and go to state 128
    FOREING         shift and go to state 129

    constraint_esp                 shift and go to state 126

state 88

    (11) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    CREATE          reduce using rule 11 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 11 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 11 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 11 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 11 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 89

    (29) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 29 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 90

    (30) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 130


state 91

    (31) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (32) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 132
    IGUAL           shift and go to state 131


state 92

    (33) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 33 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 93

    (34) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 133


state 94

    (35) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (36) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 135
    IGUAL           shift and go to state 134


state 95

    (15) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 15 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 15 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 15 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 15 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 15 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 96

    (19) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 136


state 97

    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 137


state 98

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 99

    (26) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 100

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 138


state 101

    (47) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 139


state 102

    (48) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 140


state 103

    (49) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 141


state 104

    (50) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 50 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 50 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 105

    (60) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 142


state 106

    (61) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 143


state 107

    (64) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 64 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 64 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 64 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 64 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 64 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 64 (TIPO_DATO -> DOUBLE PRECISION .)


state 108

    (65) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 144


state 109

    (76) extract_time -> YEAR .

    TO              reduce using rule 76 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 76 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 76 (extract_time -> YEAR .)
    NOT             reduce using rule 76 (extract_time -> YEAR .)
    NULL            reduce using rule 76 (extract_time -> YEAR .)
    PAR_C           reduce using rule 76 (extract_time -> YEAR .)
    COMA            reduce using rule 76 (extract_time -> YEAR .)


state 110

    (77) extract_time -> DAY .

    TO              reduce using rule 77 (extract_time -> DAY .)
    PRIMARY         reduce using rule 77 (extract_time -> DAY .)
    REFERENCES      reduce using rule 77 (extract_time -> DAY .)
    NOT             reduce using rule 77 (extract_time -> DAY .)
    NULL            reduce using rule 77 (extract_time -> DAY .)
    PAR_C           reduce using rule 77 (extract_time -> DAY .)
    COMA            reduce using rule 77 (extract_time -> DAY .)


state 111

    (78) extract_time -> MONTH .

    TO              reduce using rule 78 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 78 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 78 (extract_time -> MONTH .)
    NOT             reduce using rule 78 (extract_time -> MONTH .)
    NULL            reduce using rule 78 (extract_time -> MONTH .)
    PAR_C           reduce using rule 78 (extract_time -> MONTH .)
    COMA            reduce using rule 78 (extract_time -> MONTH .)


state 112

    (79) extract_time -> HOUR .

    TO              reduce using rule 79 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 79 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 79 (extract_time -> HOUR .)
    NOT             reduce using rule 79 (extract_time -> HOUR .)
    NULL            reduce using rule 79 (extract_time -> HOUR .)
    PAR_C           reduce using rule 79 (extract_time -> HOUR .)
    COMA            reduce using rule 79 (extract_time -> HOUR .)


state 113

    (80) extract_time -> MINUTE .

    TO              reduce using rule 80 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 80 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 80 (extract_time -> MINUTE .)
    NOT             reduce using rule 80 (extract_time -> MINUTE .)
    NULL            reduce using rule 80 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 80 (extract_time -> MINUTE .)
    COMA            reduce using rule 80 (extract_time -> MINUTE .)


state 114

    (81) extract_time -> SECOND .

    TO              reduce using rule 81 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 81 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 81 (extract_time -> SECOND .)
    NOT             reduce using rule 81 (extract_time -> SECOND .)
    NULL            reduce using rule 81 (extract_time -> SECOND .)
    PAR_C           reduce using rule 81 (extract_time -> SECOND .)
    COMA            reduce using rule 81 (extract_time -> SECOND .)


state 115

    (70) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 145


state 116

    (73) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (75) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 146
    PAR_C           shift and go to state 147


state 117

    (71) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 148


state 118

    (72) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (74) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 149
    PAR_C           shift and go to state 150


state 119

    (42) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 42 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 42 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DROP            reduce using rule 42 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    USE             reduce using rule 42 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 42 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 120

    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 151


state 121

    (44) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 44 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 44 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 122

    (51) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 152


state 123

    (52) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 153


state 124

    (53) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (40) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 154
    COMA            shift and go to state 155


state 125

    (41) campos_c -> ID .

    PAR_C           reduce using rule 41 (campos_c -> ID .)
    COMA            reduce using rule 41 (campos_c -> ID .)


state 126

    (54) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 54 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 54 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 127

    (37) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 156


state 128

    (38) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 157


state 129

    (39) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 158


state 130

    (30) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 30 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 131

    (32) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 159


state 132

    (31) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 31 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 133

    (34) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 34 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 134

    (36) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 160


state 135

    (35) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 35 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 136

    (19) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 19 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 19 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 19 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 19 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 19 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 137

    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 138

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (21) createDB_unParam -> . OWNER ID
    (22) createDB_unParam -> . OWNER IGUAL ID
    (23) createDB_unParam -> . MODE ENTERO
    (24) createDB_unParam -> . MODE IGUAL ENTERO
    (29) createDB_dosParam -> . OWNER ID MODE ENTERO
    (30) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (36) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 161
    OWNER           shift and go to state 31
    MODE            shift and go to state 32

    createDB_unParam               shift and go to state 162
    createDB_dosParam              shift and go to state 163

state 139

    (47) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 47 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 47 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 140

    (48) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 48 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 48 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 141

    (49) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 49 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 49 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 142

    (60) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 164


state 143

    (61) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 165


state 144

    (65) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (76) extract_time -> . YEAR
    (77) extract_time -> . DAY
    (78) extract_time -> . MONTH
    (79) extract_time -> . HOUR
    (80) extract_time -> . MINUTE
    (81) extract_time -> . SECOND

    YEAR            shift and go to state 109
    DAY             shift and go to state 110
    MONTH           shift and go to state 111
    HOUR            shift and go to state 112
    MINUTE          shift and go to state 113
    SECOND          shift and go to state 114

    extract_time                   shift and go to state 166

state 145

    (70) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 167


state 146

    (73) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 168


state 147

    (75) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 75 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 75 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 75 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 75 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 75 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 75 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 148

    (71) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 169


state 149

    (72) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 170


state 150

    (74) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 74 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 74 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 74 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 74 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 74 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 74 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 151

    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 171


state 152

    (51) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 172


state 153

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 173


state 154

    (53) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 53 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 53 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 155

    (40) campos_c -> campos_c COMA . ID

    ID              shift and go to state 174


state 156

    (37) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (105) expresion_logica -> . expresion_relacional AND expresion_relacional
    (106) expresion_logica -> . expresion_relacional OR expresion_relacional
    (107) expresion_logica -> . NOT expresion_relacional
    (108) expresion_logica -> . expresion_relacional
    (96) expresion_relacional -> . expresion MAYQUE expresion
    (97) expresion_relacional -> . expresion MENQUE expresion
    (98) expresion_relacional -> . expresion MAYIGQUE expresion
    (99) expresion_relacional -> . expresion MENIGQUE expresion
    (100) expresion_relacional -> . expresion DOBLEIG expresion
    (101) expresion_relacional -> . expresion IGUAL expresion
    (102) expresion_relacional -> . expresion NOIG expresion
    (103) expresion_relacional -> . expresion NOIGUAL expresion
    (104) expresion_relacional -> . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    NOT             shift and go to state 177
    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion_logica               shift and go to state 175
    expresion_relacional           shift and go to state 176
    expresion                      shift and go to state 178

state 157

    (38) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (40) campos_c -> . campos_c COMA ID
    (41) campos_c -> . ID

    ID              shift and go to state 125

    campos_c                       shift and go to state 185

state 158

    (39) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 186


state 159

    (32) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 32 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 160

    (36) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 36 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 161

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 162

    (20) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 187


state 163

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 188


state 164

    (60) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 189


state 165

    (61) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 190


state 166

    (65) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 65 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 65 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 65 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 65 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 65 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 65 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 167

    (70) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 191


state 168

    (73) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 73 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 73 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 73 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 73 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 73 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 73 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 169

    (71) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 71 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 71 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 71 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 71 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 71 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 71 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 170

    (72) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 72 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 72 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 72 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 72 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 72 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 72 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 171

    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 192


state 172

    (51) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 51 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 51 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 173

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 193


state 174

    (40) campos_c -> campos_c COMA ID .

    PAR_C           reduce using rule 40 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 40 (campos_c -> campos_c COMA ID .)


state 175

    (37) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 194


state 176

    (105) expresion_logica -> expresion_relacional . AND expresion_relacional
    (106) expresion_logica -> expresion_relacional . OR expresion_relacional
    (108) expresion_logica -> expresion_relacional .

    AND             shift and go to state 195
    OR              shift and go to state 196
    PAR_C           reduce using rule 108 (expresion_logica -> expresion_relacional .)


state 177

    (107) expresion_logica -> NOT . expresion_relacional
    (96) expresion_relacional -> . expresion MAYQUE expresion
    (97) expresion_relacional -> . expresion MENQUE expresion
    (98) expresion_relacional -> . expresion MAYIGQUE expresion
    (99) expresion_relacional -> . expresion MENIGQUE expresion
    (100) expresion_relacional -> . expresion DOBLEIG expresion
    (101) expresion_relacional -> . expresion IGUAL expresion
    (102) expresion_relacional -> . expresion NOIG expresion
    (103) expresion_relacional -> . expresion NOIGUAL expresion
    (104) expresion_relacional -> . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion_relacional           shift and go to state 197
    expresion                      shift and go to state 178

state 178

    (96) expresion_relacional -> expresion . MAYQUE expresion
    (97) expresion_relacional -> expresion . MENQUE expresion
    (98) expresion_relacional -> expresion . MAYIGQUE expresion
    (99) expresion_relacional -> expresion . MENIGQUE expresion
    (100) expresion_relacional -> expresion . DOBLEIG expresion
    (101) expresion_relacional -> expresion . IGUAL expresion
    (102) expresion_relacional -> expresion . NOIG expresion
    (103) expresion_relacional -> expresion . NOIGUAL expresion
    (104) expresion_relacional -> expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 198
    MENQUE          shift and go to state 199
    MAYIGQUE        shift and go to state 200
    MENIGQUE        shift and go to state 201
    DOBLEIG         shift and go to state 202
    IGUAL           shift and go to state 203
    NOIG            shift and go to state 204
    NOIGUAL         shift and go to state 205
    AND             reduce using rule 104 (expresion_relacional -> expresion .)
    OR              reduce using rule 104 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 104 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 179

    (83) expresion -> CADENA .

    MAYQUE          reduce using rule 83 (expresion -> CADENA .)
    MENQUE          reduce using rule 83 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 83 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 83 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 83 (expresion -> CADENA .)
    IGUAL           reduce using rule 83 (expresion -> CADENA .)
    NOIG            reduce using rule 83 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 83 (expresion -> CADENA .)
    SUMA            reduce using rule 83 (expresion -> CADENA .)
    RESTA           reduce using rule 83 (expresion -> CADENA .)
    DIVISION        reduce using rule 83 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 83 (expresion -> CADENA .)
    AND             reduce using rule 83 (expresion -> CADENA .)
    OR              reduce using rule 83 (expresion -> CADENA .)
    PAR_C           reduce using rule 83 (expresion -> CADENA .)


state 180

    (84) expresion -> ENTERO .

    MAYQUE          reduce using rule 84 (expresion -> ENTERO .)
    MENQUE          reduce using rule 84 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 84 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 84 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 84 (expresion -> ENTERO .)
    IGUAL           reduce using rule 84 (expresion -> ENTERO .)
    NOIG            reduce using rule 84 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 84 (expresion -> ENTERO .)
    SUMA            reduce using rule 84 (expresion -> ENTERO .)
    RESTA           reduce using rule 84 (expresion -> ENTERO .)
    DIVISION        reduce using rule 84 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 84 (expresion -> ENTERO .)
    AND             reduce using rule 84 (expresion -> ENTERO .)
    OR              reduce using rule 84 (expresion -> ENTERO .)
    PAR_C           reduce using rule 84 (expresion -> ENTERO .)


state 181

    (85) expresion -> FLOTANTE .

    MAYQUE          reduce using rule 85 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 85 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 85 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 85 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 85 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 85 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 85 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 85 (expresion -> FLOTANTE .)
    SUMA            reduce using rule 85 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 85 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 85 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 85 (expresion -> FLOTANTE .)
    AND             reduce using rule 85 (expresion -> FLOTANTE .)
    OR              reduce using rule 85 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 85 (expresion -> FLOTANTE .)


state 182

    (86) expresion -> ID .
    (87) expresion -> ID . PUNTO ID

    MAYQUE          reduce using rule 86 (expresion -> ID .)
    MENQUE          reduce using rule 86 (expresion -> ID .)
    MAYIGQUE        reduce using rule 86 (expresion -> ID .)
    MENIGQUE        reduce using rule 86 (expresion -> ID .)
    DOBLEIG         reduce using rule 86 (expresion -> ID .)
    IGUAL           reduce using rule 86 (expresion -> ID .)
    NOIG            reduce using rule 86 (expresion -> ID .)
    NOIGUAL         reduce using rule 86 (expresion -> ID .)
    SUMA            reduce using rule 86 (expresion -> ID .)
    RESTA           reduce using rule 86 (expresion -> ID .)
    DIVISION        reduce using rule 86 (expresion -> ID .)
    ASTERISCO       reduce using rule 86 (expresion -> ID .)
    AND             reduce using rule 86 (expresion -> ID .)
    OR              reduce using rule 86 (expresion -> ID .)
    PAR_C           reduce using rule 86 (expresion -> ID .)
    PUNTO           shift and go to state 210


state 183

    (92) expresion -> TRUE .

    MAYQUE          reduce using rule 92 (expresion -> TRUE .)
    MENQUE          reduce using rule 92 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 92 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 92 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 92 (expresion -> TRUE .)
    IGUAL           reduce using rule 92 (expresion -> TRUE .)
    NOIG            reduce using rule 92 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 92 (expresion -> TRUE .)
    SUMA            reduce using rule 92 (expresion -> TRUE .)
    RESTA           reduce using rule 92 (expresion -> TRUE .)
    DIVISION        reduce using rule 92 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 92 (expresion -> TRUE .)
    AND             reduce using rule 92 (expresion -> TRUE .)
    OR              reduce using rule 92 (expresion -> TRUE .)
    PAR_C           reduce using rule 92 (expresion -> TRUE .)


state 184

    (93) expresion -> FALSE .

    MAYQUE          reduce using rule 93 (expresion -> FALSE .)
    MENQUE          reduce using rule 93 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 93 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 93 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 93 (expresion -> FALSE .)
    IGUAL           reduce using rule 93 (expresion -> FALSE .)
    NOIG            reduce using rule 93 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 93 (expresion -> FALSE .)
    SUMA            reduce using rule 93 (expresion -> FALSE .)
    RESTA           reduce using rule 93 (expresion -> FALSE .)
    DIVISION        reduce using rule 93 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 93 (expresion -> FALSE .)
    AND             reduce using rule 93 (expresion -> FALSE .)
    OR              reduce using rule 93 (expresion -> FALSE .)
    PAR_C           reduce using rule 93 (expresion -> FALSE .)


state 185

    (38) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (40) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 211
    COMA            shift and go to state 155


state 186

    (39) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 212


state 187

    (20) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 188

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 189

    (60) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 213


state 190

    (61) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 214


state 191

    (70) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 70 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 70 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 70 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 70 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 70 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 70 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 192

    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 215


state 193

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 216


state 194

    (37) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 37 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 37 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 195

    (105) expresion_logica -> expresion_relacional AND . expresion_relacional
    (96) expresion_relacional -> . expresion MAYQUE expresion
    (97) expresion_relacional -> . expresion MENQUE expresion
    (98) expresion_relacional -> . expresion MAYIGQUE expresion
    (99) expresion_relacional -> . expresion MENIGQUE expresion
    (100) expresion_relacional -> . expresion DOBLEIG expresion
    (101) expresion_relacional -> . expresion IGUAL expresion
    (102) expresion_relacional -> . expresion NOIG expresion
    (103) expresion_relacional -> . expresion NOIGUAL expresion
    (104) expresion_relacional -> . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion_relacional           shift and go to state 217
    expresion                      shift and go to state 178

state 196

    (106) expresion_logica -> expresion_relacional OR . expresion_relacional
    (96) expresion_relacional -> . expresion MAYQUE expresion
    (97) expresion_relacional -> . expresion MENQUE expresion
    (98) expresion_relacional -> . expresion MAYIGQUE expresion
    (99) expresion_relacional -> . expresion MENIGQUE expresion
    (100) expresion_relacional -> . expresion DOBLEIG expresion
    (101) expresion_relacional -> . expresion IGUAL expresion
    (102) expresion_relacional -> . expresion NOIG expresion
    (103) expresion_relacional -> . expresion NOIGUAL expresion
    (104) expresion_relacional -> . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion_relacional           shift and go to state 218
    expresion                      shift and go to state 178

state 197

    (107) expresion_logica -> NOT expresion_relacional .

    PAR_C           reduce using rule 107 (expresion_logica -> NOT expresion_relacional .)


state 198

    (96) expresion_relacional -> expresion MAYQUE . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 219

state 199

    (97) expresion_relacional -> expresion MENQUE . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 220

state 200

    (98) expresion_relacional -> expresion MAYIGQUE . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 221

state 201

    (99) expresion_relacional -> expresion MENIGQUE . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 222

state 202

    (100) expresion_relacional -> expresion DOBLEIG . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 223

state 203

    (101) expresion_relacional -> expresion IGUAL . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 224

state 204

    (102) expresion_relacional -> expresion NOIG . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 225

state 205

    (103) expresion_relacional -> expresion NOIGUAL . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 226

state 206

    (88) expresion -> expresion SUMA . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 227

state 207

    (89) expresion -> expresion RESTA . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 228

state 208

    (90) expresion -> expresion DIVISION . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 229

state 209

    (91) expresion -> expresion ASTERISCO . expresion
    (83) expresion -> . CADENA
    (84) expresion -> . ENTERO
    (85) expresion -> . FLOTANTE
    (86) expresion -> . ID
    (87) expresion -> . ID PUNTO ID
    (88) expresion -> . expresion SUMA expresion
    (89) expresion -> . expresion RESTA expresion
    (90) expresion -> . expresion DIVISION expresion
    (91) expresion -> . expresion ASTERISCO expresion
    (92) expresion -> . TRUE
    (93) expresion -> . FALSE

    CADENA          shift and go to state 179
    ENTERO          shift and go to state 180
    FLOTANTE        shift and go to state 181
    ID              shift and go to state 182
    TRUE            shift and go to state 183
    FALSE           shift and go to state 184

    expresion                      shift and go to state 230

state 210

    (87) expresion -> ID PUNTO . ID

    ID              shift and go to state 231


state 211

    (38) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 38 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 38 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 212

    (39) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 232


state 213

    (60) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 60 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 60 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 60 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 60 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 60 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 60 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 214

    (61) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 61 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 61 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 61 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 61 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 61 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 61 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 215

    (43) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 43 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 43 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 43 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    USE             reduce using rule 43 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 43 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 216

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 233


state 217

    (105) expresion_logica -> expresion_relacional AND expresion_relacional .

    PAR_C           reduce using rule 105 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 218

    (106) expresion_logica -> expresion_relacional OR expresion_relacional .

    PAR_C           reduce using rule 106 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 219

    (96) expresion_relacional -> expresion MAYQUE expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 96 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 96 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 96 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 220

    (97) expresion_relacional -> expresion MENQUE expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 97 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 97 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 97 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 221

    (98) expresion_relacional -> expresion MAYIGQUE expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 98 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 98 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 98 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 222

    (99) expresion_relacional -> expresion MENIGQUE expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 99 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 99 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 99 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 223

    (100) expresion_relacional -> expresion DOBLEIG expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 100 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 100 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 100 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 224

    (101) expresion_relacional -> expresion IGUAL expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 101 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 101 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 101 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 225

    (102) expresion_relacional -> expresion NOIG expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 102 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 102 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 102 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 226

    (103) expresion_relacional -> expresion NOIGUAL expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 103 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 103 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 103 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 206
    RESTA           shift and go to state 207
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209


state 227

    (88) expresion -> expresion SUMA expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 88 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 88 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 88 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 88 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 88 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 88 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 88 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 88 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 88 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 88 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 88 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 88 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 88 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209

  ! DIVISION        [ reduce using rule 88 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 88 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 206 ]
  ! RESTA           [ shift and go to state 207 ]


state 228

    (89) expresion -> expresion RESTA expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 89 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 89 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 89 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 89 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 89 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 89 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 89 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 89 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 89 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 89 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 89 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 89 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 89 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 208
    ASTERISCO       shift and go to state 209

  ! DIVISION        [ reduce using rule 89 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 89 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 206 ]
  ! RESTA           [ shift and go to state 207 ]


state 229

    (90) expresion -> expresion DIVISION expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 90 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 90 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 206 ]
  ! RESTA           [ shift and go to state 207 ]
  ! DIVISION        [ shift and go to state 208 ]
  ! ASTERISCO       [ shift and go to state 209 ]


state 230

    (91) expresion -> expresion ASTERISCO expresion .
    (88) expresion -> expresion . SUMA expresion
    (89) expresion -> expresion . RESTA expresion
    (90) expresion -> expresion . DIVISION expresion
    (91) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    SUMA            reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 91 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 206 ]
  ! RESTA           [ shift and go to state 207 ]
  ! DIVISION        [ shift and go to state 208 ]
  ! ASTERISCO       [ shift and go to state 209 ]


state 231

    (87) expresion -> ID PUNTO ID .

    MAYQUE          reduce using rule 87 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 87 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 87 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 87 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 87 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 87 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 87 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 87 (expresion -> ID PUNTO ID .)
    SUMA            reduce using rule 87 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 87 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 87 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 87 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 87 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 87 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 87 (expresion -> ID PUNTO ID .)


state 232

    (39) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 234


state 233

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 235


state 234

    (39) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 236


state 235

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 237


state 236

    (39) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 238


state 237

    (52) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 52 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 52 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 238

    (39) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 239


state 239

    (39) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 240


state 240

    (39) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 39 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 39 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

