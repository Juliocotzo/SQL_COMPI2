Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALL
    ANY
    AS
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    COLUMN
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    DIV
    D_OR
    ELSE
    ENCODE
    END
    ENUM
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FOREIGN
    FROM
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ONLY
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RETURNING
    RIGHT
    ROUND
    SCALE
    SELECT
    SET
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    TYPE
    UNION
    UNKNOWN
    UPDATE
    USING
    VALUES
    WHEN
    WHERE
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     instruccion -> drop_database_instr
Rule 8     instruccion -> use_database_instr
Rule 9     instruccion -> alterDB_insrt
Rule 10    alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 11    alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 12    usuariosDB -> ID
Rule 13    usuariosDB -> CURRENT_USER
Rule 14    usuariosDB -> SESSION_USER
Rule 15    usuariosDB -> CADENA
Rule 16    use_database_instr -> USE ID PTCOMA
Rule 17    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 18    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 19    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 20    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 21    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 22    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 23    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 24    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 25    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 26    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 27    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 28    createDB_unParam -> OWNER ID
Rule 29    createDB_unParam -> OWNER IGUAL ID
Rule 30    createDB_unParam -> MODE ENTERO
Rule 31    createDB_unParam -> MODE IGUAL ENTERO
Rule 32    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 33    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 34    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 35    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 36    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 37    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 38    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 39    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 40    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 41    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 42    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 43    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 44    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 45    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 46    constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 47    campos_c -> campos_c COMA ID
Rule 48    campos_c -> ID
Rule 49    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 50    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 51    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 52    cuerpo_createTable_lista -> cuerpo_createTable
Rule 53    cuerpo_createTable -> ID TIPO_DATO
Rule 54    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 55    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 56    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 57    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 58    cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 59    cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 60    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 61    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 62    TIPO_DATO -> TEXT
Rule 63    TIPO_DATO -> FLOAT
Rule 64    TIPO_DATO -> INTEGER
Rule 65    TIPO_DATO -> SMALLINT
Rule 66    TIPO_DATO -> MONEY
Rule 67    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 68    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 69    TIPO_DATO -> BIGINT
Rule 70    TIPO_DATO -> REAL
Rule 71    TIPO_DATO -> DOUBLE PRECISION
Rule 72    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 73    TIPO_DATO -> INTERVAL
Rule 74    TIPO_DATO -> TIME
Rule 75    TIPO_DATO -> TIMESTAMP
Rule 76    TIPO_DATO -> DATE
Rule 77    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 78    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 79    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 80    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 81    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 82    TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 83    extract_time -> YEAR
Rule 84    extract_time -> DAY
Rule 85    extract_time -> MONTH
Rule 86    extract_time -> HOUR
Rule 87    extract_time -> MINUTE
Rule 88    extract_time -> SECOND
Rule 89    agrupacion_expresion -> PAR_A expresion PAR_C
Rule 90    expresion -> CADENA
Rule 91    expresion -> ENTERO
Rule 92    expresion -> FLOTANTE
Rule 93    expresion -> ID
Rule 94    expresion -> ID PUNTO ID
Rule 95    expresion -> expresion SUMA expresion
Rule 96    expresion -> expresion RESTA expresion
Rule 97    expresion -> expresion DIVISION expresion
Rule 98    expresion -> expresion ASTERISCO expresion
Rule 99    expresion -> TRUE
Rule 100   expresion -> FALSE
Rule 101   string_type -> CADENA
Rule 102   string_type -> ID
Rule 103   expresion_relacional -> expresion MAYQUE expresion
Rule 104   expresion_relacional -> expresion MENQUE expresion
Rule 105   expresion_relacional -> expresion MAYIGQUE expresion
Rule 106   expresion_relacional -> expresion MENIGQUE expresion
Rule 107   expresion_relacional -> expresion DOBLEIG expresion
Rule 108   expresion_relacional -> expresion IGUAL expresion
Rule 109   expresion_relacional -> expresion NOIG expresion
Rule 110   expresion_relacional -> expresion NOIGUAL expresion
Rule 111   expresion_relacional -> expresion
Rule 112   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 113   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 114   expresion_logica -> NOT expresion_relacional
Rule 115   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALL                  : 
ALTER                : 10 11
AND                  : 112
ANY                  : 
AS                   : 
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 98
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 69
BY                   : 
CADENA               : 15 90 101
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 79 81
CHARACTER            : 77 80 82
CHECK                : 44
COLUMN               : 
COMA                 : 47 51 67 68
CONSTRAINT           : 61
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 20 21 22 23 24 25 26 27 32 33 34 35 49 50
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 13
DATABASE             : 10 11 17 18 20 21 22 23 24 25 26 27 32 33 34 35
DATABASES            : 19
DATE                 : 76
DATE_PART            : 
DAY                  : 84
DECIMAL              : 67
DECODE               : 
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 97
DOBLEIG              : 107
DOUBLE               : 71
DROP                 : 17 18
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 30 31 36 37 38 39 40 41 42 43 67 67 68 68 77 78 79 80 91
ENUM                 : 
EXCEPT               : 
EXISTS               : 18 22 23 26 27 34 35
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 100
FLOAT                : 63
FLOOR                : 
FLOTANTE             : 92
FOREIGN              : 
FOREING              : 46 59
FROM                 : 
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 86
ID                   : 10 10 11 12 16 17 18 20 21 22 23 24 25 26 27 28 29 32 33 34 35 36 37 38 39 40 41 42 43 46 46 46 47 48 49 50 50 53 54 55 55 56 57 58 59 59 59 61 93 94 94 102
IF                   : 18 22 23 26 27 34 35
IGUAL                : 29 31 37 38 39 39 41 42 43 43 108
IN                   : 
INHERITS             : 50
INNER                : 
INSERT               : 
INTEGER              : 64
INTERSECT            : 
INTERVAL             : 72 73
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 46 54 58 59
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 105
MAYMAY               : 
MAYQUE               : 103
MD5                  : 
MENIGQUE             : 106
MENMEN               : 
MENQUE               : 104
MIN                  : 
MINUTE               : 87
MIN_SCALE            : 
MOD                  : 
MODE                 : 30 31 36 37 38 39 40 41 42 43
MODULO               : 
MONEY                : 66
MONTH                : 85
MULTI                : 
NATURAL              : 
NOIG                 : 109
NOIGUAL              : 110
NOT                  : 22 23 26 27 34 35 56 114
NOTNULL              : 
NOW                  : 
NULL                 : 56 57
NUMERIC              : 68
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 21 23 25 27 33 35 113
ORDER                : 
OUTER                : 
OWNER                : 11 28 29 36 37 38 39 40 41 42 43
PAR_A                : 44 45 46 46 49 50 50 58 59 59 60 67 68 77 78 79 80 81 82 89
PAR_C                : 44 45 46 46 49 50 50 58 59 59 60 67 68 77 78 79 80 81 82 89
PI                   : 
POWER                : 
PRECISION            : 71
PRIMARY              : 54 58
PTCOMA               : 10 11 16 17 18 19 20 21 22 23 24 25 26 27 32 33 34 35 49 50
PUNTO                : 94
RADIANS              : 
RANDOM               : 
REAL                 : 70
REFERENCES           : 46 55 59
RENAME               : 10
REPLACE              : 21 23 25 27 33 35
RESTA                : 96
RETURNING            : 
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 88
SELECT               : 
SESSION_USER         : 14
SET                  : 
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 19
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 65
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 95
SYMMETRIC            : 
S_OR                 : 
TABLE                : 49 50
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 62
THEN                 : 
TIME                 : 74
TIMESTAMP            : 75
TO                   : 10 11 72
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 99
TYPE                 : 
UNION                : 
UNIQUE               : 45 60
UNKNOWN              : 
UPDATE               : 
USE                  : 16
USING                : 
VALUES               : 
VARCHAR              : 78
VARYING              : 77
WHEN                 : 
WHERE                : 
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 83
error                : 

Nonterminals, with rules where they appear

TIPO_DATO            : 53 54 55 56 57
agrupacion_expresion : 
alterDB_insrt        : 9
campos_c             : 45 47 60
constraint_esp       : 61
createDB_dosParam    : 32 33 34 35
createDB_insrt       : 4
createDB_unParam     : 24 25 26 27
create_Table_isnrt   : 5
cuerpo_createTable   : 51 52
cuerpo_createTable_lista : 49 50 51
drop_database_instr  : 7
expresion            : 89 95 95 96 96 97 97 98 98 103 103 104 104 105 105 106 106 107 107 108 108 109 109 110 110 111
expresion_logica     : 44
expresion_relacional : 112 112 113 113 114 115
extract_time         : 72 72
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
show_databases_instr : 6
string_type          : 
use_database_instr   : 8
usuariosDB           : 11

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . drop_database_instr
    (8) instruccion -> . use_database_instr
    (9) instruccion -> . alterDB_insrt
    (20) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (21) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (22) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (23) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (24) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (25) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (26) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (49) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (50) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (19) show_databases_instr -> . SHOW DATABASES PTCOMA
    (17) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (18) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (16) use_database_instr -> . USE ID PTCOMA
    (10) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (11) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA

    CREATE          shift and go to state 10
    SHOW            shift and go to state 11
    DROP            shift and go to state 12
    USE             shift and go to state 13
    ALTER           shift and go to state 14

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    drop_database_instr            shift and go to state 7
    use_database_instr             shift and go to state 8
    alterDB_insrt                  shift and go to state 9

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . drop_database_instr
    (8) instruccion -> . use_database_instr
    (9) instruccion -> . alterDB_insrt
    (20) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (21) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (22) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (23) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (24) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (25) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (26) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (49) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (50) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (19) show_databases_instr -> . SHOW DATABASES PTCOMA
    (17) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (18) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (16) use_database_instr -> . USE ID PTCOMA
    (10) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (11) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 10
    SHOW            shift and go to state 11
    DROP            shift and go to state 12
    USE             shift and go to state 13
    ALTER           shift and go to state 14

    instruccion                    shift and go to state 15
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    drop_database_instr            shift and go to state 7
    use_database_instr             shift and go to state 8
    alterDB_insrt                  shift and go to state 9

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    USE             reduce using rule 3 (instrucciones -> instruccion .)
    ALTER           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 4 (instruccion -> createDB_insrt .)
    USE             reduce using rule 4 (instruccion -> createDB_insrt .)
    ALTER           reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    USE             reduce using rule 5 (instruccion -> create_Table_isnrt .)
    ALTER           reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    DROP            reduce using rule 6 (instruccion -> show_databases_instr .)
    USE             reduce using rule 6 (instruccion -> show_databases_instr .)
    ALTER           reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (7) instruccion -> drop_database_instr .

    CREATE          reduce using rule 7 (instruccion -> drop_database_instr .)
    SHOW            reduce using rule 7 (instruccion -> drop_database_instr .)
    DROP            reduce using rule 7 (instruccion -> drop_database_instr .)
    USE             reduce using rule 7 (instruccion -> drop_database_instr .)
    ALTER           reduce using rule 7 (instruccion -> drop_database_instr .)
    $end            reduce using rule 7 (instruccion -> drop_database_instr .)


state 8

    (8) instruccion -> use_database_instr .

    CREATE          reduce using rule 8 (instruccion -> use_database_instr .)
    SHOW            reduce using rule 8 (instruccion -> use_database_instr .)
    DROP            reduce using rule 8 (instruccion -> use_database_instr .)
    USE             reduce using rule 8 (instruccion -> use_database_instr .)
    ALTER           reduce using rule 8 (instruccion -> use_database_instr .)
    $end            reduce using rule 8 (instruccion -> use_database_instr .)


state 9

    (9) instruccion -> alterDB_insrt .

    CREATE          reduce using rule 9 (instruccion -> alterDB_insrt .)
    SHOW            reduce using rule 9 (instruccion -> alterDB_insrt .)
    DROP            reduce using rule 9 (instruccion -> alterDB_insrt .)
    USE             reduce using rule 9 (instruccion -> alterDB_insrt .)
    ALTER           reduce using rule 9 (instruccion -> alterDB_insrt .)
    $end            reduce using rule 9 (instruccion -> alterDB_insrt .)


state 10

    (20) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (21) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (22) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (23) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (24) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (25) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (26) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (33) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (49) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (50) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    DATABASE        shift and go to state 16
    OR              shift and go to state 17
    TABLE           shift and go to state 18


state 11

    (19) show_databases_instr -> SHOW . DATABASES PTCOMA

    DATABASES       shift and go to state 19


state 12

    (17) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (18) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA

    DATABASE        shift and go to state 20


state 13

    (16) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 21


state 14

    (10) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (11) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA

    DATABASE        shift and go to state 22


state 15

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ALTER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 16

    (20) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (22) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (24) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (26) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 23
    IF              shift and go to state 24


state 17

    (21) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (23) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (25) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 25


state 18

    (49) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (50) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 26


state 19

    (19) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 27


state 20

    (17) drop_database_instr -> DROP DATABASE . ID PTCOMA
    (18) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 28
    IF              shift and go to state 29


state 21

    (16) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 30


state 22

    (10) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (11) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 31


state 23

    (20) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (24) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (28) createDB_unParam -> . OWNER ID
    (29) createDB_unParam -> . OWNER IGUAL ID
    (30) createDB_unParam -> . MODE ENTERO
    (31) createDB_unParam -> . MODE IGUAL ENTERO
    (36) createDB_dosParam -> . OWNER ID MODE ENTERO
    (37) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER ID
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 32
    OWNER           shift and go to state 35
    MODE            shift and go to state 36

    createDB_unParam               shift and go to state 33
    createDB_dosParam              shift and go to state 34

state 24

    (22) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (26) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 37


state 25

    (21) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (25) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 38


state 26

    (49) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (50) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 39


state 27

    (19) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 19 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 19 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 19 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 19 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 19 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 19 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 28

    (17) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 40


state 29

    (18) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 41


state 30

    (16) use_database_instr -> USE ID PTCOMA .

    CREATE          reduce using rule 16 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 16 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 16 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 16 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 16 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 16 (use_database_instr -> USE ID PTCOMA .)


state 31

    (10) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (11) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 42
    OWNER           shift and go to state 43


state 32

    (20) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 33

    (24) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 44


state 34

    (32) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 45


state 35

    (28) createDB_unParam -> OWNER . ID
    (29) createDB_unParam -> OWNER . IGUAL ID
    (36) createDB_dosParam -> OWNER . ID MODE ENTERO
    (37) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (38) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (39) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 46
    IGUAL           shift and go to state 47


state 36

    (30) createDB_unParam -> MODE . ENTERO
    (31) createDB_unParam -> MODE . IGUAL ENTERO
    (40) createDB_dosParam -> MODE . ENTERO OWNER ID
    (41) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (42) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 48
    IGUAL           shift and go to state 49


state 37

    (22) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (26) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 50


state 38

    (21) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (25) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 51
    IF              shift and go to state 52


state 39

    (49) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (51) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (52) cuerpo_createTable_lista -> . cuerpo_createTable
    (53) cuerpo_createTable -> . ID TIPO_DATO
    (54) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (55) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (56) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (57) cuerpo_createTable -> . ID TIPO_DATO NULL
    (58) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (59) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (60) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (61) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 53
    PRIMARY         shift and go to state 56
    FOREING         shift and go to state 57
    UNIQUE          shift and go to state 58
    CONSTRAINT      shift and go to state 59

    cuerpo_createTable_lista       shift and go to state 54
    cuerpo_createTable             shift and go to state 55

state 40

    (17) drop_database_instr -> DROP DATABASE ID PTCOMA .

    CREATE          reduce using rule 17 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 17 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 17 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 17 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 17 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 17 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 41

    (18) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 60


state 42

    (10) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 61


state 43

    (11) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 62


state 44

    (24) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 45

    (32) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 46

    (28) createDB_unParam -> OWNER ID .
    (36) createDB_dosParam -> OWNER ID . MODE ENTERO
    (37) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 28 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 63


state 47

    (29) createDB_unParam -> OWNER IGUAL . ID
    (38) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (39) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 64


state 48

    (30) createDB_unParam -> MODE ENTERO .
    (40) createDB_dosParam -> MODE ENTERO . OWNER ID
    (41) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 30 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 65


state 49

    (31) createDB_unParam -> MODE IGUAL . ENTERO
    (42) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (43) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 66


state 50

    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 67


state 51

    (21) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (25) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (28) createDB_unParam -> . OWNER ID
    (29) createDB_unParam -> . OWNER IGUAL ID
    (30) createDB_unParam -> . MODE ENTERO
    (31) createDB_unParam -> . MODE IGUAL ENTERO
    (36) createDB_dosParam -> . OWNER ID MODE ENTERO
    (37) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER ID
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 68
    OWNER           shift and go to state 35
    MODE            shift and go to state 36

    createDB_unParam               shift and go to state 69
    createDB_dosParam              shift and go to state 70

state 52

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 71


state 53

    (53) cuerpo_createTable -> ID . TIPO_DATO
    (54) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (55) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (56) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (57) cuerpo_createTable -> ID . TIPO_DATO NULL
    (62) TIPO_DATO -> . TEXT
    (63) TIPO_DATO -> . FLOAT
    (64) TIPO_DATO -> . INTEGER
    (65) TIPO_DATO -> . SMALLINT
    (66) TIPO_DATO -> . MONEY
    (67) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (68) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (69) TIPO_DATO -> . BIGINT
    (70) TIPO_DATO -> . REAL
    (71) TIPO_DATO -> . DOUBLE PRECISION
    (72) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (73) TIPO_DATO -> . INTERVAL
    (74) TIPO_DATO -> . TIME
    (75) TIPO_DATO -> . TIMESTAMP
    (76) TIPO_DATO -> . DATE
    (77) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (78) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (79) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (80) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (81) TIPO_DATO -> . CHAR PAR_A PAR_C
    (82) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 73
    FLOAT           shift and go to state 74
    INTEGER         shift and go to state 75
    SMALLINT        shift and go to state 76
    MONEY           shift and go to state 77
    DECIMAL         shift and go to state 78
    NUMERIC         shift and go to state 79
    BIGINT          shift and go to state 80
    REAL            shift and go to state 81
    DOUBLE          shift and go to state 82
    INTERVAL        shift and go to state 83
    TIME            shift and go to state 84
    TIMESTAMP       shift and go to state 85
    DATE            shift and go to state 86
    CHARACTER       shift and go to state 87
    VARCHAR         shift and go to state 88
    CHAR            shift and go to state 89

    TIPO_DATO                      shift and go to state 72

state 54

    (49) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (51) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 90
    COMA            shift and go to state 91


state 55

    (52) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 52 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 52 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 56

    (58) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 92


state 57

    (59) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 93


state 58

    (60) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 94


state 59

    (61) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 95


state 60

    (18) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 96


state 61

    (10) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 97


state 62

    (11) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (12) usuariosDB -> . ID
    (13) usuariosDB -> . CURRENT_USER
    (14) usuariosDB -> . SESSION_USER
    (15) usuariosDB -> . CADENA

    ID              shift and go to state 98
    CURRENT_USER    shift and go to state 100
    SESSION_USER    shift and go to state 101
    CADENA          shift and go to state 102

    usuariosDB                     shift and go to state 99

state 63

    (36) createDB_dosParam -> OWNER ID MODE . ENTERO
    (37) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 103
    IGUAL           shift and go to state 104


state 64

    (29) createDB_unParam -> OWNER IGUAL ID .
    (38) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (39) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 29 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 105


state 65

    (40) createDB_dosParam -> MODE ENTERO OWNER . ID
    (41) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 106
    IGUAL           shift and go to state 107


state 66

    (31) createDB_unParam -> MODE IGUAL ENTERO .
    (42) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (43) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 31 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 108


state 67

    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (28) createDB_unParam -> . OWNER ID
    (29) createDB_unParam -> . OWNER IGUAL ID
    (30) createDB_unParam -> . MODE ENTERO
    (31) createDB_unParam -> . MODE IGUAL ENTERO
    (36) createDB_dosParam -> . OWNER ID MODE ENTERO
    (37) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER ID
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 109
    OWNER           shift and go to state 35
    MODE            shift and go to state 36

    createDB_unParam               shift and go to state 110
    createDB_dosParam              shift and go to state 111

state 68

    (21) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 69

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 112


state 70

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 113


state 71

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 114


state 72

    (53) cuerpo_createTable -> ID TIPO_DATO .
    (54) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (55) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (56) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (57) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 53 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 53 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 115
    REFERENCES      shift and go to state 116
    NOT             shift and go to state 117
    NULL            shift and go to state 118


state 73

    (62) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 62 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 62 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 62 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 62 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 62 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 62 (TIPO_DATO -> TEXT .)


state 74

    (63) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 63 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 63 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 63 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 63 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 63 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 63 (TIPO_DATO -> FLOAT .)


state 75

    (64) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 64 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 64 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 64 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 64 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 64 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 64 (TIPO_DATO -> INTEGER .)


state 76

    (65) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 65 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 65 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 65 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 65 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 65 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 65 (TIPO_DATO -> SMALLINT .)


state 77

    (66) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 66 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 66 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 66 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 66 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 66 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 66 (TIPO_DATO -> MONEY .)


state 78

    (67) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 119


state 79

    (68) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 120


state 80

    (69) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 69 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 69 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 69 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 69 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 69 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 69 (TIPO_DATO -> BIGINT .)


state 81

    (70) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 70 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 70 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 70 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 70 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 70 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 70 (TIPO_DATO -> REAL .)


state 82

    (71) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 121


state 83

    (72) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (73) TIPO_DATO -> INTERVAL .
    (83) extract_time -> . YEAR
    (84) extract_time -> . DAY
    (85) extract_time -> . MONTH
    (86) extract_time -> . HOUR
    (87) extract_time -> . MINUTE
    (88) extract_time -> . SECOND

    PRIMARY         reduce using rule 73 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 73 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 73 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 73 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 73 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 73 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 123
    DAY             shift and go to state 124
    MONTH           shift and go to state 125
    HOUR            shift and go to state 126
    MINUTE          shift and go to state 127
    SECOND          shift and go to state 128

    extract_time                   shift and go to state 122

state 84

    (74) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 74 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 74 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 74 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 74 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 74 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 74 (TIPO_DATO -> TIME .)


state 85

    (75) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 75 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 75 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 75 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 75 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 75 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 75 (TIPO_DATO -> TIMESTAMP .)


state 86

    (76) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 76 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 76 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 76 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 76 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 76 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 76 (TIPO_DATO -> DATE .)


state 87

    (77) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (80) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (82) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 129
    PAR_A           shift and go to state 130


state 88

    (78) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 131


state 89

    (79) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (81) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 132


state 90

    (49) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 133
    INHERITS        shift and go to state 134


state 91

    (51) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (53) cuerpo_createTable -> . ID TIPO_DATO
    (54) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (55) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (56) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (57) cuerpo_createTable -> . ID TIPO_DATO NULL
    (58) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (59) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (60) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (61) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 53
    PRIMARY         shift and go to state 56
    FOREING         shift and go to state 57
    UNIQUE          shift and go to state 58
    CONSTRAINT      shift and go to state 59

    cuerpo_createTable             shift and go to state 135

state 92

    (58) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 136


state 93

    (59) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 137


state 94

    (60) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (47) campos_c -> . campos_c COMA ID
    (48) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 138

state 95

    (61) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (44) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (45) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (46) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 141
    UNIQUE          shift and go to state 142
    FOREING         shift and go to state 143

    constraint_esp                 shift and go to state 140

state 96

    (18) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    CREATE          reduce using rule 18 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 18 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 18 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 18 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 18 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 18 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 97

    (10) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 144


state 98

    (12) usuariosDB -> ID .

    PTCOMA          reduce using rule 12 (usuariosDB -> ID .)


state 99

    (11) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 145


state 100

    (13) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 13 (usuariosDB -> CURRENT_USER .)


state 101

    (14) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 14 (usuariosDB -> SESSION_USER .)


state 102

    (15) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 15 (usuariosDB -> CADENA .)


state 103

    (36) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 36 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 104

    (37) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 146


state 105

    (38) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (39) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 148
    IGUAL           shift and go to state 147


state 106

    (40) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 40 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 107

    (41) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 149


state 108

    (42) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (43) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 151
    IGUAL           shift and go to state 150


state 109

    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 110

    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 152


state 111

    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 153


state 112

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 113

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 114

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 154


state 115

    (54) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 155


state 116

    (55) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 156


state 117

    (56) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 157


state 118

    (57) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 57 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 57 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 119

    (67) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 158


state 120

    (68) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 159


state 121

    (71) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 71 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 71 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 71 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 71 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 71 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 71 (TIPO_DATO -> DOUBLE PRECISION .)


state 122

    (72) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 160


state 123

    (83) extract_time -> YEAR .

    TO              reduce using rule 83 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 83 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 83 (extract_time -> YEAR .)
    NOT             reduce using rule 83 (extract_time -> YEAR .)
    NULL            reduce using rule 83 (extract_time -> YEAR .)
    PAR_C           reduce using rule 83 (extract_time -> YEAR .)
    COMA            reduce using rule 83 (extract_time -> YEAR .)


state 124

    (84) extract_time -> DAY .

    TO              reduce using rule 84 (extract_time -> DAY .)
    PRIMARY         reduce using rule 84 (extract_time -> DAY .)
    REFERENCES      reduce using rule 84 (extract_time -> DAY .)
    NOT             reduce using rule 84 (extract_time -> DAY .)
    NULL            reduce using rule 84 (extract_time -> DAY .)
    PAR_C           reduce using rule 84 (extract_time -> DAY .)
    COMA            reduce using rule 84 (extract_time -> DAY .)


state 125

    (85) extract_time -> MONTH .

    TO              reduce using rule 85 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 85 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 85 (extract_time -> MONTH .)
    NOT             reduce using rule 85 (extract_time -> MONTH .)
    NULL            reduce using rule 85 (extract_time -> MONTH .)
    PAR_C           reduce using rule 85 (extract_time -> MONTH .)
    COMA            reduce using rule 85 (extract_time -> MONTH .)


state 126

    (86) extract_time -> HOUR .

    TO              reduce using rule 86 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 86 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 86 (extract_time -> HOUR .)
    NOT             reduce using rule 86 (extract_time -> HOUR .)
    NULL            reduce using rule 86 (extract_time -> HOUR .)
    PAR_C           reduce using rule 86 (extract_time -> HOUR .)
    COMA            reduce using rule 86 (extract_time -> HOUR .)


state 127

    (87) extract_time -> MINUTE .

    TO              reduce using rule 87 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 87 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 87 (extract_time -> MINUTE .)
    NOT             reduce using rule 87 (extract_time -> MINUTE .)
    NULL            reduce using rule 87 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 87 (extract_time -> MINUTE .)
    COMA            reduce using rule 87 (extract_time -> MINUTE .)


state 128

    (88) extract_time -> SECOND .

    TO              reduce using rule 88 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 88 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 88 (extract_time -> SECOND .)
    NOT             reduce using rule 88 (extract_time -> SECOND .)
    NULL            reduce using rule 88 (extract_time -> SECOND .)
    PAR_C           reduce using rule 88 (extract_time -> SECOND .)
    COMA            reduce using rule 88 (extract_time -> SECOND .)


state 129

    (77) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 161


state 130

    (80) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (82) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 162
    PAR_C           shift and go to state 163


state 131

    (78) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 164


state 132

    (79) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (81) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 165
    PAR_C           shift and go to state 166


state 133

    (49) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 49 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 49 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DROP            reduce using rule 49 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    USE             reduce using rule 49 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    ALTER           reduce using rule 49 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 49 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 134

    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 167


state 135

    (51) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 51 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 51 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 136

    (58) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 168


state 137

    (59) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 169


state 138

    (60) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (47) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 170
    COMA            shift and go to state 171


state 139

    (48) campos_c -> ID .

    PAR_C           reduce using rule 48 (campos_c -> ID .)
    COMA            reduce using rule 48 (campos_c -> ID .)


state 140

    (61) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 61 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 61 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 141

    (44) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 172


state 142

    (45) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 173


state 143

    (46) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 174


state 144

    (10) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    CREATE          reduce using rule 10 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 10 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 10 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 10 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 10 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 10 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 145

    (11) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    CREATE          reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 146

    (37) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 37 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 147

    (39) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 175


state 148

    (38) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 38 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 149

    (41) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 150

    (43) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 176


state 151

    (42) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 152

    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 153

    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 154

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (28) createDB_unParam -> . OWNER ID
    (29) createDB_unParam -> . OWNER IGUAL ID
    (30) createDB_unParam -> . MODE ENTERO
    (31) createDB_unParam -> . MODE IGUAL ENTERO
    (36) createDB_dosParam -> . OWNER ID MODE ENTERO
    (37) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER ID
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 177
    OWNER           shift and go to state 35
    MODE            shift and go to state 36

    createDB_unParam               shift and go to state 178
    createDB_dosParam              shift and go to state 179

state 155

    (54) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 54 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 54 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 156

    (55) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 55 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 55 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 157

    (56) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 56 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 56 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 158

    (67) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 180


state 159

    (68) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 181


state 160

    (72) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (83) extract_time -> . YEAR
    (84) extract_time -> . DAY
    (85) extract_time -> . MONTH
    (86) extract_time -> . HOUR
    (87) extract_time -> . MINUTE
    (88) extract_time -> . SECOND

    YEAR            shift and go to state 123
    DAY             shift and go to state 124
    MONTH           shift and go to state 125
    HOUR            shift and go to state 126
    MINUTE          shift and go to state 127
    SECOND          shift and go to state 128

    extract_time                   shift and go to state 182

state 161

    (77) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 183


state 162

    (80) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 184


state 163

    (82) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 164

    (78) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 185


state 165

    (79) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 186


state 166

    (81) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 81 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 81 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 81 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 81 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 81 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 81 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 167

    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 187


state 168

    (58) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 188


state 169

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 189


state 170

    (60) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 60 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 60 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 171

    (47) campos_c -> campos_c COMA . ID

    ID              shift and go to state 190


state 172

    (44) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (112) expresion_logica -> . expresion_relacional AND expresion_relacional
    (113) expresion_logica -> . expresion_relacional OR expresion_relacional
    (114) expresion_logica -> . NOT expresion_relacional
    (115) expresion_logica -> . expresion_relacional
    (103) expresion_relacional -> . expresion MAYQUE expresion
    (104) expresion_relacional -> . expresion MENQUE expresion
    (105) expresion_relacional -> . expresion MAYIGQUE expresion
    (106) expresion_relacional -> . expresion MENIGQUE expresion
    (107) expresion_relacional -> . expresion DOBLEIG expresion
    (108) expresion_relacional -> . expresion IGUAL expresion
    (109) expresion_relacional -> . expresion NOIG expresion
    (110) expresion_relacional -> . expresion NOIGUAL expresion
    (111) expresion_relacional -> . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    NOT             shift and go to state 193
    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion_logica               shift and go to state 191
    expresion_relacional           shift and go to state 192
    expresion                      shift and go to state 194

state 173

    (45) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (47) campos_c -> . campos_c COMA ID
    (48) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 201

state 174

    (46) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 202


state 175

    (39) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 39 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 176

    (43) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 177

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 178

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 203


state 179

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 204


state 180

    (67) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 205


state 181

    (68) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 206


state 182

    (72) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 72 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 72 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 72 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 72 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 72 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 72 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 183

    (77) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 207


state 184

    (80) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 80 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 80 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 80 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 80 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 80 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 80 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 185

    (78) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 78 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 78 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 78 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 78 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 78 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 78 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 186

    (79) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 79 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 79 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 79 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 79 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 79 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 79 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 187

    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 208


state 188

    (58) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 58 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 58 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 189

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 209


state 190

    (47) campos_c -> campos_c COMA ID .

    PAR_C           reduce using rule 47 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 47 (campos_c -> campos_c COMA ID .)


state 191

    (44) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 210


state 192

    (112) expresion_logica -> expresion_relacional . AND expresion_relacional
    (113) expresion_logica -> expresion_relacional . OR expresion_relacional
    (115) expresion_logica -> expresion_relacional .

    AND             shift and go to state 211
    OR              shift and go to state 212
    PAR_C           reduce using rule 115 (expresion_logica -> expresion_relacional .)


state 193

    (114) expresion_logica -> NOT . expresion_relacional
    (103) expresion_relacional -> . expresion MAYQUE expresion
    (104) expresion_relacional -> . expresion MENQUE expresion
    (105) expresion_relacional -> . expresion MAYIGQUE expresion
    (106) expresion_relacional -> . expresion MENIGQUE expresion
    (107) expresion_relacional -> . expresion DOBLEIG expresion
    (108) expresion_relacional -> . expresion IGUAL expresion
    (109) expresion_relacional -> . expresion NOIG expresion
    (110) expresion_relacional -> . expresion NOIGUAL expresion
    (111) expresion_relacional -> . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion_relacional           shift and go to state 213
    expresion                      shift and go to state 194

state 194

    (103) expresion_relacional -> expresion . MAYQUE expresion
    (104) expresion_relacional -> expresion . MENQUE expresion
    (105) expresion_relacional -> expresion . MAYIGQUE expresion
    (106) expresion_relacional -> expresion . MENIGQUE expresion
    (107) expresion_relacional -> expresion . DOBLEIG expresion
    (108) expresion_relacional -> expresion . IGUAL expresion
    (109) expresion_relacional -> expresion . NOIG expresion
    (110) expresion_relacional -> expresion . NOIGUAL expresion
    (111) expresion_relacional -> expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 214
    MENQUE          shift and go to state 215
    MAYIGQUE        shift and go to state 216
    MENIGQUE        shift and go to state 217
    DOBLEIG         shift and go to state 218
    IGUAL           shift and go to state 219
    NOIG            shift and go to state 220
    NOIGUAL         shift and go to state 221
    AND             reduce using rule 111 (expresion_relacional -> expresion .)
    OR              reduce using rule 111 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 111 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 195

    (90) expresion -> CADENA .

    MAYQUE          reduce using rule 90 (expresion -> CADENA .)
    MENQUE          reduce using rule 90 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 90 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 90 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 90 (expresion -> CADENA .)
    IGUAL           reduce using rule 90 (expresion -> CADENA .)
    NOIG            reduce using rule 90 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 90 (expresion -> CADENA .)
    SUMA            reduce using rule 90 (expresion -> CADENA .)
    RESTA           reduce using rule 90 (expresion -> CADENA .)
    DIVISION        reduce using rule 90 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 90 (expresion -> CADENA .)
    AND             reduce using rule 90 (expresion -> CADENA .)
    OR              reduce using rule 90 (expresion -> CADENA .)
    PAR_C           reduce using rule 90 (expresion -> CADENA .)


state 196

    (91) expresion -> ENTERO .

    MAYQUE          reduce using rule 91 (expresion -> ENTERO .)
    MENQUE          reduce using rule 91 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 91 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 91 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 91 (expresion -> ENTERO .)
    IGUAL           reduce using rule 91 (expresion -> ENTERO .)
    NOIG            reduce using rule 91 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 91 (expresion -> ENTERO .)
    SUMA            reduce using rule 91 (expresion -> ENTERO .)
    RESTA           reduce using rule 91 (expresion -> ENTERO .)
    DIVISION        reduce using rule 91 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 91 (expresion -> ENTERO .)
    AND             reduce using rule 91 (expresion -> ENTERO .)
    OR              reduce using rule 91 (expresion -> ENTERO .)
    PAR_C           reduce using rule 91 (expresion -> ENTERO .)


state 197

    (92) expresion -> FLOTANTE .

    MAYQUE          reduce using rule 92 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 92 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 92 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 92 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 92 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 92 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 92 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 92 (expresion -> FLOTANTE .)
    SUMA            reduce using rule 92 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 92 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 92 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 92 (expresion -> FLOTANTE .)
    AND             reduce using rule 92 (expresion -> FLOTANTE .)
    OR              reduce using rule 92 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 92 (expresion -> FLOTANTE .)


state 198

    (93) expresion -> ID .
    (94) expresion -> ID . PUNTO ID

    MAYQUE          reduce using rule 93 (expresion -> ID .)
    MENQUE          reduce using rule 93 (expresion -> ID .)
    MAYIGQUE        reduce using rule 93 (expresion -> ID .)
    MENIGQUE        reduce using rule 93 (expresion -> ID .)
    DOBLEIG         reduce using rule 93 (expresion -> ID .)
    IGUAL           reduce using rule 93 (expresion -> ID .)
    NOIG            reduce using rule 93 (expresion -> ID .)
    NOIGUAL         reduce using rule 93 (expresion -> ID .)
    SUMA            reduce using rule 93 (expresion -> ID .)
    RESTA           reduce using rule 93 (expresion -> ID .)
    DIVISION        reduce using rule 93 (expresion -> ID .)
    ASTERISCO       reduce using rule 93 (expresion -> ID .)
    AND             reduce using rule 93 (expresion -> ID .)
    OR              reduce using rule 93 (expresion -> ID .)
    PAR_C           reduce using rule 93 (expresion -> ID .)
    PUNTO           shift and go to state 226


state 199

    (99) expresion -> TRUE .

    MAYQUE          reduce using rule 99 (expresion -> TRUE .)
    MENQUE          reduce using rule 99 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 99 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 99 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 99 (expresion -> TRUE .)
    IGUAL           reduce using rule 99 (expresion -> TRUE .)
    NOIG            reduce using rule 99 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 99 (expresion -> TRUE .)
    SUMA            reduce using rule 99 (expresion -> TRUE .)
    RESTA           reduce using rule 99 (expresion -> TRUE .)
    DIVISION        reduce using rule 99 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 99 (expresion -> TRUE .)
    AND             reduce using rule 99 (expresion -> TRUE .)
    OR              reduce using rule 99 (expresion -> TRUE .)
    PAR_C           reduce using rule 99 (expresion -> TRUE .)


state 200

    (100) expresion -> FALSE .

    MAYQUE          reduce using rule 100 (expresion -> FALSE .)
    MENQUE          reduce using rule 100 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 100 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 100 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 100 (expresion -> FALSE .)
    IGUAL           reduce using rule 100 (expresion -> FALSE .)
    NOIG            reduce using rule 100 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 100 (expresion -> FALSE .)
    SUMA            reduce using rule 100 (expresion -> FALSE .)
    RESTA           reduce using rule 100 (expresion -> FALSE .)
    DIVISION        reduce using rule 100 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 100 (expresion -> FALSE .)
    AND             reduce using rule 100 (expresion -> FALSE .)
    OR              reduce using rule 100 (expresion -> FALSE .)
    PAR_C           reduce using rule 100 (expresion -> FALSE .)


state 201

    (45) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (47) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 227
    COMA            shift and go to state 171


state 202

    (46) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 228


state 203

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 204

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 205

    (67) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 229


state 206

    (68) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 230


state 207

    (77) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 77 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 77 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 77 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 77 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 77 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 77 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 208

    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 231


state 209

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 232


state 210

    (44) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 44 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 44 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 211

    (112) expresion_logica -> expresion_relacional AND . expresion_relacional
    (103) expresion_relacional -> . expresion MAYQUE expresion
    (104) expresion_relacional -> . expresion MENQUE expresion
    (105) expresion_relacional -> . expresion MAYIGQUE expresion
    (106) expresion_relacional -> . expresion MENIGQUE expresion
    (107) expresion_relacional -> . expresion DOBLEIG expresion
    (108) expresion_relacional -> . expresion IGUAL expresion
    (109) expresion_relacional -> . expresion NOIG expresion
    (110) expresion_relacional -> . expresion NOIGUAL expresion
    (111) expresion_relacional -> . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion_relacional           shift and go to state 233
    expresion                      shift and go to state 194

state 212

    (113) expresion_logica -> expresion_relacional OR . expresion_relacional
    (103) expresion_relacional -> . expresion MAYQUE expresion
    (104) expresion_relacional -> . expresion MENQUE expresion
    (105) expresion_relacional -> . expresion MAYIGQUE expresion
    (106) expresion_relacional -> . expresion MENIGQUE expresion
    (107) expresion_relacional -> . expresion DOBLEIG expresion
    (108) expresion_relacional -> . expresion IGUAL expresion
    (109) expresion_relacional -> . expresion NOIG expresion
    (110) expresion_relacional -> . expresion NOIGUAL expresion
    (111) expresion_relacional -> . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion_relacional           shift and go to state 234
    expresion                      shift and go to state 194

state 213

    (114) expresion_logica -> NOT expresion_relacional .

    PAR_C           reduce using rule 114 (expresion_logica -> NOT expresion_relacional .)


state 214

    (103) expresion_relacional -> expresion MAYQUE . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 235

state 215

    (104) expresion_relacional -> expresion MENQUE . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 236

state 216

    (105) expresion_relacional -> expresion MAYIGQUE . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 237

state 217

    (106) expresion_relacional -> expresion MENIGQUE . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 238

state 218

    (107) expresion_relacional -> expresion DOBLEIG . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 239

state 219

    (108) expresion_relacional -> expresion IGUAL . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 240

state 220

    (109) expresion_relacional -> expresion NOIG . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 241

state 221

    (110) expresion_relacional -> expresion NOIGUAL . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 242

state 222

    (95) expresion -> expresion SUMA . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 243

state 223

    (96) expresion -> expresion RESTA . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 244

state 224

    (97) expresion -> expresion DIVISION . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 245

state 225

    (98) expresion -> expresion ASTERISCO . expresion
    (90) expresion -> . CADENA
    (91) expresion -> . ENTERO
    (92) expresion -> . FLOTANTE
    (93) expresion -> . ID
    (94) expresion -> . ID PUNTO ID
    (95) expresion -> . expresion SUMA expresion
    (96) expresion -> . expresion RESTA expresion
    (97) expresion -> . expresion DIVISION expresion
    (98) expresion -> . expresion ASTERISCO expresion
    (99) expresion -> . TRUE
    (100) expresion -> . FALSE

    CADENA          shift and go to state 195
    ENTERO          shift and go to state 196
    FLOTANTE        shift and go to state 197
    ID              shift and go to state 198
    TRUE            shift and go to state 199
    FALSE           shift and go to state 200

    expresion                      shift and go to state 246

state 226

    (94) expresion -> ID PUNTO . ID

    ID              shift and go to state 247


state 227

    (45) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 45 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 45 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 228

    (46) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 248


state 229

    (67) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 67 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 67 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 67 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 67 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 67 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 67 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 230

    (68) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 68 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 68 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 68 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 68 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 68 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 68 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 231

    (50) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 50 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 50 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 50 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    USE             reduce using rule 50 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    ALTER           reduce using rule 50 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 50 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 232

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 249


state 233

    (112) expresion_logica -> expresion_relacional AND expresion_relacional .

    PAR_C           reduce using rule 112 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 234

    (113) expresion_logica -> expresion_relacional OR expresion_relacional .

    PAR_C           reduce using rule 113 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 235

    (103) expresion_relacional -> expresion MAYQUE expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 103 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 103 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 103 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 236

    (104) expresion_relacional -> expresion MENQUE expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 104 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 104 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 104 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 237

    (105) expresion_relacional -> expresion MAYIGQUE expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 105 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 105 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 105 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 238

    (106) expresion_relacional -> expresion MENIGQUE expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 106 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 106 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 106 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 239

    (107) expresion_relacional -> expresion DOBLEIG expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 107 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 107 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 107 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 240

    (108) expresion_relacional -> expresion IGUAL expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 108 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 108 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 108 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 241

    (109) expresion_relacional -> expresion NOIG expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 109 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 109 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 109 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 242

    (110) expresion_relacional -> expresion NOIGUAL expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 110 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 110 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 110 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 222
    RESTA           shift and go to state 223
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225


state 243

    (95) expresion -> expresion SUMA expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 95 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 95 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 95 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 95 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 95 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 95 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 95 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 95 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 95 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 95 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 95 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 95 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 95 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225

  ! DIVISION        [ reduce using rule 95 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 95 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 222 ]
  ! RESTA           [ shift and go to state 223 ]


state 244

    (96) expresion -> expresion RESTA expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 96 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 96 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 96 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 96 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 96 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 96 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 96 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 96 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 96 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 96 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 96 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 96 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 96 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 224
    ASTERISCO       shift and go to state 225

  ! DIVISION        [ reduce using rule 96 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 96 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 222 ]
  ! RESTA           [ shift and go to state 223 ]


state 245

    (97) expresion -> expresion DIVISION expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 97 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 97 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 222 ]
  ! RESTA           [ shift and go to state 223 ]
  ! DIVISION        [ shift and go to state 224 ]
  ! ASTERISCO       [ shift and go to state 225 ]


state 246

    (98) expresion -> expresion ASTERISCO expresion .
    (95) expresion -> expresion . SUMA expresion
    (96) expresion -> expresion . RESTA expresion
    (97) expresion -> expresion . DIVISION expresion
    (98) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    SUMA            reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 98 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 222 ]
  ! RESTA           [ shift and go to state 223 ]
  ! DIVISION        [ shift and go to state 224 ]
  ! ASTERISCO       [ shift and go to state 225 ]


state 247

    (94) expresion -> ID PUNTO ID .

    MAYQUE          reduce using rule 94 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 94 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 94 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 94 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 94 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 94 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 94 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 94 (expresion -> ID PUNTO ID .)
    SUMA            reduce using rule 94 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 94 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 94 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 94 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 94 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 94 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 94 (expresion -> ID PUNTO ID .)


state 248

    (46) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 250


state 249

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 251


state 250

    (46) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 252


state 251

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 253


state 252

    (46) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 254


state 253

    (59) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 59 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 59 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 254

    (46) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 255


state 255

    (46) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 256


state 256

    (46) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 46 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 46 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

