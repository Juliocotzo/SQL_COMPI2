Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALL
    ANY
    AS
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    COLUMN
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    DIV
    D_OR
    ELSE
    ENCODE
    END
    ENUM
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FOREIGN
    FROM
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ONLY
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RETURNING
    RIGHT
    ROUND
    SCALE
    SELECT
    SET
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    TYPE
    UNION
    UNKNOWN
    UPDATE
    USING
    VALUES
    WHEN
    WHERE
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     instruccion -> show_tables_instr
Rule 8     instruccion -> drop_database_instr
Rule 9     instruccion -> use_database_instr
Rule 10    instruccion -> alterDB_insrt
Rule 11    alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 12    alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 13    usuariosDB -> ID
Rule 14    usuariosDB -> CURRENT_USER
Rule 15    usuariosDB -> SESSION_USER
Rule 16    usuariosDB -> CADENA
Rule 17    use_database_instr -> USE ID PTCOMA
Rule 18    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 19    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 20    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 21    show_tables_instr -> SHOW TABLES PTCOMA
Rule 22    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 23    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 24    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 25    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 26    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 27    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 28    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 29    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 30    createDB_unParam -> OWNER ID
Rule 31    createDB_unParam -> OWNER IGUAL ID
Rule 32    createDB_unParam -> MODE ENTERO
Rule 33    createDB_unParam -> MODE IGUAL ENTERO
Rule 34    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 35    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 36    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 37    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 38    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 39    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 40    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 41    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 42    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 43    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 44    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 45    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 46    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 47    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 48    constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 49    campos_c -> campos_c COMA ID
Rule 50    campos_c -> ID
Rule 51    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 52    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 53    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 54    cuerpo_createTable_lista -> cuerpo_createTable
Rule 55    cuerpo_createTable -> ID TIPO_DATO
Rule 56    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 57    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 58    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 59    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 60    cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 61    cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 62    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 63    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 64    TIPO_DATO -> TEXT
Rule 65    TIPO_DATO -> FLOAT
Rule 66    TIPO_DATO -> INTEGER
Rule 67    TIPO_DATO -> SMALLINT
Rule 68    TIPO_DATO -> MONEY
Rule 69    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 70    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 71    TIPO_DATO -> BIGINT
Rule 72    TIPO_DATO -> REAL
Rule 73    TIPO_DATO -> DOUBLE PRECISION
Rule 74    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 75    TIPO_DATO -> INTERVAL
Rule 76    TIPO_DATO -> TIME
Rule 77    TIPO_DATO -> TIMESTAMP
Rule 78    TIPO_DATO -> DATE
Rule 79    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 80    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 81    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 82    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 83    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 84    TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 85    extract_time -> YEAR
Rule 86    extract_time -> DAY
Rule 87    extract_time -> MONTH
Rule 88    extract_time -> HOUR
Rule 89    extract_time -> MINUTE
Rule 90    extract_time -> SECOND
Rule 91    agrupacion_expresion -> PAR_A expresion PAR_C
Rule 92    expresion -> CADENA
Rule 93    expresion -> ENTERO
Rule 94    expresion -> FLOTANTE
Rule 95    expresion -> ID
Rule 96    expresion -> ID PUNTO ID
Rule 97    expresion -> expresion SUMA expresion
Rule 98    expresion -> expresion RESTA expresion
Rule 99    expresion -> expresion DIVISION expresion
Rule 100   expresion -> expresion ASTERISCO expresion
Rule 101   expresion -> TRUE
Rule 102   expresion -> FALSE
Rule 103   string_type -> CADENA
Rule 104   string_type -> ID
Rule 105   expresion_relacional -> expresion MAYQUE expresion
Rule 106   expresion_relacional -> expresion MENQUE expresion
Rule 107   expresion_relacional -> expresion MAYIGQUE expresion
Rule 108   expresion_relacional -> expresion MENIGQUE expresion
Rule 109   expresion_relacional -> expresion DOBLEIG expresion
Rule 110   expresion_relacional -> expresion IGUAL expresion
Rule 111   expresion_relacional -> expresion NOIG expresion
Rule 112   expresion_relacional -> expresion NOIGUAL expresion
Rule 113   expresion_relacional -> expresion
Rule 114   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 115   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 116   expresion_logica -> NOT expresion_relacional
Rule 117   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALL                  : 
ALTER                : 11 12
AND                  : 114
ANY                  : 
AS                   : 
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 100
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 71
BY                   : 
CADENA               : 16 92 103
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 81 83
CHARACTER            : 79 82 84
CHECK                : 46
COLUMN               : 
COMA                 : 49 53 69 70
CONSTRAINT           : 63
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 22 23 24 25 26 27 28 29 34 35 36 37 51 52
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 14
DATABASE             : 11 12 18 19 22 23 24 25 26 27 28 29 34 35 36 37
DATABASES            : 20
DATE                 : 78
DATE_PART            : 
DAY                  : 86
DECIMAL              : 69
DECODE               : 
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 99
DOBLEIG              : 109
DOUBLE               : 73
DROP                 : 18 19
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 32 33 38 39 40 41 42 43 44 45 69 69 70 70 79 80 81 82 93
ENUM                 : 
EXCEPT               : 
EXISTS               : 19 24 25 28 29 36 37
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 102
FLOAT                : 65
FLOOR                : 
FLOTANTE             : 94
FOREIGN              : 
FOREING              : 48 61
FROM                 : 
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 88
ID                   : 11 11 12 13 17 18 19 22 23 24 25 26 27 28 29 30 31 34 35 36 37 38 39 40 41 42 43 44 45 48 48 48 49 50 51 52 52 55 56 57 57 58 59 60 61 61 61 63 95 96 96 104
IF                   : 19 24 25 28 29 36 37
IGUAL                : 31 33 39 40 41 41 43 44 45 45 110
IN                   : 
INHERITS             : 52
INNER                : 
INSERT               : 
INTEGER              : 66
INTERSECT            : 
INTERVAL             : 74 75
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 48 56 60 61
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 107
MAYMAY               : 
MAYQUE               : 105
MD5                  : 
MENIGQUE             : 108
MENMEN               : 
MENQUE               : 106
MIN                  : 
MINUTE               : 89
MIN_SCALE            : 
MOD                  : 
MODE                 : 32 33 38 39 40 41 42 43 44 45
MODULO               : 
MONEY                : 68
MONTH                : 87
MULTI                : 
NATURAL              : 
NOIG                 : 111
NOIGUAL              : 112
NOT                  : 24 25 28 29 36 37 58 116
NOTNULL              : 
NOW                  : 
NULL                 : 58 59
NUMERIC              : 70
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 23 25 27 29 35 37 115
ORDER                : 
OUTER                : 
OWNER                : 12 30 31 38 39 40 41 42 43 44 45
PAR_A                : 46 47 48 48 51 52 52 60 61 61 62 69 70 79 80 81 82 83 84 91
PAR_C                : 46 47 48 48 51 52 52 60 61 61 62 69 70 79 80 81 82 83 84 91
PI                   : 
POWER                : 
PRECISION            : 73
PRIMARY              : 56 60
PTCOMA               : 11 12 17 18 19 20 21 22 23 24 25 26 27 28 29 34 35 36 37 51 52
PUNTO                : 96
RADIANS              : 
RANDOM               : 
REAL                 : 72
REFERENCES           : 48 57 61
RENAME               : 11
REPLACE              : 23 25 27 29 35 37
RESTA                : 98
RETURNING            : 
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 90
SELECT               : 
SESSION_USER         : 15
SET                  : 
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 20 21
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 67
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 97
SYMMETRIC            : 
S_OR                 : 
TABLE                : 51 52
TABLES               : 21
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 64
THEN                 : 
TIME                 : 76
TIMESTAMP            : 77
TO                   : 11 12 74
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 101
TYPE                 : 
UNION                : 
UNIQUE               : 47 62
UNKNOWN              : 
UPDATE               : 
USE                  : 17
USING                : 
VALUES               : 
VARCHAR              : 80
VARYING              : 79
WHEN                 : 
WHERE                : 
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 85
error                : 

Nonterminals, with rules where they appear

TIPO_DATO            : 55 56 57 58 59
agrupacion_expresion : 
alterDB_insrt        : 10
campos_c             : 47 49 62
constraint_esp       : 63
createDB_dosParam    : 34 35 36 37
createDB_insrt       : 4
createDB_unParam     : 26 27 28 29
create_Table_isnrt   : 5
cuerpo_createTable   : 53 54
cuerpo_createTable_lista : 51 52 53
drop_database_instr  : 8
expresion            : 91 97 97 98 98 99 99 100 100 105 105 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113
expresion_logica     : 46
expresion_relacional : 114 114 115 115 116 117
extract_time         : 74 74
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
show_databases_instr : 6
show_tables_instr    : 7
string_type          : 
use_database_instr   : 9
usuariosDB           : 12

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (22) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (23) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (24) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (25) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (26) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (51) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (52) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (20) show_databases_instr -> . SHOW DATABASES PTCOMA
    (21) show_tables_instr -> . SHOW TABLES PTCOMA
    (18) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (19) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (17) use_database_instr -> . USE ID PTCOMA
    (11) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (12) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA

    CREATE          shift and go to state 11
    SHOW            shift and go to state 12
    DROP            shift and go to state 13
    USE             shift and go to state 14
    ALTER           shift and go to state 15

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (22) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (23) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (24) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (25) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (26) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (51) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (52) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (20) show_databases_instr -> . SHOW DATABASES PTCOMA
    (21) show_tables_instr -> . SHOW TABLES PTCOMA
    (18) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (19) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (17) use_database_instr -> . USE ID PTCOMA
    (11) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (12) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 11
    SHOW            shift and go to state 12
    DROP            shift and go to state 13
    USE             shift and go to state 14
    ALTER           shift and go to state 15

    instruccion                    shift and go to state 16
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    USE             reduce using rule 3 (instrucciones -> instruccion .)
    ALTER           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 4 (instruccion -> createDB_insrt .)
    USE             reduce using rule 4 (instruccion -> createDB_insrt .)
    ALTER           reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    USE             reduce using rule 5 (instruccion -> create_Table_isnrt .)
    ALTER           reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    DROP            reduce using rule 6 (instruccion -> show_databases_instr .)
    USE             reduce using rule 6 (instruccion -> show_databases_instr .)
    ALTER           reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (7) instruccion -> show_tables_instr .

    CREATE          reduce using rule 7 (instruccion -> show_tables_instr .)
    SHOW            reduce using rule 7 (instruccion -> show_tables_instr .)
    DROP            reduce using rule 7 (instruccion -> show_tables_instr .)
    USE             reduce using rule 7 (instruccion -> show_tables_instr .)
    ALTER           reduce using rule 7 (instruccion -> show_tables_instr .)
    $end            reduce using rule 7 (instruccion -> show_tables_instr .)


state 8

    (8) instruccion -> drop_database_instr .

    CREATE          reduce using rule 8 (instruccion -> drop_database_instr .)
    SHOW            reduce using rule 8 (instruccion -> drop_database_instr .)
    DROP            reduce using rule 8 (instruccion -> drop_database_instr .)
    USE             reduce using rule 8 (instruccion -> drop_database_instr .)
    ALTER           reduce using rule 8 (instruccion -> drop_database_instr .)
    $end            reduce using rule 8 (instruccion -> drop_database_instr .)


state 9

    (9) instruccion -> use_database_instr .

    CREATE          reduce using rule 9 (instruccion -> use_database_instr .)
    SHOW            reduce using rule 9 (instruccion -> use_database_instr .)
    DROP            reduce using rule 9 (instruccion -> use_database_instr .)
    USE             reduce using rule 9 (instruccion -> use_database_instr .)
    ALTER           reduce using rule 9 (instruccion -> use_database_instr .)
    $end            reduce using rule 9 (instruccion -> use_database_instr .)


state 10

    (10) instruccion -> alterDB_insrt .

    CREATE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    SHOW            reduce using rule 10 (instruccion -> alterDB_insrt .)
    DROP            reduce using rule 10 (instruccion -> alterDB_insrt .)
    USE             reduce using rule 10 (instruccion -> alterDB_insrt .)
    ALTER           reduce using rule 10 (instruccion -> alterDB_insrt .)
    $end            reduce using rule 10 (instruccion -> alterDB_insrt .)


state 11

    (22) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (23) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (24) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (25) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (26) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (51) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (52) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    DATABASE        shift and go to state 17
    OR              shift and go to state 18
    TABLE           shift and go to state 19


state 12

    (20) show_databases_instr -> SHOW . DATABASES PTCOMA
    (21) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 20
    TABLES          shift and go to state 21


state 13

    (18) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (19) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA

    DATABASE        shift and go to state 22


state 14

    (17) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 23


state 15

    (11) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (12) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA

    DATABASE        shift and go to state 24


state 16

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ALTER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 17

    (22) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (24) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (26) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 25
    IF              shift and go to state 26


state 18

    (23) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (25) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 27


state 19

    (51) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (52) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 28


state 20

    (20) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 29


state 21

    (21) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 30


state 22

    (18) drop_database_instr -> DROP DATABASE . ID PTCOMA
    (19) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 31
    IF              shift and go to state 32


state 23

    (17) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 33


state 24

    (11) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (12) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 34


state 25

    (22) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (26) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (30) createDB_unParam -> . OWNER ID
    (31) createDB_unParam -> . OWNER IGUAL ID
    (32) createDB_unParam -> . MODE ENTERO
    (33) createDB_unParam -> . MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (41) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 35
    OWNER           shift and go to state 38
    MODE            shift and go to state 39

    createDB_unParam               shift and go to state 36
    createDB_dosParam              shift and go to state 37

state 26

    (24) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 40


state 27

    (23) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (25) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 41


state 28

    (51) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (52) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 42


state 29

    (20) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 20 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 20 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 20 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 20 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 20 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 20 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 30

    (21) show_tables_instr -> SHOW TABLES PTCOMA .

    CREATE          reduce using rule 21 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 21 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 21 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 21 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 21 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 21 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 31

    (18) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 43


state 32

    (19) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 44


state 33

    (17) use_database_instr -> USE ID PTCOMA .

    CREATE          reduce using rule 17 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 17 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 17 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 17 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 17 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 17 (use_database_instr -> USE ID PTCOMA .)


state 34

    (11) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (12) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 45
    OWNER           shift and go to state 46


state 35

    (22) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 22 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 22 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 22 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 22 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 22 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 22 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 36

    (26) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 47


state 37

    (34) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 48


state 38

    (30) createDB_unParam -> OWNER . ID
    (31) createDB_unParam -> OWNER . IGUAL ID
    (38) createDB_dosParam -> OWNER . ID MODE ENTERO
    (39) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (41) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 49
    IGUAL           shift and go to state 50


state 39

    (32) createDB_unParam -> MODE . ENTERO
    (33) createDB_unParam -> MODE . IGUAL ENTERO
    (42) createDB_dosParam -> MODE . ENTERO OWNER ID
    (43) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (44) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 51
    IGUAL           shift and go to state 52


state 40

    (24) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (28) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 53


state 41

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (25) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 54
    IF              shift and go to state 55


state 42

    (51) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (53) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (54) cuerpo_createTable_lista -> . cuerpo_createTable
    (55) cuerpo_createTable -> . ID TIPO_DATO
    (56) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (57) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (58) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (59) cuerpo_createTable -> . ID TIPO_DATO NULL
    (60) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (61) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (62) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (63) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 56
    PRIMARY         shift and go to state 59
    FOREING         shift and go to state 60
    UNIQUE          shift and go to state 61
    CONSTRAINT      shift and go to state 62

    cuerpo_createTable_lista       shift and go to state 57
    cuerpo_createTable             shift and go to state 58

state 43

    (18) drop_database_instr -> DROP DATABASE ID PTCOMA .

    CREATE          reduce using rule 18 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 18 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 18 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 18 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 18 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 18 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 44

    (19) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 63


state 45

    (11) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 64


state 46

    (12) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 65


state 47

    (26) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 48

    (34) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 34 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 34 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 49

    (30) createDB_unParam -> OWNER ID .
    (38) createDB_dosParam -> OWNER ID . MODE ENTERO
    (39) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 30 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 66


state 50

    (31) createDB_unParam -> OWNER IGUAL . ID
    (40) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (41) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 67


state 51

    (32) createDB_unParam -> MODE ENTERO .
    (42) createDB_dosParam -> MODE ENTERO . OWNER ID
    (43) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 32 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 68


state 52

    (33) createDB_unParam -> MODE IGUAL . ENTERO
    (44) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (45) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 69


state 53

    (24) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 70


state 54

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (30) createDB_unParam -> . OWNER ID
    (31) createDB_unParam -> . OWNER IGUAL ID
    (32) createDB_unParam -> . MODE ENTERO
    (33) createDB_unParam -> . MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (41) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 71
    OWNER           shift and go to state 38
    MODE            shift and go to state 39

    createDB_unParam               shift and go to state 72
    createDB_dosParam              shift and go to state 73

state 55

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 74


state 56

    (55) cuerpo_createTable -> ID . TIPO_DATO
    (56) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (57) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (58) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (59) cuerpo_createTable -> ID . TIPO_DATO NULL
    (64) TIPO_DATO -> . TEXT
    (65) TIPO_DATO -> . FLOAT
    (66) TIPO_DATO -> . INTEGER
    (67) TIPO_DATO -> . SMALLINT
    (68) TIPO_DATO -> . MONEY
    (69) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (70) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (71) TIPO_DATO -> . BIGINT
    (72) TIPO_DATO -> . REAL
    (73) TIPO_DATO -> . DOUBLE PRECISION
    (74) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (75) TIPO_DATO -> . INTERVAL
    (76) TIPO_DATO -> . TIME
    (77) TIPO_DATO -> . TIMESTAMP
    (78) TIPO_DATO -> . DATE
    (79) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (80) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (81) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (82) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (83) TIPO_DATO -> . CHAR PAR_A PAR_C
    (84) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 76
    FLOAT           shift and go to state 77
    INTEGER         shift and go to state 78
    SMALLINT        shift and go to state 79
    MONEY           shift and go to state 80
    DECIMAL         shift and go to state 81
    NUMERIC         shift and go to state 82
    BIGINT          shift and go to state 83
    REAL            shift and go to state 84
    DOUBLE          shift and go to state 85
    INTERVAL        shift and go to state 86
    TIME            shift and go to state 87
    TIMESTAMP       shift and go to state 88
    DATE            shift and go to state 89
    CHARACTER       shift and go to state 90
    VARCHAR         shift and go to state 91
    CHAR            shift and go to state 92

    TIPO_DATO                      shift and go to state 75

state 57

    (51) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (53) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 93
    COMA            shift and go to state 94


state 58

    (54) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 54 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 54 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 59

    (60) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 95


state 60

    (61) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 96


state 61

    (62) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 97


state 62

    (63) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 98


state 63

    (19) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 99


state 64

    (11) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 100


state 65

    (12) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (13) usuariosDB -> . ID
    (14) usuariosDB -> . CURRENT_USER
    (15) usuariosDB -> . SESSION_USER
    (16) usuariosDB -> . CADENA

    ID              shift and go to state 101
    CURRENT_USER    shift and go to state 103
    SESSION_USER    shift and go to state 104
    CADENA          shift and go to state 105

    usuariosDB                     shift and go to state 102

state 66

    (38) createDB_dosParam -> OWNER ID MODE . ENTERO
    (39) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 106
    IGUAL           shift and go to state 107


state 67

    (31) createDB_unParam -> OWNER IGUAL ID .
    (40) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (41) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 31 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 108


state 68

    (42) createDB_dosParam -> MODE ENTERO OWNER . ID
    (43) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 109
    IGUAL           shift and go to state 110


state 69

    (33) createDB_unParam -> MODE IGUAL ENTERO .
    (44) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (45) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 33 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 111


state 70

    (24) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (30) createDB_unParam -> . OWNER ID
    (31) createDB_unParam -> . OWNER IGUAL ID
    (32) createDB_unParam -> . MODE ENTERO
    (33) createDB_unParam -> . MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (41) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 112
    OWNER           shift and go to state 38
    MODE            shift and go to state 39

    createDB_unParam               shift and go to state 113
    createDB_dosParam              shift and go to state 114

state 71

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 72

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 115


state 73

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 116


state 74

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 117


state 75

    (55) cuerpo_createTable -> ID TIPO_DATO .
    (56) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (57) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (58) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (59) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 55 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 55 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 118
    REFERENCES      shift and go to state 119
    NOT             shift and go to state 120
    NULL            shift and go to state 121


state 76

    (64) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 64 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 64 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 64 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 64 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 64 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 64 (TIPO_DATO -> TEXT .)


state 77

    (65) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 65 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 65 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 65 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 65 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 65 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 65 (TIPO_DATO -> FLOAT .)


state 78

    (66) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 66 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 66 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 66 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 66 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 66 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 66 (TIPO_DATO -> INTEGER .)


state 79

    (67) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 67 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 67 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 67 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 67 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 67 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 67 (TIPO_DATO -> SMALLINT .)


state 80

    (68) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 68 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 68 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 68 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 68 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 68 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 68 (TIPO_DATO -> MONEY .)


state 81

    (69) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 122


state 82

    (70) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 123


state 83

    (71) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 71 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 71 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 71 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 71 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 71 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 71 (TIPO_DATO -> BIGINT .)


state 84

    (72) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 72 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 72 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 72 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 72 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 72 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 72 (TIPO_DATO -> REAL .)


state 85

    (73) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 124


state 86

    (74) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (75) TIPO_DATO -> INTERVAL .
    (85) extract_time -> . YEAR
    (86) extract_time -> . DAY
    (87) extract_time -> . MONTH
    (88) extract_time -> . HOUR
    (89) extract_time -> . MINUTE
    (90) extract_time -> . SECOND

    PRIMARY         reduce using rule 75 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 75 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 75 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 75 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 75 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 75 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 126
    DAY             shift and go to state 127
    MONTH           shift and go to state 128
    HOUR            shift and go to state 129
    MINUTE          shift and go to state 130
    SECOND          shift and go to state 131

    extract_time                   shift and go to state 125

state 87

    (76) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 76 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 76 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 76 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 76 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 76 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 76 (TIPO_DATO -> TIME .)


state 88

    (77) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 77 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 77 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 77 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 77 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 77 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 77 (TIPO_DATO -> TIMESTAMP .)


state 89

    (78) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 78 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 78 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 78 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 78 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 78 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 78 (TIPO_DATO -> DATE .)


state 90

    (79) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (82) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (84) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 132
    PAR_A           shift and go to state 133


state 91

    (80) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 134


state 92

    (81) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (83) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 135


state 93

    (51) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 136
    INHERITS        shift and go to state 137


state 94

    (53) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (55) cuerpo_createTable -> . ID TIPO_DATO
    (56) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (57) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (58) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (59) cuerpo_createTable -> . ID TIPO_DATO NULL
    (60) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (61) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (62) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (63) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 56
    PRIMARY         shift and go to state 59
    FOREING         shift and go to state 60
    UNIQUE          shift and go to state 61
    CONSTRAINT      shift and go to state 62

    cuerpo_createTable             shift and go to state 138

state 95

    (60) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 139


state 96

    (61) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 140


state 97

    (62) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (49) campos_c -> . campos_c COMA ID
    (50) campos_c -> . ID

    ID              shift and go to state 142

    campos_c                       shift and go to state 141

state 98

    (63) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (46) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (47) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (48) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 144
    UNIQUE          shift and go to state 145
    FOREING         shift and go to state 146

    constraint_esp                 shift and go to state 143

state 99

    (19) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    CREATE          reduce using rule 19 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 19 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 19 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 19 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 19 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 19 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 100

    (11) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 147


state 101

    (13) usuariosDB -> ID .

    PTCOMA          reduce using rule 13 (usuariosDB -> ID .)


state 102

    (12) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 148


state 103

    (14) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 14 (usuariosDB -> CURRENT_USER .)


state 104

    (15) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 15 (usuariosDB -> SESSION_USER .)


state 105

    (16) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 16 (usuariosDB -> CADENA .)


state 106

    (38) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 38 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 107

    (39) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 149


state 108

    (40) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (41) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 151
    IGUAL           shift and go to state 150


state 109

    (42) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 110

    (43) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 152


state 111

    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (45) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 154
    IGUAL           shift and go to state 153


state 112

    (24) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 24 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 24 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 24 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 24 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 24 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 24 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 113

    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 155


state 114

    (36) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 156


state 115

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 116

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 117

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 157


state 118

    (56) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 158


state 119

    (57) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 159


state 120

    (58) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 160


state 121

    (59) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 59 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 59 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 122

    (69) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 161


state 123

    (70) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 162


state 124

    (73) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 73 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 73 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 73 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 73 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 73 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 73 (TIPO_DATO -> DOUBLE PRECISION .)


state 125

    (74) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 163


state 126

    (85) extract_time -> YEAR .

    TO              reduce using rule 85 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 85 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 85 (extract_time -> YEAR .)
    NOT             reduce using rule 85 (extract_time -> YEAR .)
    NULL            reduce using rule 85 (extract_time -> YEAR .)
    PAR_C           reduce using rule 85 (extract_time -> YEAR .)
    COMA            reduce using rule 85 (extract_time -> YEAR .)


state 127

    (86) extract_time -> DAY .

    TO              reduce using rule 86 (extract_time -> DAY .)
    PRIMARY         reduce using rule 86 (extract_time -> DAY .)
    REFERENCES      reduce using rule 86 (extract_time -> DAY .)
    NOT             reduce using rule 86 (extract_time -> DAY .)
    NULL            reduce using rule 86 (extract_time -> DAY .)
    PAR_C           reduce using rule 86 (extract_time -> DAY .)
    COMA            reduce using rule 86 (extract_time -> DAY .)


state 128

    (87) extract_time -> MONTH .

    TO              reduce using rule 87 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 87 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 87 (extract_time -> MONTH .)
    NOT             reduce using rule 87 (extract_time -> MONTH .)
    NULL            reduce using rule 87 (extract_time -> MONTH .)
    PAR_C           reduce using rule 87 (extract_time -> MONTH .)
    COMA            reduce using rule 87 (extract_time -> MONTH .)


state 129

    (88) extract_time -> HOUR .

    TO              reduce using rule 88 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 88 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 88 (extract_time -> HOUR .)
    NOT             reduce using rule 88 (extract_time -> HOUR .)
    NULL            reduce using rule 88 (extract_time -> HOUR .)
    PAR_C           reduce using rule 88 (extract_time -> HOUR .)
    COMA            reduce using rule 88 (extract_time -> HOUR .)


state 130

    (89) extract_time -> MINUTE .

    TO              reduce using rule 89 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 89 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 89 (extract_time -> MINUTE .)
    NOT             reduce using rule 89 (extract_time -> MINUTE .)
    NULL            reduce using rule 89 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 89 (extract_time -> MINUTE .)
    COMA            reduce using rule 89 (extract_time -> MINUTE .)


state 131

    (90) extract_time -> SECOND .

    TO              reduce using rule 90 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 90 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 90 (extract_time -> SECOND .)
    NOT             reduce using rule 90 (extract_time -> SECOND .)
    NULL            reduce using rule 90 (extract_time -> SECOND .)
    PAR_C           reduce using rule 90 (extract_time -> SECOND .)
    COMA            reduce using rule 90 (extract_time -> SECOND .)


state 132

    (79) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 164


state 133

    (82) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (84) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 165
    PAR_C           shift and go to state 166


state 134

    (80) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 167


state 135

    (81) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (83) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 168
    PAR_C           shift and go to state 169


state 136

    (51) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 51 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 51 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DROP            reduce using rule 51 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    USE             reduce using rule 51 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    ALTER           reduce using rule 51 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 51 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 137

    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 170


state 138

    (53) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 53 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 53 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 139

    (60) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 171


state 140

    (61) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 172


state 141

    (62) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (49) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 173
    COMA            shift and go to state 174


state 142

    (50) campos_c -> ID .

    PAR_C           reduce using rule 50 (campos_c -> ID .)
    COMA            reduce using rule 50 (campos_c -> ID .)


state 143

    (63) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 63 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 63 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 144

    (46) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 175


state 145

    (47) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 176


state 146

    (48) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 177


state 147

    (11) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    CREATE          reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 11 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 148

    (12) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    CREATE          reduce using rule 12 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 12 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 12 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 12 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 12 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 12 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 149

    (39) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 39 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 150

    (41) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 178


state 151

    (40) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 40 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 152

    (43) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 153

    (45) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 179


state 154

    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 155

    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 156

    (36) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 36 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 36 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 36 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 36 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 36 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 36 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 157

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (30) createDB_unParam -> . OWNER ID
    (31) createDB_unParam -> . OWNER IGUAL ID
    (32) createDB_unParam -> . MODE ENTERO
    (33) createDB_unParam -> . MODE IGUAL ENTERO
    (38) createDB_dosParam -> . OWNER ID MODE ENTERO
    (39) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (41) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER ID
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 180
    OWNER           shift and go to state 38
    MODE            shift and go to state 39

    createDB_unParam               shift and go to state 181
    createDB_dosParam              shift and go to state 182

state 158

    (56) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 56 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 56 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 159

    (57) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 57 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 57 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 160

    (58) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 58 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 58 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 161

    (69) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 183


state 162

    (70) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 184


state 163

    (74) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (85) extract_time -> . YEAR
    (86) extract_time -> . DAY
    (87) extract_time -> . MONTH
    (88) extract_time -> . HOUR
    (89) extract_time -> . MINUTE
    (90) extract_time -> . SECOND

    YEAR            shift and go to state 126
    DAY             shift and go to state 127
    MONTH           shift and go to state 128
    HOUR            shift and go to state 129
    MINUTE          shift and go to state 130
    SECOND          shift and go to state 131

    extract_time                   shift and go to state 185

state 164

    (79) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 186


state 165

    (82) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 187


state 166

    (84) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 84 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 84 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 84 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 84 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 84 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 84 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 167

    (80) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 188


state 168

    (81) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 189


state 169

    (83) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 83 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 83 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 83 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 83 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 83 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 83 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 170

    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 190


state 171

    (60) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 191


state 172

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 192


state 173

    (62) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 62 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 62 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 174

    (49) campos_c -> campos_c COMA . ID

    ID              shift and go to state 193


state 175

    (46) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (114) expresion_logica -> . expresion_relacional AND expresion_relacional
    (115) expresion_logica -> . expresion_relacional OR expresion_relacional
    (116) expresion_logica -> . NOT expresion_relacional
    (117) expresion_logica -> . expresion_relacional
    (105) expresion_relacional -> . expresion MAYQUE expresion
    (106) expresion_relacional -> . expresion MENQUE expresion
    (107) expresion_relacional -> . expresion MAYIGQUE expresion
    (108) expresion_relacional -> . expresion MENIGQUE expresion
    (109) expresion_relacional -> . expresion DOBLEIG expresion
    (110) expresion_relacional -> . expresion IGUAL expresion
    (111) expresion_relacional -> . expresion NOIG expresion
    (112) expresion_relacional -> . expresion NOIGUAL expresion
    (113) expresion_relacional -> . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    NOT             shift and go to state 196
    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion_logica               shift and go to state 194
    expresion_relacional           shift and go to state 195
    expresion                      shift and go to state 197

state 176

    (47) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (49) campos_c -> . campos_c COMA ID
    (50) campos_c -> . ID

    ID              shift and go to state 142

    campos_c                       shift and go to state 204

state 177

    (48) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 205


state 178

    (41) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 179

    (45) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 45 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 180

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 181

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 206


state 182

    (37) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 207


state 183

    (69) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 208


state 184

    (70) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 209


state 185

    (74) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 74 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 74 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 74 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 74 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 74 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 74 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 186

    (79) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 210


state 187

    (82) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 82 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 188

    (80) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 80 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 80 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 80 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 80 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 80 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 80 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 189

    (81) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 81 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 81 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 81 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 81 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 81 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 81 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 190

    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 211


state 191

    (60) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 60 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 60 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 192

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 212


state 193

    (49) campos_c -> campos_c COMA ID .

    PAR_C           reduce using rule 49 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 49 (campos_c -> campos_c COMA ID .)


state 194

    (46) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 213


state 195

    (114) expresion_logica -> expresion_relacional . AND expresion_relacional
    (115) expresion_logica -> expresion_relacional . OR expresion_relacional
    (117) expresion_logica -> expresion_relacional .

    AND             shift and go to state 214
    OR              shift and go to state 215
    PAR_C           reduce using rule 117 (expresion_logica -> expresion_relacional .)


state 196

    (116) expresion_logica -> NOT . expresion_relacional
    (105) expresion_relacional -> . expresion MAYQUE expresion
    (106) expresion_relacional -> . expresion MENQUE expresion
    (107) expresion_relacional -> . expresion MAYIGQUE expresion
    (108) expresion_relacional -> . expresion MENIGQUE expresion
    (109) expresion_relacional -> . expresion DOBLEIG expresion
    (110) expresion_relacional -> . expresion IGUAL expresion
    (111) expresion_relacional -> . expresion NOIG expresion
    (112) expresion_relacional -> . expresion NOIGUAL expresion
    (113) expresion_relacional -> . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion_relacional           shift and go to state 216
    expresion                      shift and go to state 197

state 197

    (105) expresion_relacional -> expresion . MAYQUE expresion
    (106) expresion_relacional -> expresion . MENQUE expresion
    (107) expresion_relacional -> expresion . MAYIGQUE expresion
    (108) expresion_relacional -> expresion . MENIGQUE expresion
    (109) expresion_relacional -> expresion . DOBLEIG expresion
    (110) expresion_relacional -> expresion . IGUAL expresion
    (111) expresion_relacional -> expresion . NOIG expresion
    (112) expresion_relacional -> expresion . NOIGUAL expresion
    (113) expresion_relacional -> expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 217
    MENQUE          shift and go to state 218
    MAYIGQUE        shift and go to state 219
    MENIGQUE        shift and go to state 220
    DOBLEIG         shift and go to state 221
    IGUAL           shift and go to state 222
    NOIG            shift and go to state 223
    NOIGUAL         shift and go to state 224
    AND             reduce using rule 113 (expresion_relacional -> expresion .)
    OR              reduce using rule 113 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 113 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 198

    (92) expresion -> CADENA .

    MAYQUE          reduce using rule 92 (expresion -> CADENA .)
    MENQUE          reduce using rule 92 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 92 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 92 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 92 (expresion -> CADENA .)
    IGUAL           reduce using rule 92 (expresion -> CADENA .)
    NOIG            reduce using rule 92 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 92 (expresion -> CADENA .)
    SUMA            reduce using rule 92 (expresion -> CADENA .)
    RESTA           reduce using rule 92 (expresion -> CADENA .)
    DIVISION        reduce using rule 92 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 92 (expresion -> CADENA .)
    AND             reduce using rule 92 (expresion -> CADENA .)
    OR              reduce using rule 92 (expresion -> CADENA .)
    PAR_C           reduce using rule 92 (expresion -> CADENA .)


state 199

    (93) expresion -> ENTERO .

    MAYQUE          reduce using rule 93 (expresion -> ENTERO .)
    MENQUE          reduce using rule 93 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 93 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 93 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 93 (expresion -> ENTERO .)
    IGUAL           reduce using rule 93 (expresion -> ENTERO .)
    NOIG            reduce using rule 93 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 93 (expresion -> ENTERO .)
    SUMA            reduce using rule 93 (expresion -> ENTERO .)
    RESTA           reduce using rule 93 (expresion -> ENTERO .)
    DIVISION        reduce using rule 93 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 93 (expresion -> ENTERO .)
    AND             reduce using rule 93 (expresion -> ENTERO .)
    OR              reduce using rule 93 (expresion -> ENTERO .)
    PAR_C           reduce using rule 93 (expresion -> ENTERO .)


state 200

    (94) expresion -> FLOTANTE .

    MAYQUE          reduce using rule 94 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 94 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 94 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 94 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 94 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 94 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 94 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 94 (expresion -> FLOTANTE .)
    SUMA            reduce using rule 94 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 94 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 94 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 94 (expresion -> FLOTANTE .)
    AND             reduce using rule 94 (expresion -> FLOTANTE .)
    OR              reduce using rule 94 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 94 (expresion -> FLOTANTE .)


state 201

    (95) expresion -> ID .
    (96) expresion -> ID . PUNTO ID

    MAYQUE          reduce using rule 95 (expresion -> ID .)
    MENQUE          reduce using rule 95 (expresion -> ID .)
    MAYIGQUE        reduce using rule 95 (expresion -> ID .)
    MENIGQUE        reduce using rule 95 (expresion -> ID .)
    DOBLEIG         reduce using rule 95 (expresion -> ID .)
    IGUAL           reduce using rule 95 (expresion -> ID .)
    NOIG            reduce using rule 95 (expresion -> ID .)
    NOIGUAL         reduce using rule 95 (expresion -> ID .)
    SUMA            reduce using rule 95 (expresion -> ID .)
    RESTA           reduce using rule 95 (expresion -> ID .)
    DIVISION        reduce using rule 95 (expresion -> ID .)
    ASTERISCO       reduce using rule 95 (expresion -> ID .)
    AND             reduce using rule 95 (expresion -> ID .)
    OR              reduce using rule 95 (expresion -> ID .)
    PAR_C           reduce using rule 95 (expresion -> ID .)
    PUNTO           shift and go to state 229


state 202

    (101) expresion -> TRUE .

    MAYQUE          reduce using rule 101 (expresion -> TRUE .)
    MENQUE          reduce using rule 101 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 101 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 101 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 101 (expresion -> TRUE .)
    IGUAL           reduce using rule 101 (expresion -> TRUE .)
    NOIG            reduce using rule 101 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 101 (expresion -> TRUE .)
    SUMA            reduce using rule 101 (expresion -> TRUE .)
    RESTA           reduce using rule 101 (expresion -> TRUE .)
    DIVISION        reduce using rule 101 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 101 (expresion -> TRUE .)
    AND             reduce using rule 101 (expresion -> TRUE .)
    OR              reduce using rule 101 (expresion -> TRUE .)
    PAR_C           reduce using rule 101 (expresion -> TRUE .)


state 203

    (102) expresion -> FALSE .

    MAYQUE          reduce using rule 102 (expresion -> FALSE .)
    MENQUE          reduce using rule 102 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 102 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 102 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 102 (expresion -> FALSE .)
    IGUAL           reduce using rule 102 (expresion -> FALSE .)
    NOIG            reduce using rule 102 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 102 (expresion -> FALSE .)
    SUMA            reduce using rule 102 (expresion -> FALSE .)
    RESTA           reduce using rule 102 (expresion -> FALSE .)
    DIVISION        reduce using rule 102 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 102 (expresion -> FALSE .)
    AND             reduce using rule 102 (expresion -> FALSE .)
    OR              reduce using rule 102 (expresion -> FALSE .)
    PAR_C           reduce using rule 102 (expresion -> FALSE .)


state 204

    (47) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (49) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 230
    COMA            shift and go to state 174


state 205

    (48) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 231


state 206

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 207

    (37) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 208

    (69) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 232


state 209

    (70) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 233


state 210

    (79) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 79 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 79 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 79 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 79 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 79 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 79 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 211

    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 234


state 212

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 235


state 213

    (46) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 46 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 46 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 214

    (114) expresion_logica -> expresion_relacional AND . expresion_relacional
    (105) expresion_relacional -> . expresion MAYQUE expresion
    (106) expresion_relacional -> . expresion MENQUE expresion
    (107) expresion_relacional -> . expresion MAYIGQUE expresion
    (108) expresion_relacional -> . expresion MENIGQUE expresion
    (109) expresion_relacional -> . expresion DOBLEIG expresion
    (110) expresion_relacional -> . expresion IGUAL expresion
    (111) expresion_relacional -> . expresion NOIG expresion
    (112) expresion_relacional -> . expresion NOIGUAL expresion
    (113) expresion_relacional -> . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion_relacional           shift and go to state 236
    expresion                      shift and go to state 197

state 215

    (115) expresion_logica -> expresion_relacional OR . expresion_relacional
    (105) expresion_relacional -> . expresion MAYQUE expresion
    (106) expresion_relacional -> . expresion MENQUE expresion
    (107) expresion_relacional -> . expresion MAYIGQUE expresion
    (108) expresion_relacional -> . expresion MENIGQUE expresion
    (109) expresion_relacional -> . expresion DOBLEIG expresion
    (110) expresion_relacional -> . expresion IGUAL expresion
    (111) expresion_relacional -> . expresion NOIG expresion
    (112) expresion_relacional -> . expresion NOIGUAL expresion
    (113) expresion_relacional -> . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion_relacional           shift and go to state 237
    expresion                      shift and go to state 197

state 216

    (116) expresion_logica -> NOT expresion_relacional .

    PAR_C           reduce using rule 116 (expresion_logica -> NOT expresion_relacional .)


state 217

    (105) expresion_relacional -> expresion MAYQUE . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 238

state 218

    (106) expresion_relacional -> expresion MENQUE . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 239

state 219

    (107) expresion_relacional -> expresion MAYIGQUE . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 240

state 220

    (108) expresion_relacional -> expresion MENIGQUE . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 241

state 221

    (109) expresion_relacional -> expresion DOBLEIG . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 242

state 222

    (110) expresion_relacional -> expresion IGUAL . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 243

state 223

    (111) expresion_relacional -> expresion NOIG . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 244

state 224

    (112) expresion_relacional -> expresion NOIGUAL . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 245

state 225

    (97) expresion -> expresion SUMA . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 246

state 226

    (98) expresion -> expresion RESTA . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 247

state 227

    (99) expresion -> expresion DIVISION . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 248

state 228

    (100) expresion -> expresion ASTERISCO . expresion
    (92) expresion -> . CADENA
    (93) expresion -> . ENTERO
    (94) expresion -> . FLOTANTE
    (95) expresion -> . ID
    (96) expresion -> . ID PUNTO ID
    (97) expresion -> . expresion SUMA expresion
    (98) expresion -> . expresion RESTA expresion
    (99) expresion -> . expresion DIVISION expresion
    (100) expresion -> . expresion ASTERISCO expresion
    (101) expresion -> . TRUE
    (102) expresion -> . FALSE

    CADENA          shift and go to state 198
    ENTERO          shift and go to state 199
    FLOTANTE        shift and go to state 200
    ID              shift and go to state 201
    TRUE            shift and go to state 202
    FALSE           shift and go to state 203

    expresion                      shift and go to state 249

state 229

    (96) expresion -> ID PUNTO . ID

    ID              shift and go to state 250


state 230

    (47) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 47 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 47 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 231

    (48) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 251


state 232

    (69) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 69 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 69 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 69 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 69 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 69 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 69 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 233

    (70) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 70 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 70 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 70 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 70 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 70 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 70 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 234

    (52) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 52 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 52 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 52 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    USE             reduce using rule 52 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    ALTER           reduce using rule 52 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 52 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 235

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 252


state 236

    (114) expresion_logica -> expresion_relacional AND expresion_relacional .

    PAR_C           reduce using rule 114 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 237

    (115) expresion_logica -> expresion_relacional OR expresion_relacional .

    PAR_C           reduce using rule 115 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 238

    (105) expresion_relacional -> expresion MAYQUE expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 105 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 105 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 105 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 239

    (106) expresion_relacional -> expresion MENQUE expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 106 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 106 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 106 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 240

    (107) expresion_relacional -> expresion MAYIGQUE expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 107 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 107 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 107 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 241

    (108) expresion_relacional -> expresion MENIGQUE expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 108 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 108 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 108 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 242

    (109) expresion_relacional -> expresion DOBLEIG expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 109 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 109 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 109 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 243

    (110) expresion_relacional -> expresion IGUAL expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 110 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 110 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 110 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 244

    (111) expresion_relacional -> expresion NOIG expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 111 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 111 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 111 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 245

    (112) expresion_relacional -> expresion NOIGUAL expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 112 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 112 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 112 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 225
    RESTA           shift and go to state 226
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228


state 246

    (97) expresion -> expresion SUMA expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 97 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 97 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 97 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 97 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 97 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 97 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 97 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 97 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 97 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 97 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 97 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 97 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 97 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228

  ! DIVISION        [ reduce using rule 97 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 97 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 225 ]
  ! RESTA           [ shift and go to state 226 ]


state 247

    (98) expresion -> expresion RESTA expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 98 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 98 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 98 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 98 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 98 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 98 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 98 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 98 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 98 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 98 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 98 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 98 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 98 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 227
    ASTERISCO       shift and go to state 228

  ! DIVISION        [ reduce using rule 98 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 98 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 225 ]
  ! RESTA           [ shift and go to state 226 ]


state 248

    (99) expresion -> expresion DIVISION expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 99 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 99 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 225 ]
  ! RESTA           [ shift and go to state 226 ]
  ! DIVISION        [ shift and go to state 227 ]
  ! ASTERISCO       [ shift and go to state 228 ]


state 249

    (100) expresion -> expresion ASTERISCO expresion .
    (97) expresion -> expresion . SUMA expresion
    (98) expresion -> expresion . RESTA expresion
    (99) expresion -> expresion . DIVISION expresion
    (100) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    SUMA            reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 100 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 225 ]
  ! RESTA           [ shift and go to state 226 ]
  ! DIVISION        [ shift and go to state 227 ]
  ! ASTERISCO       [ shift and go to state 228 ]


state 250

    (96) expresion -> ID PUNTO ID .

    MAYQUE          reduce using rule 96 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 96 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 96 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 96 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 96 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 96 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 96 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 96 (expresion -> ID PUNTO ID .)
    SUMA            reduce using rule 96 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 96 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 96 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 96 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 96 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 96 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 96 (expresion -> ID PUNTO ID .)


state 251

    (48) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 253


state 252

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 254


state 253

    (48) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 255


state 254

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 256


state 255

    (48) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 257


state 256

    (61) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 61 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 61 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 257

    (48) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 258


state 258

    (48) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 259


state 259

    (48) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 48 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 48 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

