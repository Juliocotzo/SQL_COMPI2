Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ALL
    ANY
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DESC
    DISTINCT
    DIV
    D_OR
    ELSE
    ENCODE
    END
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INTERSECT
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RIGHT
    ROUND
    SCALE
    SELECT
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    UNION
    UNKNOWN
    WHEN
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     instruccion -> show_tables_instr
Rule 8     instruccion -> drop_database_instr
Rule 9     instruccion -> use_database_instr
Rule 10    instruccion -> alterDB_insrt
Rule 11    instruccion -> update_insrt
Rule 12    instruccion -> drop_insrt
Rule 13    instruccion -> alterTable_insrt
Rule 14    instruccion -> insert_insrt
Rule 15    instruccion -> TIPO_ENUM_INSRT
Rule 16    instruccion -> delete_insrt
Rule 17    delete_insrt -> DELETE FROM ID PTCOMA
Rule 18    delete_insrt -> DELETE FROM ONLY ID PTCOMA
Rule 19    delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA
Rule 20    delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA
Rule 21    delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
Rule 22    delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA
Rule 23    delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
Rule 24    delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA
Rule 25    delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
Rule 26    delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
Rule 27    delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA
Rule 28    returning_exp -> ASTERISCO
Rule 29    returning_exp -> campos_c
Rule 30    TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA
Rule 31    lista_datos_enum -> lista_datos_enum COMA CADENA
Rule 32    lista_datos_enum -> CADENA
Rule 33    insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
Rule 34    insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
Rule 35    insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA
Rule 36    lista_parametros_lista -> lista_parametros_lista COMA ID
Rule 37    lista_parametros_lista -> ID
Rule 38    lista_datos -> lista_datos COMA expresion
Rule 39    lista_datos -> expresion
Rule 40    Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO
Rule 41    alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
Rule 42    alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
Rule 43    alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
Rule 44    campos_add_Column -> campos_add_Column COMA tipos_datos_columnas
Rule 45    campos_add_Column -> tipos_datos_columnas
Rule 46    tipos_datos_columnas -> ID TIPO_DATO
Rule 47    alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
Rule 48    alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
Rule 49    alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
Rule 50    alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
Rule 51    alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
Rule 52    alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA
Rule 53    alterTable_alter -> alterTable_alter COMA Table_alter
Rule 54    alterTable_alter -> Table_alter
Rule 55    Table_alter -> ALTER COLUMN ID SET NOT NULL
Rule 56    drop_insrt -> DROP TABLE lista_drop_id PTCOMA
Rule 57    lista_drop_id -> lista_drop_id COMA ID
Rule 58    lista_drop_id -> ID
Rule 59    update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA
Rule 60    lista_update -> lista_update COMA parametro_update
Rule 61    lista_update -> parametro_update
Rule 62    parametro_update -> ID IGUAL expresion
Rule 63    alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 64    alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 65    usuariosDB -> ID
Rule 66    usuariosDB -> CURRENT_USER
Rule 67    usuariosDB -> SESSION_USER
Rule 68    usuariosDB -> CADENA
Rule 69    use_database_instr -> USE ID PTCOMA
Rule 70    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 71    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 72    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 73    show_tables_instr -> SHOW TABLES PTCOMA
Rule 74    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 75    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 76    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 77    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 78    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 79    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 80    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 81    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 82    createDB_unParam -> OWNER string_type
Rule 83    createDB_unParam -> OWNER IGUAL string_type
Rule 84    createDB_unParam -> MODE ENTERO
Rule 85    createDB_unParam -> MODE IGUAL ENTERO
Rule 86    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 87    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 88    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 89    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 90    createDB_dosParam -> OWNER string_type MODE ENTERO
Rule 91    createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO
Rule 92    createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO
Rule 93    createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO
Rule 94    createDB_dosParam -> MODE ENTERO OWNER string_type
Rule 95    createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type
Rule 96    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 97    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 98    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 99    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 100   constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 101   campos_c -> campos_c COMA ID
Rule 102   campos_c -> ID
Rule 103   create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 104   create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 105   cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 106   cuerpo_createTable_lista -> cuerpo_createTable
Rule 107   cuerpo_createTable -> ID TIPO_DATO_DEF
Rule 108   cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options
Rule 109   createTable_options -> createTable_options cT_options
Rule 110   createTable_options -> cT_options
Rule 111   cT_options -> N_null
Rule 112   cT_options -> C_unique
Rule 113   cT_options -> C_check
Rule 114   cT_options -> llave
Rule 115   cT_options -> O_DEFAULT
Rule 116   O_DEFAULT -> DEFAULT expresion_dato_default
Rule 117   N_null -> NULL
Rule 118   N_null -> NOT NULL
Rule 119   C_unique -> UNIQUE
Rule 120   C_unique -> CONSTRAINT ID UNIQUE
Rule 121   C_check -> CHECK PAR_A expresion_logica PAR_C
Rule 122   C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C
Rule 123   llave -> PRIMARY KEY
Rule 124   llave -> FOREIGN KEY
Rule 125   expresion_dato_default -> CADENA
Rule 126   expresion_dato_default -> ENTERO
Rule 127   expresion_dato_default -> FLOTANTE
Rule 128   cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 129   cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 130   cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 131   cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 132   TIPO_DATO -> TEXT
Rule 133   TIPO_DATO -> FLOAT
Rule 134   TIPO_DATO -> INTEGER
Rule 135   TIPO_DATO -> SMALLINT
Rule 136   TIPO_DATO -> MONEY
Rule 137   TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 138   TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 139   TIPO_DATO -> BIGINT
Rule 140   TIPO_DATO -> REAL
Rule 141   TIPO_DATO -> DOUBLE PRECISION
Rule 142   TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 143   TIPO_DATO -> INTERVAL
Rule 144   TIPO_DATO -> TIME
Rule 145   TIPO_DATO -> TIMESTAMP
Rule 146   TIPO_DATO -> DATE
Rule 147   TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 148   TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 149   TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 150   TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 151   TIPO_DATO -> CHAR PAR_A PAR_C
Rule 152   TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 153   extract_time -> YEAR
Rule 154   extract_time -> DAY
Rule 155   extract_time -> MONTH
Rule 156   extract_time -> HOUR
Rule 157   extract_time -> MINUTE
Rule 158   extract_time -> SECOND
Rule 159   TIPO_DATO_DEF -> TEXT
Rule 160   TIPO_DATO_DEF -> FLOAT
Rule 161   TIPO_DATO_DEF -> INTEGER
Rule 162   TIPO_DATO_DEF -> SMALLINT
Rule 163   TIPO_DATO_DEF -> MONEY
Rule 164   TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 165   TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 166   TIPO_DATO_DEF -> BIGINT
Rule 167   TIPO_DATO_DEF -> REAL
Rule 168   TIPO_DATO_DEF -> DOUBLE PRECISION
Rule 169   TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time
Rule 170   TIPO_DATO_DEF -> INTERVAL
Rule 171   TIPO_DATO_DEF -> TIME
Rule 172   TIPO_DATO_DEF -> TIMESTAMP
Rule 173   TIPO_DATO_DEF -> DATE
Rule 174   TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 175   TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C
Rule 176   TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C
Rule 177   TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C
Rule 178   TIPO_DATO_DEF -> CHAR PAR_A PAR_C
Rule 179   TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C
Rule 180   agrupacion_expresion -> PAR_A expresion PAR_C
Rule 181   expresion -> CADENA
Rule 182   expresion -> ENTERO
Rule 183   expresion -> FLOTANTE
Rule 184   expresion -> ID
Rule 185   expresion -> ID PUNTO ID
Rule 186   expresion -> expresion SUMA expresion
Rule 187   expresion -> expresion RESTA expresion
Rule 188   expresion -> expresion DIVISION expresion
Rule 189   expresion -> expresion ASTERISCO expresion
Rule 190   expresion -> TRUE
Rule 191   expresion -> FALSE
Rule 192   string_type -> CADENA
Rule 193   string_type -> ID
Rule 194   expresion_relacional -> expresion MAYQUE expresion
Rule 195   expresion_relacional -> expresion MENQUE expresion
Rule 196   expresion_relacional -> expresion MAYIGQUE expresion
Rule 197   expresion_relacional -> expresion MENIGQUE expresion
Rule 198   expresion_relacional -> expresion DOBLEIG expresion
Rule 199   expresion_relacional -> expresion IGUAL expresion
Rule 200   expresion_relacional -> expresion NOIG expresion
Rule 201   expresion_relacional -> expresion NOIGUAL expresion
Rule 202   expresion_relacional -> expresion
Rule 203   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 204   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 205   expresion_logica -> NOT expresion_relacional
Rule 206   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 43 47 48 49 50 51
ALL                  : 
ALTER                : 40 41 42 43 47 48 49 50 51 52 55 63 64
AND                  : 203
ANY                  : 
AS                   : 30
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 28 189
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 139 166
BY                   : 
CADENA               : 31 32 68 125 181 192
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 149 151 176 178
CHARACTER            : 147 150 152 174 177 179
CHECK                : 47 49 98 121 122
COLUMN               : 40 42 43 55
COMA                 : 31 36 38 44 53 57 60 101 105 137 138 164 165
CONSTRAINT           : 41 49 50 51 120 122 131
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 30 74 75 76 77 78 79 80 81 86 87 88 89 103 104
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 66
DATABASE             : 63 64 70 71 74 75 76 77 78 79 80 81 86 87 88 89
DATABASES            : 72
DATE                 : 146 173
DATE_PART            : 
DAY                  : 154
DECIMAL              : 137 164
DECODE               : 
DEFAULT              : 116
DEGREES              : 
DELETE               : 17 18 19 20 21 22 23 24 25 26 27
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 188
DOBLEIG              : 198
DOUBLE               : 141 168
DROP                 : 41 56 70 71
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 84 85 90 91 92 93 94 95 96 97 126 137 137 138 138 147 148 149 150 164 164 165 165 174 175 176 177 182
ENUM                 : 30
EXCEPT               : 
EXISTS               : 20 21 25 26 71 76 77 80 81 88 89
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 191
FLOAT                : 133 160
FLOOR                : 
FLOTANTE             : 127 183
FOREIGN              : 48 51 124
FOREING              : 100 129
FROM                 : 17 18 19 20 21 22 23 24 25 26 27
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 156
ID                   : 17 18 19 20 21 22 23 24 25 25 26 26 27 27 30 33 34 35 36 37 40 41 42 42 42 43 46 47 48 49 49 50 50 51 51 52 55 57 58 59 62 63 63 64 65 69 70 71 74 75 76 77 78 79 80 81 86 87 88 89 96 97 100 100 100 101 102 103 104 104 107 108 120 122 128 129 129 129 131 184 185 185 193
IF                   : 71 76 77 80 81 88 89
IGUAL                : 62 83 85 91 92 93 93 95 96 97 97 199
IN                   : 
INHERITS             : 104
INNER                : 
INSERT               : 33 34 35
INTEGER              : 134 161
INTERSECT            : 
INTERVAL             : 142 143 169 170
INTO                 : 33 34 35
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 48 51 100 123 124 128 129
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 196
MAYMAY               : 
MAYQUE               : 194
MD5                  : 
MENIGQUE             : 197
MENMEN               : 
MENQUE               : 195
MIN                  : 
MINUTE               : 157
MIN_SCALE            : 
MOD                  : 
MODE                 : 84 85 90 91 92 93 94 95 96 97
MODULO               : 
MONEY                : 136 163
MONTH                : 155
MULTI                : 
NATURAL              : 
NOIG                 : 200
NOIGUAL              : 201
NOT                  : 55 76 77 80 81 88 89 118 205
NOTNULL              : 
NOW                  : 
NULL                 : 55 117 118
NUMERIC              : 138 165
OFFSET               : 
ON                   : 
ONLY                 : 18 19
OR                   : 75 77 79 81 87 89 204
ORDER                : 
OUTER                : 
OWNER                : 64 82 83 90 91 92 93 94 95 96 97
PAR_A                : 30 33 33 34 34 35 47 48 49 50 51 98 99 100 100 103 104 104 121 122 128 129 129 130 137 138 147 148 149 150 151 152 164 165 174 175 176 177 178 179 180
PAR_C                : 30 33 33 34 34 35 47 48 49 50 51 98 99 100 100 103 104 104 121 122 128 129 129 130 137 138 147 148 149 150 151 152 164 165 174 175 176 177 178 179 180
PI                   : 
POWER                : 
PRECISION            : 141 168
PRIMARY              : 123 128
PTCOMA               : 17 18 19 20 21 22 23 24 25 26 27 30 33 34 35 41 42 43 47 48 49 50 51 52 56 59 63 64 69 70 71 72 73 74 75 76 77 78 79 80 81 86 87 88 89 103 104
PUNTO                : 185
RADIANS              : 
RANDOM               : 
REAL                 : 140 167
REFERENCES           : 48 51 100 129
RENAME               : 42 63
REPLACE              : 75 77 79 81 87 89
RESTA                : 187
RETURNING            : 19 21 23 24 26
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 158
SELECT               : 
SESSION_USER         : 67
SET                  : 55 59
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 72 73
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 135 162
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 186
SYMMETRIC            : 
S_OR                 : 
TABLE                : 41 42 43 47 48 49 50 51 52 56 103 104
TABLES               : 73
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 132 159
THEN                 : 
TIME                 : 144 171
TIMESTAMP            : 145 172
TO                   : 42 63 64 142 169
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 190
TYPE                 : 30 40
UNION                : 
UNIQUE               : 50 99 119 120 130
UNKNOWN              : 
UPDATE               : 59
USE                  : 69
USING                : 25 26 27
VALUES               : 33 34 35
VARCHAR              : 148 175
VARYING              : 147 174
WHEN                 : 
WHERE                : 20 21 22 23 25 26 27 59
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 153
error                : 

Nonterminals, with rules where they appear

C_check              : 113
C_unique             : 112
N_null               : 111
O_DEFAULT            : 115
TIPO_DATO            : 40 46
TIPO_DATO_DEF        : 107 108
TIPO_ENUM_INSRT      : 15
Table_alter          : 53 54
agrupacion_expresion : 
alterDB_insrt        : 10
alterTable_alter     : 52 53
alterTable_insrt     : 13
cT_options           : 109 110
campos_add_Column    : 43 44
campos_c             : 29 41 48 48 50 51 51 99 101 130
constraint_esp       : 131
createDB_dosParam    : 86 87 88 89
createDB_insrt       : 4
createDB_unParam     : 78 79 80 81
createTable_options  : 108 109
create_Table_isnrt   : 5
cuerpo_createTable   : 105 106
cuerpo_createTable_lista : 103 104 105
delete_insrt         : 16
drop_database_instr  : 8
drop_insrt           : 12
expresion            : 38 39 62 180 186 186 187 187 188 188 189 189 194 194 195 195 196 196 197 197 198 198 199 199 200 200 201 201 202
expresion_dato_default : 116
expresion_logica     : 20 21 22 23 25 26 27 47 49 98 121 122
expresion_relacional : 59 203 203 204 204 205 206
extract_time         : 142 142 169 169
init                 : 0
insert_insrt         : 14
instruccion          : 2 3
instrucciones        : 1 2
lista_datos          : 33 34 35 38
lista_datos_enum     : 30 31
lista_drop_id        : 56 57
lista_parametros_lista : 33 36
lista_update         : 59 60
llave                : 114
parametro_update     : 60 61
returning_exp        : 19 21 23 24 26
show_databases_instr : 6
show_tables_instr    : 7
string_type          : 82 83 90 91 92 93 94 95
tipos_datos_columnas : 44 45
update_insrt         : 11
use_database_instr   : 9
usuariosDB           : 64

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (11) instruccion -> . update_insrt
    (12) instruccion -> . drop_insrt
    (13) instruccion -> . alterTable_insrt
    (14) instruccion -> . insert_insrt
    (15) instruccion -> . TIPO_ENUM_INSRT
    (16) instruccion -> . delete_insrt
    (74) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (75) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (76) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (77) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (78) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (79) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (80) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (81) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (86) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (87) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (88) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (89) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (103) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (104) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (72) show_databases_instr -> . SHOW DATABASES PTCOMA
    (73) show_tables_instr -> . SHOW TABLES PTCOMA
    (70) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (71) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (69) use_database_instr -> . USE ID PTCOMA
    (63) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (64) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (59) update_insrt -> . UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA
    (56) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (41) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (42) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (43) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (47) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (48) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (49) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (52) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA
    (33) insert_insrt -> . INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (34) insert_insrt -> . INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (35) insert_insrt -> . INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA
    (30) TIPO_ENUM_INSRT -> . CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA
    (17) delete_insrt -> . DELETE FROM ID PTCOMA
    (18) delete_insrt -> . DELETE FROM ONLY ID PTCOMA
    (19) delete_insrt -> . DELETE FROM ONLY ID RETURNING returning_exp PTCOMA
    (20) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA
    (21) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (22) delete_insrt -> . DELETE FROM ID WHERE expresion_logica PTCOMA
    (23) delete_insrt -> . DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (24) delete_insrt -> . DELETE FROM ID RETURNING returning_exp PTCOMA
    (25) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> . DELETE FROM ID USING ID WHERE expresion_logica PTCOMA

    CREATE          shift and go to state 17
    SHOW            shift and go to state 18
    DROP            shift and go to state 19
    USE             shift and go to state 20
    ALTER           shift and go to state 21
    UPDATE          shift and go to state 22
    INSERT          shift and go to state 23
    DELETE          shift and go to state 24

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10
    update_insrt                   shift and go to state 11
    drop_insrt                     shift and go to state 12
    alterTable_insrt               shift and go to state 13
    insert_insrt                   shift and go to state 14
    TIPO_ENUM_INSRT                shift and go to state 15
    delete_insrt                   shift and go to state 16

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (11) instruccion -> . update_insrt
    (12) instruccion -> . drop_insrt
    (13) instruccion -> . alterTable_insrt
    (14) instruccion -> . insert_insrt
    (15) instruccion -> . TIPO_ENUM_INSRT
    (16) instruccion -> . delete_insrt
    (74) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (75) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (76) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (77) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (78) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (79) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (80) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (81) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (86) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (87) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (88) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (89) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (103) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (104) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (72) show_databases_instr -> . SHOW DATABASES PTCOMA
    (73) show_tables_instr -> . SHOW TABLES PTCOMA
    (70) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (71) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (69) use_database_instr -> . USE ID PTCOMA
    (63) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (64) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (59) update_insrt -> . UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA
    (56) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (41) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (42) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (43) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (47) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (48) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (49) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (52) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA
    (33) insert_insrt -> . INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (34) insert_insrt -> . INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (35) insert_insrt -> . INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA
    (30) TIPO_ENUM_INSRT -> . CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA
    (17) delete_insrt -> . DELETE FROM ID PTCOMA
    (18) delete_insrt -> . DELETE FROM ONLY ID PTCOMA
    (19) delete_insrt -> . DELETE FROM ONLY ID RETURNING returning_exp PTCOMA
    (20) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA
    (21) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (22) delete_insrt -> . DELETE FROM ID WHERE expresion_logica PTCOMA
    (23) delete_insrt -> . DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (24) delete_insrt -> . DELETE FROM ID RETURNING returning_exp PTCOMA
    (25) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> . DELETE FROM ID USING ID WHERE expresion_logica PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 17
    SHOW            shift and go to state 18
    DROP            shift and go to state 19
    USE             shift and go to state 20
    ALTER           shift and go to state 21
    UPDATE          shift and go to state 22
    INSERT          shift and go to state 23
    DELETE          shift and go to state 24

    instruccion                    shift and go to state 25
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10
    update_insrt                   shift and go to state 11
    drop_insrt                     shift and go to state 12
    alterTable_insrt               shift and go to state 13
    insert_insrt                   shift and go to state 14
    TIPO_ENUM_INSRT                shift and go to state 15
    delete_insrt                   shift and go to state 16

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    USE             reduce using rule 3 (instrucciones -> instruccion .)
    ALTER           reduce using rule 3 (instrucciones -> instruccion .)
    UPDATE          reduce using rule 3 (instrucciones -> instruccion .)
    INSERT          reduce using rule 3 (instrucciones -> instruccion .)
    DELETE          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 4 (instruccion -> createDB_insrt .)
    USE             reduce using rule 4 (instruccion -> createDB_insrt .)
    ALTER           reduce using rule 4 (instruccion -> createDB_insrt .)
    UPDATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    INSERT          reduce using rule 4 (instruccion -> createDB_insrt .)
    DELETE          reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    USE             reduce using rule 5 (instruccion -> create_Table_isnrt .)
    ALTER           reduce using rule 5 (instruccion -> create_Table_isnrt .)
    UPDATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    INSERT          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DELETE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    DROP            reduce using rule 6 (instruccion -> show_databases_instr .)
    USE             reduce using rule 6 (instruccion -> show_databases_instr .)
    ALTER           reduce using rule 6 (instruccion -> show_databases_instr .)
    UPDATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    INSERT          reduce using rule 6 (instruccion -> show_databases_instr .)
    DELETE          reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (7) instruccion -> show_tables_instr .

    CREATE          reduce using rule 7 (instruccion -> show_tables_instr .)
    SHOW            reduce using rule 7 (instruccion -> show_tables_instr .)
    DROP            reduce using rule 7 (instruccion -> show_tables_instr .)
    USE             reduce using rule 7 (instruccion -> show_tables_instr .)
    ALTER           reduce using rule 7 (instruccion -> show_tables_instr .)
    UPDATE          reduce using rule 7 (instruccion -> show_tables_instr .)
    INSERT          reduce using rule 7 (instruccion -> show_tables_instr .)
    DELETE          reduce using rule 7 (instruccion -> show_tables_instr .)
    $end            reduce using rule 7 (instruccion -> show_tables_instr .)


state 8

    (8) instruccion -> drop_database_instr .

    CREATE          reduce using rule 8 (instruccion -> drop_database_instr .)
    SHOW            reduce using rule 8 (instruccion -> drop_database_instr .)
    DROP            reduce using rule 8 (instruccion -> drop_database_instr .)
    USE             reduce using rule 8 (instruccion -> drop_database_instr .)
    ALTER           reduce using rule 8 (instruccion -> drop_database_instr .)
    UPDATE          reduce using rule 8 (instruccion -> drop_database_instr .)
    INSERT          reduce using rule 8 (instruccion -> drop_database_instr .)
    DELETE          reduce using rule 8 (instruccion -> drop_database_instr .)
    $end            reduce using rule 8 (instruccion -> drop_database_instr .)


state 9

    (9) instruccion -> use_database_instr .

    CREATE          reduce using rule 9 (instruccion -> use_database_instr .)
    SHOW            reduce using rule 9 (instruccion -> use_database_instr .)
    DROP            reduce using rule 9 (instruccion -> use_database_instr .)
    USE             reduce using rule 9 (instruccion -> use_database_instr .)
    ALTER           reduce using rule 9 (instruccion -> use_database_instr .)
    UPDATE          reduce using rule 9 (instruccion -> use_database_instr .)
    INSERT          reduce using rule 9 (instruccion -> use_database_instr .)
    DELETE          reduce using rule 9 (instruccion -> use_database_instr .)
    $end            reduce using rule 9 (instruccion -> use_database_instr .)


state 10

    (10) instruccion -> alterDB_insrt .

    CREATE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    SHOW            reduce using rule 10 (instruccion -> alterDB_insrt .)
    DROP            reduce using rule 10 (instruccion -> alterDB_insrt .)
    USE             reduce using rule 10 (instruccion -> alterDB_insrt .)
    ALTER           reduce using rule 10 (instruccion -> alterDB_insrt .)
    UPDATE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    INSERT          reduce using rule 10 (instruccion -> alterDB_insrt .)
    DELETE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    $end            reduce using rule 10 (instruccion -> alterDB_insrt .)


state 11

    (11) instruccion -> update_insrt .

    CREATE          reduce using rule 11 (instruccion -> update_insrt .)
    SHOW            reduce using rule 11 (instruccion -> update_insrt .)
    DROP            reduce using rule 11 (instruccion -> update_insrt .)
    USE             reduce using rule 11 (instruccion -> update_insrt .)
    ALTER           reduce using rule 11 (instruccion -> update_insrt .)
    UPDATE          reduce using rule 11 (instruccion -> update_insrt .)
    INSERT          reduce using rule 11 (instruccion -> update_insrt .)
    DELETE          reduce using rule 11 (instruccion -> update_insrt .)
    $end            reduce using rule 11 (instruccion -> update_insrt .)


state 12

    (12) instruccion -> drop_insrt .

    CREATE          reduce using rule 12 (instruccion -> drop_insrt .)
    SHOW            reduce using rule 12 (instruccion -> drop_insrt .)
    DROP            reduce using rule 12 (instruccion -> drop_insrt .)
    USE             reduce using rule 12 (instruccion -> drop_insrt .)
    ALTER           reduce using rule 12 (instruccion -> drop_insrt .)
    UPDATE          reduce using rule 12 (instruccion -> drop_insrt .)
    INSERT          reduce using rule 12 (instruccion -> drop_insrt .)
    DELETE          reduce using rule 12 (instruccion -> drop_insrt .)
    $end            reduce using rule 12 (instruccion -> drop_insrt .)


state 13

    (13) instruccion -> alterTable_insrt .

    CREATE          reduce using rule 13 (instruccion -> alterTable_insrt .)
    SHOW            reduce using rule 13 (instruccion -> alterTable_insrt .)
    DROP            reduce using rule 13 (instruccion -> alterTable_insrt .)
    USE             reduce using rule 13 (instruccion -> alterTable_insrt .)
    ALTER           reduce using rule 13 (instruccion -> alterTable_insrt .)
    UPDATE          reduce using rule 13 (instruccion -> alterTable_insrt .)
    INSERT          reduce using rule 13 (instruccion -> alterTable_insrt .)
    DELETE          reduce using rule 13 (instruccion -> alterTable_insrt .)
    $end            reduce using rule 13 (instruccion -> alterTable_insrt .)


state 14

    (14) instruccion -> insert_insrt .

    CREATE          reduce using rule 14 (instruccion -> insert_insrt .)
    SHOW            reduce using rule 14 (instruccion -> insert_insrt .)
    DROP            reduce using rule 14 (instruccion -> insert_insrt .)
    USE             reduce using rule 14 (instruccion -> insert_insrt .)
    ALTER           reduce using rule 14 (instruccion -> insert_insrt .)
    UPDATE          reduce using rule 14 (instruccion -> insert_insrt .)
    INSERT          reduce using rule 14 (instruccion -> insert_insrt .)
    DELETE          reduce using rule 14 (instruccion -> insert_insrt .)
    $end            reduce using rule 14 (instruccion -> insert_insrt .)


state 15

    (15) instruccion -> TIPO_ENUM_INSRT .

    CREATE          reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    SHOW            reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    DROP            reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    USE             reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    ALTER           reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    UPDATE          reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    INSERT          reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    DELETE          reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)
    $end            reduce using rule 15 (instruccion -> TIPO_ENUM_INSRT .)


state 16

    (16) instruccion -> delete_insrt .

    CREATE          reduce using rule 16 (instruccion -> delete_insrt .)
    SHOW            reduce using rule 16 (instruccion -> delete_insrt .)
    DROP            reduce using rule 16 (instruccion -> delete_insrt .)
    USE             reduce using rule 16 (instruccion -> delete_insrt .)
    ALTER           reduce using rule 16 (instruccion -> delete_insrt .)
    UPDATE          reduce using rule 16 (instruccion -> delete_insrt .)
    INSERT          reduce using rule 16 (instruccion -> delete_insrt .)
    DELETE          reduce using rule 16 (instruccion -> delete_insrt .)
    $end            reduce using rule 16 (instruccion -> delete_insrt .)


state 17

    (74) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (75) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (76) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (77) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (78) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (79) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (80) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (81) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (86) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (87) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (88) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (89) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (103) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (104) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (30) TIPO_ENUM_INSRT -> CREATE . TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA

    DATABASE        shift and go to state 26
    OR              shift and go to state 27
    TABLE           shift and go to state 28
    TYPE            shift and go to state 29


state 18

    (72) show_databases_instr -> SHOW . DATABASES PTCOMA
    (73) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 30
    TABLES          shift and go to state 31


state 19

    (70) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (71) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (56) drop_insrt -> DROP . TABLE lista_drop_id PTCOMA

    DATABASE        shift and go to state 32
    TABLE           shift and go to state 33


state 20

    (69) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 34


state 21

    (63) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (64) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA
    (41) alterTable_insrt -> ALTER . TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (42) alterTable_insrt -> ALTER . TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (43) alterTable_insrt -> ALTER . TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (47) alterTable_insrt -> ALTER . TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (48) alterTable_insrt -> ALTER . TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (49) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (52) alterTable_insrt -> ALTER . TABLE ID alterTable_alter PTCOMA

    DATABASE        shift and go to state 35
    TABLE           shift and go to state 36


state 22

    (59) update_insrt -> UPDATE . ID SET lista_update WHERE expresion_relacional PTCOMA

    ID              shift and go to state 37


state 23

    (33) insert_insrt -> INSERT . INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (34) insert_insrt -> INSERT . INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (35) insert_insrt -> INSERT . INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA

    INTO            shift and go to state 38


state 24

    (17) delete_insrt -> DELETE . FROM ID PTCOMA
    (18) delete_insrt -> DELETE . FROM ONLY ID PTCOMA
    (19) delete_insrt -> DELETE . FROM ONLY ID RETURNING returning_exp PTCOMA
    (20) delete_insrt -> DELETE . FROM ID WHERE EXISTS expresion_logica PTCOMA
    (21) delete_insrt -> DELETE . FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (22) delete_insrt -> DELETE . FROM ID WHERE expresion_logica PTCOMA
    (23) delete_insrt -> DELETE . FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (24) delete_insrt -> DELETE . FROM ID RETURNING returning_exp PTCOMA
    (25) delete_insrt -> DELETE . FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> DELETE . FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> DELETE . FROM ID USING ID WHERE expresion_logica PTCOMA

    FROM            shift and go to state 39


state 25

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ALTER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UPDATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INSERT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DELETE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 26

    (74) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (76) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (78) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (80) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (86) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (88) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 40
    IF              shift and go to state 41


state 27

    (75) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (77) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (79) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (81) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (87) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (89) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 42


state 28

    (103) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (104) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 43


state 29

    (30) TIPO_ENUM_INSRT -> CREATE TYPE . ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA

    ID              shift and go to state 44


state 30

    (72) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 45


state 31

    (73) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 46


state 32

    (70) drop_database_instr -> DROP DATABASE . ID PTCOMA
    (71) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 47
    IF              shift and go to state 48


state 33

    (56) drop_insrt -> DROP TABLE . lista_drop_id PTCOMA
    (57) lista_drop_id -> . lista_drop_id COMA ID
    (58) lista_drop_id -> . ID

    ID              shift and go to state 50

    lista_drop_id                  shift and go to state 49

state 34

    (69) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 51


state 35

    (63) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (64) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 52


state 36

    (41) alterTable_insrt -> ALTER TABLE . ID DROP CONSTRAINT campos_c PTCOMA
    (42) alterTable_insrt -> ALTER TABLE . ID RENAME COLUMN ID TO ID PTCOMA
    (43) alterTable_insrt -> ALTER TABLE . ID ADD COLUMN campos_add_Column PTCOMA
    (47) alterTable_insrt -> ALTER TABLE . ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (48) alterTable_insrt -> ALTER TABLE . ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (49) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (52) alterTable_insrt -> ALTER TABLE . ID alterTable_alter PTCOMA

    ID              shift and go to state 53


state 37

    (59) update_insrt -> UPDATE ID . SET lista_update WHERE expresion_relacional PTCOMA

    SET             shift and go to state 54


state 38

    (33) insert_insrt -> INSERT INTO . ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (34) insert_insrt -> INSERT INTO . ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (35) insert_insrt -> INSERT INTO . ID VALUES PAR_A lista_datos PAR_C PTCOMA

    ID              shift and go to state 55


state 39

    (17) delete_insrt -> DELETE FROM . ID PTCOMA
    (18) delete_insrt -> DELETE FROM . ONLY ID PTCOMA
    (19) delete_insrt -> DELETE FROM . ONLY ID RETURNING returning_exp PTCOMA
    (20) delete_insrt -> DELETE FROM . ID WHERE EXISTS expresion_logica PTCOMA
    (21) delete_insrt -> DELETE FROM . ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (22) delete_insrt -> DELETE FROM . ID WHERE expresion_logica PTCOMA
    (23) delete_insrt -> DELETE FROM . ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (24) delete_insrt -> DELETE FROM . ID RETURNING returning_exp PTCOMA
    (25) delete_insrt -> DELETE FROM . ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> DELETE FROM . ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> DELETE FROM . ID USING ID WHERE expresion_logica PTCOMA

    ID              shift and go to state 56
    ONLY            shift and go to state 57


state 40

    (74) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (78) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (86) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (82) createDB_unParam -> . OWNER string_type
    (83) createDB_unParam -> . OWNER IGUAL string_type
    (84) createDB_unParam -> . MODE ENTERO
    (85) createDB_unParam -> . MODE IGUAL ENTERO
    (90) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (91) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (92) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (93) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (94) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (95) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (96) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (97) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 58
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 59
    createDB_dosParam              shift and go to state 60

state 41

    (76) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (80) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (88) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 63


state 42

    (75) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (77) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (79) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (81) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (87) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (89) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 64


state 43

    (103) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (104) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 65


state 44

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID . AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA

    AS              shift and go to state 66


state 45

    (72) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    UPDATE          reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    INSERT          reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DELETE          reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 72 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 46

    (73) show_tables_instr -> SHOW TABLES PTCOMA .

    CREATE          reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    UPDATE          reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    INSERT          reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DELETE          reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 73 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 47

    (70) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 67


state 48

    (71) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 68


state 49

    (56) drop_insrt -> DROP TABLE lista_drop_id . PTCOMA
    (57) lista_drop_id -> lista_drop_id . COMA ID

    PTCOMA          shift and go to state 69
    COMA            shift and go to state 70


state 50

    (58) lista_drop_id -> ID .

    PTCOMA          reduce using rule 58 (lista_drop_id -> ID .)
    COMA            reduce using rule 58 (lista_drop_id -> ID .)


state 51

    (69) use_database_instr -> USE ID PTCOMA .

    CREATE          reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    UPDATE          reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    INSERT          reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    DELETE          reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 69 (use_database_instr -> USE ID PTCOMA .)


state 52

    (63) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (64) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 71
    OWNER           shift and go to state 72


state 53

    (41) alterTable_insrt -> ALTER TABLE ID . DROP CONSTRAINT campos_c PTCOMA
    (42) alterTable_insrt -> ALTER TABLE ID . RENAME COLUMN ID TO ID PTCOMA
    (43) alterTable_insrt -> ALTER TABLE ID . ADD COLUMN campos_add_Column PTCOMA
    (47) alterTable_insrt -> ALTER TABLE ID . ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (48) alterTable_insrt -> ALTER TABLE ID . ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (49) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (52) alterTable_insrt -> ALTER TABLE ID . alterTable_alter PTCOMA
    (53) alterTable_alter -> . alterTable_alter COMA Table_alter
    (54) alterTable_alter -> . Table_alter
    (40) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO
    (55) Table_alter -> . ALTER COLUMN ID SET NOT NULL

    DROP            shift and go to state 74
    RENAME          shift and go to state 75
    ADD             shift and go to state 76
    ALTER           shift and go to state 73

    alterTable_alter               shift and go to state 77
    Table_alter                    shift and go to state 78

state 54

    (59) update_insrt -> UPDATE ID SET . lista_update WHERE expresion_relacional PTCOMA
    (60) lista_update -> . lista_update COMA parametro_update
    (61) lista_update -> . parametro_update
    (62) parametro_update -> . ID IGUAL expresion

    ID              shift and go to state 79

    lista_update                   shift and go to state 80
    parametro_update               shift and go to state 81

state 55

    (33) insert_insrt -> INSERT INTO ID . PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (34) insert_insrt -> INSERT INTO ID . PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (35) insert_insrt -> INSERT INTO ID . VALUES PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 82
    VALUES          shift and go to state 83


state 56

    (17) delete_insrt -> DELETE FROM ID . PTCOMA
    (20) delete_insrt -> DELETE FROM ID . WHERE EXISTS expresion_logica PTCOMA
    (21) delete_insrt -> DELETE FROM ID . WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (22) delete_insrt -> DELETE FROM ID . WHERE expresion_logica PTCOMA
    (23) delete_insrt -> DELETE FROM ID . WHERE expresion_logica RETURNING returning_exp PTCOMA
    (24) delete_insrt -> DELETE FROM ID . RETURNING returning_exp PTCOMA
    (25) delete_insrt -> DELETE FROM ID . USING ID WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> DELETE FROM ID . USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> DELETE FROM ID . USING ID WHERE expresion_logica PTCOMA

    PTCOMA          shift and go to state 84
    WHERE           shift and go to state 85
    RETURNING       shift and go to state 86
    USING           shift and go to state 87


state 57

    (18) delete_insrt -> DELETE FROM ONLY . ID PTCOMA
    (19) delete_insrt -> DELETE FROM ONLY . ID RETURNING returning_exp PTCOMA

    ID              shift and go to state 88


state 58

    (74) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    INSERT          reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DELETE          reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 74 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 59

    (78) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 89


state 60

    (86) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 90


state 61

    (82) createDB_unParam -> OWNER . string_type
    (83) createDB_unParam -> OWNER . IGUAL string_type
    (90) createDB_dosParam -> OWNER . string_type MODE ENTERO
    (91) createDB_dosParam -> OWNER . string_type MODE IGUAL ENTERO
    (92) createDB_dosParam -> OWNER . IGUAL string_type MODE ENTERO
    (93) createDB_dosParam -> OWNER . IGUAL string_type MODE IGUAL ENTERO
    (192) string_type -> . CADENA
    (193) string_type -> . ID

    IGUAL           shift and go to state 92
    CADENA          shift and go to state 93
    ID              shift and go to state 94

    string_type                    shift and go to state 91

state 62

    (84) createDB_unParam -> MODE . ENTERO
    (85) createDB_unParam -> MODE . IGUAL ENTERO
    (94) createDB_dosParam -> MODE . ENTERO OWNER string_type
    (95) createDB_dosParam -> MODE . ENTERO OWNER IGUAL string_type
    (96) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (97) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 95
    IGUAL           shift and go to state 96


state 63

    (76) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (80) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (88) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 97


state 64

    (75) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (77) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (79) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (81) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (87) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (89) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 98
    IF              shift and go to state 99


state 65

    (103) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (105) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (106) cuerpo_createTable_lista -> . cuerpo_createTable
    (107) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (108) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (128) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (129) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (130) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (131) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 100
    PRIMARY         shift and go to state 103
    FOREING         shift and go to state 104
    UNIQUE          shift and go to state 105
    CONSTRAINT      shift and go to state 106

    cuerpo_createTable_lista       shift and go to state 101
    cuerpo_createTable             shift and go to state 102

state 66

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID AS . ENUM PAR_A lista_datos_enum PAR_C PTCOMA

    ENUM            shift and go to state 107


state 67

    (70) drop_database_instr -> DROP DATABASE ID PTCOMA .

    CREATE          reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    INSERT          reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DELETE          reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 70 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 68

    (71) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 108


state 69

    (56) drop_insrt -> DROP TABLE lista_drop_id PTCOMA .

    CREATE          reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SHOW            reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DROP            reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    USE             reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    ALTER           reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    UPDATE          reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    INSERT          reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DELETE          reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    $end            reduce using rule 56 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)


state 70

    (57) lista_drop_id -> lista_drop_id COMA . ID

    ID              shift and go to state 109


state 71

    (63) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 110


state 72

    (64) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 111


state 73

    (40) Table_alter -> ALTER . COLUMN ID TYPE TIPO_DATO
    (55) Table_alter -> ALTER . COLUMN ID SET NOT NULL

    COLUMN          shift and go to state 112


state 74

    (41) alterTable_insrt -> ALTER TABLE ID DROP . CONSTRAINT campos_c PTCOMA

    CONSTRAINT      shift and go to state 113


state 75

    (42) alterTable_insrt -> ALTER TABLE ID RENAME . COLUMN ID TO ID PTCOMA

    COLUMN          shift and go to state 114


state 76

    (43) alterTable_insrt -> ALTER TABLE ID ADD . COLUMN campos_add_Column PTCOMA
    (47) alterTable_insrt -> ALTER TABLE ID ADD . CHECK PAR_A expresion_logica PAR_C PTCOMA
    (48) alterTable_insrt -> ALTER TABLE ID ADD . FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (49) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    COLUMN          shift and go to state 115
    CHECK           shift and go to state 116
    FOREIGN         shift and go to state 117
    CONSTRAINT      shift and go to state 118


state 77

    (52) alterTable_insrt -> ALTER TABLE ID alterTable_alter . PTCOMA
    (53) alterTable_alter -> alterTable_alter . COMA Table_alter

    PTCOMA          shift and go to state 119
    COMA            shift and go to state 120


state 78

    (54) alterTable_alter -> Table_alter .

    PTCOMA          reduce using rule 54 (alterTable_alter -> Table_alter .)
    COMA            reduce using rule 54 (alterTable_alter -> Table_alter .)


state 79

    (62) parametro_update -> ID . IGUAL expresion

    IGUAL           shift and go to state 121


state 80

    (59) update_insrt -> UPDATE ID SET lista_update . WHERE expresion_relacional PTCOMA
    (60) lista_update -> lista_update . COMA parametro_update

    WHERE           shift and go to state 122
    COMA            shift and go to state 123


state 81

    (61) lista_update -> parametro_update .

    WHERE           reduce using rule 61 (lista_update -> parametro_update .)
    COMA            reduce using rule 61 (lista_update -> parametro_update .)


state 82

    (33) insert_insrt -> INSERT INTO ID PAR_A . lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (34) insert_insrt -> INSERT INTO ID PAR_A . PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (36) lista_parametros_lista -> . lista_parametros_lista COMA ID
    (37) lista_parametros_lista -> . ID

    PAR_C           shift and go to state 126
    ID              shift and go to state 124

    lista_parametros_lista         shift and go to state 125

state 83

    (35) insert_insrt -> INSERT INTO ID VALUES . PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 127


state 84

    (17) delete_insrt -> DELETE FROM ID PTCOMA .

    CREATE          reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    SHOW            reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    DROP            reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    USE             reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    ALTER           reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    UPDATE          reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    INSERT          reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    DELETE          reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)
    $end            reduce using rule 17 (delete_insrt -> DELETE FROM ID PTCOMA .)


state 85

    (20) delete_insrt -> DELETE FROM ID WHERE . EXISTS expresion_logica PTCOMA
    (21) delete_insrt -> DELETE FROM ID WHERE . EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (22) delete_insrt -> DELETE FROM ID WHERE . expresion_logica PTCOMA
    (23) delete_insrt -> DELETE FROM ID WHERE . expresion_logica RETURNING returning_exp PTCOMA
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    EXISTS          shift and go to state 129
    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 130
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 86

    (24) delete_insrt -> DELETE FROM ID RETURNING . returning_exp PTCOMA
    (28) returning_exp -> . ASTERISCO
    (29) returning_exp -> . campos_c
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ASTERISCO       shift and go to state 141
    ID              shift and go to state 139

    returning_exp                  shift and go to state 140
    campos_c                       shift and go to state 142

state 87

    (25) delete_insrt -> DELETE FROM ID USING . ID WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> DELETE FROM ID USING . ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> DELETE FROM ID USING . ID WHERE expresion_logica PTCOMA

    ID              shift and go to state 143


state 88

    (18) delete_insrt -> DELETE FROM ONLY ID . PTCOMA
    (19) delete_insrt -> DELETE FROM ONLY ID . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 144
    RETURNING       shift and go to state 145


state 89

    (78) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 78 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 90

    (86) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 86 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 91

    (82) createDB_unParam -> OWNER string_type .
    (90) createDB_dosParam -> OWNER string_type . MODE ENTERO
    (91) createDB_dosParam -> OWNER string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 82 (createDB_unParam -> OWNER string_type .)
    MODE            shift and go to state 146


state 92

    (83) createDB_unParam -> OWNER IGUAL . string_type
    (92) createDB_dosParam -> OWNER IGUAL . string_type MODE ENTERO
    (93) createDB_dosParam -> OWNER IGUAL . string_type MODE IGUAL ENTERO
    (192) string_type -> . CADENA
    (193) string_type -> . ID

    CADENA          shift and go to state 93
    ID              shift and go to state 94

    string_type                    shift and go to state 147

state 93

    (192) string_type -> CADENA .

    MODE            reduce using rule 192 (string_type -> CADENA .)
    PTCOMA          reduce using rule 192 (string_type -> CADENA .)


state 94

    (193) string_type -> ID .

    MODE            reduce using rule 193 (string_type -> ID .)
    PTCOMA          reduce using rule 193 (string_type -> ID .)


state 95

    (84) createDB_unParam -> MODE ENTERO .
    (94) createDB_dosParam -> MODE ENTERO . OWNER string_type
    (95) createDB_dosParam -> MODE ENTERO . OWNER IGUAL string_type

    PTCOMA          reduce using rule 84 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 148


state 96

    (85) createDB_unParam -> MODE IGUAL . ENTERO
    (96) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (97) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 149


state 97

    (76) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (80) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (88) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 150


state 98

    (75) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (79) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (87) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (82) createDB_unParam -> . OWNER string_type
    (83) createDB_unParam -> . OWNER IGUAL string_type
    (84) createDB_unParam -> . MODE ENTERO
    (85) createDB_unParam -> . MODE IGUAL ENTERO
    (90) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (91) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (92) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (93) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (94) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (95) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (96) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (97) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 151
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 152
    createDB_dosParam              shift and go to state 153

state 99

    (77) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (81) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (89) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 154


state 100

    (107) cuerpo_createTable -> ID . TIPO_DATO_DEF
    (108) cuerpo_createTable -> ID . TIPO_DATO_DEF createTable_options
    (159) TIPO_DATO_DEF -> . TEXT
    (160) TIPO_DATO_DEF -> . FLOAT
    (161) TIPO_DATO_DEF -> . INTEGER
    (162) TIPO_DATO_DEF -> . SMALLINT
    (163) TIPO_DATO_DEF -> . MONEY
    (164) TIPO_DATO_DEF -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (165) TIPO_DATO_DEF -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (166) TIPO_DATO_DEF -> . BIGINT
    (167) TIPO_DATO_DEF -> . REAL
    (168) TIPO_DATO_DEF -> . DOUBLE PRECISION
    (169) TIPO_DATO_DEF -> . INTERVAL extract_time TO extract_time
    (170) TIPO_DATO_DEF -> . INTERVAL
    (171) TIPO_DATO_DEF -> . TIME
    (172) TIPO_DATO_DEF -> . TIMESTAMP
    (173) TIPO_DATO_DEF -> . DATE
    (174) TIPO_DATO_DEF -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (175) TIPO_DATO_DEF -> . VARCHAR PAR_A ENTERO PAR_C
    (176) TIPO_DATO_DEF -> . CHAR PAR_A ENTERO PAR_C
    (177) TIPO_DATO_DEF -> . CHARACTER PAR_A ENTERO PAR_C
    (178) TIPO_DATO_DEF -> . CHAR PAR_A PAR_C
    (179) TIPO_DATO_DEF -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 156
    FLOAT           shift and go to state 157
    INTEGER         shift and go to state 158
    SMALLINT        shift and go to state 159
    MONEY           shift and go to state 160
    DECIMAL         shift and go to state 161
    NUMERIC         shift and go to state 162
    BIGINT          shift and go to state 163
    REAL            shift and go to state 164
    DOUBLE          shift and go to state 165
    INTERVAL        shift and go to state 166
    TIME            shift and go to state 167
    TIMESTAMP       shift and go to state 168
    DATE            shift and go to state 169
    CHARACTER       shift and go to state 170
    VARCHAR         shift and go to state 171
    CHAR            shift and go to state 172

    TIPO_DATO_DEF                  shift and go to state 155

state 101

    (103) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (105) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 173
    COMA            shift and go to state 174


state 102

    (106) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 106 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 106 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 103

    (128) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 175


state 104

    (129) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 176


state 105

    (130) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 177


state 106

    (131) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 178


state 107

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM . PAR_A lista_datos_enum PAR_C PTCOMA

    PAR_A           shift and go to state 179


state 108

    (71) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 180


state 109

    (57) lista_drop_id -> lista_drop_id COMA ID .

    PTCOMA          reduce using rule 57 (lista_drop_id -> lista_drop_id COMA ID .)
    COMA            reduce using rule 57 (lista_drop_id -> lista_drop_id COMA ID .)


state 110

    (63) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 181


state 111

    (64) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (65) usuariosDB -> . ID
    (66) usuariosDB -> . CURRENT_USER
    (67) usuariosDB -> . SESSION_USER
    (68) usuariosDB -> . CADENA

    ID              shift and go to state 182
    CURRENT_USER    shift and go to state 184
    SESSION_USER    shift and go to state 185
    CADENA          shift and go to state 186

    usuariosDB                     shift and go to state 183

state 112

    (40) Table_alter -> ALTER COLUMN . ID TYPE TIPO_DATO
    (55) Table_alter -> ALTER COLUMN . ID SET NOT NULL

    ID              shift and go to state 187


state 113

    (41) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT . campos_c PTCOMA
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 188

state 114

    (42) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN . ID TO ID PTCOMA

    ID              shift and go to state 189


state 115

    (43) alterTable_insrt -> ALTER TABLE ID ADD COLUMN . campos_add_Column PTCOMA
    (44) campos_add_Column -> . campos_add_Column COMA tipos_datos_columnas
    (45) campos_add_Column -> . tipos_datos_columnas
    (46) tipos_datos_columnas -> . ID TIPO_DATO

    ID              shift and go to state 190

    campos_add_Column              shift and go to state 191
    tipos_datos_columnas           shift and go to state 192

state 116

    (47) alterTable_insrt -> ALTER TABLE ID ADD CHECK . PAR_A expresion_logica PAR_C PTCOMA

    PAR_A           shift and go to state 193


state 117

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN . KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    KEY             shift and go to state 194


state 118

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    ID              shift and go to state 195


state 119

    (52) alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .

    CREATE          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    SHOW            reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    DROP            reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    USE             reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    ALTER           reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    UPDATE          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    INSERT          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    DELETE          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    $end            reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)


state 120

    (53) alterTable_alter -> alterTable_alter COMA . Table_alter
    (40) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO
    (55) Table_alter -> . ALTER COLUMN ID SET NOT NULL

    ALTER           shift and go to state 73

    Table_alter                    shift and go to state 196

state 121

    (62) parametro_update -> ID IGUAL . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 197

state 122

    (59) update_insrt -> UPDATE ID SET lista_update WHERE . expresion_relacional PTCOMA
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_relacional           shift and go to state 198
    expresion                      shift and go to state 133

state 123

    (60) lista_update -> lista_update COMA . parametro_update
    (62) parametro_update -> . ID IGUAL expresion

    ID              shift and go to state 79

    parametro_update               shift and go to state 199

state 124

    (37) lista_parametros_lista -> ID .

    PAR_C           reduce using rule 37 (lista_parametros_lista -> ID .)
    COMA            reduce using rule 37 (lista_parametros_lista -> ID .)


state 125

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista . PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (36) lista_parametros_lista -> lista_parametros_lista . COMA ID

    PAR_C           shift and go to state 200
    COMA            shift and go to state 201


state 126

    (34) insert_insrt -> INSERT INTO ID PAR_A PAR_C . VALUES PAR_A lista_datos PAR_C PTCOMA

    VALUES          shift and go to state 202


state 127

    (35) insert_insrt -> INSERT INTO ID VALUES PAR_A . lista_datos PAR_C PTCOMA
    (38) lista_datos -> . lista_datos COMA expresion
    (39) lista_datos -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    lista_datos                    shift and go to state 203
    expresion                      shift and go to state 204

state 128

    (184) expresion -> ID .
    (185) expresion -> ID . PUNTO ID

    MAYQUE          reduce using rule 184 (expresion -> ID .)
    MENQUE          reduce using rule 184 (expresion -> ID .)
    MAYIGQUE        reduce using rule 184 (expresion -> ID .)
    MENIGQUE        reduce using rule 184 (expresion -> ID .)
    DOBLEIG         reduce using rule 184 (expresion -> ID .)
    IGUAL           reduce using rule 184 (expresion -> ID .)
    NOIG            reduce using rule 184 (expresion -> ID .)
    NOIGUAL         reduce using rule 184 (expresion -> ID .)
    SUMA            reduce using rule 184 (expresion -> ID .)
    RESTA           reduce using rule 184 (expresion -> ID .)
    DIVISION        reduce using rule 184 (expresion -> ID .)
    ASTERISCO       reduce using rule 184 (expresion -> ID .)
    AND             reduce using rule 184 (expresion -> ID .)
    OR              reduce using rule 184 (expresion -> ID .)
    PTCOMA          reduce using rule 184 (expresion -> ID .)
    RETURNING       reduce using rule 184 (expresion -> ID .)
    WHERE           reduce using rule 184 (expresion -> ID .)
    COMA            reduce using rule 184 (expresion -> ID .)
    PAR_C           reduce using rule 184 (expresion -> ID .)
    PUNTO           shift and go to state 205


state 129

    (20) delete_insrt -> DELETE FROM ID WHERE EXISTS . expresion_logica PTCOMA
    (21) delete_insrt -> DELETE FROM ID WHERE EXISTS . expresion_logica RETURNING returning_exp PTCOMA
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 206
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 130

    (22) delete_insrt -> DELETE FROM ID WHERE expresion_logica . PTCOMA
    (23) delete_insrt -> DELETE FROM ID WHERE expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 207
    RETURNING       shift and go to state 208


state 131

    (203) expresion_logica -> expresion_relacional . AND expresion_relacional
    (204) expresion_logica -> expresion_relacional . OR expresion_relacional
    (206) expresion_logica -> expresion_relacional .

    AND             shift and go to state 209
    OR              shift and go to state 210
    PTCOMA          reduce using rule 206 (expresion_logica -> expresion_relacional .)
    RETURNING       reduce using rule 206 (expresion_logica -> expresion_relacional .)
    PAR_C           reduce using rule 206 (expresion_logica -> expresion_relacional .)


state 132

    (205) expresion_logica -> NOT . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_relacional           shift and go to state 211
    expresion                      shift and go to state 133

state 133

    (194) expresion_relacional -> expresion . MAYQUE expresion
    (195) expresion_relacional -> expresion . MENQUE expresion
    (196) expresion_relacional -> expresion . MAYIGQUE expresion
    (197) expresion_relacional -> expresion . MENIGQUE expresion
    (198) expresion_relacional -> expresion . DOBLEIG expresion
    (199) expresion_relacional -> expresion . IGUAL expresion
    (200) expresion_relacional -> expresion . NOIG expresion
    (201) expresion_relacional -> expresion . NOIGUAL expresion
    (202) expresion_relacional -> expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 212
    MENQUE          shift and go to state 213
    MAYIGQUE        shift and go to state 214
    MENIGQUE        shift and go to state 215
    DOBLEIG         shift and go to state 216
    IGUAL           shift and go to state 217
    NOIG            shift and go to state 218
    NOIGUAL         shift and go to state 219
    AND             reduce using rule 202 (expresion_relacional -> expresion .)
    OR              reduce using rule 202 (expresion_relacional -> expresion .)
    PTCOMA          reduce using rule 202 (expresion_relacional -> expresion .)
    RETURNING       reduce using rule 202 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 202 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 134

    (181) expresion -> CADENA .

    MAYQUE          reduce using rule 181 (expresion -> CADENA .)
    MENQUE          reduce using rule 181 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 181 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 181 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 181 (expresion -> CADENA .)
    IGUAL           reduce using rule 181 (expresion -> CADENA .)
    NOIG            reduce using rule 181 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 181 (expresion -> CADENA .)
    SUMA            reduce using rule 181 (expresion -> CADENA .)
    RESTA           reduce using rule 181 (expresion -> CADENA .)
    DIVISION        reduce using rule 181 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 181 (expresion -> CADENA .)
    AND             reduce using rule 181 (expresion -> CADENA .)
    OR              reduce using rule 181 (expresion -> CADENA .)
    PTCOMA          reduce using rule 181 (expresion -> CADENA .)
    RETURNING       reduce using rule 181 (expresion -> CADENA .)
    WHERE           reduce using rule 181 (expresion -> CADENA .)
    COMA            reduce using rule 181 (expresion -> CADENA .)
    PAR_C           reduce using rule 181 (expresion -> CADENA .)


state 135

    (182) expresion -> ENTERO .

    MAYQUE          reduce using rule 182 (expresion -> ENTERO .)
    MENQUE          reduce using rule 182 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 182 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 182 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 182 (expresion -> ENTERO .)
    IGUAL           reduce using rule 182 (expresion -> ENTERO .)
    NOIG            reduce using rule 182 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 182 (expresion -> ENTERO .)
    SUMA            reduce using rule 182 (expresion -> ENTERO .)
    RESTA           reduce using rule 182 (expresion -> ENTERO .)
    DIVISION        reduce using rule 182 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 182 (expresion -> ENTERO .)
    AND             reduce using rule 182 (expresion -> ENTERO .)
    OR              reduce using rule 182 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 182 (expresion -> ENTERO .)
    RETURNING       reduce using rule 182 (expresion -> ENTERO .)
    WHERE           reduce using rule 182 (expresion -> ENTERO .)
    COMA            reduce using rule 182 (expresion -> ENTERO .)
    PAR_C           reduce using rule 182 (expresion -> ENTERO .)


state 136

    (183) expresion -> FLOTANTE .

    MAYQUE          reduce using rule 183 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 183 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 183 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 183 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 183 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 183 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 183 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 183 (expresion -> FLOTANTE .)
    SUMA            reduce using rule 183 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 183 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 183 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 183 (expresion -> FLOTANTE .)
    AND             reduce using rule 183 (expresion -> FLOTANTE .)
    OR              reduce using rule 183 (expresion -> FLOTANTE .)
    PTCOMA          reduce using rule 183 (expresion -> FLOTANTE .)
    RETURNING       reduce using rule 183 (expresion -> FLOTANTE .)
    WHERE           reduce using rule 183 (expresion -> FLOTANTE .)
    COMA            reduce using rule 183 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 183 (expresion -> FLOTANTE .)


state 137

    (190) expresion -> TRUE .

    MAYQUE          reduce using rule 190 (expresion -> TRUE .)
    MENQUE          reduce using rule 190 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 190 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 190 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 190 (expresion -> TRUE .)
    IGUAL           reduce using rule 190 (expresion -> TRUE .)
    NOIG            reduce using rule 190 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 190 (expresion -> TRUE .)
    SUMA            reduce using rule 190 (expresion -> TRUE .)
    RESTA           reduce using rule 190 (expresion -> TRUE .)
    DIVISION        reduce using rule 190 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 190 (expresion -> TRUE .)
    AND             reduce using rule 190 (expresion -> TRUE .)
    OR              reduce using rule 190 (expresion -> TRUE .)
    PTCOMA          reduce using rule 190 (expresion -> TRUE .)
    RETURNING       reduce using rule 190 (expresion -> TRUE .)
    WHERE           reduce using rule 190 (expresion -> TRUE .)
    COMA            reduce using rule 190 (expresion -> TRUE .)
    PAR_C           reduce using rule 190 (expresion -> TRUE .)


state 138

    (191) expresion -> FALSE .

    MAYQUE          reduce using rule 191 (expresion -> FALSE .)
    MENQUE          reduce using rule 191 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 191 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 191 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 191 (expresion -> FALSE .)
    IGUAL           reduce using rule 191 (expresion -> FALSE .)
    NOIG            reduce using rule 191 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 191 (expresion -> FALSE .)
    SUMA            reduce using rule 191 (expresion -> FALSE .)
    RESTA           reduce using rule 191 (expresion -> FALSE .)
    DIVISION        reduce using rule 191 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 191 (expresion -> FALSE .)
    AND             reduce using rule 191 (expresion -> FALSE .)
    OR              reduce using rule 191 (expresion -> FALSE .)
    PTCOMA          reduce using rule 191 (expresion -> FALSE .)
    RETURNING       reduce using rule 191 (expresion -> FALSE .)
    WHERE           reduce using rule 191 (expresion -> FALSE .)
    COMA            reduce using rule 191 (expresion -> FALSE .)
    PAR_C           reduce using rule 191 (expresion -> FALSE .)


state 139

    (102) campos_c -> ID .

    COMA            reduce using rule 102 (campos_c -> ID .)
    PTCOMA          reduce using rule 102 (campos_c -> ID .)
    PAR_C           reduce using rule 102 (campos_c -> ID .)


state 140

    (24) delete_insrt -> DELETE FROM ID RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 224


state 141

    (28) returning_exp -> ASTERISCO .

    PTCOMA          reduce using rule 28 (returning_exp -> ASTERISCO .)


state 142

    (29) returning_exp -> campos_c .
    (101) campos_c -> campos_c . COMA ID

    PTCOMA          reduce using rule 29 (returning_exp -> campos_c .)
    COMA            shift and go to state 225


state 143

    (25) delete_insrt -> DELETE FROM ID USING ID . WHERE EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> DELETE FROM ID USING ID . WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> DELETE FROM ID USING ID . WHERE expresion_logica PTCOMA

    WHERE           shift and go to state 226


state 144

    (18) delete_insrt -> DELETE FROM ONLY ID PTCOMA .

    CREATE          reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    SHOW            reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    DROP            reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    USE             reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    ALTER           reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    UPDATE          reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    INSERT          reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    DELETE          reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    $end            reduce using rule 18 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)


state 145

    (19) delete_insrt -> DELETE FROM ONLY ID RETURNING . returning_exp PTCOMA
    (28) returning_exp -> . ASTERISCO
    (29) returning_exp -> . campos_c
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ASTERISCO       shift and go to state 141
    ID              shift and go to state 139

    returning_exp                  shift and go to state 227
    campos_c                       shift and go to state 142

state 146

    (90) createDB_dosParam -> OWNER string_type MODE . ENTERO
    (91) createDB_dosParam -> OWNER string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 228
    IGUAL           shift and go to state 229


state 147

    (83) createDB_unParam -> OWNER IGUAL string_type .
    (92) createDB_dosParam -> OWNER IGUAL string_type . MODE ENTERO
    (93) createDB_dosParam -> OWNER IGUAL string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 83 (createDB_unParam -> OWNER IGUAL string_type .)
    MODE            shift and go to state 230


state 148

    (94) createDB_dosParam -> MODE ENTERO OWNER . string_type
    (95) createDB_dosParam -> MODE ENTERO OWNER . IGUAL string_type
    (192) string_type -> . CADENA
    (193) string_type -> . ID

    IGUAL           shift and go to state 232
    CADENA          shift and go to state 93
    ID              shift and go to state 94

    string_type                    shift and go to state 231

state 149

    (85) createDB_unParam -> MODE IGUAL ENTERO .
    (96) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (97) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 85 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 233


state 150

    (76) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (80) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (88) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (82) createDB_unParam -> . OWNER string_type
    (83) createDB_unParam -> . OWNER IGUAL string_type
    (84) createDB_unParam -> . MODE ENTERO
    (85) createDB_unParam -> . MODE IGUAL ENTERO
    (90) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (91) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (92) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (93) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (94) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (95) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (96) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (97) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 234
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 235
    createDB_dosParam              shift and go to state 236

state 151

    (75) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    INSERT          reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DELETE          reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 75 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 152

    (79) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 237


state 153

    (87) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 238


state 154

    (77) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (81) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (89) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 239


state 155

    (107) cuerpo_createTable -> ID TIPO_DATO_DEF .
    (108) cuerpo_createTable -> ID TIPO_DATO_DEF . createTable_options
    (109) createTable_options -> . createTable_options cT_options
    (110) createTable_options -> . cT_options
    (111) cT_options -> . N_null
    (112) cT_options -> . C_unique
    (113) cT_options -> . C_check
    (114) cT_options -> . llave
    (115) cT_options -> . O_DEFAULT
    (117) N_null -> . NULL
    (118) N_null -> . NOT NULL
    (119) C_unique -> . UNIQUE
    (120) C_unique -> . CONSTRAINT ID UNIQUE
    (121) C_check -> . CHECK PAR_A expresion_logica PAR_C
    (122) C_check -> . CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C
    (123) llave -> . PRIMARY KEY
    (124) llave -> . FOREIGN KEY
    (116) O_DEFAULT -> . DEFAULT expresion_dato_default

    PAR_C           reduce using rule 107 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    COMA            reduce using rule 107 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    NULL            shift and go to state 247
    NOT             shift and go to state 248
    UNIQUE          shift and go to state 249
    CONSTRAINT      shift and go to state 250
    CHECK           shift and go to state 251
    PRIMARY         shift and go to state 252
    FOREIGN         shift and go to state 253
    DEFAULT         shift and go to state 254

    createTable_options            shift and go to state 240
    cT_options                     shift and go to state 241
    N_null                         shift and go to state 242
    C_unique                       shift and go to state 243
    C_check                        shift and go to state 244
    llave                          shift and go to state 245
    O_DEFAULT                      shift and go to state 246

state 156

    (159) TIPO_DATO_DEF -> TEXT .

    NULL            reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    NOT             reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    UNIQUE          reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    CONSTRAINT      reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    CHECK           reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    PRIMARY         reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    FOREIGN         reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    DEFAULT         reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    PAR_C           reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)
    COMA            reduce using rule 159 (TIPO_DATO_DEF -> TEXT .)


state 157

    (160) TIPO_DATO_DEF -> FLOAT .

    NULL            reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    NOT             reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    UNIQUE          reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    CONSTRAINT      reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    CHECK           reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    PRIMARY         reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    FOREIGN         reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    DEFAULT         reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    PAR_C           reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)
    COMA            reduce using rule 160 (TIPO_DATO_DEF -> FLOAT .)


state 158

    (161) TIPO_DATO_DEF -> INTEGER .

    NULL            reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    NOT             reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    UNIQUE          reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    CONSTRAINT      reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    CHECK           reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    PRIMARY         reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    FOREIGN         reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    DEFAULT         reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    PAR_C           reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)
    COMA            reduce using rule 161 (TIPO_DATO_DEF -> INTEGER .)


state 159

    (162) TIPO_DATO_DEF -> SMALLINT .

    NULL            reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    NOT             reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    UNIQUE          reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    CONSTRAINT      reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    CHECK           reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    PRIMARY         reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    FOREIGN         reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    DEFAULT         reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    PAR_C           reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)
    COMA            reduce using rule 162 (TIPO_DATO_DEF -> SMALLINT .)


state 160

    (163) TIPO_DATO_DEF -> MONEY .

    NULL            reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    NOT             reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    UNIQUE          reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    CONSTRAINT      reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    CHECK           reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    PRIMARY         reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    FOREIGN         reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    DEFAULT         reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    PAR_C           reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)
    COMA            reduce using rule 163 (TIPO_DATO_DEF -> MONEY .)


state 161

    (164) TIPO_DATO_DEF -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 255


state 162

    (165) TIPO_DATO_DEF -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 256


state 163

    (166) TIPO_DATO_DEF -> BIGINT .

    NULL            reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    NOT             reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    UNIQUE          reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    CONSTRAINT      reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    CHECK           reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    PRIMARY         reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    FOREIGN         reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    DEFAULT         reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    PAR_C           reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)
    COMA            reduce using rule 166 (TIPO_DATO_DEF -> BIGINT .)


state 164

    (167) TIPO_DATO_DEF -> REAL .

    NULL            reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    NOT             reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    UNIQUE          reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    CONSTRAINT      reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    CHECK           reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    PRIMARY         reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    FOREIGN         reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    DEFAULT         reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    PAR_C           reduce using rule 167 (TIPO_DATO_DEF -> REAL .)
    COMA            reduce using rule 167 (TIPO_DATO_DEF -> REAL .)


state 165

    (168) TIPO_DATO_DEF -> DOUBLE . PRECISION

    PRECISION       shift and go to state 257


state 166

    (169) TIPO_DATO_DEF -> INTERVAL . extract_time TO extract_time
    (170) TIPO_DATO_DEF -> INTERVAL .
    (153) extract_time -> . YEAR
    (154) extract_time -> . DAY
    (155) extract_time -> . MONTH
    (156) extract_time -> . HOUR
    (157) extract_time -> . MINUTE
    (158) extract_time -> . SECOND

    NULL            reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    NOT             reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    UNIQUE          reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    CONSTRAINT      reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    CHECK           reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    PRIMARY         reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    FOREIGN         reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    DEFAULT         reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    PAR_C           reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    COMA            reduce using rule 170 (TIPO_DATO_DEF -> INTERVAL .)
    YEAR            shift and go to state 259
    DAY             shift and go to state 260
    MONTH           shift and go to state 261
    HOUR            shift and go to state 262
    MINUTE          shift and go to state 263
    SECOND          shift and go to state 264

    extract_time                   shift and go to state 258

state 167

    (171) TIPO_DATO_DEF -> TIME .

    NULL            reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    NOT             reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    UNIQUE          reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    CONSTRAINT      reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    CHECK           reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    PRIMARY         reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    FOREIGN         reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    DEFAULT         reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    PAR_C           reduce using rule 171 (TIPO_DATO_DEF -> TIME .)
    COMA            reduce using rule 171 (TIPO_DATO_DEF -> TIME .)


state 168

    (172) TIPO_DATO_DEF -> TIMESTAMP .

    NULL            reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    NOT             reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    UNIQUE          reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    CHECK           reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    PRIMARY         reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    FOREIGN         reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    DEFAULT         reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    PAR_C           reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)
    COMA            reduce using rule 172 (TIPO_DATO_DEF -> TIMESTAMP .)


state 169

    (173) TIPO_DATO_DEF -> DATE .

    NULL            reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    NOT             reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    UNIQUE          reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    CONSTRAINT      reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    CHECK           reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    PRIMARY         reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    FOREIGN         reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    DEFAULT         reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    PAR_C           reduce using rule 173 (TIPO_DATO_DEF -> DATE .)
    COMA            reduce using rule 173 (TIPO_DATO_DEF -> DATE .)


state 170

    (174) TIPO_DATO_DEF -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (177) TIPO_DATO_DEF -> CHARACTER . PAR_A ENTERO PAR_C
    (179) TIPO_DATO_DEF -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 265
    PAR_A           shift and go to state 266


state 171

    (175) TIPO_DATO_DEF -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 267


state 172

    (176) TIPO_DATO_DEF -> CHAR . PAR_A ENTERO PAR_C
    (178) TIPO_DATO_DEF -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 268


state 173

    (103) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 269
    INHERITS        shift and go to state 270


state 174

    (105) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (107) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (108) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (128) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (129) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (130) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (131) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 100
    PRIMARY         shift and go to state 103
    FOREING         shift and go to state 104
    UNIQUE          shift and go to state 105
    CONSTRAINT      shift and go to state 106

    cuerpo_createTable             shift and go to state 271

state 175

    (128) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 272


state 176

    (129) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 273


state 177

    (130) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 274

state 178

    (131) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (98) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (99) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (100) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 276
    UNIQUE          shift and go to state 277
    FOREING         shift and go to state 278

    constraint_esp                 shift and go to state 275

state 179

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A . lista_datos_enum PAR_C PTCOMA
    (31) lista_datos_enum -> . lista_datos_enum COMA CADENA
    (32) lista_datos_enum -> . CADENA

    CADENA          shift and go to state 280

    lista_datos_enum               shift and go to state 279

state 180

    (71) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    CREATE          reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    INSERT          reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DELETE          reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 71 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 181

    (63) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 281


state 182

    (65) usuariosDB -> ID .

    PTCOMA          reduce using rule 65 (usuariosDB -> ID .)


state 183

    (64) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 282


state 184

    (66) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 66 (usuariosDB -> CURRENT_USER .)


state 185

    (67) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 67 (usuariosDB -> SESSION_USER .)


state 186

    (68) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 68 (usuariosDB -> CADENA .)


state 187

    (40) Table_alter -> ALTER COLUMN ID . TYPE TIPO_DATO
    (55) Table_alter -> ALTER COLUMN ID . SET NOT NULL

    TYPE            shift and go to state 283
    SET             shift and go to state 284


state 188

    (41) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c . PTCOMA
    (101) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 285
    COMA            shift and go to state 225


state 189

    (42) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID . TO ID PTCOMA

    TO              shift and go to state 286


state 190

    (46) tipos_datos_columnas -> ID . TIPO_DATO
    (132) TIPO_DATO -> . TEXT
    (133) TIPO_DATO -> . FLOAT
    (134) TIPO_DATO -> . INTEGER
    (135) TIPO_DATO -> . SMALLINT
    (136) TIPO_DATO -> . MONEY
    (137) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (138) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (139) TIPO_DATO -> . BIGINT
    (140) TIPO_DATO -> . REAL
    (141) TIPO_DATO -> . DOUBLE PRECISION
    (142) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (143) TIPO_DATO -> . INTERVAL
    (144) TIPO_DATO -> . TIME
    (145) TIPO_DATO -> . TIMESTAMP
    (146) TIPO_DATO -> . DATE
    (147) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (148) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (149) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (150) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (151) TIPO_DATO -> . CHAR PAR_A PAR_C
    (152) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 288
    FLOAT           shift and go to state 289
    INTEGER         shift and go to state 290
    SMALLINT        shift and go to state 291
    MONEY           shift and go to state 292
    DECIMAL         shift and go to state 293
    NUMERIC         shift and go to state 294
    BIGINT          shift and go to state 295
    REAL            shift and go to state 296
    DOUBLE          shift and go to state 297
    INTERVAL        shift and go to state 298
    TIME            shift and go to state 299
    TIMESTAMP       shift and go to state 300
    DATE            shift and go to state 301
    CHARACTER       shift and go to state 302
    VARCHAR         shift and go to state 303
    CHAR            shift and go to state 304

    TIPO_DATO                      shift and go to state 287

state 191

    (43) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column . PTCOMA
    (44) campos_add_Column -> campos_add_Column . COMA tipos_datos_columnas

    PTCOMA          shift and go to state 305
    COMA            shift and go to state 306


state 192

    (45) campos_add_Column -> tipos_datos_columnas .

    PTCOMA          reduce using rule 45 (campos_add_Column -> tipos_datos_columnas .)
    COMA            reduce using rule 45 (campos_add_Column -> tipos_datos_columnas .)


state 193

    (47) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A . expresion_logica PAR_C PTCOMA
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 307
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 194

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY . PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    PAR_A           shift and go to state 308


state 195

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . CHECK PAR_A expresion_logica PAR_C PTCOMA
    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PAR_A campos_c PAR_C PTCOMA
    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    CHECK           shift and go to state 309
    UNIQUE          shift and go to state 310
    FOREIGN         shift and go to state 311


state 196

    (53) alterTable_alter -> alterTable_alter COMA Table_alter .

    PTCOMA          reduce using rule 53 (alterTable_alter -> alterTable_alter COMA Table_alter .)
    COMA            reduce using rule 53 (alterTable_alter -> alterTable_alter COMA Table_alter .)


state 197

    (62) parametro_update -> ID IGUAL expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    WHERE           reduce using rule 62 (parametro_update -> ID IGUAL expresion .)
    COMA            reduce using rule 62 (parametro_update -> ID IGUAL expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 198

    (59) update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional . PTCOMA

    PTCOMA          shift and go to state 312


state 199

    (60) lista_update -> lista_update COMA parametro_update .

    WHERE           reduce using rule 60 (lista_update -> lista_update COMA parametro_update .)
    COMA            reduce using rule 60 (lista_update -> lista_update COMA parametro_update .)


state 200

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C . VALUES PAR_A lista_datos PAR_C PTCOMA

    VALUES          shift and go to state 313


state 201

    (36) lista_parametros_lista -> lista_parametros_lista COMA . ID

    ID              shift and go to state 314


state 202

    (34) insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES . PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 315


state 203

    (35) insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos . PAR_C PTCOMA
    (38) lista_datos -> lista_datos . COMA expresion

    PAR_C           shift and go to state 316
    COMA            shift and go to state 317


state 204

    (39) lista_datos -> expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    PAR_C           reduce using rule 39 (lista_datos -> expresion .)
    COMA            reduce using rule 39 (lista_datos -> expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 205

    (185) expresion -> ID PUNTO . ID

    ID              shift and go to state 318


state 206

    (20) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica . PTCOMA
    (21) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 319
    RETURNING       shift and go to state 320


state 207

    (22) delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .

    CREATE          reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    SHOW            reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    DROP            reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    USE             reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    ALTER           reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    UPDATE          reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    INSERT          reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    DELETE          reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    $end            reduce using rule 22 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)


state 208

    (23) delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING . returning_exp PTCOMA
    (28) returning_exp -> . ASTERISCO
    (29) returning_exp -> . campos_c
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ASTERISCO       shift and go to state 141
    ID              shift and go to state 139

    returning_exp                  shift and go to state 321
    campos_c                       shift and go to state 142

state 209

    (203) expresion_logica -> expresion_relacional AND . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_relacional           shift and go to state 322
    expresion                      shift and go to state 133

state 210

    (204) expresion_logica -> expresion_relacional OR . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_relacional           shift and go to state 323
    expresion                      shift and go to state 133

state 211

    (205) expresion_logica -> NOT expresion_relacional .

    PTCOMA          reduce using rule 205 (expresion_logica -> NOT expresion_relacional .)
    RETURNING       reduce using rule 205 (expresion_logica -> NOT expresion_relacional .)
    PAR_C           reduce using rule 205 (expresion_logica -> NOT expresion_relacional .)


state 212

    (194) expresion_relacional -> expresion MAYQUE . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 324

state 213

    (195) expresion_relacional -> expresion MENQUE . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 325

state 214

    (196) expresion_relacional -> expresion MAYIGQUE . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 326

state 215

    (197) expresion_relacional -> expresion MENIGQUE . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 327

state 216

    (198) expresion_relacional -> expresion DOBLEIG . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 328

state 217

    (199) expresion_relacional -> expresion IGUAL . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 329

state 218

    (200) expresion_relacional -> expresion NOIG . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 330

state 219

    (201) expresion_relacional -> expresion NOIGUAL . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 331

state 220

    (186) expresion -> expresion SUMA . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 332

state 221

    (187) expresion -> expresion RESTA . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 333

state 222

    (188) expresion -> expresion DIVISION . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 334

state 223

    (189) expresion -> expresion ASTERISCO . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 335

state 224

    (24) delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .

    CREATE          reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    SHOW            reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    USE             reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 24 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)


state 225

    (101) campos_c -> campos_c COMA . ID

    ID              shift and go to state 336


state 226

    (25) delete_insrt -> DELETE FROM ID USING ID WHERE . EXISTS expresion_logica PTCOMA
    (26) delete_insrt -> DELETE FROM ID USING ID WHERE . EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (27) delete_insrt -> DELETE FROM ID USING ID WHERE . expresion_logica PTCOMA
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    EXISTS          shift and go to state 337
    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 338
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 227

    (19) delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 339


state 228

    (90) createDB_dosParam -> OWNER string_type MODE ENTERO .

    PTCOMA          reduce using rule 90 (createDB_dosParam -> OWNER string_type MODE ENTERO .)


state 229

    (91) createDB_dosParam -> OWNER string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 340


state 230

    (92) createDB_dosParam -> OWNER IGUAL string_type MODE . ENTERO
    (93) createDB_dosParam -> OWNER IGUAL string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 342
    IGUAL           shift and go to state 341


state 231

    (94) createDB_dosParam -> MODE ENTERO OWNER string_type .

    PTCOMA          reduce using rule 94 (createDB_dosParam -> MODE ENTERO OWNER string_type .)


state 232

    (95) createDB_dosParam -> MODE ENTERO OWNER IGUAL . string_type
    (192) string_type -> . CADENA
    (193) string_type -> . ID

    CADENA          shift and go to state 93
    ID              shift and go to state 94

    string_type                    shift and go to state 343

state 233

    (96) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (97) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 345
    IGUAL           shift and go to state 344


state 234

    (76) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    INSERT          reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DELETE          reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 76 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 235

    (80) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 346


state 236

    (88) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 347


state 237

    (79) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 79 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 238

    (87) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 87 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 239

    (77) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (81) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (89) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 348


state 240

    (108) cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .
    (109) createTable_options -> createTable_options . cT_options
    (111) cT_options -> . N_null
    (112) cT_options -> . C_unique
    (113) cT_options -> . C_check
    (114) cT_options -> . llave
    (115) cT_options -> . O_DEFAULT
    (117) N_null -> . NULL
    (118) N_null -> . NOT NULL
    (119) C_unique -> . UNIQUE
    (120) C_unique -> . CONSTRAINT ID UNIQUE
    (121) C_check -> . CHECK PAR_A expresion_logica PAR_C
    (122) C_check -> . CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C
    (123) llave -> . PRIMARY KEY
    (124) llave -> . FOREIGN KEY
    (116) O_DEFAULT -> . DEFAULT expresion_dato_default

    PAR_C           reduce using rule 108 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    COMA            reduce using rule 108 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    NULL            shift and go to state 247
    NOT             shift and go to state 248
    UNIQUE          shift and go to state 249
    CONSTRAINT      shift and go to state 250
    CHECK           shift and go to state 251
    PRIMARY         shift and go to state 252
    FOREIGN         shift and go to state 253
    DEFAULT         shift and go to state 254

    cT_options                     shift and go to state 349
    N_null                         shift and go to state 242
    C_unique                       shift and go to state 243
    C_check                        shift and go to state 244
    llave                          shift and go to state 245
    O_DEFAULT                      shift and go to state 246

state 241

    (110) createTable_options -> cT_options .

    NULL            reduce using rule 110 (createTable_options -> cT_options .)
    NOT             reduce using rule 110 (createTable_options -> cT_options .)
    UNIQUE          reduce using rule 110 (createTable_options -> cT_options .)
    CONSTRAINT      reduce using rule 110 (createTable_options -> cT_options .)
    CHECK           reduce using rule 110 (createTable_options -> cT_options .)
    PRIMARY         reduce using rule 110 (createTable_options -> cT_options .)
    FOREIGN         reduce using rule 110 (createTable_options -> cT_options .)
    DEFAULT         reduce using rule 110 (createTable_options -> cT_options .)
    PAR_C           reduce using rule 110 (createTable_options -> cT_options .)
    COMA            reduce using rule 110 (createTable_options -> cT_options .)


state 242

    (111) cT_options -> N_null .

    NULL            reduce using rule 111 (cT_options -> N_null .)
    NOT             reduce using rule 111 (cT_options -> N_null .)
    UNIQUE          reduce using rule 111 (cT_options -> N_null .)
    CONSTRAINT      reduce using rule 111 (cT_options -> N_null .)
    CHECK           reduce using rule 111 (cT_options -> N_null .)
    PRIMARY         reduce using rule 111 (cT_options -> N_null .)
    FOREIGN         reduce using rule 111 (cT_options -> N_null .)
    DEFAULT         reduce using rule 111 (cT_options -> N_null .)
    PAR_C           reduce using rule 111 (cT_options -> N_null .)
    COMA            reduce using rule 111 (cT_options -> N_null .)


state 243

    (112) cT_options -> C_unique .

    NULL            reduce using rule 112 (cT_options -> C_unique .)
    NOT             reduce using rule 112 (cT_options -> C_unique .)
    UNIQUE          reduce using rule 112 (cT_options -> C_unique .)
    CONSTRAINT      reduce using rule 112 (cT_options -> C_unique .)
    CHECK           reduce using rule 112 (cT_options -> C_unique .)
    PRIMARY         reduce using rule 112 (cT_options -> C_unique .)
    FOREIGN         reduce using rule 112 (cT_options -> C_unique .)
    DEFAULT         reduce using rule 112 (cT_options -> C_unique .)
    PAR_C           reduce using rule 112 (cT_options -> C_unique .)
    COMA            reduce using rule 112 (cT_options -> C_unique .)


state 244

    (113) cT_options -> C_check .

    NULL            reduce using rule 113 (cT_options -> C_check .)
    NOT             reduce using rule 113 (cT_options -> C_check .)
    UNIQUE          reduce using rule 113 (cT_options -> C_check .)
    CONSTRAINT      reduce using rule 113 (cT_options -> C_check .)
    CHECK           reduce using rule 113 (cT_options -> C_check .)
    PRIMARY         reduce using rule 113 (cT_options -> C_check .)
    FOREIGN         reduce using rule 113 (cT_options -> C_check .)
    DEFAULT         reduce using rule 113 (cT_options -> C_check .)
    PAR_C           reduce using rule 113 (cT_options -> C_check .)
    COMA            reduce using rule 113 (cT_options -> C_check .)


state 245

    (114) cT_options -> llave .

    NULL            reduce using rule 114 (cT_options -> llave .)
    NOT             reduce using rule 114 (cT_options -> llave .)
    UNIQUE          reduce using rule 114 (cT_options -> llave .)
    CONSTRAINT      reduce using rule 114 (cT_options -> llave .)
    CHECK           reduce using rule 114 (cT_options -> llave .)
    PRIMARY         reduce using rule 114 (cT_options -> llave .)
    FOREIGN         reduce using rule 114 (cT_options -> llave .)
    DEFAULT         reduce using rule 114 (cT_options -> llave .)
    PAR_C           reduce using rule 114 (cT_options -> llave .)
    COMA            reduce using rule 114 (cT_options -> llave .)


state 246

    (115) cT_options -> O_DEFAULT .

    NULL            reduce using rule 115 (cT_options -> O_DEFAULT .)
    NOT             reduce using rule 115 (cT_options -> O_DEFAULT .)
    UNIQUE          reduce using rule 115 (cT_options -> O_DEFAULT .)
    CONSTRAINT      reduce using rule 115 (cT_options -> O_DEFAULT .)
    CHECK           reduce using rule 115 (cT_options -> O_DEFAULT .)
    PRIMARY         reduce using rule 115 (cT_options -> O_DEFAULT .)
    FOREIGN         reduce using rule 115 (cT_options -> O_DEFAULT .)
    DEFAULT         reduce using rule 115 (cT_options -> O_DEFAULT .)
    PAR_C           reduce using rule 115 (cT_options -> O_DEFAULT .)
    COMA            reduce using rule 115 (cT_options -> O_DEFAULT .)


state 247

    (117) N_null -> NULL .

    NULL            reduce using rule 117 (N_null -> NULL .)
    NOT             reduce using rule 117 (N_null -> NULL .)
    UNIQUE          reduce using rule 117 (N_null -> NULL .)
    CONSTRAINT      reduce using rule 117 (N_null -> NULL .)
    CHECK           reduce using rule 117 (N_null -> NULL .)
    PRIMARY         reduce using rule 117 (N_null -> NULL .)
    FOREIGN         reduce using rule 117 (N_null -> NULL .)
    DEFAULT         reduce using rule 117 (N_null -> NULL .)
    PAR_C           reduce using rule 117 (N_null -> NULL .)
    COMA            reduce using rule 117 (N_null -> NULL .)


state 248

    (118) N_null -> NOT . NULL

    NULL            shift and go to state 350


state 249

    (119) C_unique -> UNIQUE .

    NULL            reduce using rule 119 (C_unique -> UNIQUE .)
    NOT             reduce using rule 119 (C_unique -> UNIQUE .)
    UNIQUE          reduce using rule 119 (C_unique -> UNIQUE .)
    CONSTRAINT      reduce using rule 119 (C_unique -> UNIQUE .)
    CHECK           reduce using rule 119 (C_unique -> UNIQUE .)
    PRIMARY         reduce using rule 119 (C_unique -> UNIQUE .)
    FOREIGN         reduce using rule 119 (C_unique -> UNIQUE .)
    DEFAULT         reduce using rule 119 (C_unique -> UNIQUE .)
    PAR_C           reduce using rule 119 (C_unique -> UNIQUE .)
    COMA            reduce using rule 119 (C_unique -> UNIQUE .)


state 250

    (120) C_unique -> CONSTRAINT . ID UNIQUE
    (122) C_check -> CONSTRAINT . ID CHECK PAR_A expresion_logica PAR_C

    ID              shift and go to state 351


state 251

    (121) C_check -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 352


state 252

    (123) llave -> PRIMARY . KEY

    KEY             shift and go to state 353


state 253

    (124) llave -> FOREIGN . KEY

    KEY             shift and go to state 354


state 254

    (116) O_DEFAULT -> DEFAULT . expresion_dato_default
    (125) expresion_dato_default -> . CADENA
    (126) expresion_dato_default -> . ENTERO
    (127) expresion_dato_default -> . FLOTANTE

    CADENA          shift and go to state 356
    ENTERO          shift and go to state 357
    FLOTANTE        shift and go to state 358

    expresion_dato_default         shift and go to state 355

state 255

    (164) TIPO_DATO_DEF -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 359


state 256

    (165) TIPO_DATO_DEF -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 360


state 257

    (168) TIPO_DATO_DEF -> DOUBLE PRECISION .

    NULL            reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    NOT             reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CHECK           reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    COMA            reduce using rule 168 (TIPO_DATO_DEF -> DOUBLE PRECISION .)


state 258

    (169) TIPO_DATO_DEF -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 361


state 259

    (153) extract_time -> YEAR .

    TO              reduce using rule 153 (extract_time -> YEAR .)
    NULL            reduce using rule 153 (extract_time -> YEAR .)
    NOT             reduce using rule 153 (extract_time -> YEAR .)
    UNIQUE          reduce using rule 153 (extract_time -> YEAR .)
    CONSTRAINT      reduce using rule 153 (extract_time -> YEAR .)
    CHECK           reduce using rule 153 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 153 (extract_time -> YEAR .)
    FOREIGN         reduce using rule 153 (extract_time -> YEAR .)
    DEFAULT         reduce using rule 153 (extract_time -> YEAR .)
    PAR_C           reduce using rule 153 (extract_time -> YEAR .)
    COMA            reduce using rule 153 (extract_time -> YEAR .)
    PTCOMA          reduce using rule 153 (extract_time -> YEAR .)


state 260

    (154) extract_time -> DAY .

    TO              reduce using rule 154 (extract_time -> DAY .)
    NULL            reduce using rule 154 (extract_time -> DAY .)
    NOT             reduce using rule 154 (extract_time -> DAY .)
    UNIQUE          reduce using rule 154 (extract_time -> DAY .)
    CONSTRAINT      reduce using rule 154 (extract_time -> DAY .)
    CHECK           reduce using rule 154 (extract_time -> DAY .)
    PRIMARY         reduce using rule 154 (extract_time -> DAY .)
    FOREIGN         reduce using rule 154 (extract_time -> DAY .)
    DEFAULT         reduce using rule 154 (extract_time -> DAY .)
    PAR_C           reduce using rule 154 (extract_time -> DAY .)
    COMA            reduce using rule 154 (extract_time -> DAY .)
    PTCOMA          reduce using rule 154 (extract_time -> DAY .)


state 261

    (155) extract_time -> MONTH .

    TO              reduce using rule 155 (extract_time -> MONTH .)
    NULL            reduce using rule 155 (extract_time -> MONTH .)
    NOT             reduce using rule 155 (extract_time -> MONTH .)
    UNIQUE          reduce using rule 155 (extract_time -> MONTH .)
    CONSTRAINT      reduce using rule 155 (extract_time -> MONTH .)
    CHECK           reduce using rule 155 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 155 (extract_time -> MONTH .)
    FOREIGN         reduce using rule 155 (extract_time -> MONTH .)
    DEFAULT         reduce using rule 155 (extract_time -> MONTH .)
    PAR_C           reduce using rule 155 (extract_time -> MONTH .)
    COMA            reduce using rule 155 (extract_time -> MONTH .)
    PTCOMA          reduce using rule 155 (extract_time -> MONTH .)


state 262

    (156) extract_time -> HOUR .

    TO              reduce using rule 156 (extract_time -> HOUR .)
    NULL            reduce using rule 156 (extract_time -> HOUR .)
    NOT             reduce using rule 156 (extract_time -> HOUR .)
    UNIQUE          reduce using rule 156 (extract_time -> HOUR .)
    CONSTRAINT      reduce using rule 156 (extract_time -> HOUR .)
    CHECK           reduce using rule 156 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 156 (extract_time -> HOUR .)
    FOREIGN         reduce using rule 156 (extract_time -> HOUR .)
    DEFAULT         reduce using rule 156 (extract_time -> HOUR .)
    PAR_C           reduce using rule 156 (extract_time -> HOUR .)
    COMA            reduce using rule 156 (extract_time -> HOUR .)
    PTCOMA          reduce using rule 156 (extract_time -> HOUR .)


state 263

    (157) extract_time -> MINUTE .

    TO              reduce using rule 157 (extract_time -> MINUTE .)
    NULL            reduce using rule 157 (extract_time -> MINUTE .)
    NOT             reduce using rule 157 (extract_time -> MINUTE .)
    UNIQUE          reduce using rule 157 (extract_time -> MINUTE .)
    CONSTRAINT      reduce using rule 157 (extract_time -> MINUTE .)
    CHECK           reduce using rule 157 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 157 (extract_time -> MINUTE .)
    FOREIGN         reduce using rule 157 (extract_time -> MINUTE .)
    DEFAULT         reduce using rule 157 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 157 (extract_time -> MINUTE .)
    COMA            reduce using rule 157 (extract_time -> MINUTE .)
    PTCOMA          reduce using rule 157 (extract_time -> MINUTE .)


state 264

    (158) extract_time -> SECOND .

    TO              reduce using rule 158 (extract_time -> SECOND .)
    NULL            reduce using rule 158 (extract_time -> SECOND .)
    NOT             reduce using rule 158 (extract_time -> SECOND .)
    UNIQUE          reduce using rule 158 (extract_time -> SECOND .)
    CONSTRAINT      reduce using rule 158 (extract_time -> SECOND .)
    CHECK           reduce using rule 158 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 158 (extract_time -> SECOND .)
    FOREIGN         reduce using rule 158 (extract_time -> SECOND .)
    DEFAULT         reduce using rule 158 (extract_time -> SECOND .)
    PAR_C           reduce using rule 158 (extract_time -> SECOND .)
    COMA            reduce using rule 158 (extract_time -> SECOND .)
    PTCOMA          reduce using rule 158 (extract_time -> SECOND .)


state 265

    (174) TIPO_DATO_DEF -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 362


state 266

    (177) TIPO_DATO_DEF -> CHARACTER PAR_A . ENTERO PAR_C
    (179) TIPO_DATO_DEF -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 363
    PAR_C           shift and go to state 364


state 267

    (175) TIPO_DATO_DEF -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 365


state 268

    (176) TIPO_DATO_DEF -> CHAR PAR_A . ENTERO PAR_C
    (178) TIPO_DATO_DEF -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 366
    PAR_C           shift and go to state 367


state 269

    (103) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DROP            reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    USE             reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    ALTER           reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    UPDATE          reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    INSERT          reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DELETE          reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 103 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 270

    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 368


state 271

    (105) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 105 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 105 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 272

    (128) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 369


state 273

    (129) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 370


state 274

    (130) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (101) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 371
    COMA            shift and go to state 225


state 275

    (131) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 131 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 131 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 276

    (98) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 372


state 277

    (99) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 373


state 278

    (100) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 374


state 279

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum . PAR_C PTCOMA
    (31) lista_datos_enum -> lista_datos_enum . COMA CADENA

    PAR_C           shift and go to state 375
    COMA            shift and go to state 376


state 280

    (32) lista_datos_enum -> CADENA .

    PAR_C           reduce using rule 32 (lista_datos_enum -> CADENA .)
    COMA            reduce using rule 32 (lista_datos_enum -> CADENA .)


state 281

    (63) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    CREATE          reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    UPDATE          reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    INSERT          reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DELETE          reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 63 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 282

    (64) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    CREATE          reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    UPDATE          reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    INSERT          reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DELETE          reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 64 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 283

    (40) Table_alter -> ALTER COLUMN ID TYPE . TIPO_DATO
    (132) TIPO_DATO -> . TEXT
    (133) TIPO_DATO -> . FLOAT
    (134) TIPO_DATO -> . INTEGER
    (135) TIPO_DATO -> . SMALLINT
    (136) TIPO_DATO -> . MONEY
    (137) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (138) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (139) TIPO_DATO -> . BIGINT
    (140) TIPO_DATO -> . REAL
    (141) TIPO_DATO -> . DOUBLE PRECISION
    (142) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (143) TIPO_DATO -> . INTERVAL
    (144) TIPO_DATO -> . TIME
    (145) TIPO_DATO -> . TIMESTAMP
    (146) TIPO_DATO -> . DATE
    (147) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (148) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (149) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (150) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (151) TIPO_DATO -> . CHAR PAR_A PAR_C
    (152) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 288
    FLOAT           shift and go to state 289
    INTEGER         shift and go to state 290
    SMALLINT        shift and go to state 291
    MONEY           shift and go to state 292
    DECIMAL         shift and go to state 293
    NUMERIC         shift and go to state 294
    BIGINT          shift and go to state 295
    REAL            shift and go to state 296
    DOUBLE          shift and go to state 297
    INTERVAL        shift and go to state 298
    TIME            shift and go to state 299
    TIMESTAMP       shift and go to state 300
    DATE            shift and go to state 301
    CHARACTER       shift and go to state 302
    VARCHAR         shift and go to state 303
    CHAR            shift and go to state 304

    TIPO_DATO                      shift and go to state 377

state 284

    (55) Table_alter -> ALTER COLUMN ID SET . NOT NULL

    NOT             shift and go to state 378


state 285

    (41) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .

    CREATE          reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    SHOW            reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    DROP            reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    USE             reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    ALTER           reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    UPDATE          reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    INSERT          reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    DELETE          reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    $end            reduce using rule 41 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)


state 286

    (42) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO . ID PTCOMA

    ID              shift and go to state 379


state 287

    (46) tipos_datos_columnas -> ID TIPO_DATO .

    PTCOMA          reduce using rule 46 (tipos_datos_columnas -> ID TIPO_DATO .)
    COMA            reduce using rule 46 (tipos_datos_columnas -> ID TIPO_DATO .)


state 288

    (132) TIPO_DATO -> TEXT .

    PTCOMA          reduce using rule 132 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 132 (TIPO_DATO -> TEXT .)


state 289

    (133) TIPO_DATO -> FLOAT .

    PTCOMA          reduce using rule 133 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 133 (TIPO_DATO -> FLOAT .)


state 290

    (134) TIPO_DATO -> INTEGER .

    PTCOMA          reduce using rule 134 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 134 (TIPO_DATO -> INTEGER .)


state 291

    (135) TIPO_DATO -> SMALLINT .

    PTCOMA          reduce using rule 135 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 135 (TIPO_DATO -> SMALLINT .)


state 292

    (136) TIPO_DATO -> MONEY .

    PTCOMA          reduce using rule 136 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 136 (TIPO_DATO -> MONEY .)


state 293

    (137) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 380


state 294

    (138) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 381


state 295

    (139) TIPO_DATO -> BIGINT .

    PTCOMA          reduce using rule 139 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 139 (TIPO_DATO -> BIGINT .)


state 296

    (140) TIPO_DATO -> REAL .

    PTCOMA          reduce using rule 140 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 140 (TIPO_DATO -> REAL .)


state 297

    (141) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 382


state 298

    (142) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (143) TIPO_DATO -> INTERVAL .
    (153) extract_time -> . YEAR
    (154) extract_time -> . DAY
    (155) extract_time -> . MONTH
    (156) extract_time -> . HOUR
    (157) extract_time -> . MINUTE
    (158) extract_time -> . SECOND

    PTCOMA          reduce using rule 143 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 143 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 259
    DAY             shift and go to state 260
    MONTH           shift and go to state 261
    HOUR            shift and go to state 262
    MINUTE          shift and go to state 263
    SECOND          shift and go to state 264

    extract_time                   shift and go to state 383

state 299

    (144) TIPO_DATO -> TIME .

    PTCOMA          reduce using rule 144 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 144 (TIPO_DATO -> TIME .)


state 300

    (145) TIPO_DATO -> TIMESTAMP .

    PTCOMA          reduce using rule 145 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 145 (TIPO_DATO -> TIMESTAMP .)


state 301

    (146) TIPO_DATO -> DATE .

    PTCOMA          reduce using rule 146 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 146 (TIPO_DATO -> DATE .)


state 302

    (147) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (150) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (152) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 384
    PAR_A           shift and go to state 385


state 303

    (148) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 386


state 304

    (149) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (151) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 387


state 305

    (43) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .

    CREATE          reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    SHOW            reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    DROP            reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    USE             reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    ALTER           reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    UPDATE          reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    INSERT          reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    DELETE          reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    $end            reduce using rule 43 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)


state 306

    (44) campos_add_Column -> campos_add_Column COMA . tipos_datos_columnas
    (46) tipos_datos_columnas -> . ID TIPO_DATO

    ID              shift and go to state 190

    tipos_datos_columnas           shift and go to state 388

state 307

    (47) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica . PAR_C PTCOMA

    PAR_C           shift and go to state 389


state 308

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A . campos_c PAR_C REFERENCES campos_c PTCOMA
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 390

state 309

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK . PAR_A expresion_logica PAR_C PTCOMA

    PAR_A           shift and go to state 391


state 310

    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PAR_A campos_c PAR_C PTCOMA

    PAR_A           shift and go to state 392


state 311

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN . KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    KEY             shift and go to state 393


state 312

    (59) update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .

    CREATE          reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    SHOW            reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    DROP            reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    USE             reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    ALTER           reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    UPDATE          reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    INSERT          reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    DELETE          reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    $end            reduce using rule 59 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)


state 313

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES . PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 394


state 314

    (36) lista_parametros_lista -> lista_parametros_lista COMA ID .

    PAR_C           reduce using rule 36 (lista_parametros_lista -> lista_parametros_lista COMA ID .)
    COMA            reduce using rule 36 (lista_parametros_lista -> lista_parametros_lista COMA ID .)


state 315

    (34) insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A . lista_datos PAR_C PTCOMA
    (38) lista_datos -> . lista_datos COMA expresion
    (39) lista_datos -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    lista_datos                    shift and go to state 395
    expresion                      shift and go to state 204

state 316

    (35) insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C . PTCOMA

    PTCOMA          shift and go to state 396


state 317

    (38) lista_datos -> lista_datos COMA . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion                      shift and go to state 397

state 318

    (185) expresion -> ID PUNTO ID .

    MAYQUE          reduce using rule 185 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 185 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 185 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 185 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 185 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 185 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 185 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 185 (expresion -> ID PUNTO ID .)
    SUMA            reduce using rule 185 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 185 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 185 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 185 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 185 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 185 (expresion -> ID PUNTO ID .)
    PTCOMA          reduce using rule 185 (expresion -> ID PUNTO ID .)
    RETURNING       reduce using rule 185 (expresion -> ID PUNTO ID .)
    WHERE           reduce using rule 185 (expresion -> ID PUNTO ID .)
    COMA            reduce using rule 185 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 185 (expresion -> ID PUNTO ID .)


state 319

    (20) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .

    CREATE          reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    SHOW            reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    DROP            reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    USE             reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    ALTER           reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    UPDATE          reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    INSERT          reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    DELETE          reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    $end            reduce using rule 20 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)


state 320

    (21) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING . returning_exp PTCOMA
    (28) returning_exp -> . ASTERISCO
    (29) returning_exp -> . campos_c
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ASTERISCO       shift and go to state 141
    ID              shift and go to state 139

    returning_exp                  shift and go to state 398
    campos_c                       shift and go to state 142

state 321

    (23) delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 399


state 322

    (203) expresion_logica -> expresion_relacional AND expresion_relacional .

    PTCOMA          reduce using rule 203 (expresion_logica -> expresion_relacional AND expresion_relacional .)
    RETURNING       reduce using rule 203 (expresion_logica -> expresion_relacional AND expresion_relacional .)
    PAR_C           reduce using rule 203 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 323

    (204) expresion_logica -> expresion_relacional OR expresion_relacional .

    PTCOMA          reduce using rule 204 (expresion_logica -> expresion_relacional OR expresion_relacional .)
    RETURNING       reduce using rule 204 (expresion_logica -> expresion_relacional OR expresion_relacional .)
    PAR_C           reduce using rule 204 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 324

    (194) expresion_relacional -> expresion MAYQUE expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 194 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 194 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 194 (expresion_relacional -> expresion MAYQUE expresion .)
    RETURNING       reduce using rule 194 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 194 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 325

    (195) expresion_relacional -> expresion MENQUE expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 195 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 195 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 195 (expresion_relacional -> expresion MENQUE expresion .)
    RETURNING       reduce using rule 195 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 195 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 326

    (196) expresion_relacional -> expresion MAYIGQUE expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 196 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 196 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PTCOMA          reduce using rule 196 (expresion_relacional -> expresion MAYIGQUE expresion .)
    RETURNING       reduce using rule 196 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 196 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 327

    (197) expresion_relacional -> expresion MENIGQUE expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 197 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 197 (expresion_relacional -> expresion MENIGQUE expresion .)
    PTCOMA          reduce using rule 197 (expresion_relacional -> expresion MENIGQUE expresion .)
    RETURNING       reduce using rule 197 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 197 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 328

    (198) expresion_relacional -> expresion DOBLEIG expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 198 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 198 (expresion_relacional -> expresion DOBLEIG expresion .)
    PTCOMA          reduce using rule 198 (expresion_relacional -> expresion DOBLEIG expresion .)
    RETURNING       reduce using rule 198 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 198 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 329

    (199) expresion_relacional -> expresion IGUAL expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 199 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 199 (expresion_relacional -> expresion IGUAL expresion .)
    PTCOMA          reduce using rule 199 (expresion_relacional -> expresion IGUAL expresion .)
    RETURNING       reduce using rule 199 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 199 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 330

    (200) expresion_relacional -> expresion NOIG expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 200 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 200 (expresion_relacional -> expresion NOIG expresion .)
    PTCOMA          reduce using rule 200 (expresion_relacional -> expresion NOIG expresion .)
    RETURNING       reduce using rule 200 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 200 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 331

    (201) expresion_relacional -> expresion NOIGUAL expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 201 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 201 (expresion_relacional -> expresion NOIGUAL expresion .)
    PTCOMA          reduce using rule 201 (expresion_relacional -> expresion NOIGUAL expresion .)
    RETURNING       reduce using rule 201 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 201 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 332

    (186) expresion -> expresion SUMA expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 186 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 186 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 186 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 186 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 186 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 186 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 186 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 186 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 186 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 186 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 186 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 186 (expresion -> expresion SUMA expresion .)
    PTCOMA          reduce using rule 186 (expresion -> expresion SUMA expresion .)
    RETURNING       reduce using rule 186 (expresion -> expresion SUMA expresion .)
    WHERE           reduce using rule 186 (expresion -> expresion SUMA expresion .)
    COMA            reduce using rule 186 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 186 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223

  ! DIVISION        [ reduce using rule 186 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 186 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 220 ]
  ! RESTA           [ shift and go to state 221 ]


state 333

    (187) expresion -> expresion RESTA expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 187 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 187 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 187 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 187 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 187 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 187 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 187 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 187 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 187 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 187 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 187 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 187 (expresion -> expresion RESTA expresion .)
    PTCOMA          reduce using rule 187 (expresion -> expresion RESTA expresion .)
    RETURNING       reduce using rule 187 (expresion -> expresion RESTA expresion .)
    WHERE           reduce using rule 187 (expresion -> expresion RESTA expresion .)
    COMA            reduce using rule 187 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 187 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223

  ! DIVISION        [ reduce using rule 187 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 187 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 220 ]
  ! RESTA           [ shift and go to state 221 ]


state 334

    (188) expresion -> expresion DIVISION expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    RETURNING       reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    WHERE           reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 188 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 188 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 220 ]
  ! RESTA           [ shift and go to state 221 ]
  ! DIVISION        [ shift and go to state 222 ]
  ! ASTERISCO       [ shift and go to state 223 ]


state 335

    (189) expresion -> expresion ASTERISCO expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    SUMA            reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    PTCOMA          reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    RETURNING       reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    WHERE           reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    COMA            reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 189 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 220 ]
  ! RESTA           [ shift and go to state 221 ]
  ! DIVISION        [ shift and go to state 222 ]
  ! ASTERISCO       [ shift and go to state 223 ]


state 336

    (101) campos_c -> campos_c COMA ID .

    COMA            reduce using rule 101 (campos_c -> campos_c COMA ID .)
    PTCOMA          reduce using rule 101 (campos_c -> campos_c COMA ID .)
    PAR_C           reduce using rule 101 (campos_c -> campos_c COMA ID .)


state 337

    (25) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS . expresion_logica PTCOMA
    (26) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS . expresion_logica RETURNING returning_exp PTCOMA
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 400
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 338

    (27) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica . PTCOMA

    PTCOMA          shift and go to state 401


state 339

    (19) delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .

    CREATE          reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    SHOW            reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    USE             reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 19 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)


state 340

    (91) createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 91 (createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .)


state 341

    (93) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 402


state 342

    (92) createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .

    PTCOMA          reduce using rule 92 (createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .)


state 343

    (95) createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .

    PTCOMA          reduce using rule 95 (createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .)


state 344

    (97) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 403


state 345

    (96) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 96 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 346

    (80) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 80 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 347

    (88) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 88 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 348

    (77) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (81) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (89) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (82) createDB_unParam -> . OWNER string_type
    (83) createDB_unParam -> . OWNER IGUAL string_type
    (84) createDB_unParam -> . MODE ENTERO
    (85) createDB_unParam -> . MODE IGUAL ENTERO
    (90) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (91) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (92) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (93) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (94) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (95) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (96) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (97) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 404
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 405
    createDB_dosParam              shift and go to state 406

state 349

    (109) createTable_options -> createTable_options cT_options .

    NULL            reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    NOT             reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    UNIQUE          reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    CONSTRAINT      reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    CHECK           reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    PRIMARY         reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    FOREIGN         reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    DEFAULT         reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    PAR_C           reduce using rule 109 (createTable_options -> createTable_options cT_options .)
    COMA            reduce using rule 109 (createTable_options -> createTable_options cT_options .)


state 350

    (118) N_null -> NOT NULL .

    NULL            reduce using rule 118 (N_null -> NOT NULL .)
    NOT             reduce using rule 118 (N_null -> NOT NULL .)
    UNIQUE          reduce using rule 118 (N_null -> NOT NULL .)
    CONSTRAINT      reduce using rule 118 (N_null -> NOT NULL .)
    CHECK           reduce using rule 118 (N_null -> NOT NULL .)
    PRIMARY         reduce using rule 118 (N_null -> NOT NULL .)
    FOREIGN         reduce using rule 118 (N_null -> NOT NULL .)
    DEFAULT         reduce using rule 118 (N_null -> NOT NULL .)
    PAR_C           reduce using rule 118 (N_null -> NOT NULL .)
    COMA            reduce using rule 118 (N_null -> NOT NULL .)


state 351

    (120) C_unique -> CONSTRAINT ID . UNIQUE
    (122) C_check -> CONSTRAINT ID . CHECK PAR_A expresion_logica PAR_C

    UNIQUE          shift and go to state 407
    CHECK           shift and go to state 408


state 352

    (121) C_check -> CHECK PAR_A . expresion_logica PAR_C
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 409
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 353

    (123) llave -> PRIMARY KEY .

    NULL            reduce using rule 123 (llave -> PRIMARY KEY .)
    NOT             reduce using rule 123 (llave -> PRIMARY KEY .)
    UNIQUE          reduce using rule 123 (llave -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 123 (llave -> PRIMARY KEY .)
    CHECK           reduce using rule 123 (llave -> PRIMARY KEY .)
    PRIMARY         reduce using rule 123 (llave -> PRIMARY KEY .)
    FOREIGN         reduce using rule 123 (llave -> PRIMARY KEY .)
    DEFAULT         reduce using rule 123 (llave -> PRIMARY KEY .)
    PAR_C           reduce using rule 123 (llave -> PRIMARY KEY .)
    COMA            reduce using rule 123 (llave -> PRIMARY KEY .)


state 354

    (124) llave -> FOREIGN KEY .

    NULL            reduce using rule 124 (llave -> FOREIGN KEY .)
    NOT             reduce using rule 124 (llave -> FOREIGN KEY .)
    UNIQUE          reduce using rule 124 (llave -> FOREIGN KEY .)
    CONSTRAINT      reduce using rule 124 (llave -> FOREIGN KEY .)
    CHECK           reduce using rule 124 (llave -> FOREIGN KEY .)
    PRIMARY         reduce using rule 124 (llave -> FOREIGN KEY .)
    FOREIGN         reduce using rule 124 (llave -> FOREIGN KEY .)
    DEFAULT         reduce using rule 124 (llave -> FOREIGN KEY .)
    PAR_C           reduce using rule 124 (llave -> FOREIGN KEY .)
    COMA            reduce using rule 124 (llave -> FOREIGN KEY .)


state 355

    (116) O_DEFAULT -> DEFAULT expresion_dato_default .

    NULL            reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    NOT             reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    UNIQUE          reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CONSTRAINT      reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CHECK           reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PRIMARY         reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    FOREIGN         reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    DEFAULT         reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PAR_C           reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    COMA            reduce using rule 116 (O_DEFAULT -> DEFAULT expresion_dato_default .)


state 356

    (125) expresion_dato_default -> CADENA .

    NULL            reduce using rule 125 (expresion_dato_default -> CADENA .)
    NOT             reduce using rule 125 (expresion_dato_default -> CADENA .)
    UNIQUE          reduce using rule 125 (expresion_dato_default -> CADENA .)
    CONSTRAINT      reduce using rule 125 (expresion_dato_default -> CADENA .)
    CHECK           reduce using rule 125 (expresion_dato_default -> CADENA .)
    PRIMARY         reduce using rule 125 (expresion_dato_default -> CADENA .)
    FOREIGN         reduce using rule 125 (expresion_dato_default -> CADENA .)
    DEFAULT         reduce using rule 125 (expresion_dato_default -> CADENA .)
    PAR_C           reduce using rule 125 (expresion_dato_default -> CADENA .)
    COMA            reduce using rule 125 (expresion_dato_default -> CADENA .)


state 357

    (126) expresion_dato_default -> ENTERO .

    NULL            reduce using rule 126 (expresion_dato_default -> ENTERO .)
    NOT             reduce using rule 126 (expresion_dato_default -> ENTERO .)
    UNIQUE          reduce using rule 126 (expresion_dato_default -> ENTERO .)
    CONSTRAINT      reduce using rule 126 (expresion_dato_default -> ENTERO .)
    CHECK           reduce using rule 126 (expresion_dato_default -> ENTERO .)
    PRIMARY         reduce using rule 126 (expresion_dato_default -> ENTERO .)
    FOREIGN         reduce using rule 126 (expresion_dato_default -> ENTERO .)
    DEFAULT         reduce using rule 126 (expresion_dato_default -> ENTERO .)
    PAR_C           reduce using rule 126 (expresion_dato_default -> ENTERO .)
    COMA            reduce using rule 126 (expresion_dato_default -> ENTERO .)


state 358

    (127) expresion_dato_default -> FLOTANTE .

    NULL            reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    NOT             reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    UNIQUE          reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    CONSTRAINT      reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    CHECK           reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    PRIMARY         reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    FOREIGN         reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    DEFAULT         reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    PAR_C           reduce using rule 127 (expresion_dato_default -> FLOTANTE .)
    COMA            reduce using rule 127 (expresion_dato_default -> FLOTANTE .)


state 359

    (164) TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 410


state 360

    (165) TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 411


state 361

    (169) TIPO_DATO_DEF -> INTERVAL extract_time TO . extract_time
    (153) extract_time -> . YEAR
    (154) extract_time -> . DAY
    (155) extract_time -> . MONTH
    (156) extract_time -> . HOUR
    (157) extract_time -> . MINUTE
    (158) extract_time -> . SECOND

    YEAR            shift and go to state 259
    DAY             shift and go to state 260
    MONTH           shift and go to state 261
    HOUR            shift and go to state 262
    MINUTE          shift and go to state 263
    SECOND          shift and go to state 264

    extract_time                   shift and go to state 412

state 362

    (174) TIPO_DATO_DEF -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 413


state 363

    (177) TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 414


state 364

    (179) TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .

    NULL            reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    UNIQUE          reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    CONSTRAINT      reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    CHECK           reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    PRIMARY         reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    FOREIGN         reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    DEFAULT         reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 179 (TIPO_DATO_DEF -> CHARACTER PAR_A PAR_C .)


state 365

    (175) TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 415


state 366

    (176) TIPO_DATO_DEF -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 416


state 367

    (178) TIPO_DATO_DEF -> CHAR PAR_A PAR_C .

    NULL            reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    UNIQUE          reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    CONSTRAINT      reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    CHECK           reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    PRIMARY         reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    FOREIGN         reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    DEFAULT         reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 178 (TIPO_DATO_DEF -> CHAR PAR_A PAR_C .)


state 368

    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 417


state 369

    (128) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 418


state 370

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 419


state 371

    (130) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 130 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 130 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 372

    (98) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 420
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 373

    (99) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 421

state 374

    (100) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 422


state 375

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C . PTCOMA

    PTCOMA          shift and go to state 423


state 376

    (31) lista_datos_enum -> lista_datos_enum COMA . CADENA

    CADENA          shift and go to state 424


state 377

    (40) Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .

    PTCOMA          reduce using rule 40 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)
    COMA            reduce using rule 40 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)


state 378

    (55) Table_alter -> ALTER COLUMN ID SET NOT . NULL

    NULL            shift and go to state 425


state 379

    (42) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID . PTCOMA

    PTCOMA          shift and go to state 426


state 380

    (137) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 427


state 381

    (138) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 428


state 382

    (141) TIPO_DATO -> DOUBLE PRECISION .

    PTCOMA          reduce using rule 141 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 141 (TIPO_DATO -> DOUBLE PRECISION .)


state 383

    (142) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 429


state 384

    (147) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 430


state 385

    (150) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (152) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 431
    PAR_C           shift and go to state 432


state 386

    (148) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 433


state 387

    (149) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (151) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 434
    PAR_C           shift and go to state 435


state 388

    (44) campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .

    PTCOMA          reduce using rule 44 (campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .)
    COMA            reduce using rule 44 (campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .)


state 389

    (47) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C . PTCOMA

    PTCOMA          shift and go to state 436


state 390

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c . PAR_C REFERENCES campos_c PTCOMA
    (101) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 437
    COMA            shift and go to state 225


state 391

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A . expresion_logica PAR_C PTCOMA
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 438
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 392

    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A . campos_c PAR_C PTCOMA
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 439

state 393

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY . PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    PAR_A           shift and go to state 440


state 394

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A . lista_datos PAR_C PTCOMA
    (38) lista_datos -> . lista_datos COMA expresion
    (39) lista_datos -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    lista_datos                    shift and go to state 441
    expresion                      shift and go to state 204

state 395

    (34) insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos . PAR_C PTCOMA
    (38) lista_datos -> lista_datos . COMA expresion

    PAR_C           shift and go to state 442
    COMA            shift and go to state 317


state 396

    (35) insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .

    CREATE          reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    SHOW            reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DROP            reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    USE             reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    ALTER           reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    UPDATE          reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    INSERT          reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DELETE          reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)
    $end            reduce using rule 35 (insert_insrt -> INSERT INTO ID VALUES PAR_A lista_datos PAR_C PTCOMA .)


state 397

    (38) lista_datos -> lista_datos COMA expresion .
    (186) expresion -> expresion . SUMA expresion
    (187) expresion -> expresion . RESTA expresion
    (188) expresion -> expresion . DIVISION expresion
    (189) expresion -> expresion . ASTERISCO expresion

    PAR_C           reduce using rule 38 (lista_datos -> lista_datos COMA expresion .)
    COMA            reduce using rule 38 (lista_datos -> lista_datos COMA expresion .)
    SUMA            shift and go to state 220
    RESTA           shift and go to state 221
    DIVISION        shift and go to state 222
    ASTERISCO       shift and go to state 223


state 398

    (21) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 443


state 399

    (23) delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .

    CREATE          reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    SHOW            reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    USE             reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 23 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)


state 400

    (25) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica . PTCOMA
    (26) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 444
    RETURNING       shift and go to state 445


state 401

    (27) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .

    CREATE          reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    SHOW            reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    DROP            reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    USE             reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    ALTER           reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    UPDATE          reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    INSERT          reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    DELETE          reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    $end            reduce using rule 27 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)


state 402

    (93) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 93 (createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .)


state 403

    (97) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 97 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 404

    (77) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    INSERT          reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DELETE          reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 77 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 405

    (81) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 446


state 406

    (89) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 447


state 407

    (120) C_unique -> CONSTRAINT ID UNIQUE .

    NULL            reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    NOT             reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    CHECK           reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    PAR_C           reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 120 (C_unique -> CONSTRAINT ID UNIQUE .)


state 408

    (122) C_check -> CONSTRAINT ID CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 448


state 409

    (121) C_check -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 449


state 410

    (164) TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 450


state 411

    (165) TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 451


state 412

    (169) TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .

    NULL            reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    UNIQUE          reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CONSTRAINT      reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CHECK           reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PRIMARY         reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    FOREIGN         reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    DEFAULT         reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 169 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)


state 413

    (174) TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 452


state 414

    (177) TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .

    NULL            reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    UNIQUE          reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    CONSTRAINT      reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    CHECK           reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    PRIMARY         reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    FOREIGN         reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    DEFAULT         reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 177 (TIPO_DATO_DEF -> CHARACTER PAR_A ENTERO PAR_C .)


state 415

    (175) TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .

    NULL            reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    UNIQUE          reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    CONSTRAINT      reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    CHECK           reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    PRIMARY         reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    FOREIGN         reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    DEFAULT         reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 175 (TIPO_DATO_DEF -> VARCHAR PAR_A ENTERO PAR_C .)


state 416

    (176) TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .

    NULL            reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    UNIQUE          reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    CONSTRAINT      reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    CHECK           reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    PRIMARY         reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    FOREIGN         reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    DEFAULT         reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 176 (TIPO_DATO_DEF -> CHAR PAR_A ENTERO PAR_C .)


state 417

    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 453


state 418

    (128) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 128 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 128 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 419

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 454


state 420

    (98) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 455


state 421

    (99) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (101) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 456
    COMA            shift and go to state 225


state 422

    (100) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 457


state 423

    (30) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .

    CREATE          reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    SHOW            reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    DROP            reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    USE             reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    ALTER           reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    UPDATE          reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    INSERT          reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    DELETE          reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)
    $end            reduce using rule 30 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos_enum PAR_C PTCOMA .)


state 424

    (31) lista_datos_enum -> lista_datos_enum COMA CADENA .

    PAR_C           reduce using rule 31 (lista_datos_enum -> lista_datos_enum COMA CADENA .)
    COMA            reduce using rule 31 (lista_datos_enum -> lista_datos_enum COMA CADENA .)


state 425

    (55) Table_alter -> ALTER COLUMN ID SET NOT NULL .

    PTCOMA          reduce using rule 55 (Table_alter -> ALTER COLUMN ID SET NOT NULL .)
    COMA            reduce using rule 55 (Table_alter -> ALTER COLUMN ID SET NOT NULL .)


state 426

    (42) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .

    CREATE          reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    SHOW            reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    DROP            reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    USE             reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    ALTER           reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    UPDATE          reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    INSERT          reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    DELETE          reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    $end            reduce using rule 42 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)


state 427

    (137) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 458


state 428

    (138) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 459


state 429

    (142) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (153) extract_time -> . YEAR
    (154) extract_time -> . DAY
    (155) extract_time -> . MONTH
    (156) extract_time -> . HOUR
    (157) extract_time -> . MINUTE
    (158) extract_time -> . SECOND

    YEAR            shift and go to state 259
    DAY             shift and go to state 260
    MONTH           shift and go to state 261
    HOUR            shift and go to state 262
    MINUTE          shift and go to state 263
    SECOND          shift and go to state 264

    extract_time                   shift and go to state 460

state 430

    (147) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 461


state 431

    (150) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 462


state 432

    (152) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PTCOMA          reduce using rule 152 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 152 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 433

    (148) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 463


state 434

    (149) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 464


state 435

    (151) TIPO_DATO -> CHAR PAR_A PAR_C .

    PTCOMA          reduce using rule 151 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 151 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 436

    (47) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .

    CREATE          reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    SHOW            reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DROP            reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    USE             reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    ALTER           reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    UPDATE          reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    INSERT          reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DELETE          reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    $end            reduce using rule 47 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)


state 437

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C . REFERENCES campos_c PTCOMA

    REFERENCES      shift and go to state 465


state 438

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica . PAR_C PTCOMA

    PAR_C           shift and go to state 466


state 439

    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c . PAR_C PTCOMA
    (101) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 467
    COMA            shift and go to state 225


state 440

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A . campos_c PAR_C REFERENCES campos_c PTCOMA
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 468

state 441

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos . PAR_C PTCOMA
    (38) lista_datos -> lista_datos . COMA expresion

    PAR_C           shift and go to state 469
    COMA            shift and go to state 317


state 442

    (34) insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C . PTCOMA

    PTCOMA          shift and go to state 470


state 443

    (21) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .

    CREATE          reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    SHOW            reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    USE             reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 21 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)


state 444

    (25) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .

    CREATE          reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    SHOW            reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    DROP            reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    USE             reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    ALTER           reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    UPDATE          reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    INSERT          reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    DELETE          reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    $end            reduce using rule 25 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)


state 445

    (26) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING . returning_exp PTCOMA
    (28) returning_exp -> . ASTERISCO
    (29) returning_exp -> . campos_c
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ASTERISCO       shift and go to state 141
    ID              shift and go to state 139

    returning_exp                  shift and go to state 471
    campos_c                       shift and go to state 142

state 446

    (81) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 81 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 447

    (89) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 89 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 448

    (122) C_check -> CONSTRAINT ID CHECK PAR_A . expresion_logica PAR_C
    (203) expresion_logica -> . expresion_relacional AND expresion_relacional
    (204) expresion_logica -> . expresion_relacional OR expresion_relacional
    (205) expresion_logica -> . NOT expresion_relacional
    (206) expresion_logica -> . expresion_relacional
    (194) expresion_relacional -> . expresion MAYQUE expresion
    (195) expresion_relacional -> . expresion MENQUE expresion
    (196) expresion_relacional -> . expresion MAYIGQUE expresion
    (197) expresion_relacional -> . expresion MENIGQUE expresion
    (198) expresion_relacional -> . expresion DOBLEIG expresion
    (199) expresion_relacional -> . expresion IGUAL expresion
    (200) expresion_relacional -> . expresion NOIG expresion
    (201) expresion_relacional -> . expresion NOIGUAL expresion
    (202) expresion_relacional -> . expresion
    (181) expresion -> . CADENA
    (182) expresion -> . ENTERO
    (183) expresion -> . FLOTANTE
    (184) expresion -> . ID
    (185) expresion -> . ID PUNTO ID
    (186) expresion -> . expresion SUMA expresion
    (187) expresion -> . expresion RESTA expresion
    (188) expresion -> . expresion DIVISION expresion
    (189) expresion -> . expresion ASTERISCO expresion
    (190) expresion -> . TRUE
    (191) expresion -> . FALSE

    NOT             shift and go to state 132
    CADENA          shift and go to state 134
    ENTERO          shift and go to state 135
    FLOTANTE        shift and go to state 136
    ID              shift and go to state 128
    TRUE            shift and go to state 137
    FALSE           shift and go to state 138

    expresion_logica               shift and go to state 472
    expresion_relacional           shift and go to state 131
    expresion                      shift and go to state 133

state 449

    (121) C_check -> CHECK PAR_A expresion_logica PAR_C .

    NULL            reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    NOT             reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    UNIQUE          reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    CONSTRAINT      reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    CHECK           reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    PRIMARY         reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    FOREIGN         reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    DEFAULT         reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    PAR_C           reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 121 (C_check -> CHECK PAR_A expresion_logica PAR_C .)


state 450

    (164) TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 473


state 451

    (165) TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 474


state 452

    (174) TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    NULL            reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    UNIQUE          reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    CONSTRAINT      reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    CHECK           reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PRIMARY         reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    FOREIGN         reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    DEFAULT         reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 174 (TIPO_DATO_DEF -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 453

    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 475


state 454

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 476


state 455

    (98) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 98 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 98 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 456

    (99) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 99 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 99 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 457

    (100) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 477


state 458

    (137) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 478


state 459

    (138) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 479


state 460

    (142) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PTCOMA          reduce using rule 142 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 142 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 461

    (147) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 480


state 462

    (150) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PTCOMA          reduce using rule 150 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 150 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 463

    (148) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PTCOMA          reduce using rule 148 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 148 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 464

    (149) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PTCOMA          reduce using rule 149 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 149 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 465

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES . campos_c PTCOMA
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 481

state 466

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C . PTCOMA

    PTCOMA          shift and go to state 482


state 467

    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C . PTCOMA

    PTCOMA          shift and go to state 483


state 468

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c . PAR_C REFERENCES campos_c PTCOMA
    (101) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 484
    COMA            shift and go to state 225


state 469

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C . PTCOMA

    PTCOMA          shift and go to state 485


state 470

    (34) insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .

    CREATE          reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    SHOW            reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DROP            reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    USE             reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    ALTER           reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    UPDATE          reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    INSERT          reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DELETE          reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    $end            reduce using rule 34 (insert_insrt -> INSERT INTO ID PAR_A PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)


state 471

    (26) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 486


state 472

    (122) C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 487


state 473

    (164) TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    NULL            reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    UNIQUE          reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    CONSTRAINT      reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    CHECK           reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PRIMARY         reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    FOREIGN         reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    DEFAULT         reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 164 (TIPO_DATO_DEF -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 474

    (165) TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    NULL            reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    UNIQUE          reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    CONSTRAINT      reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    CHECK           reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PRIMARY         reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    FOREIGN         reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    DEFAULT         reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 165 (TIPO_DATO_DEF -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 475

    (104) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    USE             reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    ALTER           reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    UPDATE          reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    INSERT          reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DELETE          reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 104 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 476

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 488


state 477

    (100) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 489


state 478

    (137) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 490


state 479

    (138) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 491


state 480

    (147) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PTCOMA          reduce using rule 147 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 147 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 481

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c . PTCOMA
    (101) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 492
    COMA            shift and go to state 225


state 482

    (49) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .

    CREATE          reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    SHOW            reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DROP            reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    USE             reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    ALTER           reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    UPDATE          reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    INSERT          reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DELETE          reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    $end            reduce using rule 49 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)


state 483

    (50) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .

    CREATE          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    SHOW            reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    DROP            reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    USE             reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    ALTER           reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    UPDATE          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    INSERT          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    DELETE          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    $end            reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)


state 484

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C . REFERENCES campos_c PTCOMA

    REFERENCES      shift and go to state 493


state 485

    (33) insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .

    CREATE          reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    SHOW            reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DROP            reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    USE             reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    ALTER           reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    UPDATE          reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    INSERT          reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DELETE          reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    $end            reduce using rule 33 (insert_insrt -> INSERT INTO ID PAR_A lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)


state 486

    (26) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .

    CREATE          reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    SHOW            reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    USE             reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 26 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)


state 487

    (122) C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .

    NULL            reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    NOT             reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    UNIQUE          reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    CONSTRAINT      reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    CHECK           reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    PRIMARY         reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    FOREIGN         reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    DEFAULT         reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    PAR_C           reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 122 (C_check -> CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C .)


state 488

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 494


state 489

    (100) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 495


state 490

    (137) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PTCOMA          reduce using rule 137 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 137 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 491

    (138) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PTCOMA          reduce using rule 138 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 138 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 492

    (48) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .

    CREATE          reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    SHOW            reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DROP            reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    USE             reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    ALTER           reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    UPDATE          reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    INSERT          reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DELETE          reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    $end            reduce using rule 48 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)


state 493

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES . campos_c PTCOMA
    (101) campos_c -> . campos_c COMA ID
    (102) campos_c -> . ID

    ID              shift and go to state 139

    campos_c                       shift and go to state 496

state 494

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 497


state 495

    (100) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 498


state 496

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c . PTCOMA
    (101) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 499
    COMA            shift and go to state 225


state 497

    (129) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 129 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 129 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 498

    (100) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 500


state 499

    (51) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .

    CREATE          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    SHOW            reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DROP            reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    USE             reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    ALTER           reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    UPDATE          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    INSERT          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DELETE          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    $end            reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)


state 500

    (100) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 501


state 501

    (100) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 100 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 100 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

