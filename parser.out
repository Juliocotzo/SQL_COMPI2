Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALL
    ANY
    AS
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    COLUMN
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    DIV
    D_OR
    ELSE
    ENCODE
    END
    ENUM
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FOREIGN
    FROM
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ONLY
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RETURNING
    RIGHT
    ROUND
    SCALE
    SELECT
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    TYPE
    UNION
    UNKNOWN
    USING
    VALUES
    WHEN
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     instruccion -> show_tables_instr
Rule 8     instruccion -> drop_database_instr
Rule 9     instruccion -> use_database_instr
Rule 10    instruccion -> alterDB_insrt
Rule 11    instruccion -> update_insrt
Rule 12    update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA
Rule 13    lista_update -> lista_update COMA parametro_update
Rule 14    lista_update -> parametro_update
Rule 15    parametro_update -> ID IGUAL expresion
Rule 16    alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 17    alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 18    usuariosDB -> ID
Rule 19    usuariosDB -> CURRENT_USER
Rule 20    usuariosDB -> SESSION_USER
Rule 21    usuariosDB -> CADENA
Rule 22    use_database_instr -> USE ID PTCOMA
Rule 23    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 24    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 25    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 26    show_tables_instr -> SHOW TABLES PTCOMA
Rule 27    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 28    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 29    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 30    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 31    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 32    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 33    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 34    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 35    createDB_unParam -> OWNER ID
Rule 36    createDB_unParam -> OWNER IGUAL ID
Rule 37    createDB_unParam -> MODE ENTERO
Rule 38    createDB_unParam -> MODE IGUAL ENTERO
Rule 39    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 40    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 41    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 42    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 43    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 44    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 45    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 46    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 47    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 48    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 49    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 50    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 51    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 52    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 53    constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 54    campos_c -> campos_c COMA ID
Rule 55    campos_c -> ID
Rule 56    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 57    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 58    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 59    cuerpo_createTable_lista -> cuerpo_createTable
Rule 60    cuerpo_createTable -> ID TIPO_DATO
Rule 61    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 62    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 63    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 64    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 65    cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 66    cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 67    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 68    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 69    TIPO_DATO -> TEXT
Rule 70    TIPO_DATO -> FLOAT
Rule 71    TIPO_DATO -> INTEGER
Rule 72    TIPO_DATO -> SMALLINT
Rule 73    TIPO_DATO -> MONEY
Rule 74    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 75    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 76    TIPO_DATO -> BIGINT
Rule 77    TIPO_DATO -> REAL
Rule 78    TIPO_DATO -> DOUBLE PRECISION
Rule 79    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 80    TIPO_DATO -> INTERVAL
Rule 81    TIPO_DATO -> TIME
Rule 82    TIPO_DATO -> TIMESTAMP
Rule 83    TIPO_DATO -> DATE
Rule 84    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 85    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 86    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 87    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 88    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 89    TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 90    extract_time -> YEAR
Rule 91    extract_time -> DAY
Rule 92    extract_time -> MONTH
Rule 93    extract_time -> HOUR
Rule 94    extract_time -> MINUTE
Rule 95    extract_time -> SECOND
Rule 96    agrupacion_expresion -> PAR_A expresion PAR_C
Rule 97    expresion -> CADENA
Rule 98    expresion -> ENTERO
Rule 99    expresion -> FLOTANTE
Rule 100   expresion -> ID
Rule 101   expresion -> ID PUNTO ID
Rule 102   expresion -> expresion SUMA expresion
Rule 103   expresion -> expresion RESTA expresion
Rule 104   expresion -> expresion DIVISION expresion
Rule 105   expresion -> expresion ASTERISCO expresion
Rule 106   expresion -> TRUE
Rule 107   expresion -> FALSE
Rule 108   string_type -> CADENA
Rule 109   string_type -> ID
Rule 110   expresion_relacional -> expresion MAYQUE expresion
Rule 111   expresion_relacional -> expresion MENQUE expresion
Rule 112   expresion_relacional -> expresion MAYIGQUE expresion
Rule 113   expresion_relacional -> expresion MENIGQUE expresion
Rule 114   expresion_relacional -> expresion DOBLEIG expresion
Rule 115   expresion_relacional -> expresion IGUAL expresion
Rule 116   expresion_relacional -> expresion NOIG expresion
Rule 117   expresion_relacional -> expresion NOIGUAL expresion
Rule 118   expresion_relacional -> expresion
Rule 119   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 120   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 121   expresion_logica -> NOT expresion_relacional
Rule 122   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALL                  : 
ALTER                : 16 17
AND                  : 119
ANY                  : 
AS                   : 
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 105
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 76
BY                   : 
CADENA               : 21 97 108
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 86 88
CHARACTER            : 84 87 89
CHECK                : 51
COLUMN               : 
COMA                 : 13 54 58 74 75
CONSTRAINT           : 68
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 27 28 29 30 31 32 33 34 39 40 41 42 56 57
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 19
DATABASE             : 16 17 23 24 27 28 29 30 31 32 33 34 39 40 41 42
DATABASES            : 25
DATE                 : 83
DATE_PART            : 
DAY                  : 91
DECIMAL              : 74
DECODE               : 
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 104
DOBLEIG              : 114
DOUBLE               : 78
DROP                 : 23 24
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 37 38 43 44 45 46 47 48 49 50 74 74 75 75 84 85 86 87 98
ENUM                 : 
EXCEPT               : 
EXISTS               : 24 29 30 33 34 41 42
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 107
FLOAT                : 70
FLOOR                : 
FLOTANTE             : 99
FOREIGN              : 
FOREING              : 53 66
FROM                 : 
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 93
ID                   : 12 15 16 16 17 18 22 23 24 27 28 29 30 31 32 33 34 35 36 39 40 41 42 43 44 45 46 47 48 49 50 53 53 53 54 55 56 57 57 60 61 62 62 63 64 65 66 66 66 68 100 101 101 109
IF                   : 24 29 30 33 34 41 42
IGUAL                : 15 36 38 44 45 46 46 48 49 50 50 115
IN                   : 
INHERITS             : 57
INNER                : 
INSERT               : 
INTEGER              : 71
INTERSECT            : 
INTERVAL             : 79 80
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 53 61 65 66
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 112
MAYMAY               : 
MAYQUE               : 110
MD5                  : 
MENIGQUE             : 113
MENMEN               : 
MENQUE               : 111
MIN                  : 
MINUTE               : 94
MIN_SCALE            : 
MOD                  : 
MODE                 : 37 38 43 44 45 46 47 48 49 50
MODULO               : 
MONEY                : 73
MONTH                : 92
MULTI                : 
NATURAL              : 
NOIG                 : 116
NOIGUAL              : 117
NOT                  : 29 30 33 34 41 42 63 121
NOTNULL              : 
NOW                  : 
NULL                 : 63 64
NUMERIC              : 75
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 28 30 32 34 40 42 120
ORDER                : 
OUTER                : 
OWNER                : 17 35 36 43 44 45 46 47 48 49 50
PAR_A                : 51 52 53 53 56 57 57 65 66 66 67 74 75 84 85 86 87 88 89 96
PAR_C                : 51 52 53 53 56 57 57 65 66 66 67 74 75 84 85 86 87 88 89 96
PI                   : 
POWER                : 
PRECISION            : 78
PRIMARY              : 61 65
PTCOMA               : 12 16 17 22 23 24 25 26 27 28 29 30 31 32 33 34 39 40 41 42 56 57
PUNTO                : 101
RADIANS              : 
RANDOM               : 
REAL                 : 77
REFERENCES           : 53 62 66
RENAME               : 16
REPLACE              : 28 30 32 34 40 42
RESTA                : 103
RETURNING            : 
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 95
SELECT               : 
SESSION_USER         : 20
SET                  : 12
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 25 26
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 72
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 102
SYMMETRIC            : 
S_OR                 : 
TABLE                : 56 57
TABLES               : 26
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 69
THEN                 : 
TIME                 : 81
TIMESTAMP            : 82
TO                   : 16 17 79
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 106
TYPE                 : 
UNION                : 
UNIQUE               : 52 67
UNKNOWN              : 
UPDATE               : 12
USE                  : 22
USING                : 
VALUES               : 
VARCHAR              : 85
VARYING              : 84
WHEN                 : 
WHERE                : 12
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 90
error                : 

Nonterminals, with rules where they appear

TIPO_DATO            : 60 61 62 63 64
agrupacion_expresion : 
alterDB_insrt        : 10
campos_c             : 52 54 67
constraint_esp       : 68
createDB_dosParam    : 39 40 41 42
createDB_insrt       : 4
createDB_unParam     : 31 32 33 34
create_Table_isnrt   : 5
cuerpo_createTable   : 58 59
cuerpo_createTable_lista : 56 57 58
drop_database_instr  : 8
expresion            : 15 96 102 102 103 103 104 104 105 105 110 110 111 111 112 112 113 113 114 114 115 115 116 116 117 117 118
expresion_logica     : 51
expresion_relacional : 12 119 119 120 120 121 122
extract_time         : 79 79
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
lista_update         : 12 13
parametro_update     : 13 14
show_databases_instr : 6
show_tables_instr    : 7
string_type          : 
update_insrt         : 11
use_database_instr   : 9
usuariosDB           : 17

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (11) instruccion -> . update_insrt
    (27) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (42) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (56) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (57) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (25) show_databases_instr -> . SHOW DATABASES PTCOMA
    (26) show_tables_instr -> . SHOW TABLES PTCOMA
    (23) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (24) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (22) use_database_instr -> . USE ID PTCOMA
    (16) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (17) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (12) update_insrt -> . UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA

    CREATE          shift and go to state 12
    SHOW            shift and go to state 13
    DROP            shift and go to state 14
    USE             shift and go to state 15
    ALTER           shift and go to state 16
    UPDATE          shift and go to state 17

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10
    update_insrt                   shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (11) instruccion -> . update_insrt
    (27) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (42) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (56) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (57) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (25) show_databases_instr -> . SHOW DATABASES PTCOMA
    (26) show_tables_instr -> . SHOW TABLES PTCOMA
    (23) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (24) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (22) use_database_instr -> . USE ID PTCOMA
    (16) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (17) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (12) update_insrt -> . UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 12
    SHOW            shift and go to state 13
    DROP            shift and go to state 14
    USE             shift and go to state 15
    ALTER           shift and go to state 16
    UPDATE          shift and go to state 17

    instruccion                    shift and go to state 18
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10
    update_insrt                   shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    USE             reduce using rule 3 (instrucciones -> instruccion .)
    ALTER           reduce using rule 3 (instrucciones -> instruccion .)
    UPDATE          reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 4 (instruccion -> createDB_insrt .)
    USE             reduce using rule 4 (instruccion -> createDB_insrt .)
    ALTER           reduce using rule 4 (instruccion -> createDB_insrt .)
    UPDATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    USE             reduce using rule 5 (instruccion -> create_Table_isnrt .)
    ALTER           reduce using rule 5 (instruccion -> create_Table_isnrt .)
    UPDATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    DROP            reduce using rule 6 (instruccion -> show_databases_instr .)
    USE             reduce using rule 6 (instruccion -> show_databases_instr .)
    ALTER           reduce using rule 6 (instruccion -> show_databases_instr .)
    UPDATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (7) instruccion -> show_tables_instr .

    CREATE          reduce using rule 7 (instruccion -> show_tables_instr .)
    SHOW            reduce using rule 7 (instruccion -> show_tables_instr .)
    DROP            reduce using rule 7 (instruccion -> show_tables_instr .)
    USE             reduce using rule 7 (instruccion -> show_tables_instr .)
    ALTER           reduce using rule 7 (instruccion -> show_tables_instr .)
    UPDATE          reduce using rule 7 (instruccion -> show_tables_instr .)
    $end            reduce using rule 7 (instruccion -> show_tables_instr .)


state 8

    (8) instruccion -> drop_database_instr .

    CREATE          reduce using rule 8 (instruccion -> drop_database_instr .)
    SHOW            reduce using rule 8 (instruccion -> drop_database_instr .)
    DROP            reduce using rule 8 (instruccion -> drop_database_instr .)
    USE             reduce using rule 8 (instruccion -> drop_database_instr .)
    ALTER           reduce using rule 8 (instruccion -> drop_database_instr .)
    UPDATE          reduce using rule 8 (instruccion -> drop_database_instr .)
    $end            reduce using rule 8 (instruccion -> drop_database_instr .)


state 9

    (9) instruccion -> use_database_instr .

    CREATE          reduce using rule 9 (instruccion -> use_database_instr .)
    SHOW            reduce using rule 9 (instruccion -> use_database_instr .)
    DROP            reduce using rule 9 (instruccion -> use_database_instr .)
    USE             reduce using rule 9 (instruccion -> use_database_instr .)
    ALTER           reduce using rule 9 (instruccion -> use_database_instr .)
    UPDATE          reduce using rule 9 (instruccion -> use_database_instr .)
    $end            reduce using rule 9 (instruccion -> use_database_instr .)


state 10

    (10) instruccion -> alterDB_insrt .

    CREATE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    SHOW            reduce using rule 10 (instruccion -> alterDB_insrt .)
    DROP            reduce using rule 10 (instruccion -> alterDB_insrt .)
    USE             reduce using rule 10 (instruccion -> alterDB_insrt .)
    ALTER           reduce using rule 10 (instruccion -> alterDB_insrt .)
    UPDATE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    $end            reduce using rule 10 (instruccion -> alterDB_insrt .)


state 11

    (11) instruccion -> update_insrt .

    CREATE          reduce using rule 11 (instruccion -> update_insrt .)
    SHOW            reduce using rule 11 (instruccion -> update_insrt .)
    DROP            reduce using rule 11 (instruccion -> update_insrt .)
    USE             reduce using rule 11 (instruccion -> update_insrt .)
    ALTER           reduce using rule 11 (instruccion -> update_insrt .)
    UPDATE          reduce using rule 11 (instruccion -> update_insrt .)
    $end            reduce using rule 11 (instruccion -> update_insrt .)


state 12

    (27) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (28) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (42) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (56) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (57) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    DATABASE        shift and go to state 19
    OR              shift and go to state 20
    TABLE           shift and go to state 21


state 13

    (25) show_databases_instr -> SHOW . DATABASES PTCOMA
    (26) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 22
    TABLES          shift and go to state 23


state 14

    (23) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (24) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA

    DATABASE        shift and go to state 24


state 15

    (22) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 25


state 16

    (16) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (17) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA

    DATABASE        shift and go to state 26


state 17

    (12) update_insrt -> UPDATE . ID SET lista_update WHERE expresion_relacional PTCOMA

    ID              shift and go to state 27


state 18

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ALTER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UPDATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 19

    (27) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (29) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 28
    IF              shift and go to state 29


state 20

    (28) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (30) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (42) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 30


state 21

    (56) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 31


state 22

    (25) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 32


state 23

    (26) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 33


state 24

    (23) drop_database_instr -> DROP DATABASE . ID PTCOMA
    (24) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 34
    IF              shift and go to state 35


state 25

    (22) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 36


state 26

    (16) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (17) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 37


state 27

    (12) update_insrt -> UPDATE ID . SET lista_update WHERE expresion_relacional PTCOMA

    SET             shift and go to state 38


state 28

    (27) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (31) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (35) createDB_unParam -> . OWNER ID
    (36) createDB_unParam -> . OWNER IGUAL ID
    (37) createDB_unParam -> . MODE ENTERO
    (38) createDB_unParam -> . MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE ENTERO
    (44) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (46) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE ENTERO OWNER ID
    (48) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (50) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 39
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 40
    createDB_dosParam              shift and go to state 41

state 29

    (29) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 44


state 30

    (28) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (42) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 45


state 31

    (56) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 46


state 32

    (25) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    UPDATE          reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 25 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 33

    (26) show_tables_instr -> SHOW TABLES PTCOMA .

    CREATE          reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)
    UPDATE          reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 26 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 34

    (23) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 47


state 35

    (24) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 48


state 36

    (22) use_database_instr -> USE ID PTCOMA .

    CREATE          reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)
    UPDATE          reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 22 (use_database_instr -> USE ID PTCOMA .)


state 37

    (16) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (17) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 49
    OWNER           shift and go to state 50


state 38

    (12) update_insrt -> UPDATE ID SET . lista_update WHERE expresion_relacional PTCOMA
    (13) lista_update -> . lista_update COMA parametro_update
    (14) lista_update -> . parametro_update
    (15) parametro_update -> . ID IGUAL expresion

    ID              shift and go to state 51

    lista_update                   shift and go to state 52
    parametro_update               shift and go to state 53

state 39

    (27) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 40

    (31) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 54


state 41

    (39) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 55


state 42

    (35) createDB_unParam -> OWNER . ID
    (36) createDB_unParam -> OWNER . IGUAL ID
    (43) createDB_dosParam -> OWNER . ID MODE ENTERO
    (44) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (45) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (46) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 56
    IGUAL           shift and go to state 57


state 43

    (37) createDB_unParam -> MODE . ENTERO
    (38) createDB_unParam -> MODE . IGUAL ENTERO
    (47) createDB_dosParam -> MODE . ENTERO OWNER ID
    (48) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (49) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (50) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 58
    IGUAL           shift and go to state 59


state 44

    (29) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 60


state 45

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (42) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 61
    IF              shift and go to state 62


state 46

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (58) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (59) cuerpo_createTable_lista -> . cuerpo_createTable
    (60) cuerpo_createTable -> . ID TIPO_DATO
    (61) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (62) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (63) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (64) cuerpo_createTable -> . ID TIPO_DATO NULL
    (65) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (66) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (67) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (68) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 63
    PRIMARY         shift and go to state 66
    FOREING         shift and go to state 67
    UNIQUE          shift and go to state 68
    CONSTRAINT      shift and go to state 69

    cuerpo_createTable_lista       shift and go to state 64
    cuerpo_createTable             shift and go to state 65

state 47

    (23) drop_database_instr -> DROP DATABASE ID PTCOMA .

    CREATE          reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 23 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 48

    (24) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 70


state 49

    (16) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 71


state 50

    (17) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 72


state 51

    (15) parametro_update -> ID . IGUAL expresion

    IGUAL           shift and go to state 73


state 52

    (12) update_insrt -> UPDATE ID SET lista_update . WHERE expresion_relacional PTCOMA
    (13) lista_update -> lista_update . COMA parametro_update

    WHERE           shift and go to state 74
    COMA            shift and go to state 75


state 53

    (14) lista_update -> parametro_update .

    WHERE           reduce using rule 14 (lista_update -> parametro_update .)
    COMA            reduce using rule 14 (lista_update -> parametro_update .)


state 54

    (31) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 55

    (39) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 39 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 56

    (35) createDB_unParam -> OWNER ID .
    (43) createDB_dosParam -> OWNER ID . MODE ENTERO
    (44) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 35 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 76


state 57

    (36) createDB_unParam -> OWNER IGUAL . ID
    (45) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (46) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 77


state 58

    (37) createDB_unParam -> MODE ENTERO .
    (47) createDB_dosParam -> MODE ENTERO . OWNER ID
    (48) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 37 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 78


state 59

    (38) createDB_unParam -> MODE IGUAL . ENTERO
    (49) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (50) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 79


state 60

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 80


state 61

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (35) createDB_unParam -> . OWNER ID
    (36) createDB_unParam -> . OWNER IGUAL ID
    (37) createDB_unParam -> . MODE ENTERO
    (38) createDB_unParam -> . MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE ENTERO
    (44) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (46) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE ENTERO OWNER ID
    (48) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (50) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 81
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 82
    createDB_dosParam              shift and go to state 83

state 62

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (42) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 84


state 63

    (60) cuerpo_createTable -> ID . TIPO_DATO
    (61) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (62) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (63) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (64) cuerpo_createTable -> ID . TIPO_DATO NULL
    (69) TIPO_DATO -> . TEXT
    (70) TIPO_DATO -> . FLOAT
    (71) TIPO_DATO -> . INTEGER
    (72) TIPO_DATO -> . SMALLINT
    (73) TIPO_DATO -> . MONEY
    (74) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (75) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (76) TIPO_DATO -> . BIGINT
    (77) TIPO_DATO -> . REAL
    (78) TIPO_DATO -> . DOUBLE PRECISION
    (79) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (80) TIPO_DATO -> . INTERVAL
    (81) TIPO_DATO -> . TIME
    (82) TIPO_DATO -> . TIMESTAMP
    (83) TIPO_DATO -> . DATE
    (84) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (85) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (86) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (87) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (88) TIPO_DATO -> . CHAR PAR_A PAR_C
    (89) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 86
    FLOAT           shift and go to state 87
    INTEGER         shift and go to state 88
    SMALLINT        shift and go to state 89
    MONEY           shift and go to state 90
    DECIMAL         shift and go to state 91
    NUMERIC         shift and go to state 92
    BIGINT          shift and go to state 93
    REAL            shift and go to state 94
    DOUBLE          shift and go to state 95
    INTERVAL        shift and go to state 96
    TIME            shift and go to state 97
    TIMESTAMP       shift and go to state 98
    DATE            shift and go to state 99
    CHARACTER       shift and go to state 100
    VARCHAR         shift and go to state 101
    CHAR            shift and go to state 102

    TIPO_DATO                      shift and go to state 85

state 64

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (58) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 103
    COMA            shift and go to state 104


state 65

    (59) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 59 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 59 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 66

    (65) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 105


state 67

    (66) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 106


state 68

    (67) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 107


state 69

    (68) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 108


state 70

    (24) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 109


state 71

    (16) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 110


state 72

    (17) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (18) usuariosDB -> . ID
    (19) usuariosDB -> . CURRENT_USER
    (20) usuariosDB -> . SESSION_USER
    (21) usuariosDB -> . CADENA

    ID              shift and go to state 111
    CURRENT_USER    shift and go to state 113
    SESSION_USER    shift and go to state 114
    CADENA          shift and go to state 115

    usuariosDB                     shift and go to state 112

state 73

    (15) parametro_update -> ID IGUAL . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 117

state 74

    (12) update_insrt -> UPDATE ID SET lista_update WHERE . expresion_relacional PTCOMA
    (110) expresion_relacional -> . expresion MAYQUE expresion
    (111) expresion_relacional -> . expresion MENQUE expresion
    (112) expresion_relacional -> . expresion MAYIGQUE expresion
    (113) expresion_relacional -> . expresion MENIGQUE expresion
    (114) expresion_relacional -> . expresion DOBLEIG expresion
    (115) expresion_relacional -> . expresion IGUAL expresion
    (116) expresion_relacional -> . expresion NOIG expresion
    (117) expresion_relacional -> . expresion NOIGUAL expresion
    (118) expresion_relacional -> . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion_relacional           shift and go to state 123
    expresion                      shift and go to state 124

state 75

    (13) lista_update -> lista_update COMA . parametro_update
    (15) parametro_update -> . ID IGUAL expresion

    ID              shift and go to state 51

    parametro_update               shift and go to state 125

state 76

    (43) createDB_dosParam -> OWNER ID MODE . ENTERO
    (44) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 126
    IGUAL           shift and go to state 127


state 77

    (36) createDB_unParam -> OWNER IGUAL ID .
    (45) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (46) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 36 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 128


state 78

    (47) createDB_dosParam -> MODE ENTERO OWNER . ID
    (48) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 129
    IGUAL           shift and go to state 130


state 79

    (38) createDB_unParam -> MODE IGUAL ENTERO .
    (49) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (50) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 38 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 131


state 80

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (35) createDB_unParam -> . OWNER ID
    (36) createDB_unParam -> . OWNER IGUAL ID
    (37) createDB_unParam -> . MODE ENTERO
    (38) createDB_unParam -> . MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE ENTERO
    (44) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (46) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE ENTERO OWNER ID
    (48) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (50) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 132
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 133
    createDB_dosParam              shift and go to state 134

state 81

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 82

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 135


state 83

    (40) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 136


state 84

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (42) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 137


state 85

    (60) cuerpo_createTable -> ID TIPO_DATO .
    (61) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (62) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (63) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (64) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 60 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 60 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 138
    REFERENCES      shift and go to state 139
    NOT             shift and go to state 140
    NULL            shift and go to state 141


state 86

    (69) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 69 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 69 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 69 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 69 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 69 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 69 (TIPO_DATO -> TEXT .)


state 87

    (70) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 70 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 70 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 70 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 70 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 70 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 70 (TIPO_DATO -> FLOAT .)


state 88

    (71) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 71 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 71 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 71 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 71 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 71 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 71 (TIPO_DATO -> INTEGER .)


state 89

    (72) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 72 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 72 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 72 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 72 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 72 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 72 (TIPO_DATO -> SMALLINT .)


state 90

    (73) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 73 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 73 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 73 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 73 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 73 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 73 (TIPO_DATO -> MONEY .)


state 91

    (74) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 142


state 92

    (75) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 143


state 93

    (76) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 76 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 76 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 76 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 76 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 76 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 76 (TIPO_DATO -> BIGINT .)


state 94

    (77) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 77 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 77 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 77 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 77 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 77 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 77 (TIPO_DATO -> REAL .)


state 95

    (78) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 144


state 96

    (79) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (80) TIPO_DATO -> INTERVAL .
    (90) extract_time -> . YEAR
    (91) extract_time -> . DAY
    (92) extract_time -> . MONTH
    (93) extract_time -> . HOUR
    (94) extract_time -> . MINUTE
    (95) extract_time -> . SECOND

    PRIMARY         reduce using rule 80 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 80 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 80 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 80 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 80 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 80 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 146
    DAY             shift and go to state 147
    MONTH           shift and go to state 148
    HOUR            shift and go to state 149
    MINUTE          shift and go to state 150
    SECOND          shift and go to state 151

    extract_time                   shift and go to state 145

state 97

    (81) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 81 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 81 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 81 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 81 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 81 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 81 (TIPO_DATO -> TIME .)


state 98

    (82) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 82 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 82 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 82 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 82 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 82 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 82 (TIPO_DATO -> TIMESTAMP .)


state 99

    (83) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 83 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 83 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 83 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 83 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 83 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 83 (TIPO_DATO -> DATE .)


state 100

    (84) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (87) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (89) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 152
    PAR_A           shift and go to state 153


state 101

    (85) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 154


state 102

    (86) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (88) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 155


state 103

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 156
    INHERITS        shift and go to state 157


state 104

    (58) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (60) cuerpo_createTable -> . ID TIPO_DATO
    (61) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (62) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (63) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (64) cuerpo_createTable -> . ID TIPO_DATO NULL
    (65) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (66) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (67) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (68) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 63
    PRIMARY         shift and go to state 66
    FOREING         shift and go to state 67
    UNIQUE          shift and go to state 68
    CONSTRAINT      shift and go to state 69

    cuerpo_createTable             shift and go to state 158

state 105

    (65) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 159


state 106

    (66) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 160


state 107

    (67) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (54) campos_c -> . campos_c COMA ID
    (55) campos_c -> . ID

    ID              shift and go to state 162

    campos_c                       shift and go to state 161

state 108

    (68) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (51) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (52) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (53) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 164
    UNIQUE          shift and go to state 165
    FOREING         shift and go to state 166

    constraint_esp                 shift and go to state 163

state 109

    (24) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    CREATE          reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 24 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 110

    (16) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 167


state 111

    (18) usuariosDB -> ID .

    PTCOMA          reduce using rule 18 (usuariosDB -> ID .)


state 112

    (17) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 168


state 113

    (19) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 19 (usuariosDB -> CURRENT_USER .)


state 114

    (20) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 20 (usuariosDB -> SESSION_USER .)


state 115

    (21) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 21 (usuariosDB -> CADENA .)


state 116

    (100) expresion -> ID .
    (101) expresion -> ID . PUNTO ID

    SUMA            reduce using rule 100 (expresion -> ID .)
    RESTA           reduce using rule 100 (expresion -> ID .)
    DIVISION        reduce using rule 100 (expresion -> ID .)
    ASTERISCO       reduce using rule 100 (expresion -> ID .)
    WHERE           reduce using rule 100 (expresion -> ID .)
    COMA            reduce using rule 100 (expresion -> ID .)
    MAYQUE          reduce using rule 100 (expresion -> ID .)
    MENQUE          reduce using rule 100 (expresion -> ID .)
    MAYIGQUE        reduce using rule 100 (expresion -> ID .)
    MENIGQUE        reduce using rule 100 (expresion -> ID .)
    DOBLEIG         reduce using rule 100 (expresion -> ID .)
    IGUAL           reduce using rule 100 (expresion -> ID .)
    NOIG            reduce using rule 100 (expresion -> ID .)
    NOIGUAL         reduce using rule 100 (expresion -> ID .)
    PTCOMA          reduce using rule 100 (expresion -> ID .)
    AND             reduce using rule 100 (expresion -> ID .)
    OR              reduce using rule 100 (expresion -> ID .)
    PAR_C           reduce using rule 100 (expresion -> ID .)
    PUNTO           shift and go to state 169


state 117

    (15) parametro_update -> ID IGUAL expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    WHERE           reduce using rule 15 (parametro_update -> ID IGUAL expresion .)
    COMA            reduce using rule 15 (parametro_update -> ID IGUAL expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 118

    (97) expresion -> CADENA .

    SUMA            reduce using rule 97 (expresion -> CADENA .)
    RESTA           reduce using rule 97 (expresion -> CADENA .)
    DIVISION        reduce using rule 97 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 97 (expresion -> CADENA .)
    WHERE           reduce using rule 97 (expresion -> CADENA .)
    COMA            reduce using rule 97 (expresion -> CADENA .)
    MAYQUE          reduce using rule 97 (expresion -> CADENA .)
    MENQUE          reduce using rule 97 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 97 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 97 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 97 (expresion -> CADENA .)
    IGUAL           reduce using rule 97 (expresion -> CADENA .)
    NOIG            reduce using rule 97 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 97 (expresion -> CADENA .)
    PTCOMA          reduce using rule 97 (expresion -> CADENA .)
    AND             reduce using rule 97 (expresion -> CADENA .)
    OR              reduce using rule 97 (expresion -> CADENA .)
    PAR_C           reduce using rule 97 (expresion -> CADENA .)


state 119

    (98) expresion -> ENTERO .

    SUMA            reduce using rule 98 (expresion -> ENTERO .)
    RESTA           reduce using rule 98 (expresion -> ENTERO .)
    DIVISION        reduce using rule 98 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 98 (expresion -> ENTERO .)
    WHERE           reduce using rule 98 (expresion -> ENTERO .)
    COMA            reduce using rule 98 (expresion -> ENTERO .)
    MAYQUE          reduce using rule 98 (expresion -> ENTERO .)
    MENQUE          reduce using rule 98 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 98 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 98 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 98 (expresion -> ENTERO .)
    IGUAL           reduce using rule 98 (expresion -> ENTERO .)
    NOIG            reduce using rule 98 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 98 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 98 (expresion -> ENTERO .)
    AND             reduce using rule 98 (expresion -> ENTERO .)
    OR              reduce using rule 98 (expresion -> ENTERO .)
    PAR_C           reduce using rule 98 (expresion -> ENTERO .)


state 120

    (99) expresion -> FLOTANTE .

    SUMA            reduce using rule 99 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 99 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 99 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 99 (expresion -> FLOTANTE .)
    WHERE           reduce using rule 99 (expresion -> FLOTANTE .)
    COMA            reduce using rule 99 (expresion -> FLOTANTE .)
    MAYQUE          reduce using rule 99 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 99 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 99 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 99 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 99 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 99 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 99 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 99 (expresion -> FLOTANTE .)
    PTCOMA          reduce using rule 99 (expresion -> FLOTANTE .)
    AND             reduce using rule 99 (expresion -> FLOTANTE .)
    OR              reduce using rule 99 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 99 (expresion -> FLOTANTE .)


state 121

    (106) expresion -> TRUE .

    SUMA            reduce using rule 106 (expresion -> TRUE .)
    RESTA           reduce using rule 106 (expresion -> TRUE .)
    DIVISION        reduce using rule 106 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 106 (expresion -> TRUE .)
    WHERE           reduce using rule 106 (expresion -> TRUE .)
    COMA            reduce using rule 106 (expresion -> TRUE .)
    MAYQUE          reduce using rule 106 (expresion -> TRUE .)
    MENQUE          reduce using rule 106 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 106 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 106 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 106 (expresion -> TRUE .)
    IGUAL           reduce using rule 106 (expresion -> TRUE .)
    NOIG            reduce using rule 106 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 106 (expresion -> TRUE .)
    PTCOMA          reduce using rule 106 (expresion -> TRUE .)
    AND             reduce using rule 106 (expresion -> TRUE .)
    OR              reduce using rule 106 (expresion -> TRUE .)
    PAR_C           reduce using rule 106 (expresion -> TRUE .)


state 122

    (107) expresion -> FALSE .

    SUMA            reduce using rule 107 (expresion -> FALSE .)
    RESTA           reduce using rule 107 (expresion -> FALSE .)
    DIVISION        reduce using rule 107 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 107 (expresion -> FALSE .)
    WHERE           reduce using rule 107 (expresion -> FALSE .)
    COMA            reduce using rule 107 (expresion -> FALSE .)
    MAYQUE          reduce using rule 107 (expresion -> FALSE .)
    MENQUE          reduce using rule 107 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 107 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 107 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 107 (expresion -> FALSE .)
    IGUAL           reduce using rule 107 (expresion -> FALSE .)
    NOIG            reduce using rule 107 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 107 (expresion -> FALSE .)
    PTCOMA          reduce using rule 107 (expresion -> FALSE .)
    AND             reduce using rule 107 (expresion -> FALSE .)
    OR              reduce using rule 107 (expresion -> FALSE .)
    PAR_C           reduce using rule 107 (expresion -> FALSE .)


state 123

    (12) update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional . PTCOMA

    PTCOMA          shift and go to state 174


state 124

    (110) expresion_relacional -> expresion . MAYQUE expresion
    (111) expresion_relacional -> expresion . MENQUE expresion
    (112) expresion_relacional -> expresion . MAYIGQUE expresion
    (113) expresion_relacional -> expresion . MENIGQUE expresion
    (114) expresion_relacional -> expresion . DOBLEIG expresion
    (115) expresion_relacional -> expresion . IGUAL expresion
    (116) expresion_relacional -> expresion . NOIG expresion
    (117) expresion_relacional -> expresion . NOIGUAL expresion
    (118) expresion_relacional -> expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 175
    MENQUE          shift and go to state 176
    MAYIGQUE        shift and go to state 177
    MENIGQUE        shift and go to state 178
    DOBLEIG         shift and go to state 179
    IGUAL           shift and go to state 180
    NOIG            shift and go to state 181
    NOIGUAL         shift and go to state 182
    PTCOMA          reduce using rule 118 (expresion_relacional -> expresion .)
    AND             reduce using rule 118 (expresion_relacional -> expresion .)
    OR              reduce using rule 118 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 118 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 125

    (13) lista_update -> lista_update COMA parametro_update .

    WHERE           reduce using rule 13 (lista_update -> lista_update COMA parametro_update .)
    COMA            reduce using rule 13 (lista_update -> lista_update COMA parametro_update .)


state 126

    (43) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 127

    (44) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 183


state 128

    (45) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (46) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 185
    IGUAL           shift and go to state 184


state 129

    (47) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 47 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 130

    (48) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 186


state 131

    (49) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (50) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 188
    IGUAL           shift and go to state 187


state 132

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 133

    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 189


state 134

    (41) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 190


state 135

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 136

    (40) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 137

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (42) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 191


state 138

    (61) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 192


state 139

    (62) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 193


state 140

    (63) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 194


state 141

    (64) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 64 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 64 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 142

    (74) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 195


state 143

    (75) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 196


state 144

    (78) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 78 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 78 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 78 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 78 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 78 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 78 (TIPO_DATO -> DOUBLE PRECISION .)


state 145

    (79) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 197


state 146

    (90) extract_time -> YEAR .

    TO              reduce using rule 90 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 90 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 90 (extract_time -> YEAR .)
    NOT             reduce using rule 90 (extract_time -> YEAR .)
    NULL            reduce using rule 90 (extract_time -> YEAR .)
    PAR_C           reduce using rule 90 (extract_time -> YEAR .)
    COMA            reduce using rule 90 (extract_time -> YEAR .)


state 147

    (91) extract_time -> DAY .

    TO              reduce using rule 91 (extract_time -> DAY .)
    PRIMARY         reduce using rule 91 (extract_time -> DAY .)
    REFERENCES      reduce using rule 91 (extract_time -> DAY .)
    NOT             reduce using rule 91 (extract_time -> DAY .)
    NULL            reduce using rule 91 (extract_time -> DAY .)
    PAR_C           reduce using rule 91 (extract_time -> DAY .)
    COMA            reduce using rule 91 (extract_time -> DAY .)


state 148

    (92) extract_time -> MONTH .

    TO              reduce using rule 92 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 92 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 92 (extract_time -> MONTH .)
    NOT             reduce using rule 92 (extract_time -> MONTH .)
    NULL            reduce using rule 92 (extract_time -> MONTH .)
    PAR_C           reduce using rule 92 (extract_time -> MONTH .)
    COMA            reduce using rule 92 (extract_time -> MONTH .)


state 149

    (93) extract_time -> HOUR .

    TO              reduce using rule 93 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 93 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 93 (extract_time -> HOUR .)
    NOT             reduce using rule 93 (extract_time -> HOUR .)
    NULL            reduce using rule 93 (extract_time -> HOUR .)
    PAR_C           reduce using rule 93 (extract_time -> HOUR .)
    COMA            reduce using rule 93 (extract_time -> HOUR .)


state 150

    (94) extract_time -> MINUTE .

    TO              reduce using rule 94 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 94 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 94 (extract_time -> MINUTE .)
    NOT             reduce using rule 94 (extract_time -> MINUTE .)
    NULL            reduce using rule 94 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 94 (extract_time -> MINUTE .)
    COMA            reduce using rule 94 (extract_time -> MINUTE .)


state 151

    (95) extract_time -> SECOND .

    TO              reduce using rule 95 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 95 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 95 (extract_time -> SECOND .)
    NOT             reduce using rule 95 (extract_time -> SECOND .)
    NULL            reduce using rule 95 (extract_time -> SECOND .)
    PAR_C           reduce using rule 95 (extract_time -> SECOND .)
    COMA            reduce using rule 95 (extract_time -> SECOND .)


state 152

    (84) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 198


state 153

    (87) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (89) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 199
    PAR_C           shift and go to state 200


state 154

    (85) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 201


state 155

    (86) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (88) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 202
    PAR_C           shift and go to state 203


state 156

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DROP            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    USE             reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    ALTER           reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    UPDATE          reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 157

    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 204


state 158

    (58) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 58 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 58 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 159

    (65) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 205


state 160

    (66) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 206


state 161

    (67) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (54) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 207
    COMA            shift and go to state 208


state 162

    (55) campos_c -> ID .

    PAR_C           reduce using rule 55 (campos_c -> ID .)
    COMA            reduce using rule 55 (campos_c -> ID .)


state 163

    (68) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 68 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 68 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 164

    (51) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 209


state 165

    (52) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 210


state 166

    (53) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 211


state 167

    (16) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    CREATE          reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    UPDATE          reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 168

    (17) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    CREATE          reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    UPDATE          reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 17 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 169

    (101) expresion -> ID PUNTO . ID

    ID              shift and go to state 212


state 170

    (102) expresion -> expresion SUMA . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 213

state 171

    (103) expresion -> expresion RESTA . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 214

state 172

    (104) expresion -> expresion DIVISION . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 215

state 173

    (105) expresion -> expresion ASTERISCO . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 216

state 174

    (12) update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .

    CREATE          reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    SHOW            reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    DROP            reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    USE             reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    ALTER           reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    UPDATE          reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)
    $end            reduce using rule 12 (update_insrt -> UPDATE ID SET lista_update WHERE expresion_relacional PTCOMA .)


state 175

    (110) expresion_relacional -> expresion MAYQUE . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 217

state 176

    (111) expresion_relacional -> expresion MENQUE . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 218

state 177

    (112) expresion_relacional -> expresion MAYIGQUE . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 219

state 178

    (113) expresion_relacional -> expresion MENIGQUE . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 220

state 179

    (114) expresion_relacional -> expresion DOBLEIG . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 221

state 180

    (115) expresion_relacional -> expresion IGUAL . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 222

state 181

    (116) expresion_relacional -> expresion NOIG . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 223

state 182

    (117) expresion_relacional -> expresion NOIGUAL . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion                      shift and go to state 224

state 183

    (44) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 184

    (46) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 225


state 185

    (45) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 45 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 186

    (48) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 48 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 187

    (50) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 226


state 188

    (49) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 49 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 189

    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 190

    (41) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 41 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 191

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (42) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (35) createDB_unParam -> . OWNER ID
    (36) createDB_unParam -> . OWNER IGUAL ID
    (37) createDB_unParam -> . MODE ENTERO
    (38) createDB_unParam -> . MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE ENTERO
    (44) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (46) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE ENTERO OWNER ID
    (48) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (50) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 227
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 228
    createDB_dosParam              shift and go to state 229

state 192

    (61) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 193

    (62) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 194

    (63) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 63 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 63 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 195

    (74) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 230


state 196

    (75) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 231


state 197

    (79) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (90) extract_time -> . YEAR
    (91) extract_time -> . DAY
    (92) extract_time -> . MONTH
    (93) extract_time -> . HOUR
    (94) extract_time -> . MINUTE
    (95) extract_time -> . SECOND

    YEAR            shift and go to state 146
    DAY             shift and go to state 147
    MONTH           shift and go to state 148
    HOUR            shift and go to state 149
    MINUTE          shift and go to state 150
    SECOND          shift and go to state 151

    extract_time                   shift and go to state 232

state 198

    (84) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 233


state 199

    (87) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 234


state 200

    (89) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 89 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 89 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 89 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 89 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 89 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 89 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 201

    (85) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 235


state 202

    (86) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 236


state 203

    (88) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 88 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 88 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 88 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 88 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 88 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 88 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 204

    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 237


state 205

    (65) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 238


state 206

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 239


state 207

    (67) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 67 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 67 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 208

    (54) campos_c -> campos_c COMA . ID

    ID              shift and go to state 240


state 209

    (51) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (119) expresion_logica -> . expresion_relacional AND expresion_relacional
    (120) expresion_logica -> . expresion_relacional OR expresion_relacional
    (121) expresion_logica -> . NOT expresion_relacional
    (122) expresion_logica -> . expresion_relacional
    (110) expresion_relacional -> . expresion MAYQUE expresion
    (111) expresion_relacional -> . expresion MENQUE expresion
    (112) expresion_relacional -> . expresion MAYIGQUE expresion
    (113) expresion_relacional -> . expresion MENIGQUE expresion
    (114) expresion_relacional -> . expresion DOBLEIG expresion
    (115) expresion_relacional -> . expresion IGUAL expresion
    (116) expresion_relacional -> . expresion NOIG expresion
    (117) expresion_relacional -> . expresion NOIGUAL expresion
    (118) expresion_relacional -> . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    NOT             shift and go to state 243
    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion_logica               shift and go to state 241
    expresion_relacional           shift and go to state 242
    expresion                      shift and go to state 124

state 210

    (52) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (54) campos_c -> . campos_c COMA ID
    (55) campos_c -> . ID

    ID              shift and go to state 162

    campos_c                       shift and go to state 244

state 211

    (53) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 245


state 212

    (101) expresion -> ID PUNTO ID .

    SUMA            reduce using rule 101 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 101 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 101 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 101 (expresion -> ID PUNTO ID .)
    WHERE           reduce using rule 101 (expresion -> ID PUNTO ID .)
    COMA            reduce using rule 101 (expresion -> ID PUNTO ID .)
    MAYQUE          reduce using rule 101 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 101 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 101 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 101 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 101 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 101 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 101 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 101 (expresion -> ID PUNTO ID .)
    PTCOMA          reduce using rule 101 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 101 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 101 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 101 (expresion -> ID PUNTO ID .)


state 213

    (102) expresion -> expresion SUMA expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    SUMA            reduce using rule 102 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 102 (expresion -> expresion SUMA expresion .)
    WHERE           reduce using rule 102 (expresion -> expresion SUMA expresion .)
    COMA            reduce using rule 102 (expresion -> expresion SUMA expresion .)
    MAYQUE          reduce using rule 102 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 102 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 102 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 102 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 102 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 102 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 102 (expresion -> expresion SUMA expresion .)
    PTCOMA          reduce using rule 102 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 102 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 102 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 102 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173

  ! DIVISION        [ reduce using rule 102 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 102 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 170 ]
  ! RESTA           [ shift and go to state 171 ]


state 214

    (103) expresion -> expresion RESTA expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    SUMA            reduce using rule 103 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 103 (expresion -> expresion RESTA expresion .)
    WHERE           reduce using rule 103 (expresion -> expresion RESTA expresion .)
    COMA            reduce using rule 103 (expresion -> expresion RESTA expresion .)
    MAYQUE          reduce using rule 103 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 103 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 103 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 103 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 103 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 103 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 103 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 103 (expresion -> expresion RESTA expresion .)
    PTCOMA          reduce using rule 103 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 103 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 103 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 103 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173

  ! DIVISION        [ reduce using rule 103 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 103 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 170 ]
  ! RESTA           [ shift and go to state 171 ]


state 215

    (104) expresion -> expresion DIVISION expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    SUMA            reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    WHERE           reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    MAYQUE          reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 104 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 104 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 170 ]
  ! RESTA           [ shift and go to state 171 ]
  ! DIVISION        [ shift and go to state 172 ]
  ! ASTERISCO       [ shift and go to state 173 ]


state 216

    (105) expresion -> expresion ASTERISCO expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    SUMA            reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    WHERE           reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    COMA            reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    MAYQUE          reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    PTCOMA          reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 105 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 170 ]
  ! RESTA           [ shift and go to state 171 ]
  ! DIVISION        [ shift and go to state 172 ]
  ! ASTERISCO       [ shift and go to state 173 ]


state 217

    (110) expresion_relacional -> expresion MAYQUE expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 110 (expresion_relacional -> expresion MAYQUE expresion .)
    AND             reduce using rule 110 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 110 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 110 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 218

    (111) expresion_relacional -> expresion MENQUE expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 111 (expresion_relacional -> expresion MENQUE expresion .)
    AND             reduce using rule 111 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 111 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 111 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 219

    (112) expresion_relacional -> expresion MAYIGQUE expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 112 (expresion_relacional -> expresion MAYIGQUE expresion .)
    AND             reduce using rule 112 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 112 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 112 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 220

    (113) expresion_relacional -> expresion MENIGQUE expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 113 (expresion_relacional -> expresion MENIGQUE expresion .)
    AND             reduce using rule 113 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 113 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 113 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 221

    (114) expresion_relacional -> expresion DOBLEIG expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 114 (expresion_relacional -> expresion DOBLEIG expresion .)
    AND             reduce using rule 114 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 114 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 114 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 222

    (115) expresion_relacional -> expresion IGUAL expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 115 (expresion_relacional -> expresion IGUAL expresion .)
    AND             reduce using rule 115 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 115 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 115 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 223

    (116) expresion_relacional -> expresion NOIG expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 116 (expresion_relacional -> expresion NOIG expresion .)
    AND             reduce using rule 116 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 116 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 116 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 224

    (117) expresion_relacional -> expresion NOIGUAL expresion .
    (102) expresion -> expresion . SUMA expresion
    (103) expresion -> expresion . RESTA expresion
    (104) expresion -> expresion . DIVISION expresion
    (105) expresion -> expresion . ASTERISCO expresion

    PTCOMA          reduce using rule 117 (expresion_relacional -> expresion NOIGUAL expresion .)
    AND             reduce using rule 117 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 117 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 117 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    DIVISION        shift and go to state 172
    ASTERISCO       shift and go to state 173


state 225

    (46) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 46 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 226

    (50) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 50 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 227

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 228

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 246


state 229

    (42) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 247


state 230

    (74) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 248


state 231

    (75) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 249


state 232

    (79) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 79 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 79 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 79 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 79 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 79 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 79 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 233

    (84) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 250


state 234

    (87) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 87 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 87 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 87 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 87 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 87 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 87 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 235

    (85) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 85 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 85 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 85 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 85 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 85 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 85 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 236

    (86) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 86 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 86 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 86 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 86 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 86 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 86 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 237

    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 251


state 238

    (65) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 65 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 65 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 239

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 252


state 240

    (54) campos_c -> campos_c COMA ID .

    PAR_C           reduce using rule 54 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 54 (campos_c -> campos_c COMA ID .)


state 241

    (51) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 253


state 242

    (119) expresion_logica -> expresion_relacional . AND expresion_relacional
    (120) expresion_logica -> expresion_relacional . OR expresion_relacional
    (122) expresion_logica -> expresion_relacional .

    AND             shift and go to state 254
    OR              shift and go to state 255
    PAR_C           reduce using rule 122 (expresion_logica -> expresion_relacional .)


state 243

    (121) expresion_logica -> NOT . expresion_relacional
    (110) expresion_relacional -> . expresion MAYQUE expresion
    (111) expresion_relacional -> . expresion MENQUE expresion
    (112) expresion_relacional -> . expresion MAYIGQUE expresion
    (113) expresion_relacional -> . expresion MENIGQUE expresion
    (114) expresion_relacional -> . expresion DOBLEIG expresion
    (115) expresion_relacional -> . expresion IGUAL expresion
    (116) expresion_relacional -> . expresion NOIG expresion
    (117) expresion_relacional -> . expresion NOIGUAL expresion
    (118) expresion_relacional -> . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion_relacional           shift and go to state 256
    expresion                      shift and go to state 124

state 244

    (52) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (54) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 257
    COMA            shift and go to state 208


state 245

    (53) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 258


state 246

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 247

    (42) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 42 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 248

    (74) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 259


state 249

    (75) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 260


state 250

    (84) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 84 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 84 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 84 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 84 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 84 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 84 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 251

    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 261


state 252

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 262


state 253

    (51) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 51 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 51 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 254

    (119) expresion_logica -> expresion_relacional AND . expresion_relacional
    (110) expresion_relacional -> . expresion MAYQUE expresion
    (111) expresion_relacional -> . expresion MENQUE expresion
    (112) expresion_relacional -> . expresion MAYIGQUE expresion
    (113) expresion_relacional -> . expresion MENIGQUE expresion
    (114) expresion_relacional -> . expresion DOBLEIG expresion
    (115) expresion_relacional -> . expresion IGUAL expresion
    (116) expresion_relacional -> . expresion NOIG expresion
    (117) expresion_relacional -> . expresion NOIGUAL expresion
    (118) expresion_relacional -> . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion_relacional           shift and go to state 263
    expresion                      shift and go to state 124

state 255

    (120) expresion_logica -> expresion_relacional OR . expresion_relacional
    (110) expresion_relacional -> . expresion MAYQUE expresion
    (111) expresion_relacional -> . expresion MENQUE expresion
    (112) expresion_relacional -> . expresion MAYIGQUE expresion
    (113) expresion_relacional -> . expresion MENIGQUE expresion
    (114) expresion_relacional -> . expresion DOBLEIG expresion
    (115) expresion_relacional -> . expresion IGUAL expresion
    (116) expresion_relacional -> . expresion NOIG expresion
    (117) expresion_relacional -> . expresion NOIGUAL expresion
    (118) expresion_relacional -> . expresion
    (97) expresion -> . CADENA
    (98) expresion -> . ENTERO
    (99) expresion -> . FLOTANTE
    (100) expresion -> . ID
    (101) expresion -> . ID PUNTO ID
    (102) expresion -> . expresion SUMA expresion
    (103) expresion -> . expresion RESTA expresion
    (104) expresion -> . expresion DIVISION expresion
    (105) expresion -> . expresion ASTERISCO expresion
    (106) expresion -> . TRUE
    (107) expresion -> . FALSE

    CADENA          shift and go to state 118
    ENTERO          shift and go to state 119
    FLOTANTE        shift and go to state 120
    ID              shift and go to state 116
    TRUE            shift and go to state 121
    FALSE           shift and go to state 122

    expresion_relacional           shift and go to state 264
    expresion                      shift and go to state 124

state 256

    (121) expresion_logica -> NOT expresion_relacional .

    PAR_C           reduce using rule 121 (expresion_logica -> NOT expresion_relacional .)


state 257

    (52) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 52 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 52 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 258

    (53) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 265


state 259

    (74) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 74 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 74 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 74 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 74 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 74 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 74 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 260

    (75) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 75 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 75 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 75 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 75 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 75 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 75 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 261

    (57) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    USE             reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    ALTER           reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    UPDATE          reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 262

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 266


state 263

    (119) expresion_logica -> expresion_relacional AND expresion_relacional .

    PAR_C           reduce using rule 119 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 264

    (120) expresion_logica -> expresion_relacional OR expresion_relacional .

    PAR_C           reduce using rule 120 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 265

    (53) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 267


state 266

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 268


state 267

    (53) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 269


state 268

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 270


state 269

    (53) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 271


state 270

    (66) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 66 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 66 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 271

    (53) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 272


state 272

    (53) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 273


state 273

    (53) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 53 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 53 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

