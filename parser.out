Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORCHETEA
    CORCHETEC
    INTERVAL
    LLAVEA
    LLAVEC

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> error
Rule 8     instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 9     instrucciones_funct_list -> instrucciones_funct_sent
Rule 10    instrucciones_funct_sent -> asignacion
Rule 11    instrucciones_funct_sent -> declaracion
Rule 12    instrucciones_funct_sent -> imprimir
Rule 13    instrucciones_funct_sent -> sentencia_if
Rule 14    instrucciones_funct_sent -> sentencia_switch
Rule 15    instrucciones_funct_sent -> PUNTOYCOMA
Rule 16    instrucciones_funct_sent -> llamada_funcion
Rule 17    instrucciones_funct_sent -> empty
Rule 18    instrucciones_funct_sent -> error
Rule 19    funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 20    funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 21    funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 22    funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
Rule 23    llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA
Rule 24    params -> params COMA expresion
Rule 25    params -> expresion
Rule 26    params -> empty
Rule 27    parametros -> parametros COMA parametro
Rule 28    parametros -> parametro
Rule 29    parametro -> ID tipo
Rule 30    parametro -> empty
Rule 31    sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA
Rule 32    case_list -> case_list case
Rule 33    case_list -> case
Rule 34    case -> WHEN expresion THEN instrucciones_funct_list
Rule 35    case -> ELSE instrucciones_funct_list
Rule 36    sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
Rule 37    else -> ELSE instrucciones_funct_list
Rule 38    else -> ELSEIF expresion THEN instrucciones_funct_list else
Rule 39    else -> <empty>
Rule 40    imprimir -> RAISE lista_imprimir PUNTOYCOMA
Rule 41    lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 42    lista_imprimir -> sent_imprimir
Rule 43    sent_imprimir -> expresion
Rule 44    asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
Rule 45    declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
Rule 46    declaracion -> ID tipo PUNTOYCOMA
Rule 47    declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA
Rule 48    tipo -> INTEGER
Rule 49    tipo -> SMALLINT
Rule 50    tipo -> BIGINT
Rule 51    tipo -> DECIMAL
Rule 52    tipo -> NUMERIC
Rule 53    tipo -> REAL
Rule 54    tipo -> CHAR
Rule 55    tipo -> DOUBLE
Rule 56    tipo -> PRECISION
Rule 57    tipo -> MONEY
Rule 58    tipo -> FLOAT
Rule 59    tipo -> BOOLEAN
Rule 60    tipo -> VOID
Rule 61    tipo -> CHAR PARA ENTERO PARC
Rule 62    tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 63    tipo -> VARCHAR PARA ENTERO PARC
Rule 64    tipo -> CHARACTER PARA ENTERO PARC
Rule 65    tipo -> TEXT
Rule 66    tipo -> TIME
Rule 67    tipo -> TIMESTAMP
Rule 68    tipo -> DATE
Rule 69    expresion -> log
Rule 70    log -> expresion AND expresion
Rule 71    log -> expresion ORR expresion
Rule 72    log -> rel
Rule 73    rel -> arit MAYOR arit
Rule 74    rel -> arit MENOR arit
Rule 75    rel -> arit MAYORIGUAL arit
Rule 76    rel -> arit MENORIGUAL arit
Rule 77    rel -> arit IGUALIGUAL arit
Rule 78    rel -> arit NOTIGUAL arit
Rule 79    rel -> arit
Rule 80    arit -> arit POR arit
Rule 81    arit -> arit DIV arit
Rule 82    arit -> arit MAS arit
Rule 83    arit -> arit MENOS arit
Rule 84    arit -> arit MOD arit
Rule 85    arit -> arit ANDB arit
Rule 86    arit -> arit SHIFTI arit
Rule 87    arit -> arit SHIFTD arit
Rule 88    arit -> arit XORB arit
Rule 89    arit -> arit ORB arit
Rule 90    arit -> PARA expresion PARC
Rule 91    arit -> ID
Rule 92    arit -> CADENA
Rule 93    arit -> ENTERO
Rule 94    arit -> FLOTANTE
Rule 95    arit -> MENOS expresion
Rule 96    arit -> NOTB expresion
Rule 97    arit -> NOT expresion
Rule 98    arit -> TRUE
Rule 99    arit -> FALSE
Rule 100   empty -> <empty>

Terminals, with rules where they appear

AND                  : 70
ANDB                 : 85
AS                   : 19 20 21 22
BEGIN                : 19 20 21 22
BIGINT               : 50
BOOLEAN              : 59
CADENA               : 92
CASE                 : 31 31
CHAR                 : 54 61
CHARACTER            : 62 64
COMA                 : 24 27 41
CORCHETEA            : 
CORCHETEC            : 
CREATE               : 19 20 21 22
DATE                 : 68
DECIMAL              : 51
DECLARE              : 20 22
DEFAULT              : 47
DIV                  : 81
DOLAR                : 19 19 19 19 20 20 20 20 21 21 21 21 22 22 22 22
DOSPUNTOS            : 44 45
DOUBLE               : 55
ELSE                 : 35 37
ELSEIF               : 38
END                  : 19 20 21 22 31 36
ENTERO               : 61 62 63 64 93
FALSE                : 99
FLOAT                : 58
FLOTANTE             : 94
FUNCTION             : 19 20 21 22
ID                   : 19 20 21 22 23 29 44 45 46 47 91
IF                   : 36 36
IGUAL                : 44 45
IGUALIGUAL           : 77
INTEGER              : 48
INTERVAL             : 
LANGUAGE             : 19 20 21 22
LLAVEA               : 
LLAVEC               : 
MAS                  : 82
MAYOR                : 73
MAYORIGUAL           : 75
MENOR                : 74
MENORIGUAL           : 76
MENOS                : 83 95
MOD                  : 84
MONEY                : 57
NOT                  : 97
NOTB                 : 96
NOTIGUAL             : 78
NUMERIC              : 52
OR                   : 21 22
ORB                  : 89
ORR                  : 71
PARA                 : 19 20 21 22 23 61 62 63 64 90
PARC                 : 19 20 21 22 23 61 62 63 64 90
PLPGSQL              : 19 20 21 22
POR                  : 80
PRECISION            : 56
PUNTOYCOMA           : 15 19 19 20 20 21 21 22 22 23 31 36 40 44 45 46 47
RAISE                : 40
REAL                 : 53
REPLACE              : 21 22
RETURNS              : 19 20 21 22
SELECT               : 23
SHIFTD               : 87
SHIFTI               : 86
SMALLINT             : 49
TEXT                 : 65
THEN                 : 34 36 38
TIME                 : 66
TIMESTAMP            : 67
TRUE                 : 98
VARCHAR              : 63
VARYING              : 62
VOID                 : 60
WHEN                 : 34
XORB                 : 88
error                : 7 18

Nonterminals, with rules where they appear

arit                 : 73 73 74 74 75 75 76 76 77 77 78 78 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89
asignacion           : 10
case                 : 32 33
case_list            : 31 32
codigo               : 1
declaracion          : 11
else                 : 36 38
empty                : 17 26 30
expresion            : 24 25 31 34 36 38 43 44 45 47 70 70 71 71 90 95 96 97
funcion              : 5
imprimir             : 12
inicio               : 0
instrucciones_funct_list : 8 19 20 20 21 22 22 34 35 36 37 38
instrucciones_funct_sent : 8 9
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_imprimir       : 40 41
llamada_funcion      : 6 16
log                  : 69
parametro            : 27 28
parametros           : 19 20 21 22 27
params               : 23 24
rel                  : 72
sent_imprimir        : 41 42
sentencia_if         : 13
sentencia_switch     : 14
tipo                 : 19 20 21 22 29 45 46 47

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . error
    (19) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (21) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA

    error           shift and go to state 7
    CREATE          shift and go to state 8
    SELECT          shift and go to state 9

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . error
    (19) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (21) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 7
    CREATE          shift and go to state 8
    SELECT          shift and go to state 9

    instrucciones_global_sent      shift and go to state 10
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> error .

    error           reduce using rule 7 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> error .)
    $end            reduce using rule 7 (instrucciones_global_sent -> error .)


state 8

    (19) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (21) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    FUNCTION        shift and go to state 11
    OR              shift and go to state 12


state 9

    (23) llamada_funcion -> SELECT . ID PARA params PARC PUNTOYCOMA

    ID              shift and go to state 13


state 10

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 11

    (19) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    ID              shift and go to state 14


state 12

    (21) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    REPLACE         shift and go to state 15


state 13

    (23) llamada_funcion -> SELECT ID . PARA params PARC PUNTOYCOMA

    PARA            shift and go to state 16


state 14

    (19) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PARA            shift and go to state 17


state 15

    (21) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    FUNCTION        shift and go to state 18


state 16

    (23) llamada_funcion -> SELECT ID PARA . params PARC PUNTOYCOMA
    (24) params -> . params COMA expresion
    (25) params -> . expresion
    (26) params -> . empty
    (69) expresion -> . log
    (100) empty -> .
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARC            reduce using rule 100 (empty -> .)
    COMA            reduce using rule 100 (empty -> .)
    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    params                         shift and go to state 21
    expresion                      shift and go to state 22
    empty                          shift and go to state 23
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 17

    (19) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (27) parametros -> . parametros COMA parametro
    (28) parametros -> . parametro
    (29) parametro -> . ID tipo
    (30) parametro -> . empty
    (100) empty -> .

    ID              shift and go to state 35
    PARC            reduce using rule 100 (empty -> .)
    COMA            reduce using rule 100 (empty -> .)

    parametros                     shift and go to state 36
    parametro                      shift and go to state 37
    empty                          shift and go to state 38

state 18

    (21) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    ID              shift and go to state 39


state 19

    (91) arit -> ID .

    MAYOR           reduce using rule 91 (arit -> ID .)
    MENOR           reduce using rule 91 (arit -> ID .)
    MAYORIGUAL      reduce using rule 91 (arit -> ID .)
    MENORIGUAL      reduce using rule 91 (arit -> ID .)
    IGUALIGUAL      reduce using rule 91 (arit -> ID .)
    NOTIGUAL        reduce using rule 91 (arit -> ID .)
    POR             reduce using rule 91 (arit -> ID .)
    DIV             reduce using rule 91 (arit -> ID .)
    MAS             reduce using rule 91 (arit -> ID .)
    MENOS           reduce using rule 91 (arit -> ID .)
    MOD             reduce using rule 91 (arit -> ID .)
    ANDB            reduce using rule 91 (arit -> ID .)
    SHIFTI          reduce using rule 91 (arit -> ID .)
    SHIFTD          reduce using rule 91 (arit -> ID .)
    XORB            reduce using rule 91 (arit -> ID .)
    ORB             reduce using rule 91 (arit -> ID .)
    AND             reduce using rule 91 (arit -> ID .)
    ORR             reduce using rule 91 (arit -> ID .)
    PARC            reduce using rule 91 (arit -> ID .)
    COMA            reduce using rule 91 (arit -> ID .)
    PUNTOYCOMA      reduce using rule 91 (arit -> ID .)
    THEN            reduce using rule 91 (arit -> ID .)
    WHEN            reduce using rule 91 (arit -> ID .)
    ELSE            reduce using rule 91 (arit -> ID .)


state 20

    (90) arit -> PARA . expresion PARC
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 40
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 21

    (23) llamada_funcion -> SELECT ID PARA params . PARC PUNTOYCOMA
    (24) params -> params . COMA expresion

    PARC            shift and go to state 41
    COMA            shift and go to state 42


state 22

    (25) params -> expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PARC            reduce using rule 25 (params -> expresion .)
    COMA            reduce using rule 25 (params -> expresion .)
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 23

    (26) params -> empty .

    PARC            reduce using rule 26 (params -> empty .)
    COMA            reduce using rule 26 (params -> empty .)


state 24

    (69) expresion -> log .

    AND             reduce using rule 69 (expresion -> log .)
    ORR             reduce using rule 69 (expresion -> log .)
    PARC            reduce using rule 69 (expresion -> log .)
    COMA            reduce using rule 69 (expresion -> log .)
    MAYOR           reduce using rule 69 (expresion -> log .)
    MENOR           reduce using rule 69 (expresion -> log .)
    MAYORIGUAL      reduce using rule 69 (expresion -> log .)
    MENORIGUAL      reduce using rule 69 (expresion -> log .)
    IGUALIGUAL      reduce using rule 69 (expresion -> log .)
    NOTIGUAL        reduce using rule 69 (expresion -> log .)
    POR             reduce using rule 69 (expresion -> log .)
    DIV             reduce using rule 69 (expresion -> log .)
    MAS             reduce using rule 69 (expresion -> log .)
    MENOS           reduce using rule 69 (expresion -> log .)
    MOD             reduce using rule 69 (expresion -> log .)
    ANDB            reduce using rule 69 (expresion -> log .)
    SHIFTI          reduce using rule 69 (expresion -> log .)
    SHIFTD          reduce using rule 69 (expresion -> log .)
    XORB            reduce using rule 69 (expresion -> log .)
    ORB             reduce using rule 69 (expresion -> log .)
    PUNTOYCOMA      reduce using rule 69 (expresion -> log .)
    THEN            reduce using rule 69 (expresion -> log .)
    WHEN            reduce using rule 69 (expresion -> log .)
    ELSE            reduce using rule 69 (expresion -> log .)


state 25

    (72) log -> rel .

    AND             reduce using rule 72 (log -> rel .)
    ORR             reduce using rule 72 (log -> rel .)
    PARC            reduce using rule 72 (log -> rel .)
    COMA            reduce using rule 72 (log -> rel .)
    MAYOR           reduce using rule 72 (log -> rel .)
    MENOR           reduce using rule 72 (log -> rel .)
    MAYORIGUAL      reduce using rule 72 (log -> rel .)
    MENORIGUAL      reduce using rule 72 (log -> rel .)
    IGUALIGUAL      reduce using rule 72 (log -> rel .)
    NOTIGUAL        reduce using rule 72 (log -> rel .)
    POR             reduce using rule 72 (log -> rel .)
    DIV             reduce using rule 72 (log -> rel .)
    MAS             reduce using rule 72 (log -> rel .)
    MENOS           reduce using rule 72 (log -> rel .)
    MOD             reduce using rule 72 (log -> rel .)
    ANDB            reduce using rule 72 (log -> rel .)
    SHIFTI          reduce using rule 72 (log -> rel .)
    SHIFTD          reduce using rule 72 (log -> rel .)
    XORB            reduce using rule 72 (log -> rel .)
    ORB             reduce using rule 72 (log -> rel .)
    PUNTOYCOMA      reduce using rule 72 (log -> rel .)
    THEN            reduce using rule 72 (log -> rel .)
    WHEN            reduce using rule 72 (log -> rel .)
    ELSE            reduce using rule 72 (log -> rel .)


state 26

    (73) rel -> arit . MAYOR arit
    (74) rel -> arit . MENOR arit
    (75) rel -> arit . MAYORIGUAL arit
    (76) rel -> arit . MENORIGUAL arit
    (77) rel -> arit . IGUALIGUAL arit
    (78) rel -> arit . NOTIGUAL arit
    (79) rel -> arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 45
    MENOR           shift and go to state 46
    MAYORIGUAL      shift and go to state 47
    MENORIGUAL      shift and go to state 48
    IGUALIGUAL      shift and go to state 49
    NOTIGUAL        shift and go to state 50
    AND             reduce using rule 79 (rel -> arit .)
    ORR             reduce using rule 79 (rel -> arit .)
    PARC            reduce using rule 79 (rel -> arit .)
    COMA            reduce using rule 79 (rel -> arit .)
    PUNTOYCOMA      reduce using rule 79 (rel -> arit .)
    THEN            reduce using rule 79 (rel -> arit .)
    WHEN            reduce using rule 79 (rel -> arit .)
    ELSE            reduce using rule 79 (rel -> arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    ANDB            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    XORB            shift and go to state 59
    ORB             shift and go to state 60

  ! MAYOR           [ reduce using rule 79 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 79 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 79 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 79 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 79 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 79 (rel -> arit .) ]
  ! POR             [ reduce using rule 79 (rel -> arit .) ]
  ! DIV             [ reduce using rule 79 (rel -> arit .) ]
  ! MAS             [ reduce using rule 79 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 79 (rel -> arit .) ]
  ! MOD             [ reduce using rule 79 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 79 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 79 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 79 (rel -> arit .) ]
  ! XORB            [ reduce using rule 79 (rel -> arit .) ]
  ! ORB             [ reduce using rule 79 (rel -> arit .) ]


state 27

    (95) arit -> MENOS . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 61
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 28

    (92) arit -> CADENA .

    MAYOR           reduce using rule 92 (arit -> CADENA .)
    MENOR           reduce using rule 92 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 92 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 92 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 92 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 92 (arit -> CADENA .)
    POR             reduce using rule 92 (arit -> CADENA .)
    DIV             reduce using rule 92 (arit -> CADENA .)
    MAS             reduce using rule 92 (arit -> CADENA .)
    MENOS           reduce using rule 92 (arit -> CADENA .)
    MOD             reduce using rule 92 (arit -> CADENA .)
    ANDB            reduce using rule 92 (arit -> CADENA .)
    SHIFTI          reduce using rule 92 (arit -> CADENA .)
    SHIFTD          reduce using rule 92 (arit -> CADENA .)
    XORB            reduce using rule 92 (arit -> CADENA .)
    ORB             reduce using rule 92 (arit -> CADENA .)
    AND             reduce using rule 92 (arit -> CADENA .)
    ORR             reduce using rule 92 (arit -> CADENA .)
    PARC            reduce using rule 92 (arit -> CADENA .)
    COMA            reduce using rule 92 (arit -> CADENA .)
    PUNTOYCOMA      reduce using rule 92 (arit -> CADENA .)
    THEN            reduce using rule 92 (arit -> CADENA .)
    WHEN            reduce using rule 92 (arit -> CADENA .)
    ELSE            reduce using rule 92 (arit -> CADENA .)


state 29

    (93) arit -> ENTERO .

    MAYOR           reduce using rule 93 (arit -> ENTERO .)
    MENOR           reduce using rule 93 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 93 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 93 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 93 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 93 (arit -> ENTERO .)
    POR             reduce using rule 93 (arit -> ENTERO .)
    DIV             reduce using rule 93 (arit -> ENTERO .)
    MAS             reduce using rule 93 (arit -> ENTERO .)
    MENOS           reduce using rule 93 (arit -> ENTERO .)
    MOD             reduce using rule 93 (arit -> ENTERO .)
    ANDB            reduce using rule 93 (arit -> ENTERO .)
    SHIFTI          reduce using rule 93 (arit -> ENTERO .)
    SHIFTD          reduce using rule 93 (arit -> ENTERO .)
    XORB            reduce using rule 93 (arit -> ENTERO .)
    ORB             reduce using rule 93 (arit -> ENTERO .)
    AND             reduce using rule 93 (arit -> ENTERO .)
    ORR             reduce using rule 93 (arit -> ENTERO .)
    PARC            reduce using rule 93 (arit -> ENTERO .)
    COMA            reduce using rule 93 (arit -> ENTERO .)
    PUNTOYCOMA      reduce using rule 93 (arit -> ENTERO .)
    THEN            reduce using rule 93 (arit -> ENTERO .)
    WHEN            reduce using rule 93 (arit -> ENTERO .)
    ELSE            reduce using rule 93 (arit -> ENTERO .)


state 30

    (94) arit -> FLOTANTE .

    MAYOR           reduce using rule 94 (arit -> FLOTANTE .)
    MENOR           reduce using rule 94 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 94 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 94 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 94 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 94 (arit -> FLOTANTE .)
    POR             reduce using rule 94 (arit -> FLOTANTE .)
    DIV             reduce using rule 94 (arit -> FLOTANTE .)
    MAS             reduce using rule 94 (arit -> FLOTANTE .)
    MENOS           reduce using rule 94 (arit -> FLOTANTE .)
    MOD             reduce using rule 94 (arit -> FLOTANTE .)
    ANDB            reduce using rule 94 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 94 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 94 (arit -> FLOTANTE .)
    XORB            reduce using rule 94 (arit -> FLOTANTE .)
    ORB             reduce using rule 94 (arit -> FLOTANTE .)
    AND             reduce using rule 94 (arit -> FLOTANTE .)
    ORR             reduce using rule 94 (arit -> FLOTANTE .)
    PARC            reduce using rule 94 (arit -> FLOTANTE .)
    COMA            reduce using rule 94 (arit -> FLOTANTE .)
    PUNTOYCOMA      reduce using rule 94 (arit -> FLOTANTE .)
    THEN            reduce using rule 94 (arit -> FLOTANTE .)
    WHEN            reduce using rule 94 (arit -> FLOTANTE .)
    ELSE            reduce using rule 94 (arit -> FLOTANTE .)


state 31

    (96) arit -> NOTB . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 62
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 32

    (97) arit -> NOT . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 63
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 33

    (98) arit -> TRUE .

    MAYOR           reduce using rule 98 (arit -> TRUE .)
    MENOR           reduce using rule 98 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 98 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 98 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 98 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 98 (arit -> TRUE .)
    POR             reduce using rule 98 (arit -> TRUE .)
    DIV             reduce using rule 98 (arit -> TRUE .)
    MAS             reduce using rule 98 (arit -> TRUE .)
    MENOS           reduce using rule 98 (arit -> TRUE .)
    MOD             reduce using rule 98 (arit -> TRUE .)
    ANDB            reduce using rule 98 (arit -> TRUE .)
    SHIFTI          reduce using rule 98 (arit -> TRUE .)
    SHIFTD          reduce using rule 98 (arit -> TRUE .)
    XORB            reduce using rule 98 (arit -> TRUE .)
    ORB             reduce using rule 98 (arit -> TRUE .)
    AND             reduce using rule 98 (arit -> TRUE .)
    ORR             reduce using rule 98 (arit -> TRUE .)
    PARC            reduce using rule 98 (arit -> TRUE .)
    COMA            reduce using rule 98 (arit -> TRUE .)
    PUNTOYCOMA      reduce using rule 98 (arit -> TRUE .)
    THEN            reduce using rule 98 (arit -> TRUE .)
    WHEN            reduce using rule 98 (arit -> TRUE .)
    ELSE            reduce using rule 98 (arit -> TRUE .)


state 34

    (99) arit -> FALSE .

    MAYOR           reduce using rule 99 (arit -> FALSE .)
    MENOR           reduce using rule 99 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 99 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 99 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 99 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 99 (arit -> FALSE .)
    POR             reduce using rule 99 (arit -> FALSE .)
    DIV             reduce using rule 99 (arit -> FALSE .)
    MAS             reduce using rule 99 (arit -> FALSE .)
    MENOS           reduce using rule 99 (arit -> FALSE .)
    MOD             reduce using rule 99 (arit -> FALSE .)
    ANDB            reduce using rule 99 (arit -> FALSE .)
    SHIFTI          reduce using rule 99 (arit -> FALSE .)
    SHIFTD          reduce using rule 99 (arit -> FALSE .)
    XORB            reduce using rule 99 (arit -> FALSE .)
    ORB             reduce using rule 99 (arit -> FALSE .)
    AND             reduce using rule 99 (arit -> FALSE .)
    ORR             reduce using rule 99 (arit -> FALSE .)
    PARC            reduce using rule 99 (arit -> FALSE .)
    COMA            reduce using rule 99 (arit -> FALSE .)
    PUNTOYCOMA      reduce using rule 99 (arit -> FALSE .)
    THEN            reduce using rule 99 (arit -> FALSE .)
    WHEN            reduce using rule 99 (arit -> FALSE .)
    ELSE            reduce using rule 99 (arit -> FALSE .)


state 35

    (29) parametro -> ID . tipo
    (48) tipo -> . INTEGER
    (49) tipo -> . SMALLINT
    (50) tipo -> . BIGINT
    (51) tipo -> . DECIMAL
    (52) tipo -> . NUMERIC
    (53) tipo -> . REAL
    (54) tipo -> . CHAR
    (55) tipo -> . DOUBLE
    (56) tipo -> . PRECISION
    (57) tipo -> . MONEY
    (58) tipo -> . FLOAT
    (59) tipo -> . BOOLEAN
    (60) tipo -> . VOID
    (61) tipo -> . CHAR PARA ENTERO PARC
    (62) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (63) tipo -> . VARCHAR PARA ENTERO PARC
    (64) tipo -> . CHARACTER PARA ENTERO PARC
    (65) tipo -> . TEXT
    (66) tipo -> . TIME
    (67) tipo -> . TIMESTAMP
    (68) tipo -> . DATE

    INTEGER         shift and go to state 65
    SMALLINT        shift and go to state 66
    BIGINT          shift and go to state 67
    DECIMAL         shift and go to state 68
    NUMERIC         shift and go to state 69
    REAL            shift and go to state 70
    CHAR            shift and go to state 71
    DOUBLE          shift and go to state 72
    PRECISION       shift and go to state 73
    MONEY           shift and go to state 74
    FLOAT           shift and go to state 75
    BOOLEAN         shift and go to state 76
    VOID            shift and go to state 77
    CHARACTER       shift and go to state 78
    VARCHAR         shift and go to state 79
    TEXT            shift and go to state 80
    TIME            shift and go to state 81
    TIMESTAMP       shift and go to state 82
    DATE            shift and go to state 83

    tipo                           shift and go to state 64

state 36

    (19) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (27) parametros -> parametros . COMA parametro

    PARC            shift and go to state 84
    COMA            shift and go to state 85


state 37

    (28) parametros -> parametro .

    PARC            reduce using rule 28 (parametros -> parametro .)
    COMA            reduce using rule 28 (parametros -> parametro .)


state 38

    (30) parametro -> empty .

    PARC            reduce using rule 30 (parametro -> empty .)
    COMA            reduce using rule 30 (parametro -> empty .)


state 39

    (21) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PARA            shift and go to state 86


state 40

    (90) arit -> PARA expresion . PARC
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PARC            shift and go to state 87
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 41

    (23) llamada_funcion -> SELECT ID PARA params PARC . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 88


state 42

    (24) params -> params COMA . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 89
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 43

    (70) log -> expresion AND . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 90
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 44

    (71) log -> expresion ORR . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 91
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 45

    (73) rel -> arit MAYOR . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 92

state 46

    (74) rel -> arit MENOR . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 93

state 47

    (75) rel -> arit MAYORIGUAL . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 94

state 48

    (76) rel -> arit MENORIGUAL . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 95

state 49

    (77) rel -> arit IGUALIGUAL . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 96

state 50

    (78) rel -> arit NOTIGUAL . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 97

state 51

    (80) arit -> arit POR . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 98

state 52

    (81) arit -> arit DIV . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 99

state 53

    (82) arit -> arit MAS . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 100

state 54

    (83) arit -> arit MENOS . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 101

state 55

    (84) arit -> arit MOD . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 102

state 56

    (85) arit -> arit ANDB . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 103

state 57

    (86) arit -> arit SHIFTI . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 104

state 58

    (87) arit -> arit SHIFTD . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 105

state 59

    (88) arit -> arit XORB . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 106

state 60

    (89) arit -> arit ORB . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    arit                           shift and go to state 107

state 61

    (95) arit -> MENOS expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    MAYOR           reduce using rule 95 (arit -> MENOS expresion .)
    MENOR           reduce using rule 95 (arit -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 95 (arit -> MENOS expresion .)
    MENORIGUAL      reduce using rule 95 (arit -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 95 (arit -> MENOS expresion .)
    NOTIGUAL        reduce using rule 95 (arit -> MENOS expresion .)
    POR             reduce using rule 95 (arit -> MENOS expresion .)
    DIV             reduce using rule 95 (arit -> MENOS expresion .)
    MAS             reduce using rule 95 (arit -> MENOS expresion .)
    MENOS           reduce using rule 95 (arit -> MENOS expresion .)
    MOD             reduce using rule 95 (arit -> MENOS expresion .)
    ANDB            reduce using rule 95 (arit -> MENOS expresion .)
    SHIFTI          reduce using rule 95 (arit -> MENOS expresion .)
    SHIFTD          reduce using rule 95 (arit -> MENOS expresion .)
    XORB            reduce using rule 95 (arit -> MENOS expresion .)
    ORB             reduce using rule 95 (arit -> MENOS expresion .)
    AND             reduce using rule 95 (arit -> MENOS expresion .)
    ORR             reduce using rule 95 (arit -> MENOS expresion .)
    PARC            reduce using rule 95 (arit -> MENOS expresion .)
    COMA            reduce using rule 95 (arit -> MENOS expresion .)
    PUNTOYCOMA      reduce using rule 95 (arit -> MENOS expresion .)
    THEN            reduce using rule 95 (arit -> MENOS expresion .)
    WHEN            reduce using rule 95 (arit -> MENOS expresion .)
    ELSE            reduce using rule 95 (arit -> MENOS expresion .)

  ! AND             [ shift and go to state 43 ]
  ! ORR             [ shift and go to state 44 ]


state 62

    (96) arit -> NOTB expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    MAYOR           reduce using rule 96 (arit -> NOTB expresion .)
    MENOR           reduce using rule 96 (arit -> NOTB expresion .)
    MAYORIGUAL      reduce using rule 96 (arit -> NOTB expresion .)
    MENORIGUAL      reduce using rule 96 (arit -> NOTB expresion .)
    IGUALIGUAL      reduce using rule 96 (arit -> NOTB expresion .)
    NOTIGUAL        reduce using rule 96 (arit -> NOTB expresion .)
    POR             reduce using rule 96 (arit -> NOTB expresion .)
    DIV             reduce using rule 96 (arit -> NOTB expresion .)
    MAS             reduce using rule 96 (arit -> NOTB expresion .)
    MENOS           reduce using rule 96 (arit -> NOTB expresion .)
    MOD             reduce using rule 96 (arit -> NOTB expresion .)
    ANDB            reduce using rule 96 (arit -> NOTB expresion .)
    SHIFTI          reduce using rule 96 (arit -> NOTB expresion .)
    SHIFTD          reduce using rule 96 (arit -> NOTB expresion .)
    XORB            reduce using rule 96 (arit -> NOTB expresion .)
    ORB             reduce using rule 96 (arit -> NOTB expresion .)
    AND             reduce using rule 96 (arit -> NOTB expresion .)
    ORR             reduce using rule 96 (arit -> NOTB expresion .)
    PARC            reduce using rule 96 (arit -> NOTB expresion .)
    COMA            reduce using rule 96 (arit -> NOTB expresion .)
    PUNTOYCOMA      reduce using rule 96 (arit -> NOTB expresion .)
    THEN            reduce using rule 96 (arit -> NOTB expresion .)
    WHEN            reduce using rule 96 (arit -> NOTB expresion .)
    ELSE            reduce using rule 96 (arit -> NOTB expresion .)

  ! AND             [ shift and go to state 43 ]
  ! ORR             [ shift and go to state 44 ]


state 63

    (97) arit -> NOT expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    MAYOR           reduce using rule 97 (arit -> NOT expresion .)
    MENOR           reduce using rule 97 (arit -> NOT expresion .)
    MAYORIGUAL      reduce using rule 97 (arit -> NOT expresion .)
    MENORIGUAL      reduce using rule 97 (arit -> NOT expresion .)
    IGUALIGUAL      reduce using rule 97 (arit -> NOT expresion .)
    NOTIGUAL        reduce using rule 97 (arit -> NOT expresion .)
    POR             reduce using rule 97 (arit -> NOT expresion .)
    DIV             reduce using rule 97 (arit -> NOT expresion .)
    MAS             reduce using rule 97 (arit -> NOT expresion .)
    MENOS           reduce using rule 97 (arit -> NOT expresion .)
    MOD             reduce using rule 97 (arit -> NOT expresion .)
    ANDB            reduce using rule 97 (arit -> NOT expresion .)
    SHIFTI          reduce using rule 97 (arit -> NOT expresion .)
    SHIFTD          reduce using rule 97 (arit -> NOT expresion .)
    XORB            reduce using rule 97 (arit -> NOT expresion .)
    ORB             reduce using rule 97 (arit -> NOT expresion .)
    AND             reduce using rule 97 (arit -> NOT expresion .)
    ORR             reduce using rule 97 (arit -> NOT expresion .)
    PARC            reduce using rule 97 (arit -> NOT expresion .)
    COMA            reduce using rule 97 (arit -> NOT expresion .)
    PUNTOYCOMA      reduce using rule 97 (arit -> NOT expresion .)
    THEN            reduce using rule 97 (arit -> NOT expresion .)
    WHEN            reduce using rule 97 (arit -> NOT expresion .)
    ELSE            reduce using rule 97 (arit -> NOT expresion .)

  ! AND             [ shift and go to state 43 ]
  ! ORR             [ shift and go to state 44 ]


state 64

    (29) parametro -> ID tipo .

    PARC            reduce using rule 29 (parametro -> ID tipo .)
    COMA            reduce using rule 29 (parametro -> ID tipo .)


state 65

    (48) tipo -> INTEGER .

    PARC            reduce using rule 48 (tipo -> INTEGER .)
    COMA            reduce using rule 48 (tipo -> INTEGER .)
    AS              reduce using rule 48 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 48 (tipo -> INTEGER .)
    PUNTOYCOMA      reduce using rule 48 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 48 (tipo -> INTEGER .)


state 66

    (49) tipo -> SMALLINT .

    PARC            reduce using rule 49 (tipo -> SMALLINT .)
    COMA            reduce using rule 49 (tipo -> SMALLINT .)
    AS              reduce using rule 49 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 49 (tipo -> SMALLINT .)
    PUNTOYCOMA      reduce using rule 49 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 49 (tipo -> SMALLINT .)


state 67

    (50) tipo -> BIGINT .

    PARC            reduce using rule 50 (tipo -> BIGINT .)
    COMA            reduce using rule 50 (tipo -> BIGINT .)
    AS              reduce using rule 50 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 50 (tipo -> BIGINT .)
    PUNTOYCOMA      reduce using rule 50 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 50 (tipo -> BIGINT .)


state 68

    (51) tipo -> DECIMAL .

    PARC            reduce using rule 51 (tipo -> DECIMAL .)
    COMA            reduce using rule 51 (tipo -> DECIMAL .)
    AS              reduce using rule 51 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 51 (tipo -> DECIMAL .)
    PUNTOYCOMA      reduce using rule 51 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 51 (tipo -> DECIMAL .)


state 69

    (52) tipo -> NUMERIC .

    PARC            reduce using rule 52 (tipo -> NUMERIC .)
    COMA            reduce using rule 52 (tipo -> NUMERIC .)
    AS              reduce using rule 52 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 52 (tipo -> NUMERIC .)
    PUNTOYCOMA      reduce using rule 52 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 52 (tipo -> NUMERIC .)


state 70

    (53) tipo -> REAL .

    PARC            reduce using rule 53 (tipo -> REAL .)
    COMA            reduce using rule 53 (tipo -> REAL .)
    AS              reduce using rule 53 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 53 (tipo -> REAL .)
    PUNTOYCOMA      reduce using rule 53 (tipo -> REAL .)
    DEFAULT         reduce using rule 53 (tipo -> REAL .)


state 71

    (54) tipo -> CHAR .
    (61) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 54 (tipo -> CHAR .)
    COMA            reduce using rule 54 (tipo -> CHAR .)
    AS              reduce using rule 54 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 54 (tipo -> CHAR .)
    PUNTOYCOMA      reduce using rule 54 (tipo -> CHAR .)
    DEFAULT         reduce using rule 54 (tipo -> CHAR .)
    PARA            shift and go to state 108


state 72

    (55) tipo -> DOUBLE .

    PARC            reduce using rule 55 (tipo -> DOUBLE .)
    COMA            reduce using rule 55 (tipo -> DOUBLE .)
    AS              reduce using rule 55 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 55 (tipo -> DOUBLE .)
    PUNTOYCOMA      reduce using rule 55 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 55 (tipo -> DOUBLE .)


state 73

    (56) tipo -> PRECISION .

    PARC            reduce using rule 56 (tipo -> PRECISION .)
    COMA            reduce using rule 56 (tipo -> PRECISION .)
    AS              reduce using rule 56 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 56 (tipo -> PRECISION .)
    PUNTOYCOMA      reduce using rule 56 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 56 (tipo -> PRECISION .)


state 74

    (57) tipo -> MONEY .

    PARC            reduce using rule 57 (tipo -> MONEY .)
    COMA            reduce using rule 57 (tipo -> MONEY .)
    AS              reduce using rule 57 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 57 (tipo -> MONEY .)
    PUNTOYCOMA      reduce using rule 57 (tipo -> MONEY .)
    DEFAULT         reduce using rule 57 (tipo -> MONEY .)


state 75

    (58) tipo -> FLOAT .

    PARC            reduce using rule 58 (tipo -> FLOAT .)
    COMA            reduce using rule 58 (tipo -> FLOAT .)
    AS              reduce using rule 58 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 58 (tipo -> FLOAT .)
    PUNTOYCOMA      reduce using rule 58 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 58 (tipo -> FLOAT .)


state 76

    (59) tipo -> BOOLEAN .

    PARC            reduce using rule 59 (tipo -> BOOLEAN .)
    COMA            reduce using rule 59 (tipo -> BOOLEAN .)
    AS              reduce using rule 59 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 59 (tipo -> BOOLEAN .)
    PUNTOYCOMA      reduce using rule 59 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 59 (tipo -> BOOLEAN .)


state 77

    (60) tipo -> VOID .

    PARC            reduce using rule 60 (tipo -> VOID .)
    COMA            reduce using rule 60 (tipo -> VOID .)
    AS              reduce using rule 60 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 60 (tipo -> VOID .)
    PUNTOYCOMA      reduce using rule 60 (tipo -> VOID .)
    DEFAULT         reduce using rule 60 (tipo -> VOID .)


state 78

    (62) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (64) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 109
    PARA            shift and go to state 110


state 79

    (63) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 111


state 80

    (65) tipo -> TEXT .

    PARC            reduce using rule 65 (tipo -> TEXT .)
    COMA            reduce using rule 65 (tipo -> TEXT .)
    AS              reduce using rule 65 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 65 (tipo -> TEXT .)
    PUNTOYCOMA      reduce using rule 65 (tipo -> TEXT .)
    DEFAULT         reduce using rule 65 (tipo -> TEXT .)


state 81

    (66) tipo -> TIME .

    PARC            reduce using rule 66 (tipo -> TIME .)
    COMA            reduce using rule 66 (tipo -> TIME .)
    AS              reduce using rule 66 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 66 (tipo -> TIME .)
    PUNTOYCOMA      reduce using rule 66 (tipo -> TIME .)
    DEFAULT         reduce using rule 66 (tipo -> TIME .)


state 82

    (67) tipo -> TIMESTAMP .

    PARC            reduce using rule 67 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 67 (tipo -> TIMESTAMP .)
    AS              reduce using rule 67 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 67 (tipo -> TIMESTAMP .)
    PUNTOYCOMA      reduce using rule 67 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 67 (tipo -> TIMESTAMP .)


state 83

    (68) tipo -> DATE .

    PARC            reduce using rule 68 (tipo -> DATE .)
    COMA            reduce using rule 68 (tipo -> DATE .)
    AS              reduce using rule 68 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 68 (tipo -> DATE .)
    PUNTOYCOMA      reduce using rule 68 (tipo -> DATE .)
    DEFAULT         reduce using rule 68 (tipo -> DATE .)


state 84

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    RETURNS         shift and go to state 112


state 85

    (27) parametros -> parametros COMA . parametro
    (29) parametro -> . ID tipo
    (30) parametro -> . empty
    (100) empty -> .

    ID              shift and go to state 35
    PARC            reduce using rule 100 (empty -> .)
    COMA            reduce using rule 100 (empty -> .)

    parametro                      shift and go to state 113
    empty                          shift and go to state 38

state 86

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (27) parametros -> . parametros COMA parametro
    (28) parametros -> . parametro
    (29) parametro -> . ID tipo
    (30) parametro -> . empty
    (100) empty -> .

    ID              shift and go to state 35
    PARC            reduce using rule 100 (empty -> .)
    COMA            reduce using rule 100 (empty -> .)

    parametros                     shift and go to state 114
    parametro                      shift and go to state 37
    empty                          shift and go to state 38

state 87

    (90) arit -> PARA expresion PARC .

    MAYOR           reduce using rule 90 (arit -> PARA expresion PARC .)
    MENOR           reduce using rule 90 (arit -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 90 (arit -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 90 (arit -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 90 (arit -> PARA expresion PARC .)
    NOTIGUAL        reduce using rule 90 (arit -> PARA expresion PARC .)
    POR             reduce using rule 90 (arit -> PARA expresion PARC .)
    DIV             reduce using rule 90 (arit -> PARA expresion PARC .)
    MAS             reduce using rule 90 (arit -> PARA expresion PARC .)
    MENOS           reduce using rule 90 (arit -> PARA expresion PARC .)
    MOD             reduce using rule 90 (arit -> PARA expresion PARC .)
    ANDB            reduce using rule 90 (arit -> PARA expresion PARC .)
    SHIFTI          reduce using rule 90 (arit -> PARA expresion PARC .)
    SHIFTD          reduce using rule 90 (arit -> PARA expresion PARC .)
    XORB            reduce using rule 90 (arit -> PARA expresion PARC .)
    ORB             reduce using rule 90 (arit -> PARA expresion PARC .)
    AND             reduce using rule 90 (arit -> PARA expresion PARC .)
    ORR             reduce using rule 90 (arit -> PARA expresion PARC .)
    PARC            reduce using rule 90 (arit -> PARA expresion PARC .)
    COMA            reduce using rule 90 (arit -> PARA expresion PARC .)
    PUNTOYCOMA      reduce using rule 90 (arit -> PARA expresion PARC .)
    THEN            reduce using rule 90 (arit -> PARA expresion PARC .)
    WHEN            reduce using rule 90 (arit -> PARA expresion PARC .)
    ELSE            reduce using rule 90 (arit -> PARA expresion PARC .)


state 88

    (23) llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .

    error           reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    CREATE          reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    SELECT          reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    $end            reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    END             reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    ID              reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    RAISE           reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    IF              reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    CASE            reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    BEGIN           reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    ELSE            reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    ELSEIF          reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)
    WHEN            reduce using rule 23 (llamada_funcion -> SELECT ID PARA params PARC PUNTOYCOMA .)


state 89

    (24) params -> params COMA expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PARC            reduce using rule 24 (params -> params COMA expresion .)
    COMA            reduce using rule 24 (params -> params COMA expresion .)
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 90

    (70) log -> expresion AND expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    AND             reduce using rule 70 (log -> expresion AND expresion .)
    ORR             reduce using rule 70 (log -> expresion AND expresion .)
    PARC            reduce using rule 70 (log -> expresion AND expresion .)
    COMA            reduce using rule 70 (log -> expresion AND expresion .)
    MAYOR           reduce using rule 70 (log -> expresion AND expresion .)
    MENOR           reduce using rule 70 (log -> expresion AND expresion .)
    MAYORIGUAL      reduce using rule 70 (log -> expresion AND expresion .)
    MENORIGUAL      reduce using rule 70 (log -> expresion AND expresion .)
    IGUALIGUAL      reduce using rule 70 (log -> expresion AND expresion .)
    NOTIGUAL        reduce using rule 70 (log -> expresion AND expresion .)
    POR             reduce using rule 70 (log -> expresion AND expresion .)
    DIV             reduce using rule 70 (log -> expresion AND expresion .)
    MAS             reduce using rule 70 (log -> expresion AND expresion .)
    MENOS           reduce using rule 70 (log -> expresion AND expresion .)
    MOD             reduce using rule 70 (log -> expresion AND expresion .)
    ANDB            reduce using rule 70 (log -> expresion AND expresion .)
    SHIFTI          reduce using rule 70 (log -> expresion AND expresion .)
    SHIFTD          reduce using rule 70 (log -> expresion AND expresion .)
    XORB            reduce using rule 70 (log -> expresion AND expresion .)
    ORB             reduce using rule 70 (log -> expresion AND expresion .)
    PUNTOYCOMA      reduce using rule 70 (log -> expresion AND expresion .)
    THEN            reduce using rule 70 (log -> expresion AND expresion .)
    WHEN            reduce using rule 70 (log -> expresion AND expresion .)
    ELSE            reduce using rule 70 (log -> expresion AND expresion .)

  ! AND             [ shift and go to state 43 ]
  ! ORR             [ shift and go to state 44 ]


state 91

    (71) log -> expresion ORR expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    ORR             reduce using rule 71 (log -> expresion ORR expresion .)
    PARC            reduce using rule 71 (log -> expresion ORR expresion .)
    COMA            reduce using rule 71 (log -> expresion ORR expresion .)
    MAYOR           reduce using rule 71 (log -> expresion ORR expresion .)
    MENOR           reduce using rule 71 (log -> expresion ORR expresion .)
    MAYORIGUAL      reduce using rule 71 (log -> expresion ORR expresion .)
    MENORIGUAL      reduce using rule 71 (log -> expresion ORR expresion .)
    IGUALIGUAL      reduce using rule 71 (log -> expresion ORR expresion .)
    NOTIGUAL        reduce using rule 71 (log -> expresion ORR expresion .)
    POR             reduce using rule 71 (log -> expresion ORR expresion .)
    DIV             reduce using rule 71 (log -> expresion ORR expresion .)
    MAS             reduce using rule 71 (log -> expresion ORR expresion .)
    MENOS           reduce using rule 71 (log -> expresion ORR expresion .)
    MOD             reduce using rule 71 (log -> expresion ORR expresion .)
    ANDB            reduce using rule 71 (log -> expresion ORR expresion .)
    SHIFTI          reduce using rule 71 (log -> expresion ORR expresion .)
    SHIFTD          reduce using rule 71 (log -> expresion ORR expresion .)
    XORB            reduce using rule 71 (log -> expresion ORR expresion .)
    ORB             reduce using rule 71 (log -> expresion ORR expresion .)
    PUNTOYCOMA      reduce using rule 71 (log -> expresion ORR expresion .)
    THEN            reduce using rule 71 (log -> expresion ORR expresion .)
    WHEN            reduce using rule 71 (log -> expresion ORR expresion .)
    ELSE            reduce using rule 71 (log -> expresion ORR expresion .)
    AND             shift and go to state 43

  ! AND             [ reduce using rule 71 (log -> expresion ORR expresion .) ]
  ! ORR             [ shift and go to state 44 ]


state 92

    (73) rel -> arit MAYOR arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    AND             reduce using rule 73 (rel -> arit MAYOR arit .)
    ORR             reduce using rule 73 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 73 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 73 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 73 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 73 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 73 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 73 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 73 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 73 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 73 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 73 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 73 (rel -> arit MAYOR arit .)
    PUNTOYCOMA      reduce using rule 73 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 73 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 73 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 73 (rel -> arit MAYOR arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! DIV             [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! MOD             [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 73 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 93

    (74) rel -> arit MENOR arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    AND             reduce using rule 74 (rel -> arit MENOR arit .)
    ORR             reduce using rule 74 (rel -> arit MENOR arit .)
    PARC            reduce using rule 74 (rel -> arit MENOR arit .)
    COMA            reduce using rule 74 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 74 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 74 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 74 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 74 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 74 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 74 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 74 (rel -> arit MENOR arit .)
    XORB            reduce using rule 74 (rel -> arit MENOR arit .)
    ORB             reduce using rule 74 (rel -> arit MENOR arit .)
    PUNTOYCOMA      reduce using rule 74 (rel -> arit MENOR arit .)
    THEN            reduce using rule 74 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 74 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 74 (rel -> arit MENOR arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! DIV             [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! MOD             [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 74 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 94

    (75) rel -> arit MAYORIGUAL arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    AND             reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    ORR             reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    PUNTOYCOMA      reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 75 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! DIV             [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! MOD             [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 75 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 95

    (76) rel -> arit MENORIGUAL arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    AND             reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    ORR             reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    PUNTOYCOMA      reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 76 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! DIV             [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! MOD             [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 76 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 96

    (77) rel -> arit IGUALIGUAL arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    AND             reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    ORR             reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    PUNTOYCOMA      reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 77 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! DIV             [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! MOD             [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 77 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 97

    (78) rel -> arit NOTIGUAL arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    AND             reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    ORR             reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    PUNTOYCOMA      reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 78 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! DIV             [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! MOD             [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 78 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 98

    (80) arit -> arit POR arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 80 (arit -> arit POR arit .)
    MENOR           reduce using rule 80 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 80 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 80 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 80 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 80 (arit -> arit POR arit .)
    POR             reduce using rule 80 (arit -> arit POR arit .)
    DIV             reduce using rule 80 (arit -> arit POR arit .)
    MAS             reduce using rule 80 (arit -> arit POR arit .)
    MENOS           reduce using rule 80 (arit -> arit POR arit .)
    MOD             reduce using rule 80 (arit -> arit POR arit .)
    ANDB            reduce using rule 80 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 80 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 80 (arit -> arit POR arit .)
    XORB            reduce using rule 80 (arit -> arit POR arit .)
    ORB             reduce using rule 80 (arit -> arit POR arit .)
    AND             reduce using rule 80 (arit -> arit POR arit .)
    ORR             reduce using rule 80 (arit -> arit POR arit .)
    PARC            reduce using rule 80 (arit -> arit POR arit .)
    COMA            reduce using rule 80 (arit -> arit POR arit .)
    PUNTOYCOMA      reduce using rule 80 (arit -> arit POR arit .)
    THEN            reduce using rule 80 (arit -> arit POR arit .)
    WHEN            reduce using rule 80 (arit -> arit POR arit .)
    ELSE            reduce using rule 80 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 51 ]
  ! DIV             [ shift and go to state 52 ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 99

    (81) arit -> arit DIV arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 81 (arit -> arit DIV arit .)
    MENOR           reduce using rule 81 (arit -> arit DIV arit .)
    MAYORIGUAL      reduce using rule 81 (arit -> arit DIV arit .)
    MENORIGUAL      reduce using rule 81 (arit -> arit DIV arit .)
    IGUALIGUAL      reduce using rule 81 (arit -> arit DIV arit .)
    NOTIGUAL        reduce using rule 81 (arit -> arit DIV arit .)
    POR             reduce using rule 81 (arit -> arit DIV arit .)
    DIV             reduce using rule 81 (arit -> arit DIV arit .)
    MAS             reduce using rule 81 (arit -> arit DIV arit .)
    MENOS           reduce using rule 81 (arit -> arit DIV arit .)
    MOD             reduce using rule 81 (arit -> arit DIV arit .)
    ANDB            reduce using rule 81 (arit -> arit DIV arit .)
    SHIFTI          reduce using rule 81 (arit -> arit DIV arit .)
    SHIFTD          reduce using rule 81 (arit -> arit DIV arit .)
    XORB            reduce using rule 81 (arit -> arit DIV arit .)
    ORB             reduce using rule 81 (arit -> arit DIV arit .)
    AND             reduce using rule 81 (arit -> arit DIV arit .)
    ORR             reduce using rule 81 (arit -> arit DIV arit .)
    PARC            reduce using rule 81 (arit -> arit DIV arit .)
    COMA            reduce using rule 81 (arit -> arit DIV arit .)
    PUNTOYCOMA      reduce using rule 81 (arit -> arit DIV arit .)
    THEN            reduce using rule 81 (arit -> arit DIV arit .)
    WHEN            reduce using rule 81 (arit -> arit DIV arit .)
    ELSE            reduce using rule 81 (arit -> arit DIV arit .)

  ! POR             [ shift and go to state 51 ]
  ! DIV             [ shift and go to state 52 ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 100

    (82) arit -> arit MAS arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 82 (arit -> arit MAS arit .)
    MENOR           reduce using rule 82 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 82 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 82 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 82 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 82 (arit -> arit MAS arit .)
    MAS             reduce using rule 82 (arit -> arit MAS arit .)
    MENOS           reduce using rule 82 (arit -> arit MAS arit .)
    ANDB            reduce using rule 82 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 82 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 82 (arit -> arit MAS arit .)
    XORB            reduce using rule 82 (arit -> arit MAS arit .)
    ORB             reduce using rule 82 (arit -> arit MAS arit .)
    AND             reduce using rule 82 (arit -> arit MAS arit .)
    ORR             reduce using rule 82 (arit -> arit MAS arit .)
    PARC            reduce using rule 82 (arit -> arit MAS arit .)
    COMA            reduce using rule 82 (arit -> arit MAS arit .)
    PUNTOYCOMA      reduce using rule 82 (arit -> arit MAS arit .)
    THEN            reduce using rule 82 (arit -> arit MAS arit .)
    WHEN            reduce using rule 82 (arit -> arit MAS arit .)
    ELSE            reduce using rule 82 (arit -> arit MAS arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MOD             shift and go to state 55

  ! POR             [ reduce using rule 82 (arit -> arit MAS arit .) ]
  ! DIV             [ reduce using rule 82 (arit -> arit MAS arit .) ]
  ! MOD             [ reduce using rule 82 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 101

    (83) arit -> arit MENOS arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 83 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 83 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 83 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 83 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 83 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 83 (arit -> arit MENOS arit .)
    MAS             reduce using rule 83 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 83 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 83 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 83 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 83 (arit -> arit MENOS arit .)
    XORB            reduce using rule 83 (arit -> arit MENOS arit .)
    ORB             reduce using rule 83 (arit -> arit MENOS arit .)
    AND             reduce using rule 83 (arit -> arit MENOS arit .)
    ORR             reduce using rule 83 (arit -> arit MENOS arit .)
    PARC            reduce using rule 83 (arit -> arit MENOS arit .)
    COMA            reduce using rule 83 (arit -> arit MENOS arit .)
    PUNTOYCOMA      reduce using rule 83 (arit -> arit MENOS arit .)
    THEN            reduce using rule 83 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 83 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 83 (arit -> arit MENOS arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MOD             shift and go to state 55

  ! POR             [ reduce using rule 83 (arit -> arit MENOS arit .) ]
  ! DIV             [ reduce using rule 83 (arit -> arit MENOS arit .) ]
  ! MOD             [ reduce using rule 83 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 102

    (84) arit -> arit MOD arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 84 (arit -> arit MOD arit .)
    MENOR           reduce using rule 84 (arit -> arit MOD arit .)
    MAYORIGUAL      reduce using rule 84 (arit -> arit MOD arit .)
    MENORIGUAL      reduce using rule 84 (arit -> arit MOD arit .)
    IGUALIGUAL      reduce using rule 84 (arit -> arit MOD arit .)
    NOTIGUAL        reduce using rule 84 (arit -> arit MOD arit .)
    POR             reduce using rule 84 (arit -> arit MOD arit .)
    DIV             reduce using rule 84 (arit -> arit MOD arit .)
    MAS             reduce using rule 84 (arit -> arit MOD arit .)
    MENOS           reduce using rule 84 (arit -> arit MOD arit .)
    MOD             reduce using rule 84 (arit -> arit MOD arit .)
    ANDB            reduce using rule 84 (arit -> arit MOD arit .)
    SHIFTI          reduce using rule 84 (arit -> arit MOD arit .)
    SHIFTD          reduce using rule 84 (arit -> arit MOD arit .)
    XORB            reduce using rule 84 (arit -> arit MOD arit .)
    ORB             reduce using rule 84 (arit -> arit MOD arit .)
    AND             reduce using rule 84 (arit -> arit MOD arit .)
    ORR             reduce using rule 84 (arit -> arit MOD arit .)
    PARC            reduce using rule 84 (arit -> arit MOD arit .)
    COMA            reduce using rule 84 (arit -> arit MOD arit .)
    PUNTOYCOMA      reduce using rule 84 (arit -> arit MOD arit .)
    THEN            reduce using rule 84 (arit -> arit MOD arit .)
    WHEN            reduce using rule 84 (arit -> arit MOD arit .)
    ELSE            reduce using rule 84 (arit -> arit MOD arit .)

  ! POR             [ shift and go to state 51 ]
  ! DIV             [ shift and go to state 52 ]
  ! MAS             [ shift and go to state 53 ]
  ! MENOS           [ shift and go to state 54 ]
  ! MOD             [ shift and go to state 55 ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 103

    (85) arit -> arit ANDB arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 85 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 85 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 85 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 85 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 85 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 85 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 85 (arit -> arit ANDB arit .)
    XORB            reduce using rule 85 (arit -> arit ANDB arit .)
    ORB             reduce using rule 85 (arit -> arit ANDB arit .)
    AND             reduce using rule 85 (arit -> arit ANDB arit .)
    ORR             reduce using rule 85 (arit -> arit ANDB arit .)
    PARC            reduce using rule 85 (arit -> arit ANDB arit .)
    COMA            reduce using rule 85 (arit -> arit ANDB arit .)
    PUNTOYCOMA      reduce using rule 85 (arit -> arit ANDB arit .)
    THEN            reduce using rule 85 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 85 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 85 (arit -> arit ANDB arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! DIV             [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! MOD             [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 85 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 104

    (86) arit -> arit SHIFTI arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 86 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 86 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 86 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 86 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 86 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 86 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 86 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 86 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 86 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 86 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 86 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 86 (arit -> arit SHIFTI arit .)
    ORR             reduce using rule 86 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 86 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 86 (arit -> arit SHIFTI arit .)
    PUNTOYCOMA      reduce using rule 86 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 86 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 86 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 86 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55

  ! POR             [ reduce using rule 86 (arit -> arit SHIFTI arit .) ]
  ! DIV             [ reduce using rule 86 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 86 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 86 (arit -> arit SHIFTI arit .) ]
  ! MOD             [ reduce using rule 86 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 105

    (87) arit -> arit SHIFTD arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 87 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 87 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 87 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 87 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 87 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 87 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 87 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 87 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 87 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 87 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 87 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 87 (arit -> arit SHIFTD arit .)
    ORR             reduce using rule 87 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 87 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 87 (arit -> arit SHIFTD arit .)
    PUNTOYCOMA      reduce using rule 87 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 87 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 87 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 87 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55

  ! POR             [ reduce using rule 87 (arit -> arit SHIFTD arit .) ]
  ! DIV             [ reduce using rule 87 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 87 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 87 (arit -> arit SHIFTD arit .) ]
  ! MOD             [ reduce using rule 87 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 56 ]
  ! SHIFTI          [ shift and go to state 57 ]
  ! SHIFTD          [ shift and go to state 58 ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 106

    (88) arit -> arit XORB arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 88 (arit -> arit XORB arit .)
    MENOR           reduce using rule 88 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 88 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 88 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 88 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 88 (arit -> arit XORB arit .)
    XORB            reduce using rule 88 (arit -> arit XORB arit .)
    AND             reduce using rule 88 (arit -> arit XORB arit .)
    ORR             reduce using rule 88 (arit -> arit XORB arit .)
    PARC            reduce using rule 88 (arit -> arit XORB arit .)
    COMA            reduce using rule 88 (arit -> arit XORB arit .)
    PUNTOYCOMA      reduce using rule 88 (arit -> arit XORB arit .)
    THEN            reduce using rule 88 (arit -> arit XORB arit .)
    WHEN            reduce using rule 88 (arit -> arit XORB arit .)
    ELSE            reduce using rule 88 (arit -> arit XORB arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    ANDB            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58
    ORB             shift and go to state 60

  ! POR             [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! DIV             [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! MOD             [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 88 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 59 ]


state 107

    (89) arit -> arit ORB arit .
    (80) arit -> arit . POR arit
    (81) arit -> arit . DIV arit
    (82) arit -> arit . MAS arit
    (83) arit -> arit . MENOS arit
    (84) arit -> arit . MOD arit
    (85) arit -> arit . ANDB arit
    (86) arit -> arit . SHIFTI arit
    (87) arit -> arit . SHIFTD arit
    (88) arit -> arit . XORB arit
    (89) arit -> arit . ORB arit

    MAYOR           reduce using rule 89 (arit -> arit ORB arit .)
    MENOR           reduce using rule 89 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 89 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 89 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 89 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 89 (arit -> arit ORB arit .)
    XORB            reduce using rule 89 (arit -> arit ORB arit .)
    ORB             reduce using rule 89 (arit -> arit ORB arit .)
    AND             reduce using rule 89 (arit -> arit ORB arit .)
    ORR             reduce using rule 89 (arit -> arit ORB arit .)
    PARC            reduce using rule 89 (arit -> arit ORB arit .)
    COMA            reduce using rule 89 (arit -> arit ORB arit .)
    PUNTOYCOMA      reduce using rule 89 (arit -> arit ORB arit .)
    THEN            reduce using rule 89 (arit -> arit ORB arit .)
    WHEN            reduce using rule 89 (arit -> arit ORB arit .)
    ELSE            reduce using rule 89 (arit -> arit ORB arit .)
    POR             shift and go to state 51
    DIV             shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    MOD             shift and go to state 55
    ANDB            shift and go to state 56
    SHIFTI          shift and go to state 57
    SHIFTD          shift and go to state 58

  ! POR             [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! DIV             [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! MOD             [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 89 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 59 ]
  ! ORB             [ shift and go to state 60 ]


state 108

    (61) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 115


state 109

    (62) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 116


state 110

    (64) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 117


state 111

    (63) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 118


state 112

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (48) tipo -> . INTEGER
    (49) tipo -> . SMALLINT
    (50) tipo -> . BIGINT
    (51) tipo -> . DECIMAL
    (52) tipo -> . NUMERIC
    (53) tipo -> . REAL
    (54) tipo -> . CHAR
    (55) tipo -> . DOUBLE
    (56) tipo -> . PRECISION
    (57) tipo -> . MONEY
    (58) tipo -> . FLOAT
    (59) tipo -> . BOOLEAN
    (60) tipo -> . VOID
    (61) tipo -> . CHAR PARA ENTERO PARC
    (62) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (63) tipo -> . VARCHAR PARA ENTERO PARC
    (64) tipo -> . CHARACTER PARA ENTERO PARC
    (65) tipo -> . TEXT
    (66) tipo -> . TIME
    (67) tipo -> . TIMESTAMP
    (68) tipo -> . DATE

    INTEGER         shift and go to state 65
    SMALLINT        shift and go to state 66
    BIGINT          shift and go to state 67
    DECIMAL         shift and go to state 68
    NUMERIC         shift and go to state 69
    REAL            shift and go to state 70
    CHAR            shift and go to state 71
    DOUBLE          shift and go to state 72
    PRECISION       shift and go to state 73
    MONEY           shift and go to state 74
    FLOAT           shift and go to state 75
    BOOLEAN         shift and go to state 76
    VOID            shift and go to state 77
    CHARACTER       shift and go to state 78
    VARCHAR         shift and go to state 79
    TEXT            shift and go to state 80
    TIME            shift and go to state 81
    TIMESTAMP       shift and go to state 82
    DATE            shift and go to state 83

    tipo                           shift and go to state 119

state 113

    (27) parametros -> parametros COMA parametro .

    PARC            reduce using rule 27 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 27 (parametros -> parametros COMA parametro .)


state 114

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (27) parametros -> parametros . COMA parametro

    PARC            shift and go to state 120
    COMA            shift and go to state 85


state 115

    (61) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 121


state 116

    (62) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 122


state 117

    (64) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 123


state 118

    (63) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 124


state 119

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    AS              shift and go to state 125


state 120

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    RETURNS         shift and go to state 126


state 121

    (61) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 61 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 61 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 61 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 61 (tipo -> CHAR PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 61 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 61 (tipo -> CHAR PARA ENTERO PARC .)


state 122

    (62) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 127


state 123

    (64) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 64 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 64 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 64 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 64 (tipo -> CHARACTER PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 64 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 64 (tipo -> CHARACTER PARA ENTERO PARC .)


state 124

    (63) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 63 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 63 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 63 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 63 (tipo -> VARCHAR PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 63 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 63 (tipo -> VARCHAR PARA ENTERO PARC .)


state 125

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 128


state 126

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (48) tipo -> . INTEGER
    (49) tipo -> . SMALLINT
    (50) tipo -> . BIGINT
    (51) tipo -> . DECIMAL
    (52) tipo -> . NUMERIC
    (53) tipo -> . REAL
    (54) tipo -> . CHAR
    (55) tipo -> . DOUBLE
    (56) tipo -> . PRECISION
    (57) tipo -> . MONEY
    (58) tipo -> . FLOAT
    (59) tipo -> . BOOLEAN
    (60) tipo -> . VOID
    (61) tipo -> . CHAR PARA ENTERO PARC
    (62) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (63) tipo -> . VARCHAR PARA ENTERO PARC
    (64) tipo -> . CHARACTER PARA ENTERO PARC
    (65) tipo -> . TEXT
    (66) tipo -> . TIME
    (67) tipo -> . TIMESTAMP
    (68) tipo -> . DATE

    INTEGER         shift and go to state 65
    SMALLINT        shift and go to state 66
    BIGINT          shift and go to state 67
    DECIMAL         shift and go to state 68
    NUMERIC         shift and go to state 69
    REAL            shift and go to state 70
    CHAR            shift and go to state 71
    DOUBLE          shift and go to state 72
    PRECISION       shift and go to state 73
    MONEY           shift and go to state 74
    FLOAT           shift and go to state 75
    BOOLEAN         shift and go to state 76
    VOID            shift and go to state 77
    CHARACTER       shift and go to state 78
    VARCHAR         shift and go to state 79
    TEXT            shift and go to state 80
    TIME            shift and go to state 81
    TIMESTAMP       shift and go to state 82
    DATE            shift and go to state 83

    tipo                           shift and go to state 129

state 127

    (62) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 62 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 62 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 62 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 62 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PUNTOYCOMA      reduce using rule 62 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 62 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 128

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 130


state 129

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    AS              shift and go to state 131


state 130

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    BEGIN           shift and go to state 132
    DECLARE         shift and go to state 133


state 131

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 134


state 132

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 136
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 133

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    BEGIN           reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 150
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 134

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 151


state 135

    (44) asignacion -> ID . DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> ID . tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> ID . tipo PUNTOYCOMA
    (47) declaracion -> ID . tipo DEFAULT expresion PUNTOYCOMA
    (48) tipo -> . INTEGER
    (49) tipo -> . SMALLINT
    (50) tipo -> . BIGINT
    (51) tipo -> . DECIMAL
    (52) tipo -> . NUMERIC
    (53) tipo -> . REAL
    (54) tipo -> . CHAR
    (55) tipo -> . DOUBLE
    (56) tipo -> . PRECISION
    (57) tipo -> . MONEY
    (58) tipo -> . FLOAT
    (59) tipo -> . BOOLEAN
    (60) tipo -> . VOID
    (61) tipo -> . CHAR PARA ENTERO PARC
    (62) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (63) tipo -> . VARCHAR PARA ENTERO PARC
    (64) tipo -> . CHARACTER PARA ENTERO PARC
    (65) tipo -> . TEXT
    (66) tipo -> . TIME
    (67) tipo -> . TIMESTAMP
    (68) tipo -> . DATE

    DOSPUNTOS       shift and go to state 152
    INTEGER         shift and go to state 65
    SMALLINT        shift and go to state 66
    BIGINT          shift and go to state 67
    DECIMAL         shift and go to state 68
    NUMERIC         shift and go to state 69
    REAL            shift and go to state 70
    CHAR            shift and go to state 71
    DOUBLE          shift and go to state 72
    PRECISION       shift and go to state 73
    MONEY           shift and go to state 74
    FLOAT           shift and go to state 75
    BOOLEAN         shift and go to state 76
    VOID            shift and go to state 77
    CHARACTER       shift and go to state 78
    VARCHAR         shift and go to state 79
    TEXT            shift and go to state 80
    TIME            shift and go to state 81
    TIMESTAMP       shift and go to state 82
    DATE            shift and go to state 83

    tipo                           shift and go to state 153

state 136

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    END             shift and go to state 154
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! END             [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 137

    (15) instrucciones_funct_sent -> PUNTOYCOMA .

    END             reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    error           reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    ID              reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    RAISE           reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    IF              reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    CASE            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    SELECT          reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    BEGIN           reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    ELSE            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    ELSEIF          reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)
    WHEN            reduce using rule 15 (instrucciones_funct_sent -> PUNTOYCOMA .)


state 138

    (9) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PUNTOYCOMA      reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 9 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 139

    (10) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    PUNTOYCOMA      reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 10 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 10 (instrucciones_funct_sent -> asignacion .)


state 140

    (11) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    PUNTOYCOMA      reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 11 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 11 (instrucciones_funct_sent -> declaracion .)


state 141

    (12) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    PUNTOYCOMA      reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 12 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 12 (instrucciones_funct_sent -> imprimir .)


state 142

    (13) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    PUNTOYCOMA      reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 13 (instrucciones_funct_sent -> sentencia_if .)


state 143

    (14) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    PUNTOYCOMA      reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 14 (instrucciones_funct_sent -> sentencia_switch .)


state 144

    (16) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    PUNTOYCOMA      reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 16 (instrucciones_funct_sent -> llamada_funcion .)


state 145

    (17) instrucciones_funct_sent -> empty .

    END             reduce using rule 17 (instrucciones_funct_sent -> empty .)
    PUNTOYCOMA      reduce using rule 17 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 17 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 17 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 17 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 17 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 17 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 17 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 17 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 17 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 17 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 17 (instrucciones_funct_sent -> empty .)


state 146

    (18) instrucciones_funct_sent -> error .

    END             reduce using rule 18 (instrucciones_funct_sent -> error .)
    PUNTOYCOMA      reduce using rule 18 (instrucciones_funct_sent -> error .)
    error           reduce using rule 18 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 18 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 18 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 18 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 18 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 18 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 18 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 18 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 18 (instrucciones_funct_sent -> error .)


state 147

    (40) imprimir -> RAISE . lista_imprimir PUNTOYCOMA
    (41) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (42) lista_imprimir -> . sent_imprimir
    (43) sent_imprimir -> . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    lista_imprimir                 shift and go to state 156
    sent_imprimir                  shift and go to state 157
    expresion                      shift and go to state 158
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 148

    (36) sentencia_if -> IF . expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 159
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 149

    (31) sentencia_switch -> CASE . expresion case_list END CASE PUNTOYCOMA
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 160
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 150

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    BEGIN           shift and go to state 161
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! BEGIN           [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 151

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    BEGIN           shift and go to state 162
    DECLARE         shift and go to state 163


state 152

    (44) asignacion -> ID DOSPUNTOS . IGUAL expresion PUNTOYCOMA

    IGUAL           shift and go to state 164


state 153

    (45) declaracion -> ID tipo . DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> ID tipo . PUNTOYCOMA
    (47) declaracion -> ID tipo . DEFAULT expresion PUNTOYCOMA

    DOSPUNTOS       shift and go to state 165
    PUNTOYCOMA      shift and go to state 166
    DEFAULT         shift and go to state 167


state 154

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 168


state 155

    (8) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PUNTOYCOMA      reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 8 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 156

    (40) imprimir -> RAISE lista_imprimir . PUNTOYCOMA
    (41) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PUNTOYCOMA      shift and go to state 169
    COMA            shift and go to state 170


state 157

    (42) lista_imprimir -> sent_imprimir .

    PUNTOYCOMA      reduce using rule 42 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 42 (lista_imprimir -> sent_imprimir .)


state 158

    (43) sent_imprimir -> expresion .
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PUNTOYCOMA      reduce using rule 43 (sent_imprimir -> expresion .)
    COMA            reduce using rule 43 (sent_imprimir -> expresion .)
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 159

    (36) sentencia_if -> IF expresion . THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    THEN            shift and go to state 171
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 160

    (31) sentencia_switch -> CASE expresion . case_list END CASE PUNTOYCOMA
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion
    (32) case_list -> . case_list case
    (33) case_list -> . case
    (34) case -> . WHEN expresion THEN instrucciones_funct_list
    (35) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 43
    ORR             shift and go to state 44
    WHEN            shift and go to state 174
    ELSE            shift and go to state 175

    case_list                      shift and go to state 172
    case                           shift and go to state 173

state 161

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 176
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 162

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 177
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 163

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    BEGIN           reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 178
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 164

    (44) asignacion -> ID DOSPUNTOS IGUAL . expresion PUNTOYCOMA
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 179
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 165

    (45) declaracion -> ID tipo DOSPUNTOS . IGUAL expresion PUNTOYCOMA

    IGUAL           shift and go to state 180


state 166

    (46) declaracion -> ID tipo PUNTOYCOMA .

    END             reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    error           reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    ID              reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    RAISE           reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    IF              reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    CASE            reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    SELECT          reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    BEGIN           reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    ELSE            reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    ELSEIF          reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)
    WHEN            reduce using rule 46 (declaracion -> ID tipo PUNTOYCOMA .)


state 167

    (47) declaracion -> ID tipo DEFAULT . expresion PUNTOYCOMA
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 181
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 168

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 182


state 169

    (40) imprimir -> RAISE lista_imprimir PUNTOYCOMA .

    END             reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    error           reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    ID              reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    RAISE           reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    IF              reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    CASE            reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    SELECT          reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    BEGIN           reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    ELSE            reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    ELSEIF          reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)
    WHEN            reduce using rule 40 (imprimir -> RAISE lista_imprimir PUNTOYCOMA .)


state 170

    (41) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (43) sent_imprimir -> . expresion
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    sent_imprimir                  shift and go to state 183
    expresion                      shift and go to state 158
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 171

    (36) sentencia_if -> IF expresion THEN . instrucciones_funct_list else END IF PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    ELSE            reduce using rule 100 (empty -> .)
    ELSEIF          reduce using rule 100 (empty -> .)
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 184
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 172

    (31) sentencia_switch -> CASE expresion case_list . END CASE PUNTOYCOMA
    (32) case_list -> case_list . case
    (34) case -> . WHEN expresion THEN instrucciones_funct_list
    (35) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 185
    WHEN            shift and go to state 174
    ELSE            shift and go to state 175

    case                           shift and go to state 186

state 173

    (33) case_list -> case .

    END             reduce using rule 33 (case_list -> case .)
    WHEN            reduce using rule 33 (case_list -> case .)
    ELSE            reduce using rule 33 (case_list -> case .)


state 174

    (34) case -> WHEN . expresion THEN instrucciones_funct_list
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 187
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 175

    (35) case -> ELSE . instrucciones_funct_list
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)
    WHEN            reduce using rule 100 (empty -> .)
    ELSE            reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 188
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 176

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    END             shift and go to state 189
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! END             [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 177

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    END             shift and go to state 190
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! END             [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 178

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    BEGIN           shift and go to state 191
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! BEGIN           [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 179

    (44) asignacion -> ID DOSPUNTOS IGUAL expresion . PUNTOYCOMA
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PUNTOYCOMA      shift and go to state 192
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 180

    (45) declaracion -> ID tipo DOSPUNTOS IGUAL . expresion PUNTOYCOMA
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 193
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 181

    (47) declaracion -> ID tipo DEFAULT expresion . PUNTOYCOMA
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PUNTOYCOMA      shift and go to state 194
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 182

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 195


state 183

    (41) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PUNTOYCOMA      reduce using rule 41 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 41 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 184

    (36) sentencia_if -> IF expresion THEN instrucciones_funct_list . else END IF PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (37) else -> . ELSE instrucciones_funct_list
    (38) else -> . ELSEIF expresion THEN instrucciones_funct_list else
    (39) else -> .
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! reduce/reduce conflict for END resolved using rule 39 (else -> .)
    ELSE            shift and go to state 197
    ELSEIF          shift and go to state 198
    END             reduce using rule 39 (else -> .)
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! ELSE            [ reduce using rule 100 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]
  ! END             [ reduce using rule 100 (empty -> .) ]

    else                           shift and go to state 196
    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 185

    (31) sentencia_switch -> CASE expresion case_list END . CASE PUNTOYCOMA

    CASE            shift and go to state 199


state 186

    (32) case_list -> case_list case .

    END             reduce using rule 32 (case_list -> case_list case .)
    WHEN            reduce using rule 32 (case_list -> case_list case .)
    ELSE            reduce using rule 32 (case_list -> case_list case .)


state 187

    (34) case -> WHEN expresion . THEN instrucciones_funct_list
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    THEN            shift and go to state 200
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 188

    (35) case -> ELSE instrucciones_funct_list .
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! reduce/reduce conflict for END resolved using rule 35 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 35 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 35 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 35 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 35 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 35 (case -> ELSE instrucciones_funct_list .)
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]
  ! END             [ reduce using rule 100 (empty -> .) ]
  ! WHEN            [ reduce using rule 100 (empty -> .) ]
  ! ELSE            [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 189

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 201


state 190

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 202


state 191

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 203
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 192

    (44) asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .

    END             reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    error           reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    RAISE           reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    CASE            reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    SELECT          reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    BEGIN           reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    WHEN            reduce using rule 44 (asignacion -> ID DOSPUNTOS IGUAL expresion PUNTOYCOMA .)


state 193

    (45) declaracion -> ID tipo DOSPUNTOS IGUAL expresion . PUNTOYCOMA
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    PUNTOYCOMA      shift and go to state 204
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 194

    (47) declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .

    END             reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    error           reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    ID              reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    RAISE           reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    IF              reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    CASE            reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    SELECT          reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    BEGIN           reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    ELSE            reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)
    WHEN            reduce using rule 47 (declaracion -> ID tipo DEFAULT expresion PUNTOYCOMA .)


state 195

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 205


state 196

    (36) sentencia_if -> IF expresion THEN instrucciones_funct_list else . END IF PUNTOYCOMA

    END             shift and go to state 206


state 197

    (37) else -> ELSE . instrucciones_funct_list
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 207
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 198

    (38) else -> ELSEIF . expresion THEN instrucciones_funct_list else
    (69) expresion -> . log
    (70) log -> . expresion AND expresion
    (71) log -> . expresion ORR expresion
    (72) log -> . rel
    (73) rel -> . arit MAYOR arit
    (74) rel -> . arit MENOR arit
    (75) rel -> . arit MAYORIGUAL arit
    (76) rel -> . arit MENORIGUAL arit
    (77) rel -> . arit IGUALIGUAL arit
    (78) rel -> . arit NOTIGUAL arit
    (79) rel -> . arit
    (80) arit -> . arit POR arit
    (81) arit -> . arit DIV arit
    (82) arit -> . arit MAS arit
    (83) arit -> . arit MENOS arit
    (84) arit -> . arit MOD arit
    (85) arit -> . arit ANDB arit
    (86) arit -> . arit SHIFTI arit
    (87) arit -> . arit SHIFTD arit
    (88) arit -> . arit XORB arit
    (89) arit -> . arit ORB arit
    (90) arit -> . PARA expresion PARC
    (91) arit -> . ID
    (92) arit -> . CADENA
    (93) arit -> . ENTERO
    (94) arit -> . FLOTANTE
    (95) arit -> . MENOS expresion
    (96) arit -> . NOTB expresion
    (97) arit -> . NOT expresion
    (98) arit -> . TRUE
    (99) arit -> . FALSE

    PARA            shift and go to state 20
    ID              shift and go to state 19
    CADENA          shift and go to state 28
    ENTERO          shift and go to state 29
    FLOTANTE        shift and go to state 30
    MENOS           shift and go to state 27
    NOTB            shift and go to state 31
    NOT             shift and go to state 32
    TRUE            shift and go to state 33
    FALSE           shift and go to state 34

    expresion                      shift and go to state 208
    log                            shift and go to state 24
    rel                            shift and go to state 25
    arit                           shift and go to state 26

state 199

    (31) sentencia_switch -> CASE expresion case_list END CASE . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 209


state 200

    (34) case -> WHEN expresion THEN . instrucciones_funct_list
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    END             reduce using rule 100 (empty -> .)
    WHEN            reduce using rule 100 (empty -> .)
    ELSE            reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 210
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 201

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 211


state 202

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 212


state 203

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    END             shift and go to state 213
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! END             [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 204

    (45) declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .

    END             reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    error           reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ID              reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    RAISE           reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    IF              reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    CASE            reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    SELECT          reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    BEGIN           reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSE            reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    ELSEIF          reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)
    WHEN            reduce using rule 45 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA .)


state 205

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 214


state 206

    (36) sentencia_if -> IF expresion THEN instrucciones_funct_list else END . IF PUNTOYCOMA

    IF              shift and go to state 215


state 207

    (37) else -> ELSE instrucciones_funct_list .
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! reduce/reduce conflict for END resolved using rule 37 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 37 (else -> ELSE instrucciones_funct_list .)
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]
  ! END             [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 208

    (38) else -> ELSEIF expresion . THEN instrucciones_funct_list else
    (70) log -> expresion . AND expresion
    (71) log -> expresion . ORR expresion

    THEN            shift and go to state 216
    AND             shift and go to state 43
    ORR             shift and go to state 44


state 209

    (31) sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .

    END             reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    error           reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    ID              reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    RAISE           reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    IF              reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    CASE            reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    SELECT          reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    BEGIN           reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    ELSE            reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    ELSEIF          reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)
    WHEN            reduce using rule 31 (sentencia_switch -> CASE expresion case_list END CASE PUNTOYCOMA .)


state 210

    (34) case -> WHEN expresion THEN instrucciones_funct_list .
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! reduce/reduce conflict for END resolved using rule 34 (case -> WHEN expresion THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 34 (case -> WHEN expresion THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 34 (case -> WHEN expresion THEN instrucciones_funct_list .)
    END             reduce using rule 34 (case -> WHEN expresion THEN instrucciones_funct_list .)
    WHEN            reduce using rule 34 (case -> WHEN expresion THEN instrucciones_funct_list .)
    ELSE            reduce using rule 34 (case -> WHEN expresion THEN instrucciones_funct_list .)
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]
  ! END             [ reduce using rule 100 (empty -> .) ]
  ! WHEN            [ reduce using rule 100 (empty -> .) ]
  ! ELSE            [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 211

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 217


state 212

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 218


state 213

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 219


state 214

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 220


state 215

    (36) sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 221


state 216

    (38) else -> ELSEIF expresion THEN . instrucciones_funct_list else
    (8) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (9) instrucciones_funct_list -> . instrucciones_funct_sent
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9
    ELSE            reduce using rule 100 (empty -> .)
    ELSEIF          reduce using rule 100 (empty -> .)
    END             reduce using rule 100 (empty -> .)

  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 222
    instrucciones_funct_sent       shift and go to state 138
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 217

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 223


state 218

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 224


state 219

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 225


state 220

    (19) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 19 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 221

    (36) sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .

    END             reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    PUNTOYCOMA      reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    error           reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    ID              reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    RAISE           reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    IF              reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    CASE            reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    SELECT          reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    BEGIN           reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    ELSE            reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    ELSEIF          reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)
    WHEN            reduce using rule 36 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA .)


state 222

    (38) else -> ELSEIF expresion THEN instrucciones_funct_list . else
    (8) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (37) else -> . ELSE instrucciones_funct_list
    (38) else -> . ELSEIF expresion THEN instrucciones_funct_list else
    (39) else -> .
    (10) instrucciones_funct_sent -> . asignacion
    (11) instrucciones_funct_sent -> . declaracion
    (12) instrucciones_funct_sent -> . imprimir
    (13) instrucciones_funct_sent -> . sentencia_if
    (14) instrucciones_funct_sent -> . sentencia_switch
    (15) instrucciones_funct_sent -> . PUNTOYCOMA
    (16) instrucciones_funct_sent -> . llamada_funcion
    (17) instrucciones_funct_sent -> . empty
    (18) instrucciones_funct_sent -> . error
    (44) asignacion -> . ID DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (45) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PUNTOYCOMA
    (46) declaracion -> . ID tipo PUNTOYCOMA
    (47) declaracion -> . ID tipo DEFAULT expresion PUNTOYCOMA
    (40) imprimir -> . RAISE lista_imprimir PUNTOYCOMA
    (36) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PUNTOYCOMA
    (31) sentencia_switch -> . CASE expresion case_list END CASE PUNTOYCOMA
    (23) llamada_funcion -> . SELECT ID PARA params PARC PUNTOYCOMA
    (100) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PUNTOYCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! reduce/reduce conflict for END resolved using rule 39 (else -> .)
    ELSE            shift and go to state 197
    ELSEIF          shift and go to state 198
    END             reduce using rule 39 (else -> .)
    PUNTOYCOMA      shift and go to state 137
    error           shift and go to state 146
    ID              shift and go to state 135
    RAISE           shift and go to state 147
    IF              shift and go to state 148
    CASE            shift and go to state 149
    SELECT          shift and go to state 9

  ! ELSE            [ reduce using rule 100 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 100 (empty -> .) ]
  ! PUNTOYCOMA      [ reduce using rule 100 (empty -> .) ]
  ! error           [ reduce using rule 100 (empty -> .) ]
  ! ID              [ reduce using rule 100 (empty -> .) ]
  ! RAISE           [ reduce using rule 100 (empty -> .) ]
  ! IF              [ reduce using rule 100 (empty -> .) ]
  ! CASE            [ reduce using rule 100 (empty -> .) ]
  ! SELECT          [ reduce using rule 100 (empty -> .) ]
  ! END             [ reduce using rule 100 (empty -> .) ]

    else                           shift and go to state 226
    instrucciones_funct_sent       shift and go to state 155
    asignacion                     shift and go to state 139
    declaracion                    shift and go to state 140
    imprimir                       shift and go to state 141
    sentencia_if                   shift and go to state 142
    sentencia_switch               shift and go to state 143
    llamada_funcion                shift and go to state 144
    empty                          shift and go to state 145

state 223

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 227


state 224

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 228


state 225

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PUNTOYCOMA

    DOLAR           shift and go to state 229


state 226

    (38) else -> ELSEIF expresion THEN instrucciones_funct_list else .

    END             reduce using rule 38 (else -> ELSEIF expresion THEN instrucciones_funct_list else .)


state 227

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 230


state 228

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 231


state 229

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PUNTOYCOMA

    LANGUAGE        shift and go to state 232


state 230

    (20) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 20 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 231

    (21) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 21 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)


state 232

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PUNTOYCOMA

    PLPGSQL         shift and go to state 233


state 233

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 234


state 234

    (22) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .

    error           reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    CREATE          reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    SELECT          reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)
    $end            reduce using rule 22 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PUNTOYCOMA DOLAR DOLAR LANGUAGE PLPGSQL PUNTOYCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 26 resolved as shift
WARNING: shift/reduce conflict for POR in state 26 resolved as shift
WARNING: shift/reduce conflict for DIV in state 26 resolved as shift
WARNING: shift/reduce conflict for MAS in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 26 resolved as shift
WARNING: shift/reduce conflict for MOD in state 26 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 26 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 26 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 26 resolved as shift
WARNING: shift/reduce conflict for XORB in state 26 resolved as shift
WARNING: shift/reduce conflict for ORB in state 26 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 132 resolved as shift
WARNING: shift/reduce conflict for error in state 132 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 132 resolved as shift
WARNING: shift/reduce conflict for IF in state 132 resolved as shift
WARNING: shift/reduce conflict for CASE in state 132 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 132 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 133 resolved as shift
WARNING: shift/reduce conflict for error in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 133 resolved as shift
WARNING: shift/reduce conflict for IF in state 133 resolved as shift
WARNING: shift/reduce conflict for CASE in state 133 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 133 resolved as shift
WARNING: shift/reduce conflict for END in state 136 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 136 resolved as shift
WARNING: shift/reduce conflict for error in state 136 resolved as shift
WARNING: shift/reduce conflict for ID in state 136 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 136 resolved as shift
WARNING: shift/reduce conflict for IF in state 136 resolved as shift
WARNING: shift/reduce conflict for CASE in state 136 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 136 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 150 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 150 resolved as shift
WARNING: shift/reduce conflict for error in state 150 resolved as shift
WARNING: shift/reduce conflict for ID in state 150 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 150 resolved as shift
WARNING: shift/reduce conflict for IF in state 150 resolved as shift
WARNING: shift/reduce conflict for CASE in state 150 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 150 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 161 resolved as shift
WARNING: shift/reduce conflict for error in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 161 resolved as shift
WARNING: shift/reduce conflict for IF in state 161 resolved as shift
WARNING: shift/reduce conflict for CASE in state 161 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 161 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 162 resolved as shift
WARNING: shift/reduce conflict for error in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 162 resolved as shift
WARNING: shift/reduce conflict for IF in state 162 resolved as shift
WARNING: shift/reduce conflict for CASE in state 162 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 162 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 163 resolved as shift
WARNING: shift/reduce conflict for error in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 163 resolved as shift
WARNING: shift/reduce conflict for IF in state 163 resolved as shift
WARNING: shift/reduce conflict for CASE in state 163 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 163 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 171 resolved as shift
WARNING: shift/reduce conflict for error in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 171 resolved as shift
WARNING: shift/reduce conflict for IF in state 171 resolved as shift
WARNING: shift/reduce conflict for CASE in state 171 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 171 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 175 resolved as shift
WARNING: shift/reduce conflict for error in state 175 resolved as shift
WARNING: shift/reduce conflict for ID in state 175 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 175 resolved as shift
WARNING: shift/reduce conflict for IF in state 175 resolved as shift
WARNING: shift/reduce conflict for CASE in state 175 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 175 resolved as shift
WARNING: shift/reduce conflict for END in state 176 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 176 resolved as shift
WARNING: shift/reduce conflict for error in state 176 resolved as shift
WARNING: shift/reduce conflict for ID in state 176 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 176 resolved as shift
WARNING: shift/reduce conflict for IF in state 176 resolved as shift
WARNING: shift/reduce conflict for CASE in state 176 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 176 resolved as shift
WARNING: shift/reduce conflict for END in state 177 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 177 resolved as shift
WARNING: shift/reduce conflict for error in state 177 resolved as shift
WARNING: shift/reduce conflict for ID in state 177 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 177 resolved as shift
WARNING: shift/reduce conflict for IF in state 177 resolved as shift
WARNING: shift/reduce conflict for CASE in state 177 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 177 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 178 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 178 resolved as shift
WARNING: shift/reduce conflict for error in state 178 resolved as shift
WARNING: shift/reduce conflict for ID in state 178 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 178 resolved as shift
WARNING: shift/reduce conflict for IF in state 178 resolved as shift
WARNING: shift/reduce conflict for CASE in state 178 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 178 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 184 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 184 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 184 resolved as shift
WARNING: shift/reduce conflict for error in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 184 resolved as shift
WARNING: shift/reduce conflict for IF in state 184 resolved as shift
WARNING: shift/reduce conflict for CASE in state 184 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 184 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 188 resolved as shift
WARNING: shift/reduce conflict for error in state 188 resolved as shift
WARNING: shift/reduce conflict for ID in state 188 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 188 resolved as shift
WARNING: shift/reduce conflict for IF in state 188 resolved as shift
WARNING: shift/reduce conflict for CASE in state 188 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 188 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 191 resolved as shift
WARNING: shift/reduce conflict for error in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 191 resolved as shift
WARNING: shift/reduce conflict for IF in state 191 resolved as shift
WARNING: shift/reduce conflict for CASE in state 191 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 191 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 197 resolved as shift
WARNING: shift/reduce conflict for error in state 197 resolved as shift
WARNING: shift/reduce conflict for ID in state 197 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 197 resolved as shift
WARNING: shift/reduce conflict for IF in state 197 resolved as shift
WARNING: shift/reduce conflict for CASE in state 197 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 197 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 200 resolved as shift
WARNING: shift/reduce conflict for error in state 200 resolved as shift
WARNING: shift/reduce conflict for ID in state 200 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 200 resolved as shift
WARNING: shift/reduce conflict for IF in state 200 resolved as shift
WARNING: shift/reduce conflict for CASE in state 200 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 200 resolved as shift
WARNING: shift/reduce conflict for END in state 203 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 203 resolved as shift
WARNING: shift/reduce conflict for error in state 203 resolved as shift
WARNING: shift/reduce conflict for ID in state 203 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 203 resolved as shift
WARNING: shift/reduce conflict for IF in state 203 resolved as shift
WARNING: shift/reduce conflict for CASE in state 203 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 203 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 207 resolved as shift
WARNING: shift/reduce conflict for error in state 207 resolved as shift
WARNING: shift/reduce conflict for ID in state 207 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 207 resolved as shift
WARNING: shift/reduce conflict for IF in state 207 resolved as shift
WARNING: shift/reduce conflict for CASE in state 207 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 207 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 210 resolved as shift
WARNING: shift/reduce conflict for error in state 210 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 210 resolved as shift
WARNING: shift/reduce conflict for IF in state 210 resolved as shift
WARNING: shift/reduce conflict for CASE in state 210 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 210 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 216 resolved as shift
WARNING: shift/reduce conflict for error in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 216 resolved as shift
WARNING: shift/reduce conflict for IF in state 216 resolved as shift
WARNING: shift/reduce conflict for CASE in state 216 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 216 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 222 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 222 resolved as shift
WARNING: shift/reduce conflict for PUNTOYCOMA in state 222 resolved as shift
WARNING: shift/reduce conflict for error in state 222 resolved as shift
WARNING: shift/reduce conflict for ID in state 222 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 222 resolved as shift
WARNING: shift/reduce conflict for IF in state 222 resolved as shift
WARNING: shift/reduce conflict for CASE in state 222 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 222 resolved as shift
WARNING: reduce/reduce conflict in state 184 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 184
WARNING: reduce/reduce conflict in state 188 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 188
WARNING: reduce/reduce conflict in state 207 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 207
WARNING: reduce/reduce conflict in state 210 resolved using rule (case -> WHEN expresion THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 210
WARNING: reduce/reduce conflict in state 222 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 222
