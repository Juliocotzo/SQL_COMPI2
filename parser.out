Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALL
    ANY
    AS
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    COLUMN
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    DIV
    D_OR
    ELSE
    ENCODE
    END
    ENUM
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FOREIGN
    FROM
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ONLY
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RETURNING
    RIGHT
    ROUND
    SCALE
    SELECT
    SET
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    TYPE
    UNION
    UNKNOWN
    UPDATE
    USING
    VALUES
    WHEN
    WHERE
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     instruccion -> show_tables_instr
Rule 8     instruccion -> drop_database_instr
Rule 9     instruccion -> use_database_instr
Rule 10    instruccion -> alterDB_insrt
Rule 11    instruccion -> drop_insrt
Rule 12    drop_insrt -> DROP TABLE lista_drop_id PTCOMA
Rule 13    lista_drop_id -> lista_drop_id COMA ID
Rule 14    lista_drop_id -> ID
Rule 15    alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 16    alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 17    usuariosDB -> ID
Rule 18    usuariosDB -> CURRENT_USER
Rule 19    usuariosDB -> SESSION_USER
Rule 20    usuariosDB -> CADENA
Rule 21    use_database_instr -> USE ID PTCOMA
Rule 22    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 23    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 24    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 25    show_tables_instr -> SHOW TABLES PTCOMA
Rule 26    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 27    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 28    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 29    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 30    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 31    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 32    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 33    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 34    createDB_unParam -> OWNER ID
Rule 35    createDB_unParam -> OWNER IGUAL ID
Rule 36    createDB_unParam -> MODE ENTERO
Rule 37    createDB_unParam -> MODE IGUAL ENTERO
Rule 38    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 39    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 40    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 41    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 42    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 43    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 44    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 45    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 46    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 47    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 48    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 49    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 50    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 51    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 52    constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 53    campos_c -> campos_c COMA ID
Rule 54    campos_c -> ID
Rule 55    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 56    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 57    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 58    cuerpo_createTable_lista -> cuerpo_createTable
Rule 59    cuerpo_createTable -> ID TIPO_DATO
Rule 60    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 61    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 62    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 63    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 64    cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 65    cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 66    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 67    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 68    TIPO_DATO -> TEXT
Rule 69    TIPO_DATO -> FLOAT
Rule 70    TIPO_DATO -> INTEGER
Rule 71    TIPO_DATO -> SMALLINT
Rule 72    TIPO_DATO -> MONEY
Rule 73    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 74    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 75    TIPO_DATO -> BIGINT
Rule 76    TIPO_DATO -> REAL
Rule 77    TIPO_DATO -> DOUBLE PRECISION
Rule 78    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 79    TIPO_DATO -> INTERVAL
Rule 80    TIPO_DATO -> TIME
Rule 81    TIPO_DATO -> TIMESTAMP
Rule 82    TIPO_DATO -> DATE
Rule 83    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 84    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 85    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 86    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 87    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 88    TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 89    extract_time -> YEAR
Rule 90    extract_time -> DAY
Rule 91    extract_time -> MONTH
Rule 92    extract_time -> HOUR
Rule 93    extract_time -> MINUTE
Rule 94    extract_time -> SECOND
Rule 95    agrupacion_expresion -> PAR_A expresion PAR_C
Rule 96    expresion -> CADENA
Rule 97    expresion -> ENTERO
Rule 98    expresion -> FLOTANTE
Rule 99    expresion -> ID
Rule 100   expresion -> ID PUNTO ID
Rule 101   expresion -> expresion SUMA expresion
Rule 102   expresion -> expresion RESTA expresion
Rule 103   expresion -> expresion DIVISION expresion
Rule 104   expresion -> expresion ASTERISCO expresion
Rule 105   expresion -> TRUE
Rule 106   expresion -> FALSE
Rule 107   string_type -> CADENA
Rule 108   string_type -> ID
Rule 109   expresion_relacional -> expresion MAYQUE expresion
Rule 110   expresion_relacional -> expresion MENQUE expresion
Rule 111   expresion_relacional -> expresion MAYIGQUE expresion
Rule 112   expresion_relacional -> expresion MENIGQUE expresion
Rule 113   expresion_relacional -> expresion DOBLEIG expresion
Rule 114   expresion_relacional -> expresion IGUAL expresion
Rule 115   expresion_relacional -> expresion NOIG expresion
Rule 116   expresion_relacional -> expresion NOIGUAL expresion
Rule 117   expresion_relacional -> expresion
Rule 118   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 119   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 120   expresion_logica -> NOT expresion_relacional
Rule 121   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALL                  : 
ALTER                : 15 16
AND                  : 118
ANY                  : 
AS                   : 
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 104
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 75
BY                   : 
CADENA               : 20 96 107
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 85 87
CHARACTER            : 83 86 88
CHECK                : 50
COLUMN               : 
COMA                 : 13 53 57 73 74
CONSTRAINT           : 67
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 26 27 28 29 30 31 32 33 38 39 40 41 55 56
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 18
DATABASE             : 15 16 22 23 26 27 28 29 30 31 32 33 38 39 40 41
DATABASES            : 24
DATE                 : 82
DATE_PART            : 
DAY                  : 90
DECIMAL              : 73
DECODE               : 
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 103
DOBLEIG              : 113
DOUBLE               : 77
DROP                 : 12 22 23
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 36 37 42 43 44 45 46 47 48 49 73 73 74 74 83 84 85 86 97
ENUM                 : 
EXCEPT               : 
EXISTS               : 23 28 29 32 33 40 41
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 106
FLOAT                : 69
FLOOR                : 
FLOTANTE             : 98
FOREIGN              : 
FOREING              : 52 65
FROM                 : 
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 92
ID                   : 13 14 15 15 16 17 21 22 23 26 27 28 29 30 31 32 33 34 35 38 39 40 41 42 43 44 45 46 47 48 49 52 52 52 53 54 55 56 56 59 60 61 61 62 63 64 65 65 65 67 99 100 100 108
IF                   : 23 28 29 32 33 40 41
IGUAL                : 35 37 43 44 45 45 47 48 49 49 114
IN                   : 
INHERITS             : 56
INNER                : 
INSERT               : 
INTEGER              : 70
INTERSECT            : 
INTERVAL             : 78 79
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 52 60 64 65
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 111
MAYMAY               : 
MAYQUE               : 109
MD5                  : 
MENIGQUE             : 112
MENMEN               : 
MENQUE               : 110
MIN                  : 
MINUTE               : 93
MIN_SCALE            : 
MOD                  : 
MODE                 : 36 37 42 43 44 45 46 47 48 49
MODULO               : 
MONEY                : 72
MONTH                : 91
MULTI                : 
NATURAL              : 
NOIG                 : 115
NOIGUAL              : 116
NOT                  : 28 29 32 33 40 41 62 120
NOTNULL              : 
NOW                  : 
NULL                 : 62 63
NUMERIC              : 74
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 27 29 31 33 39 41 119
ORDER                : 
OUTER                : 
OWNER                : 16 34 35 42 43 44 45 46 47 48 49
PAR_A                : 50 51 52 52 55 56 56 64 65 65 66 73 74 83 84 85 86 87 88 95
PAR_C                : 50 51 52 52 55 56 56 64 65 65 66 73 74 83 84 85 86 87 88 95
PI                   : 
POWER                : 
PRECISION            : 77
PRIMARY              : 60 64
PTCOMA               : 12 15 16 21 22 23 24 25 26 27 28 29 30 31 32 33 38 39 40 41 55 56
PUNTO                : 100
RADIANS              : 
RANDOM               : 
REAL                 : 76
REFERENCES           : 52 61 65
RENAME               : 15
REPLACE              : 27 29 31 33 39 41
RESTA                : 102
RETURNING            : 
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 94
SELECT               : 
SESSION_USER         : 19
SET                  : 
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 24 25
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 71
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 101
SYMMETRIC            : 
S_OR                 : 
TABLE                : 12 55 56
TABLES               : 25
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 68
THEN                 : 
TIME                 : 80
TIMESTAMP            : 81
TO                   : 15 16 78
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 105
TYPE                 : 
UNION                : 
UNIQUE               : 51 66
UNKNOWN              : 
UPDATE               : 
USE                  : 21
USING                : 
VALUES               : 
VARCHAR              : 84
VARYING              : 83
WHEN                 : 
WHERE                : 
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 89
error                : 

Nonterminals, with rules where they appear

TIPO_DATO            : 59 60 61 62 63
agrupacion_expresion : 
alterDB_insrt        : 10
campos_c             : 51 53 66
constraint_esp       : 67
createDB_dosParam    : 38 39 40 41
createDB_insrt       : 4
createDB_unParam     : 30 31 32 33
create_Table_isnrt   : 5
cuerpo_createTable   : 57 58
cuerpo_createTable_lista : 55 56 57
drop_database_instr  : 8
drop_insrt           : 11
expresion            : 95 101 101 102 102 103 103 104 104 109 109 110 110 111 111 112 112 113 113 114 114 115 115 116 116 117
expresion_logica     : 50
expresion_relacional : 118 118 119 119 120 121
extract_time         : 78 78
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
lista_drop_id        : 12 13
show_databases_instr : 6
show_tables_instr    : 7
string_type          : 
use_database_instr   : 9
usuariosDB           : 16

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (11) instruccion -> . drop_insrt
    (26) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (55) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (56) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (24) show_databases_instr -> . SHOW DATABASES PTCOMA
    (25) show_tables_instr -> . SHOW TABLES PTCOMA
    (22) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (23) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (21) use_database_instr -> . USE ID PTCOMA
    (15) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (16) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (12) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA

    CREATE          shift and go to state 12
    SHOW            shift and go to state 13
    DROP            shift and go to state 14
    USE             shift and go to state 15
    ALTER           shift and go to state 16

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10
    drop_insrt                     shift and go to state 11

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (7) instruccion -> . show_tables_instr
    (8) instruccion -> . drop_database_instr
    (9) instruccion -> . use_database_instr
    (10) instruccion -> . alterDB_insrt
    (11) instruccion -> . drop_insrt
    (26) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (55) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (56) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (24) show_databases_instr -> . SHOW DATABASES PTCOMA
    (25) show_tables_instr -> . SHOW TABLES PTCOMA
    (22) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (23) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (21) use_database_instr -> . USE ID PTCOMA
    (15) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (16) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (12) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 12
    SHOW            shift and go to state 13
    DROP            shift and go to state 14
    USE             shift and go to state 15
    ALTER           shift and go to state 16

    instruccion                    shift and go to state 17
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6
    show_tables_instr              shift and go to state 7
    drop_database_instr            shift and go to state 8
    use_database_instr             shift and go to state 9
    alterDB_insrt                  shift and go to state 10
    drop_insrt                     shift and go to state 11

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    USE             reduce using rule 3 (instrucciones -> instruccion .)
    ALTER           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 4 (instruccion -> createDB_insrt .)
    USE             reduce using rule 4 (instruccion -> createDB_insrt .)
    ALTER           reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    USE             reduce using rule 5 (instruccion -> create_Table_isnrt .)
    ALTER           reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    DROP            reduce using rule 6 (instruccion -> show_databases_instr .)
    USE             reduce using rule 6 (instruccion -> show_databases_instr .)
    ALTER           reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (7) instruccion -> show_tables_instr .

    CREATE          reduce using rule 7 (instruccion -> show_tables_instr .)
    SHOW            reduce using rule 7 (instruccion -> show_tables_instr .)
    DROP            reduce using rule 7 (instruccion -> show_tables_instr .)
    USE             reduce using rule 7 (instruccion -> show_tables_instr .)
    ALTER           reduce using rule 7 (instruccion -> show_tables_instr .)
    $end            reduce using rule 7 (instruccion -> show_tables_instr .)


state 8

    (8) instruccion -> drop_database_instr .

    CREATE          reduce using rule 8 (instruccion -> drop_database_instr .)
    SHOW            reduce using rule 8 (instruccion -> drop_database_instr .)
    DROP            reduce using rule 8 (instruccion -> drop_database_instr .)
    USE             reduce using rule 8 (instruccion -> drop_database_instr .)
    ALTER           reduce using rule 8 (instruccion -> drop_database_instr .)
    $end            reduce using rule 8 (instruccion -> drop_database_instr .)


state 9

    (9) instruccion -> use_database_instr .

    CREATE          reduce using rule 9 (instruccion -> use_database_instr .)
    SHOW            reduce using rule 9 (instruccion -> use_database_instr .)
    DROP            reduce using rule 9 (instruccion -> use_database_instr .)
    USE             reduce using rule 9 (instruccion -> use_database_instr .)
    ALTER           reduce using rule 9 (instruccion -> use_database_instr .)
    $end            reduce using rule 9 (instruccion -> use_database_instr .)


state 10

    (10) instruccion -> alterDB_insrt .

    CREATE          reduce using rule 10 (instruccion -> alterDB_insrt .)
    SHOW            reduce using rule 10 (instruccion -> alterDB_insrt .)
    DROP            reduce using rule 10 (instruccion -> alterDB_insrt .)
    USE             reduce using rule 10 (instruccion -> alterDB_insrt .)
    ALTER           reduce using rule 10 (instruccion -> alterDB_insrt .)
    $end            reduce using rule 10 (instruccion -> alterDB_insrt .)


state 11

    (11) instruccion -> drop_insrt .

    CREATE          reduce using rule 11 (instruccion -> drop_insrt .)
    SHOW            reduce using rule 11 (instruccion -> drop_insrt .)
    DROP            reduce using rule 11 (instruccion -> drop_insrt .)
    USE             reduce using rule 11 (instruccion -> drop_insrt .)
    ALTER           reduce using rule 11 (instruccion -> drop_insrt .)
    $end            reduce using rule 11 (instruccion -> drop_insrt .)


state 12

    (26) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (27) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (28) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (55) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (56) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    DATABASE        shift and go to state 18
    OR              shift and go to state 19
    TABLE           shift and go to state 20


state 13

    (24) show_databases_instr -> SHOW . DATABASES PTCOMA
    (25) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 21
    TABLES          shift and go to state 22


state 14

    (22) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (23) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (12) drop_insrt -> DROP . TABLE lista_drop_id PTCOMA

    DATABASE        shift and go to state 23
    TABLE           shift and go to state 24


state 15

    (21) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 25


state 16

    (15) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (16) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA

    DATABASE        shift and go to state 26


state 17

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ALTER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 18

    (26) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (28) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 27
    IF              shift and go to state 28


state 19

    (27) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 29


state 20

    (55) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (56) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 30


state 21

    (24) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 31


state 22

    (25) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 32


state 23

    (22) drop_database_instr -> DROP DATABASE . ID PTCOMA
    (23) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA

    ID              shift and go to state 33
    IF              shift and go to state 34


state 24

    (12) drop_insrt -> DROP TABLE . lista_drop_id PTCOMA
    (13) lista_drop_id -> . lista_drop_id COMA ID
    (14) lista_drop_id -> . ID

    ID              shift and go to state 36

    lista_drop_id                  shift and go to state 35

state 25

    (21) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 37


state 26

    (15) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (16) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 38


state 27

    (26) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (30) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (34) createDB_unParam -> . OWNER ID
    (35) createDB_unParam -> . OWNER IGUAL ID
    (36) createDB_unParam -> . MODE ENTERO
    (37) createDB_unParam -> . MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER ID MODE ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE ENTERO OWNER ID
    (47) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 39
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 40
    createDB_dosParam              shift and go to state 41

state 28

    (28) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 44


state 29

    (27) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 45


state 30

    (55) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (56) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 46


state 31

    (24) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 24 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 24 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 24 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 24 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 24 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 24 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 32

    (25) show_tables_instr -> SHOW TABLES PTCOMA .

    CREATE          reduce using rule 25 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 25 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 25 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 25 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 25 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 25 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 33

    (22) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 47


state 34

    (23) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 48


state 35

    (12) drop_insrt -> DROP TABLE lista_drop_id . PTCOMA
    (13) lista_drop_id -> lista_drop_id . COMA ID

    PTCOMA          shift and go to state 49
    COMA            shift and go to state 50


state 36

    (14) lista_drop_id -> ID .

    PTCOMA          reduce using rule 14 (lista_drop_id -> ID .)
    COMA            reduce using rule 14 (lista_drop_id -> ID .)


state 37

    (21) use_database_instr -> USE ID PTCOMA .

    CREATE          reduce using rule 21 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 21 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 21 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 21 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 21 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 21 (use_database_instr -> USE ID PTCOMA .)


state 38

    (15) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (16) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 51
    OWNER           shift and go to state 52


state 39

    (26) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 26 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 40

    (30) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 53


state 41

    (38) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 54


state 42

    (34) createDB_unParam -> OWNER . ID
    (35) createDB_unParam -> OWNER . IGUAL ID
    (42) createDB_dosParam -> OWNER . ID MODE ENTERO
    (43) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (44) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (45) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 55
    IGUAL           shift and go to state 56


state 43

    (36) createDB_unParam -> MODE . ENTERO
    (37) createDB_unParam -> MODE . IGUAL ENTERO
    (46) createDB_dosParam -> MODE . ENTERO OWNER ID
    (47) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (48) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (49) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 57
    IGUAL           shift and go to state 58


state 44

    (28) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 59


state 45

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (41) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 60
    IF              shift and go to state 61


state 46

    (55) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (57) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (58) cuerpo_createTable_lista -> . cuerpo_createTable
    (59) cuerpo_createTable -> . ID TIPO_DATO
    (60) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (61) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (62) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (63) cuerpo_createTable -> . ID TIPO_DATO NULL
    (64) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (65) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (66) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (67) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 62
    PRIMARY         shift and go to state 65
    FOREING         shift and go to state 66
    UNIQUE          shift and go to state 67
    CONSTRAINT      shift and go to state 68

    cuerpo_createTable_lista       shift and go to state 63
    cuerpo_createTable             shift and go to state 64

state 47

    (22) drop_database_instr -> DROP DATABASE ID PTCOMA .

    CREATE          reduce using rule 22 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 22 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 22 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 22 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 22 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 22 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 48

    (23) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 69


state 49

    (12) drop_insrt -> DROP TABLE lista_drop_id PTCOMA .

    CREATE          reduce using rule 12 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SHOW            reduce using rule 12 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DROP            reduce using rule 12 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    USE             reduce using rule 12 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    ALTER           reduce using rule 12 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    $end            reduce using rule 12 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)


state 50

    (13) lista_drop_id -> lista_drop_id COMA . ID

    ID              shift and go to state 70


state 51

    (15) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 71


state 52

    (16) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 72


state 53

    (30) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 30 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 30 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 54

    (38) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 38 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 38 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 38 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 38 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 38 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 38 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 55

    (34) createDB_unParam -> OWNER ID .
    (42) createDB_dosParam -> OWNER ID . MODE ENTERO
    (43) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 34 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 73


state 56

    (35) createDB_unParam -> OWNER IGUAL . ID
    (44) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (45) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 74


state 57

    (36) createDB_unParam -> MODE ENTERO .
    (46) createDB_dosParam -> MODE ENTERO . OWNER ID
    (47) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 36 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 75


state 58

    (37) createDB_unParam -> MODE IGUAL . ENTERO
    (48) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (49) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 76


state 59

    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (32) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 77


state 60

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (34) createDB_unParam -> . OWNER ID
    (35) createDB_unParam -> . OWNER IGUAL ID
    (36) createDB_unParam -> . MODE ENTERO
    (37) createDB_unParam -> . MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER ID MODE ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE ENTERO OWNER ID
    (47) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 78
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 79
    createDB_dosParam              shift and go to state 80

state 61

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 81


state 62

    (59) cuerpo_createTable -> ID . TIPO_DATO
    (60) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (61) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (62) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (63) cuerpo_createTable -> ID . TIPO_DATO NULL
    (68) TIPO_DATO -> . TEXT
    (69) TIPO_DATO -> . FLOAT
    (70) TIPO_DATO -> . INTEGER
    (71) TIPO_DATO -> . SMALLINT
    (72) TIPO_DATO -> . MONEY
    (73) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (74) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (75) TIPO_DATO -> . BIGINT
    (76) TIPO_DATO -> . REAL
    (77) TIPO_DATO -> . DOUBLE PRECISION
    (78) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (79) TIPO_DATO -> . INTERVAL
    (80) TIPO_DATO -> . TIME
    (81) TIPO_DATO -> . TIMESTAMP
    (82) TIPO_DATO -> . DATE
    (83) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (84) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (85) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (86) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (87) TIPO_DATO -> . CHAR PAR_A PAR_C
    (88) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 83
    FLOAT           shift and go to state 84
    INTEGER         shift and go to state 85
    SMALLINT        shift and go to state 86
    MONEY           shift and go to state 87
    DECIMAL         shift and go to state 88
    NUMERIC         shift and go to state 89
    BIGINT          shift and go to state 90
    REAL            shift and go to state 91
    DOUBLE          shift and go to state 92
    INTERVAL        shift and go to state 93
    TIME            shift and go to state 94
    TIMESTAMP       shift and go to state 95
    DATE            shift and go to state 96
    CHARACTER       shift and go to state 97
    VARCHAR         shift and go to state 98
    CHAR            shift and go to state 99

    TIPO_DATO                      shift and go to state 82

state 63

    (55) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (57) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 100
    COMA            shift and go to state 101


state 64

    (58) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 58 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 58 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 65

    (64) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 102


state 66

    (65) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 103


state 67

    (66) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 104


state 68

    (67) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 105


state 69

    (23) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 106


state 70

    (13) lista_drop_id -> lista_drop_id COMA ID .

    PTCOMA          reduce using rule 13 (lista_drop_id -> lista_drop_id COMA ID .)
    COMA            reduce using rule 13 (lista_drop_id -> lista_drop_id COMA ID .)


state 71

    (15) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 107


state 72

    (16) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (17) usuariosDB -> . ID
    (18) usuariosDB -> . CURRENT_USER
    (19) usuariosDB -> . SESSION_USER
    (20) usuariosDB -> . CADENA

    ID              shift and go to state 108
    CURRENT_USER    shift and go to state 110
    SESSION_USER    shift and go to state 111
    CADENA          shift and go to state 112

    usuariosDB                     shift and go to state 109

state 73

    (42) createDB_dosParam -> OWNER ID MODE . ENTERO
    (43) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 113
    IGUAL           shift and go to state 114


state 74

    (35) createDB_unParam -> OWNER IGUAL ID .
    (44) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (45) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 35 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 115


state 75

    (46) createDB_dosParam -> MODE ENTERO OWNER . ID
    (47) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 116
    IGUAL           shift and go to state 117


state 76

    (37) createDB_unParam -> MODE IGUAL ENTERO .
    (48) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (49) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 37 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 118


state 77

    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (32) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (34) createDB_unParam -> . OWNER ID
    (35) createDB_unParam -> . OWNER IGUAL ID
    (36) createDB_unParam -> . MODE ENTERO
    (37) createDB_unParam -> . MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER ID MODE ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE ENTERO OWNER ID
    (47) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 119
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 120
    createDB_dosParam              shift and go to state 121

state 78

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 79

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 122


state 80

    (39) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 123


state 81

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 124


state 82

    (59) cuerpo_createTable -> ID TIPO_DATO .
    (60) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (61) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (62) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (63) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 59 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 59 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 125
    REFERENCES      shift and go to state 126
    NOT             shift and go to state 127
    NULL            shift and go to state 128


state 83

    (68) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 68 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 68 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 68 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 68 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 68 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 68 (TIPO_DATO -> TEXT .)


state 84

    (69) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 69 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 69 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 69 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 69 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 69 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 69 (TIPO_DATO -> FLOAT .)


state 85

    (70) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 70 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 70 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 70 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 70 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 70 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 70 (TIPO_DATO -> INTEGER .)


state 86

    (71) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 71 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 71 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 71 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 71 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 71 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 71 (TIPO_DATO -> SMALLINT .)


state 87

    (72) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 72 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 72 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 72 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 72 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 72 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 72 (TIPO_DATO -> MONEY .)


state 88

    (73) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 129


state 89

    (74) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 130


state 90

    (75) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 75 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 75 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 75 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 75 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 75 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 75 (TIPO_DATO -> BIGINT .)


state 91

    (76) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 76 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 76 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 76 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 76 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 76 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 76 (TIPO_DATO -> REAL .)


state 92

    (77) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 131


state 93

    (78) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (79) TIPO_DATO -> INTERVAL .
    (89) extract_time -> . YEAR
    (90) extract_time -> . DAY
    (91) extract_time -> . MONTH
    (92) extract_time -> . HOUR
    (93) extract_time -> . MINUTE
    (94) extract_time -> . SECOND

    PRIMARY         reduce using rule 79 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 79 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 79 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 79 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 79 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 79 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 133
    DAY             shift and go to state 134
    MONTH           shift and go to state 135
    HOUR            shift and go to state 136
    MINUTE          shift and go to state 137
    SECOND          shift and go to state 138

    extract_time                   shift and go to state 132

state 94

    (80) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 80 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 80 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 80 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 80 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 80 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 80 (TIPO_DATO -> TIME .)


state 95

    (81) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 81 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 81 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 81 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 81 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 81 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 81 (TIPO_DATO -> TIMESTAMP .)


state 96

    (82) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 82 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 82 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 82 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 82 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 82 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 82 (TIPO_DATO -> DATE .)


state 97

    (83) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (86) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (88) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 139
    PAR_A           shift and go to state 140


state 98

    (84) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 141


state 99

    (85) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (87) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 142


state 100

    (55) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 143
    INHERITS        shift and go to state 144


state 101

    (57) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (59) cuerpo_createTable -> . ID TIPO_DATO
    (60) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (61) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (62) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (63) cuerpo_createTable -> . ID TIPO_DATO NULL
    (64) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (65) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (66) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (67) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 62
    PRIMARY         shift and go to state 65
    FOREING         shift and go to state 66
    UNIQUE          shift and go to state 67
    CONSTRAINT      shift and go to state 68

    cuerpo_createTable             shift and go to state 145

state 102

    (64) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 146


state 103

    (65) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 147


state 104

    (66) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (53) campos_c -> . campos_c COMA ID
    (54) campos_c -> . ID

    ID              shift and go to state 149

    campos_c                       shift and go to state 148

state 105

    (67) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (50) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (51) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (52) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 151
    UNIQUE          shift and go to state 152
    FOREING         shift and go to state 153

    constraint_esp                 shift and go to state 150

state 106

    (23) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    CREATE          reduce using rule 23 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 23 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 23 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 23 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 23 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 23 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 107

    (15) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 154


state 108

    (17) usuariosDB -> ID .

    PTCOMA          reduce using rule 17 (usuariosDB -> ID .)


state 109

    (16) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 155


state 110

    (18) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 18 (usuariosDB -> CURRENT_USER .)


state 111

    (19) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 19 (usuariosDB -> SESSION_USER .)


state 112

    (20) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 20 (usuariosDB -> CADENA .)


state 113

    (42) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 114

    (43) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 156


state 115

    (44) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (45) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 158
    IGUAL           shift and go to state 157


state 116

    (46) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 46 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 117

    (47) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 159


state 118

    (48) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (49) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 161
    IGUAL           shift and go to state 160


state 119

    (28) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 120

    (32) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 162


state 121

    (40) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 163


state 122

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 123

    (39) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 124

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 164


state 125

    (60) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 165


state 126

    (61) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 166


state 127

    (62) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 167


state 128

    (63) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 63 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 63 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 129

    (73) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 168


state 130

    (74) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 169


state 131

    (77) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 77 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 77 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 77 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 77 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 77 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 77 (TIPO_DATO -> DOUBLE PRECISION .)


state 132

    (78) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 170


state 133

    (89) extract_time -> YEAR .

    TO              reduce using rule 89 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 89 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 89 (extract_time -> YEAR .)
    NOT             reduce using rule 89 (extract_time -> YEAR .)
    NULL            reduce using rule 89 (extract_time -> YEAR .)
    PAR_C           reduce using rule 89 (extract_time -> YEAR .)
    COMA            reduce using rule 89 (extract_time -> YEAR .)


state 134

    (90) extract_time -> DAY .

    TO              reduce using rule 90 (extract_time -> DAY .)
    PRIMARY         reduce using rule 90 (extract_time -> DAY .)
    REFERENCES      reduce using rule 90 (extract_time -> DAY .)
    NOT             reduce using rule 90 (extract_time -> DAY .)
    NULL            reduce using rule 90 (extract_time -> DAY .)
    PAR_C           reduce using rule 90 (extract_time -> DAY .)
    COMA            reduce using rule 90 (extract_time -> DAY .)


state 135

    (91) extract_time -> MONTH .

    TO              reduce using rule 91 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 91 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 91 (extract_time -> MONTH .)
    NOT             reduce using rule 91 (extract_time -> MONTH .)
    NULL            reduce using rule 91 (extract_time -> MONTH .)
    PAR_C           reduce using rule 91 (extract_time -> MONTH .)
    COMA            reduce using rule 91 (extract_time -> MONTH .)


state 136

    (92) extract_time -> HOUR .

    TO              reduce using rule 92 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 92 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 92 (extract_time -> HOUR .)
    NOT             reduce using rule 92 (extract_time -> HOUR .)
    NULL            reduce using rule 92 (extract_time -> HOUR .)
    PAR_C           reduce using rule 92 (extract_time -> HOUR .)
    COMA            reduce using rule 92 (extract_time -> HOUR .)


state 137

    (93) extract_time -> MINUTE .

    TO              reduce using rule 93 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 93 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 93 (extract_time -> MINUTE .)
    NOT             reduce using rule 93 (extract_time -> MINUTE .)
    NULL            reduce using rule 93 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 93 (extract_time -> MINUTE .)
    COMA            reduce using rule 93 (extract_time -> MINUTE .)


state 138

    (94) extract_time -> SECOND .

    TO              reduce using rule 94 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 94 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 94 (extract_time -> SECOND .)
    NOT             reduce using rule 94 (extract_time -> SECOND .)
    NULL            reduce using rule 94 (extract_time -> SECOND .)
    PAR_C           reduce using rule 94 (extract_time -> SECOND .)
    COMA            reduce using rule 94 (extract_time -> SECOND .)


state 139

    (83) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 171


state 140

    (86) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (88) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 172
    PAR_C           shift and go to state 173


state 141

    (84) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 174


state 142

    (85) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (87) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 175
    PAR_C           shift and go to state 176


state 143

    (55) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    DROP            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    USE             reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    ALTER           reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 144

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 177


state 145

    (57) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 57 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 57 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 146

    (64) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 178


state 147

    (65) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 179


state 148

    (66) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (53) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 180
    COMA            shift and go to state 181


state 149

    (54) campos_c -> ID .

    PAR_C           reduce using rule 54 (campos_c -> ID .)
    COMA            reduce using rule 54 (campos_c -> ID .)


state 150

    (67) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 67 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 67 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 151

    (50) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 182


state 152

    (51) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 183


state 153

    (52) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 184


state 154

    (15) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    CREATE          reduce using rule 15 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 15 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 15 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 15 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 15 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 15 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 155

    (16) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    CREATE          reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 16 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 156

    (43) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 157

    (45) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 185


state 158

    (44) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 159

    (47) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 47 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 160

    (49) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 186


state 161

    (48) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 48 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 162

    (32) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 32 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 32 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 163

    (40) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 40 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 40 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 40 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 40 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 40 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 40 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 164

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (41) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (34) createDB_unParam -> . OWNER ID
    (35) createDB_unParam -> . OWNER IGUAL ID
    (36) createDB_unParam -> . MODE ENTERO
    (37) createDB_unParam -> . MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER ID MODE ENTERO
    (43) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (45) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE ENTERO OWNER ID
    (47) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (49) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 187
    OWNER           shift and go to state 42
    MODE            shift and go to state 43

    createDB_unParam               shift and go to state 188
    createDB_dosParam              shift and go to state 189

state 165

    (60) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 60 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 60 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 166

    (61) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 167

    (62) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 168

    (73) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 190


state 169

    (74) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 191


state 170

    (78) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (89) extract_time -> . YEAR
    (90) extract_time -> . DAY
    (91) extract_time -> . MONTH
    (92) extract_time -> . HOUR
    (93) extract_time -> . MINUTE
    (94) extract_time -> . SECOND

    YEAR            shift and go to state 133
    DAY             shift and go to state 134
    MONTH           shift and go to state 135
    HOUR            shift and go to state 136
    MINUTE          shift and go to state 137
    SECOND          shift and go to state 138

    extract_time                   shift and go to state 192

state 171

    (83) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 193


state 172

    (86) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 194


state 173

    (88) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 88 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 88 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 88 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 88 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 88 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 88 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 174

    (84) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 195


state 175

    (85) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 196


state 176

    (87) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 87 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 87 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 87 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 87 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 87 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 87 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 177

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 197


state 178

    (64) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 198


state 179

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 199


state 180

    (66) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 66 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 66 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 181

    (53) campos_c -> campos_c COMA . ID

    ID              shift and go to state 200


state 182

    (50) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (118) expresion_logica -> . expresion_relacional AND expresion_relacional
    (119) expresion_logica -> . expresion_relacional OR expresion_relacional
    (120) expresion_logica -> . NOT expresion_relacional
    (121) expresion_logica -> . expresion_relacional
    (109) expresion_relacional -> . expresion MAYQUE expresion
    (110) expresion_relacional -> . expresion MENQUE expresion
    (111) expresion_relacional -> . expresion MAYIGQUE expresion
    (112) expresion_relacional -> . expresion MENIGQUE expresion
    (113) expresion_relacional -> . expresion DOBLEIG expresion
    (114) expresion_relacional -> . expresion IGUAL expresion
    (115) expresion_relacional -> . expresion NOIG expresion
    (116) expresion_relacional -> . expresion NOIGUAL expresion
    (117) expresion_relacional -> . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    NOT             shift and go to state 203
    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion_logica               shift and go to state 201
    expresion_relacional           shift and go to state 202
    expresion                      shift and go to state 204

state 183

    (51) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (53) campos_c -> . campos_c COMA ID
    (54) campos_c -> . ID

    ID              shift and go to state 149

    campos_c                       shift and go to state 211

state 184

    (52) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 212


state 185

    (45) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 45 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 186

    (49) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 49 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 187

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 188

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 213


state 189

    (41) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 214


state 190

    (73) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 215


state 191

    (74) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 216


state 192

    (78) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 78 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 78 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 78 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 78 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 78 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 78 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 193

    (83) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 217


state 194

    (86) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 86 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 86 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 86 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 86 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 86 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 86 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 195

    (84) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 84 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 84 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 84 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 84 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 84 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 84 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 196

    (85) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 85 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 85 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 85 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 85 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 85 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 85 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 197

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 218


state 198

    (64) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 64 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 64 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 199

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 219


state 200

    (53) campos_c -> campos_c COMA ID .

    PAR_C           reduce using rule 53 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 53 (campos_c -> campos_c COMA ID .)


state 201

    (50) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 220


state 202

    (118) expresion_logica -> expresion_relacional . AND expresion_relacional
    (119) expresion_logica -> expresion_relacional . OR expresion_relacional
    (121) expresion_logica -> expresion_relacional .

    AND             shift and go to state 221
    OR              shift and go to state 222
    PAR_C           reduce using rule 121 (expresion_logica -> expresion_relacional .)


state 203

    (120) expresion_logica -> NOT . expresion_relacional
    (109) expresion_relacional -> . expresion MAYQUE expresion
    (110) expresion_relacional -> . expresion MENQUE expresion
    (111) expresion_relacional -> . expresion MAYIGQUE expresion
    (112) expresion_relacional -> . expresion MENIGQUE expresion
    (113) expresion_relacional -> . expresion DOBLEIG expresion
    (114) expresion_relacional -> . expresion IGUAL expresion
    (115) expresion_relacional -> . expresion NOIG expresion
    (116) expresion_relacional -> . expresion NOIGUAL expresion
    (117) expresion_relacional -> . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion_relacional           shift and go to state 223
    expresion                      shift and go to state 204

state 204

    (109) expresion_relacional -> expresion . MAYQUE expresion
    (110) expresion_relacional -> expresion . MENQUE expresion
    (111) expresion_relacional -> expresion . MAYIGQUE expresion
    (112) expresion_relacional -> expresion . MENIGQUE expresion
    (113) expresion_relacional -> expresion . DOBLEIG expresion
    (114) expresion_relacional -> expresion . IGUAL expresion
    (115) expresion_relacional -> expresion . NOIG expresion
    (116) expresion_relacional -> expresion . NOIGUAL expresion
    (117) expresion_relacional -> expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 224
    MENQUE          shift and go to state 225
    MAYIGQUE        shift and go to state 226
    MENIGQUE        shift and go to state 227
    DOBLEIG         shift and go to state 228
    IGUAL           shift and go to state 229
    NOIG            shift and go to state 230
    NOIGUAL         shift and go to state 231
    AND             reduce using rule 117 (expresion_relacional -> expresion .)
    OR              reduce using rule 117 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 117 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 205

    (96) expresion -> CADENA .

    MAYQUE          reduce using rule 96 (expresion -> CADENA .)
    MENQUE          reduce using rule 96 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 96 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 96 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 96 (expresion -> CADENA .)
    IGUAL           reduce using rule 96 (expresion -> CADENA .)
    NOIG            reduce using rule 96 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 96 (expresion -> CADENA .)
    SUMA            reduce using rule 96 (expresion -> CADENA .)
    RESTA           reduce using rule 96 (expresion -> CADENA .)
    DIVISION        reduce using rule 96 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 96 (expresion -> CADENA .)
    AND             reduce using rule 96 (expresion -> CADENA .)
    OR              reduce using rule 96 (expresion -> CADENA .)
    PAR_C           reduce using rule 96 (expresion -> CADENA .)


state 206

    (97) expresion -> ENTERO .

    MAYQUE          reduce using rule 97 (expresion -> ENTERO .)
    MENQUE          reduce using rule 97 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 97 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 97 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 97 (expresion -> ENTERO .)
    IGUAL           reduce using rule 97 (expresion -> ENTERO .)
    NOIG            reduce using rule 97 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 97 (expresion -> ENTERO .)
    SUMA            reduce using rule 97 (expresion -> ENTERO .)
    RESTA           reduce using rule 97 (expresion -> ENTERO .)
    DIVISION        reduce using rule 97 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 97 (expresion -> ENTERO .)
    AND             reduce using rule 97 (expresion -> ENTERO .)
    OR              reduce using rule 97 (expresion -> ENTERO .)
    PAR_C           reduce using rule 97 (expresion -> ENTERO .)


state 207

    (98) expresion -> FLOTANTE .

    MAYQUE          reduce using rule 98 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 98 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 98 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 98 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 98 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 98 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 98 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 98 (expresion -> FLOTANTE .)
    SUMA            reduce using rule 98 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 98 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 98 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 98 (expresion -> FLOTANTE .)
    AND             reduce using rule 98 (expresion -> FLOTANTE .)
    OR              reduce using rule 98 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 98 (expresion -> FLOTANTE .)


state 208

    (99) expresion -> ID .
    (100) expresion -> ID . PUNTO ID

    MAYQUE          reduce using rule 99 (expresion -> ID .)
    MENQUE          reduce using rule 99 (expresion -> ID .)
    MAYIGQUE        reduce using rule 99 (expresion -> ID .)
    MENIGQUE        reduce using rule 99 (expresion -> ID .)
    DOBLEIG         reduce using rule 99 (expresion -> ID .)
    IGUAL           reduce using rule 99 (expresion -> ID .)
    NOIG            reduce using rule 99 (expresion -> ID .)
    NOIGUAL         reduce using rule 99 (expresion -> ID .)
    SUMA            reduce using rule 99 (expresion -> ID .)
    RESTA           reduce using rule 99 (expresion -> ID .)
    DIVISION        reduce using rule 99 (expresion -> ID .)
    ASTERISCO       reduce using rule 99 (expresion -> ID .)
    AND             reduce using rule 99 (expresion -> ID .)
    OR              reduce using rule 99 (expresion -> ID .)
    PAR_C           reduce using rule 99 (expresion -> ID .)
    PUNTO           shift and go to state 236


state 209

    (105) expresion -> TRUE .

    MAYQUE          reduce using rule 105 (expresion -> TRUE .)
    MENQUE          reduce using rule 105 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 105 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 105 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 105 (expresion -> TRUE .)
    IGUAL           reduce using rule 105 (expresion -> TRUE .)
    NOIG            reduce using rule 105 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 105 (expresion -> TRUE .)
    SUMA            reduce using rule 105 (expresion -> TRUE .)
    RESTA           reduce using rule 105 (expresion -> TRUE .)
    DIVISION        reduce using rule 105 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 105 (expresion -> TRUE .)
    AND             reduce using rule 105 (expresion -> TRUE .)
    OR              reduce using rule 105 (expresion -> TRUE .)
    PAR_C           reduce using rule 105 (expresion -> TRUE .)


state 210

    (106) expresion -> FALSE .

    MAYQUE          reduce using rule 106 (expresion -> FALSE .)
    MENQUE          reduce using rule 106 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 106 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 106 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 106 (expresion -> FALSE .)
    IGUAL           reduce using rule 106 (expresion -> FALSE .)
    NOIG            reduce using rule 106 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 106 (expresion -> FALSE .)
    SUMA            reduce using rule 106 (expresion -> FALSE .)
    RESTA           reduce using rule 106 (expresion -> FALSE .)
    DIVISION        reduce using rule 106 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 106 (expresion -> FALSE .)
    AND             reduce using rule 106 (expresion -> FALSE .)
    OR              reduce using rule 106 (expresion -> FALSE .)
    PAR_C           reduce using rule 106 (expresion -> FALSE .)


state 211

    (51) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (53) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 237
    COMA            shift and go to state 181


state 212

    (52) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 238


state 213

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 214

    (41) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 41 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 41 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 41 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 41 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 41 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 41 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 215

    (73) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 239


state 216

    (74) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 240


state 217

    (83) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 83 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 83 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 83 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 83 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 83 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 83 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 218

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 241


state 219

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 242


state 220

    (50) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 50 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 50 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 221

    (118) expresion_logica -> expresion_relacional AND . expresion_relacional
    (109) expresion_relacional -> . expresion MAYQUE expresion
    (110) expresion_relacional -> . expresion MENQUE expresion
    (111) expresion_relacional -> . expresion MAYIGQUE expresion
    (112) expresion_relacional -> . expresion MENIGQUE expresion
    (113) expresion_relacional -> . expresion DOBLEIG expresion
    (114) expresion_relacional -> . expresion IGUAL expresion
    (115) expresion_relacional -> . expresion NOIG expresion
    (116) expresion_relacional -> . expresion NOIGUAL expresion
    (117) expresion_relacional -> . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion_relacional           shift and go to state 243
    expresion                      shift and go to state 204

state 222

    (119) expresion_logica -> expresion_relacional OR . expresion_relacional
    (109) expresion_relacional -> . expresion MAYQUE expresion
    (110) expresion_relacional -> . expresion MENQUE expresion
    (111) expresion_relacional -> . expresion MAYIGQUE expresion
    (112) expresion_relacional -> . expresion MENIGQUE expresion
    (113) expresion_relacional -> . expresion DOBLEIG expresion
    (114) expresion_relacional -> . expresion IGUAL expresion
    (115) expresion_relacional -> . expresion NOIG expresion
    (116) expresion_relacional -> . expresion NOIGUAL expresion
    (117) expresion_relacional -> . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion_relacional           shift and go to state 244
    expresion                      shift and go to state 204

state 223

    (120) expresion_logica -> NOT expresion_relacional .

    PAR_C           reduce using rule 120 (expresion_logica -> NOT expresion_relacional .)


state 224

    (109) expresion_relacional -> expresion MAYQUE . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 245

state 225

    (110) expresion_relacional -> expresion MENQUE . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 246

state 226

    (111) expresion_relacional -> expresion MAYIGQUE . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 247

state 227

    (112) expresion_relacional -> expresion MENIGQUE . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 248

state 228

    (113) expresion_relacional -> expresion DOBLEIG . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 249

state 229

    (114) expresion_relacional -> expresion IGUAL . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 250

state 230

    (115) expresion_relacional -> expresion NOIG . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 251

state 231

    (116) expresion_relacional -> expresion NOIGUAL . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 252

state 232

    (101) expresion -> expresion SUMA . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 253

state 233

    (102) expresion -> expresion RESTA . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 254

state 234

    (103) expresion -> expresion DIVISION . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 255

state 235

    (104) expresion -> expresion ASTERISCO . expresion
    (96) expresion -> . CADENA
    (97) expresion -> . ENTERO
    (98) expresion -> . FLOTANTE
    (99) expresion -> . ID
    (100) expresion -> . ID PUNTO ID
    (101) expresion -> . expresion SUMA expresion
    (102) expresion -> . expresion RESTA expresion
    (103) expresion -> . expresion DIVISION expresion
    (104) expresion -> . expresion ASTERISCO expresion
    (105) expresion -> . TRUE
    (106) expresion -> . FALSE

    CADENA          shift and go to state 205
    ENTERO          shift and go to state 206
    FLOTANTE        shift and go to state 207
    ID              shift and go to state 208
    TRUE            shift and go to state 209
    FALSE           shift and go to state 210

    expresion                      shift and go to state 256

state 236

    (100) expresion -> ID PUNTO . ID

    ID              shift and go to state 257


state 237

    (51) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 51 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 51 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 238

    (52) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 258


state 239

    (73) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 73 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 73 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 73 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 73 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 73 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 73 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 240

    (74) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 74 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 74 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 74 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 74 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 74 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 74 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 241

    (56) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    USE             reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    ALTER           reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 242

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 259


state 243

    (118) expresion_logica -> expresion_relacional AND expresion_relacional .

    PAR_C           reduce using rule 118 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 244

    (119) expresion_logica -> expresion_relacional OR expresion_relacional .

    PAR_C           reduce using rule 119 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 245

    (109) expresion_relacional -> expresion MAYQUE expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 109 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 109 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 109 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 246

    (110) expresion_relacional -> expresion MENQUE expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 110 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 110 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 110 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 247

    (111) expresion_relacional -> expresion MAYIGQUE expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 111 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 111 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 111 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 248

    (112) expresion_relacional -> expresion MENIGQUE expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 112 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 112 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 112 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 249

    (113) expresion_relacional -> expresion DOBLEIG expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 113 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 113 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 113 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 250

    (114) expresion_relacional -> expresion IGUAL expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 114 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 114 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 114 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 251

    (115) expresion_relacional -> expresion NOIG expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 115 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 115 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 115 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 252

    (116) expresion_relacional -> expresion NOIGUAL expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 116 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 116 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 116 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 232
    RESTA           shift and go to state 233
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235


state 253

    (101) expresion -> expresion SUMA expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 101 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 101 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 101 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 101 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 101 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 101 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 101 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 101 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 101 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 101 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 101 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 101 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 101 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235

  ! DIVISION        [ reduce using rule 101 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 101 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 232 ]
  ! RESTA           [ shift and go to state 233 ]


state 254

    (102) expresion -> expresion RESTA expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 102 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 102 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 102 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 102 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 102 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 102 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 102 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 102 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 102 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 102 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 102 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 102 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 102 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 234
    ASTERISCO       shift and go to state 235

  ! DIVISION        [ reduce using rule 102 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 102 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 232 ]
  ! RESTA           [ shift and go to state 233 ]


state 255

    (103) expresion -> expresion DIVISION expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 103 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 103 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 232 ]
  ! RESTA           [ shift and go to state 233 ]
  ! DIVISION        [ shift and go to state 234 ]
  ! ASTERISCO       [ shift and go to state 235 ]


state 256

    (104) expresion -> expresion ASTERISCO expresion .
    (101) expresion -> expresion . SUMA expresion
    (102) expresion -> expresion . RESTA expresion
    (103) expresion -> expresion . DIVISION expresion
    (104) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    SUMA            reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 104 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 232 ]
  ! RESTA           [ shift and go to state 233 ]
  ! DIVISION        [ shift and go to state 234 ]
  ! ASTERISCO       [ shift and go to state 235 ]


state 257

    (100) expresion -> ID PUNTO ID .

    MAYQUE          reduce using rule 100 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 100 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 100 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 100 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 100 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 100 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 100 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 100 (expresion -> ID PUNTO ID .)
    SUMA            reduce using rule 100 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 100 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 100 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 100 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 100 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 100 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 100 (expresion -> ID PUNTO ID .)


state 258

    (52) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 260


state 259

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 261


state 260

    (52) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 262


state 261

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 263


state 262

    (52) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 264


state 263

    (65) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 65 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 65 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 264

    (52) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 265


state 265

    (52) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 266


state 266

    (52) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 52 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 52 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

