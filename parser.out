Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALL
    ALTER
    ANY
    AS
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BETWEEN
    BY
    CASE
    CBRT
    CEIL
    CEILING
    CEJILLA
    COLUMN
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    CURRENT_DATE
    CURRENT_TIME
    CURRENT_USER
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    DIV
    DROP
    D_OR
    ELSE
    ENCODE
    END
    ENUM
    EXCEPT
    EXP
    EXTRACT
    FACTORIAL
    FLOOR
    FOREIGN
    FROM
    FULL
    GCD
    GET_BYTE
    GROUP
    HASHTAG
    HAVING
    IN
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LCM
    LEFT
    LENGTH
    LIKE
    LIMIT
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    NATURAL
    NOTNULL
    NOW
    OFFSET
    ON
    ONLY
    ORDER
    OUTER
    PI
    POWER
    RADIANS
    RANDOM
    RENAME
    RETURNING
    RIGHT
    ROUND
    SCALE
    SELECT
    SESSION_USER
    SET
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    SYMMETRIC
    S_OR
    TAN
    TAND
    TANH
    THEN
    TRIM
    TRIM_SCALE
    TRUC
    TYPE
    UNION
    UNKNOWN
    UPDATE
    USE
    USING
    VALUES
    WHEN
    WHERE
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> createDB_insrt
Rule 5     instruccion -> create_Table_isnrt
Rule 6     instruccion -> show_databases_instr
Rule 7     show_databases_instr -> SHOW DATABASES PTCOMA
Rule 8     createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 9     createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 10    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 11    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 12    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 13    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 14    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 15    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 16    createDB_unParam -> OWNER ID
Rule 17    createDB_unParam -> OWNER IGUAL ID
Rule 18    createDB_unParam -> MODE ENTERO
Rule 19    createDB_unParam -> MODE IGUAL ENTERO
Rule 20    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 21    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 22    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 23    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 24    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 25    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 26    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 27    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 28    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 29    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 30    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 31    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 32    constraint_esp -> CHECK PAR_A expresion_logica PAR_C
Rule 33    constraint_esp -> UNIQUE PAR_A campos_c PAR_C
Rule 34    constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 35    campos_c -> campos_c COMA ID
Rule 36    campos_c -> ID
Rule 37    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
Rule 38    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
Rule 39    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 40    cuerpo_createTable_lista -> cuerpo_createTable
Rule 41    cuerpo_createTable -> ID TIPO_DATO
Rule 42    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 43    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 44    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 45    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 46    cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C
Rule 47    cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
Rule 48    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 49    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 50    TIPO_DATO -> TEXT
Rule 51    TIPO_DATO -> FLOAT
Rule 52    TIPO_DATO -> INTEGER
Rule 53    TIPO_DATO -> SMALLINT
Rule 54    TIPO_DATO -> MONEY
Rule 55    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 56    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 57    TIPO_DATO -> BIGINT
Rule 58    TIPO_DATO -> REAL
Rule 59    TIPO_DATO -> DOUBLE PRECISION
Rule 60    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 61    TIPO_DATO -> INTERVAL
Rule 62    TIPO_DATO -> TIME
Rule 63    TIPO_DATO -> TIMESTAMP
Rule 64    TIPO_DATO -> DATE
Rule 65    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 66    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 67    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 68    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 69    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 70    TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 71    extract_time -> YEAR
Rule 72    extract_time -> DAY
Rule 73    extract_time -> MONTH
Rule 74    extract_time -> HOUR
Rule 75    extract_time -> MINUTE
Rule 76    extract_time -> SECOND
Rule 77    agrupacion_expresion -> PAR_A expresion PAR_C
Rule 78    expresion -> CADENA
Rule 79    expresion -> ENTERO
Rule 80    expresion -> FLOTANTE
Rule 81    expresion -> ID
Rule 82    expresion -> ID PUNTO ID
Rule 83    expresion -> expresion SUMA expresion
Rule 84    expresion -> expresion RESTA expresion
Rule 85    expresion -> expresion DIVISION expresion
Rule 86    expresion -> expresion ASTERISCO expresion
Rule 87    expresion -> TRUE
Rule 88    expresion -> FALSE
Rule 89    string_type -> CADENA
Rule 90    string_type -> ID
Rule 91    expresion_relacional -> expresion MAYQUE expresion
Rule 92    expresion_relacional -> expresion MENQUE expresion
Rule 93    expresion_relacional -> expresion MAYIGQUE expresion
Rule 94    expresion_relacional -> expresion MENIGQUE expresion
Rule 95    expresion_relacional -> expresion DOBLEIG expresion
Rule 96    expresion_relacional -> expresion IGUAL expresion
Rule 97    expresion_relacional -> expresion NOIG expresion
Rule 98    expresion_relacional -> expresion NOIGUAL expresion
Rule 99    expresion_relacional -> expresion
Rule 100   expresion_logica -> expresion_relacional AND expresion_relacional
Rule 101   expresion_logica -> expresion_relacional OR expresion_relacional
Rule 102   expresion_logica -> NOT expresion_relacional
Rule 103   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALL                  : 
ALTER                : 
AND                  : 100
ANY                  : 
AS                   : 
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 86
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 
BIGINT               : 57
BY                   : 
CADENA               : 78 89
CASE                 : 
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 67 69
CHARACTER            : 65 68 70
CHECK                : 32
COLUMN               : 
COMA                 : 35 39 55 56
CONSTRAINT           : 49
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 8 9 10 11 12 13 14 15 20 21 22 23 37 38
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 
DATABASE             : 8 9 10 11 12 13 14 15 20 21 22 23
DATABASES            : 7
DATE                 : 64
DATE_PART            : 
DAY                  : 72
DECIMAL              : 55
DECODE               : 
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 
DIVISION             : 85
DOBLEIG              : 95
DOUBLE               : 59
DROP                 : 
D_OR                 : 
ELSE                 : 
ENCODE               : 
END                  : 
ENTERO               : 18 19 24 25 26 27 28 29 30 31 55 55 56 56 65 66 67 68 79
ENUM                 : 
EXCEPT               : 
EXISTS               : 10 11 14 15 22 23
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 88
FLOAT                : 51
FLOOR                : 
FLOTANTE             : 80
FOREIGN              : 
FOREING              : 34 47
FROM                 : 
FULL                 : 
GCD                  : 
GET_BYTE             : 
GROUP                : 
HASHTAG              : 
HAVING               : 
HOUR                 : 74
ID                   : 8 9 10 11 12 13 14 15 16 17 20 21 22 23 24 25 26 27 28 29 30 31 34 34 34 35 36 37 38 38 41 42 43 43 44 45 46 47 47 47 49 81 82 82 90
IF                   : 10 11 14 15 22 23
IGUAL                : 17 19 25 26 27 27 29 30 31 31 96
IN                   : 
INHERITS             : 38
INNER                : 
INSERT               : 
INTEGER              : 52
INTERSECT            : 
INTERVAL             : 60 61
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 34 42 46 47
LCM                  : 
LEFT                 : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 93
MAYMAY               : 
MAYQUE               : 91
MD5                  : 
MENIGQUE             : 94
MENMEN               : 
MENQUE               : 92
MIN                  : 
MINUTE               : 75
MIN_SCALE            : 
MOD                  : 
MODE                 : 18 19 24 25 26 27 28 29 30 31
MODULO               : 
MONEY                : 54
MONTH                : 73
MULTI                : 
NATURAL              : 
NOIG                 : 97
NOIGUAL              : 98
NOT                  : 10 11 14 15 22 23 44 102
NOTNULL              : 
NOW                  : 
NULL                 : 44 45
NUMERIC              : 56
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 9 11 13 15 21 23 101
ORDER                : 
OUTER                : 
OWNER                : 16 17 24 25 26 27 28 29 30 31
PAR_A                : 32 33 34 34 37 38 38 46 47 47 48 55 56 65 66 67 68 69 70 77
PAR_C                : 32 33 34 34 37 38 38 46 47 47 48 55 56 65 66 67 68 69 70 77
PI                   : 
POWER                : 
PRECISION            : 59
PRIMARY              : 42 46
PTCOMA               : 7 8 9 10 11 12 13 14 15 20 21 22 23 37 38
PUNTO                : 82
RADIANS              : 
RANDOM               : 
REAL                 : 58
REFERENCES           : 34 43 47
RENAME               : 
REPLACE              : 9 11 13 15 21 23
RESTA                : 84
RETURNING            : 
RIGHT                : 
ROUND                : 
SCALE                : 
SECOND               : 76
SELECT               : 
SESSION_USER         : 
SET                  : 
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHOW                 : 7
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 53
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 83
SYMMETRIC            : 
S_OR                 : 
TABLE                : 37 38
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 50
THEN                 : 
TIME                 : 62
TIMESTAMP            : 63
TO                   : 60
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 87
TYPE                 : 
UNION                : 
UNIQUE               : 33 48
UNKNOWN              : 
UPDATE               : 
USE                  : 
USING                : 
VALUES               : 
VARCHAR              : 66
VARYING              : 65
WHEN                 : 
WHERE                : 
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 71
error                : 

Nonterminals, with rules where they appear

TIPO_DATO            : 41 42 43 44 45
agrupacion_expresion : 
campos_c             : 33 35 48
constraint_esp       : 49
createDB_dosParam    : 20 21 22 23
createDB_insrt       : 4
createDB_unParam     : 12 13 14 15
create_Table_isnrt   : 5
cuerpo_createTable   : 39 40
cuerpo_createTable_lista : 37 38 39
expresion            : 77 83 83 84 84 85 85 86 86 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99
expresion_logica     : 32
expresion_relacional : 100 100 101 101 102 103
extract_time         : 60 60
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2
show_databases_instr : 6
string_type          : 

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (8) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (9) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (10) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (11) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (12) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (13) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (14) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (15) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (21) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (22) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (23) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (37) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (38) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (7) show_databases_instr -> . SHOW DATABASES PTCOMA

    CREATE          shift and go to state 7
    SHOW            shift and go to state 8

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . createDB_insrt
    (5) instruccion -> . create_Table_isnrt
    (6) instruccion -> . show_databases_instr
    (8) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (9) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (10) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (11) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (12) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (13) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (14) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (15) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (21) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (22) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (23) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (37) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (38) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (7) show_databases_instr -> . SHOW DATABASES PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    CREATE          shift and go to state 7
    SHOW            shift and go to state 8

    instruccion                    shift and go to state 9
    createDB_insrt                 shift and go to state 4
    create_Table_isnrt             shift and go to state 5
    show_databases_instr           shift and go to state 6

state 3

    (3) instrucciones -> instruccion .

    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SHOW            reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> createDB_insrt .

    CREATE          reduce using rule 4 (instruccion -> createDB_insrt .)
    SHOW            reduce using rule 4 (instruccion -> createDB_insrt .)
    $end            reduce using rule 4 (instruccion -> createDB_insrt .)


state 5

    (5) instruccion -> create_Table_isnrt .

    CREATE          reduce using rule 5 (instruccion -> create_Table_isnrt .)
    SHOW            reduce using rule 5 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 5 (instruccion -> create_Table_isnrt .)


state 6

    (6) instruccion -> show_databases_instr .

    CREATE          reduce using rule 6 (instruccion -> show_databases_instr .)
    SHOW            reduce using rule 6 (instruccion -> show_databases_instr .)
    $end            reduce using rule 6 (instruccion -> show_databases_instr .)


state 7

    (8) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (9) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (10) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (11) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (12) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (13) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (14) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (15) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (21) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (22) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (23) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (37) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (38) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    DATABASE        shift and go to state 10
    OR              shift and go to state 11
    TABLE           shift and go to state 12


state 8

    (7) show_databases_instr -> SHOW . DATABASES PTCOMA

    DATABASES       shift and go to state 13


state 9

    (2) instrucciones -> instrucciones instruccion .

    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SHOW            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 10

    (8) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (10) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (12) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (14) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (22) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 14
    IF              shift and go to state 15


state 11

    (9) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (11) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (13) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (15) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (21) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (23) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 16


state 12

    (37) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (38) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    ID              shift and go to state 17


state 13

    (7) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 18


state 14

    (8) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (12) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (16) createDB_unParam -> . OWNER ID
    (17) createDB_unParam -> . OWNER IGUAL ID
    (18) createDB_unParam -> . MODE ENTERO
    (19) createDB_unParam -> . MODE IGUAL ENTERO
    (24) createDB_dosParam -> . OWNER ID MODE ENTERO
    (25) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (26) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (27) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (28) createDB_dosParam -> . MODE ENTERO OWNER ID
    (29) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (30) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (31) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 19
    OWNER           shift and go to state 22
    MODE            shift and go to state 23

    createDB_unParam               shift and go to state 20
    createDB_dosParam              shift and go to state 21

state 15

    (10) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (14) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 24


state 16

    (9) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (11) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (13) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (15) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (21) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 25


state 17

    (37) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C PTCOMA
    (38) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 26


state 18

    (7) show_databases_instr -> SHOW DATABASES PTCOMA .

    CREATE          reduce using rule 7 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 7 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 7 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 19

    (8) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    CREATE          reduce using rule 8 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 8 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 8 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 20

    (12) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 27


state 21

    (20) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 28


state 22

    (16) createDB_unParam -> OWNER . ID
    (17) createDB_unParam -> OWNER . IGUAL ID
    (24) createDB_dosParam -> OWNER . ID MODE ENTERO
    (25) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (26) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (27) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 29
    IGUAL           shift and go to state 30


state 23

    (18) createDB_unParam -> MODE . ENTERO
    (19) createDB_unParam -> MODE . IGUAL ENTERO
    (28) createDB_dosParam -> MODE . ENTERO OWNER ID
    (29) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (30) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (31) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 31
    IGUAL           shift and go to state 32


state 24

    (10) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (14) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 33


state 25

    (9) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (11) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (13) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (15) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (21) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 34
    IF              shift and go to state 35


state 26

    (37) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C PTCOMA
    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (39) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (40) cuerpo_createTable_lista -> . cuerpo_createTable
    (41) cuerpo_createTable -> . ID TIPO_DATO
    (42) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (43) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (44) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (45) cuerpo_createTable -> . ID TIPO_DATO NULL
    (46) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (47) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (48) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (49) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 36
    PRIMARY         shift and go to state 39
    FOREING         shift and go to state 40
    UNIQUE          shift and go to state 41
    CONSTRAINT      shift and go to state 42

    cuerpo_createTable_lista       shift and go to state 37
    cuerpo_createTable             shift and go to state 38

state 27

    (12) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 12 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 12 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 12 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 28

    (20) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 20 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 29

    (16) createDB_unParam -> OWNER ID .
    (24) createDB_dosParam -> OWNER ID . MODE ENTERO
    (25) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 16 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 43


state 30

    (17) createDB_unParam -> OWNER IGUAL . ID
    (26) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (27) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 44


state 31

    (18) createDB_unParam -> MODE ENTERO .
    (28) createDB_dosParam -> MODE ENTERO . OWNER ID
    (29) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 18 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 45


state 32

    (19) createDB_unParam -> MODE IGUAL . ENTERO
    (30) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (31) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 46


state 33

    (10) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (14) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 47


state 34

    (9) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (13) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (21) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (16) createDB_unParam -> . OWNER ID
    (17) createDB_unParam -> . OWNER IGUAL ID
    (18) createDB_unParam -> . MODE ENTERO
    (19) createDB_unParam -> . MODE IGUAL ENTERO
    (24) createDB_dosParam -> . OWNER ID MODE ENTERO
    (25) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (26) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (27) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (28) createDB_dosParam -> . MODE ENTERO OWNER ID
    (29) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (30) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (31) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 48
    OWNER           shift and go to state 22
    MODE            shift and go to state 23

    createDB_unParam               shift and go to state 49
    createDB_dosParam              shift and go to state 50

state 35

    (11) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (15) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 51


state 36

    (41) cuerpo_createTable -> ID . TIPO_DATO
    (42) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (43) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (44) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (45) cuerpo_createTable -> ID . TIPO_DATO NULL
    (50) TIPO_DATO -> . TEXT
    (51) TIPO_DATO -> . FLOAT
    (52) TIPO_DATO -> . INTEGER
    (53) TIPO_DATO -> . SMALLINT
    (54) TIPO_DATO -> . MONEY
    (55) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (56) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (57) TIPO_DATO -> . BIGINT
    (58) TIPO_DATO -> . REAL
    (59) TIPO_DATO -> . DOUBLE PRECISION
    (60) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (61) TIPO_DATO -> . INTERVAL
    (62) TIPO_DATO -> . TIME
    (63) TIPO_DATO -> . TIMESTAMP
    (64) TIPO_DATO -> . DATE
    (65) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (66) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (67) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (68) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (69) TIPO_DATO -> . CHAR PAR_A PAR_C
    (70) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 53
    FLOAT           shift and go to state 54
    INTEGER         shift and go to state 55
    SMALLINT        shift and go to state 56
    MONEY           shift and go to state 57
    DECIMAL         shift and go to state 58
    NUMERIC         shift and go to state 59
    BIGINT          shift and go to state 60
    REAL            shift and go to state 61
    DOUBLE          shift and go to state 62
    INTERVAL        shift and go to state 63
    TIME            shift and go to state 64
    TIMESTAMP       shift and go to state 65
    DATE            shift and go to state 66
    CHARACTER       shift and go to state 67
    VARCHAR         shift and go to state 68
    CHAR            shift and go to state 69

    TIPO_DATO                      shift and go to state 52

state 37

    (37) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C PTCOMA
    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C INHERITS PAR_A ID PAR_C PTCOMA
    (39) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 70
    COMA            shift and go to state 71


state 38

    (40) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 40 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 40 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 39

    (46) cuerpo_createTable -> PRIMARY . KEY PAR_A ID PAR_C

    KEY             shift and go to state 72


state 40

    (47) cuerpo_createTable -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 73


state 41

    (48) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 74


state 42

    (49) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 75


state 43

    (24) createDB_dosParam -> OWNER ID MODE . ENTERO
    (25) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 76
    IGUAL           shift and go to state 77


state 44

    (17) createDB_unParam -> OWNER IGUAL ID .
    (26) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (27) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 17 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 78


state 45

    (28) createDB_dosParam -> MODE ENTERO OWNER . ID
    (29) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 79
    IGUAL           shift and go to state 80


state 46

    (19) createDB_unParam -> MODE IGUAL ENTERO .
    (30) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (31) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 19 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 81


state 47

    (10) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (14) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (16) createDB_unParam -> . OWNER ID
    (17) createDB_unParam -> . OWNER IGUAL ID
    (18) createDB_unParam -> . MODE ENTERO
    (19) createDB_unParam -> . MODE IGUAL ENTERO
    (24) createDB_dosParam -> . OWNER ID MODE ENTERO
    (25) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (26) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (27) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (28) createDB_dosParam -> . MODE ENTERO OWNER ID
    (29) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (30) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (31) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 82
    OWNER           shift and go to state 22
    MODE            shift and go to state 23

    createDB_unParam               shift and go to state 83
    createDB_dosParam              shift and go to state 84

state 48

    (9) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    CREATE          reduce using rule 9 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 9 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 9 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 49

    (13) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 85


state 50

    (21) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 86


state 51

    (11) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (15) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 87


state 52

    (41) cuerpo_createTable -> ID TIPO_DATO .
    (42) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (43) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (44) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (45) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 41 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 41 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 88
    REFERENCES      shift and go to state 89
    NOT             shift and go to state 90
    NULL            shift and go to state 91


state 53

    (50) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 50 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 50 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 50 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 50 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 50 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 50 (TIPO_DATO -> TEXT .)


state 54

    (51) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 51 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 51 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 51 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 51 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 51 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 51 (TIPO_DATO -> FLOAT .)


state 55

    (52) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 52 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 52 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 52 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 52 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 52 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 52 (TIPO_DATO -> INTEGER .)


state 56

    (53) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 53 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 53 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 53 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 53 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 53 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 53 (TIPO_DATO -> SMALLINT .)


state 57

    (54) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 54 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 54 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 54 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 54 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 54 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 54 (TIPO_DATO -> MONEY .)


state 58

    (55) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 92


state 59

    (56) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 93


state 60

    (57) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 57 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 57 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 57 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 57 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 57 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 57 (TIPO_DATO -> BIGINT .)


state 61

    (58) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 58 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 58 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 58 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 58 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 58 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 58 (TIPO_DATO -> REAL .)


state 62

    (59) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 94


state 63

    (60) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (61) TIPO_DATO -> INTERVAL .
    (71) extract_time -> . YEAR
    (72) extract_time -> . DAY
    (73) extract_time -> . MONTH
    (74) extract_time -> . HOUR
    (75) extract_time -> . MINUTE
    (76) extract_time -> . SECOND

    PRIMARY         reduce using rule 61 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 61 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 61 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 61 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 61 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 61 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 96
    DAY             shift and go to state 97
    MONTH           shift and go to state 98
    HOUR            shift and go to state 99
    MINUTE          shift and go to state 100
    SECOND          shift and go to state 101

    extract_time                   shift and go to state 95

state 64

    (62) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 62 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 62 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 62 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 62 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 62 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 62 (TIPO_DATO -> TIME .)


state 65

    (63) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 63 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 63 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 63 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 63 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 63 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 63 (TIPO_DATO -> TIMESTAMP .)


state 66

    (64) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 64 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 64 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 64 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 64 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 64 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 64 (TIPO_DATO -> DATE .)


state 67

    (65) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (68) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (70) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 102
    PAR_A           shift and go to state 103


state 68

    (66) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 104


state 69

    (67) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (69) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 105


state 70

    (37) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . PTCOMA
    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . INHERITS PAR_A ID PAR_C PTCOMA

    PTCOMA          shift and go to state 106
    INHERITS        shift and go to state 107


state 71

    (39) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (41) cuerpo_createTable -> . ID TIPO_DATO
    (42) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (43) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (44) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (45) cuerpo_createTable -> . ID TIPO_DATO NULL
    (46) cuerpo_createTable -> . PRIMARY KEY PAR_A ID PAR_C
    (47) cuerpo_createTable -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C
    (48) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (49) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 36
    PRIMARY         shift and go to state 39
    FOREING         shift and go to state 40
    UNIQUE          shift and go to state 41
    CONSTRAINT      shift and go to state 42

    cuerpo_createTable             shift and go to state 108

state 72

    (46) cuerpo_createTable -> PRIMARY KEY . PAR_A ID PAR_C

    PAR_A           shift and go to state 109


state 73

    (47) cuerpo_createTable -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 110


state 74

    (48) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (35) campos_c -> . campos_c COMA ID
    (36) campos_c -> . ID

    ID              shift and go to state 112

    campos_c                       shift and go to state 111

state 75

    (49) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (32) constraint_esp -> . CHECK PAR_A expresion_logica PAR_C
    (33) constraint_esp -> . UNIQUE PAR_A campos_c PAR_C
    (34) constraint_esp -> . FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    CHECK           shift and go to state 114
    UNIQUE          shift and go to state 115
    FOREING         shift and go to state 116

    constraint_esp                 shift and go to state 113

state 76

    (24) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 24 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 77

    (25) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 117


state 78

    (26) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (27) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 119
    IGUAL           shift and go to state 118


state 79

    (28) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 28 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 80

    (29) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 120


state 81

    (30) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (31) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 122
    IGUAL           shift and go to state 121


state 82

    (10) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 10 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 10 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 10 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 83

    (14) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 123


state 84

    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 124


state 85

    (13) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 13 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 13 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 13 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 86

    (21) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 21 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 87

    (11) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (15) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 125


state 88

    (42) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 126


state 89

    (43) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 127


state 90

    (44) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 128


state 91

    (45) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 45 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 45 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 92

    (55) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 129


state 93

    (56) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 130


state 94

    (59) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 59 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 59 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 59 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 59 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 59 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 59 (TIPO_DATO -> DOUBLE PRECISION .)


state 95

    (60) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 131


state 96

    (71) extract_time -> YEAR .

    TO              reduce using rule 71 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 71 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 71 (extract_time -> YEAR .)
    NOT             reduce using rule 71 (extract_time -> YEAR .)
    NULL            reduce using rule 71 (extract_time -> YEAR .)
    PAR_C           reduce using rule 71 (extract_time -> YEAR .)
    COMA            reduce using rule 71 (extract_time -> YEAR .)


state 97

    (72) extract_time -> DAY .

    TO              reduce using rule 72 (extract_time -> DAY .)
    PRIMARY         reduce using rule 72 (extract_time -> DAY .)
    REFERENCES      reduce using rule 72 (extract_time -> DAY .)
    NOT             reduce using rule 72 (extract_time -> DAY .)
    NULL            reduce using rule 72 (extract_time -> DAY .)
    PAR_C           reduce using rule 72 (extract_time -> DAY .)
    COMA            reduce using rule 72 (extract_time -> DAY .)


state 98

    (73) extract_time -> MONTH .

    TO              reduce using rule 73 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 73 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 73 (extract_time -> MONTH .)
    NOT             reduce using rule 73 (extract_time -> MONTH .)
    NULL            reduce using rule 73 (extract_time -> MONTH .)
    PAR_C           reduce using rule 73 (extract_time -> MONTH .)
    COMA            reduce using rule 73 (extract_time -> MONTH .)


state 99

    (74) extract_time -> HOUR .

    TO              reduce using rule 74 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 74 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 74 (extract_time -> HOUR .)
    NOT             reduce using rule 74 (extract_time -> HOUR .)
    NULL            reduce using rule 74 (extract_time -> HOUR .)
    PAR_C           reduce using rule 74 (extract_time -> HOUR .)
    COMA            reduce using rule 74 (extract_time -> HOUR .)


state 100

    (75) extract_time -> MINUTE .

    TO              reduce using rule 75 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 75 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 75 (extract_time -> MINUTE .)
    NOT             reduce using rule 75 (extract_time -> MINUTE .)
    NULL            reduce using rule 75 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 75 (extract_time -> MINUTE .)
    COMA            reduce using rule 75 (extract_time -> MINUTE .)


state 101

    (76) extract_time -> SECOND .

    TO              reduce using rule 76 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 76 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 76 (extract_time -> SECOND .)
    NOT             reduce using rule 76 (extract_time -> SECOND .)
    NULL            reduce using rule 76 (extract_time -> SECOND .)
    PAR_C           reduce using rule 76 (extract_time -> SECOND .)
    COMA            reduce using rule 76 (extract_time -> SECOND .)


state 102

    (65) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 132


state 103

    (68) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (70) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 133
    PAR_C           shift and go to state 134


state 104

    (66) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 135


state 105

    (67) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (69) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 136
    PAR_C           shift and go to state 137


state 106

    (37) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .

    CREATE          reduce using rule 37 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    SHOW            reduce using rule 37 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)
    $end            reduce using rule 37 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C PTCOMA .)


state 107

    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 138


state 108

    (39) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 39 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 39 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 109

    (46) cuerpo_createTable -> PRIMARY KEY PAR_A . ID PAR_C

    ID              shift and go to state 139


state 110

    (47) cuerpo_createTable -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 140


state 111

    (48) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (35) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 141
    COMA            shift and go to state 142


state 112

    (36) campos_c -> ID .

    PAR_C           reduce using rule 36 (campos_c -> ID .)
    COMA            reduce using rule 36 (campos_c -> ID .)


state 113

    (49) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PAR_C           reduce using rule 49 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 49 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 114

    (32) constraint_esp -> CHECK . PAR_A expresion_logica PAR_C

    PAR_A           shift and go to state 143


state 115

    (33) constraint_esp -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 144


state 116

    (34) constraint_esp -> FOREING . KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    KEY             shift and go to state 145


state 117

    (25) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 25 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 118

    (27) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 146


state 119

    (26) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 26 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 120

    (29) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 29 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 121

    (31) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 147


state 122

    (30) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 30 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 123

    (14) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 14 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 14 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 14 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 124

    (22) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 22 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 125

    (11) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (15) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (16) createDB_unParam -> . OWNER ID
    (17) createDB_unParam -> . OWNER IGUAL ID
    (18) createDB_unParam -> . MODE ENTERO
    (19) createDB_unParam -> . MODE IGUAL ENTERO
    (24) createDB_dosParam -> . OWNER ID MODE ENTERO
    (25) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (26) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (27) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (28) createDB_dosParam -> . MODE ENTERO OWNER ID
    (29) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (30) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (31) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 148
    OWNER           shift and go to state 22
    MODE            shift and go to state 23

    createDB_unParam               shift and go to state 149
    createDB_dosParam              shift and go to state 150

state 126

    (42) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 42 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 42 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 127

    (43) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 43 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 43 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 128

    (44) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 44 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 44 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 129

    (55) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 151


state 130

    (56) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 152


state 131

    (60) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (71) extract_time -> . YEAR
    (72) extract_time -> . DAY
    (73) extract_time -> . MONTH
    (74) extract_time -> . HOUR
    (75) extract_time -> . MINUTE
    (76) extract_time -> . SECOND

    YEAR            shift and go to state 96
    DAY             shift and go to state 97
    MONTH           shift and go to state 98
    HOUR            shift and go to state 99
    MINUTE          shift and go to state 100
    SECOND          shift and go to state 101

    extract_time                   shift and go to state 153

state 132

    (65) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 154


state 133

    (68) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 155


state 134

    (70) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 70 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 70 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 70 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 70 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 70 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 70 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 135

    (66) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 156


state 136

    (67) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 157


state 137

    (69) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 69 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 69 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 69 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 69 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 69 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 69 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 138

    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 158


state 139

    (46) cuerpo_createTable -> PRIMARY KEY PAR_A ID . PAR_C

    PAR_C           shift and go to state 159


state 140

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 160


state 141

    (48) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 48 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 48 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 142

    (35) campos_c -> campos_c COMA . ID

    ID              shift and go to state 161


state 143

    (32) constraint_esp -> CHECK PAR_A . expresion_logica PAR_C
    (100) expresion_logica -> . expresion_relacional AND expresion_relacional
    (101) expresion_logica -> . expresion_relacional OR expresion_relacional
    (102) expresion_logica -> . NOT expresion_relacional
    (103) expresion_logica -> . expresion_relacional
    (91) expresion_relacional -> . expresion MAYQUE expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYIGQUE expresion
    (94) expresion_relacional -> . expresion MENIGQUE expresion
    (95) expresion_relacional -> . expresion DOBLEIG expresion
    (96) expresion_relacional -> . expresion IGUAL expresion
    (97) expresion_relacional -> . expresion NOIG expresion
    (98) expresion_relacional -> . expresion NOIGUAL expresion
    (99) expresion_relacional -> . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    NOT             shift and go to state 164
    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion_logica               shift and go to state 162
    expresion_relacional           shift and go to state 163
    expresion                      shift and go to state 165

state 144

    (33) constraint_esp -> UNIQUE PAR_A . campos_c PAR_C
    (35) campos_c -> . campos_c COMA ID
    (36) campos_c -> . ID

    ID              shift and go to state 112

    campos_c                       shift and go to state 172

state 145

    (34) constraint_esp -> FOREING KEY . PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_A           shift and go to state 173


state 146

    (27) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 27 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 147

    (31) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 31 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 148

    (11) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    CREATE          reduce using rule 11 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 11 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 11 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 149

    (15) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 174


state 150

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 175


state 151

    (55) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 176


state 152

    (56) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 177


state 153

    (60) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 60 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 60 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 60 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 60 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 60 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 60 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 154

    (65) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 178


state 155

    (68) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 68 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 68 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 68 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 68 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 68 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 68 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 156

    (66) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 66 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 66 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 66 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 66 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 66 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 66 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 157

    (67) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 67 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 67 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 67 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 67 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 67 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 67 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 158

    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 179


state 159

    (46) cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .

    PAR_C           reduce using rule 46 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)
    COMA            reduce using rule 46 (cuerpo_createTable -> PRIMARY KEY PAR_A ID PAR_C .)


state 160

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 180


state 161

    (35) campos_c -> campos_c COMA ID .

    PAR_C           reduce using rule 35 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 35 (campos_c -> campos_c COMA ID .)


state 162

    (32) constraint_esp -> CHECK PAR_A expresion_logica . PAR_C

    PAR_C           shift and go to state 181


state 163

    (100) expresion_logica -> expresion_relacional . AND expresion_relacional
    (101) expresion_logica -> expresion_relacional . OR expresion_relacional
    (103) expresion_logica -> expresion_relacional .

    AND             shift and go to state 182
    OR              shift and go to state 183
    PAR_C           reduce using rule 103 (expresion_logica -> expresion_relacional .)


state 164

    (102) expresion_logica -> NOT . expresion_relacional
    (91) expresion_relacional -> . expresion MAYQUE expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYIGQUE expresion
    (94) expresion_relacional -> . expresion MENIGQUE expresion
    (95) expresion_relacional -> . expresion DOBLEIG expresion
    (96) expresion_relacional -> . expresion IGUAL expresion
    (97) expresion_relacional -> . expresion NOIG expresion
    (98) expresion_relacional -> . expresion NOIGUAL expresion
    (99) expresion_relacional -> . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion_relacional           shift and go to state 184
    expresion                      shift and go to state 165

state 165

    (91) expresion_relacional -> expresion . MAYQUE expresion
    (92) expresion_relacional -> expresion . MENQUE expresion
    (93) expresion_relacional -> expresion . MAYIGQUE expresion
    (94) expresion_relacional -> expresion . MENIGQUE expresion
    (95) expresion_relacional -> expresion . DOBLEIG expresion
    (96) expresion_relacional -> expresion . IGUAL expresion
    (97) expresion_relacional -> expresion . NOIG expresion
    (98) expresion_relacional -> expresion . NOIGUAL expresion
    (99) expresion_relacional -> expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    MAYQUE          shift and go to state 185
    MENQUE          shift and go to state 186
    MAYIGQUE        shift and go to state 187
    MENIGQUE        shift and go to state 188
    DOBLEIG         shift and go to state 189
    IGUAL           shift and go to state 190
    NOIG            shift and go to state 191
    NOIGUAL         shift and go to state 192
    AND             reduce using rule 99 (expresion_relacional -> expresion .)
    OR              reduce using rule 99 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 99 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 166

    (78) expresion -> CADENA .

    MAYQUE          reduce using rule 78 (expresion -> CADENA .)
    MENQUE          reduce using rule 78 (expresion -> CADENA .)
    MAYIGQUE        reduce using rule 78 (expresion -> CADENA .)
    MENIGQUE        reduce using rule 78 (expresion -> CADENA .)
    DOBLEIG         reduce using rule 78 (expresion -> CADENA .)
    IGUAL           reduce using rule 78 (expresion -> CADENA .)
    NOIG            reduce using rule 78 (expresion -> CADENA .)
    NOIGUAL         reduce using rule 78 (expresion -> CADENA .)
    SUMA            reduce using rule 78 (expresion -> CADENA .)
    RESTA           reduce using rule 78 (expresion -> CADENA .)
    DIVISION        reduce using rule 78 (expresion -> CADENA .)
    ASTERISCO       reduce using rule 78 (expresion -> CADENA .)
    AND             reduce using rule 78 (expresion -> CADENA .)
    OR              reduce using rule 78 (expresion -> CADENA .)
    PAR_C           reduce using rule 78 (expresion -> CADENA .)


state 167

    (79) expresion -> ENTERO .

    MAYQUE          reduce using rule 79 (expresion -> ENTERO .)
    MENQUE          reduce using rule 79 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 79 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 79 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 79 (expresion -> ENTERO .)
    IGUAL           reduce using rule 79 (expresion -> ENTERO .)
    NOIG            reduce using rule 79 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 79 (expresion -> ENTERO .)
    SUMA            reduce using rule 79 (expresion -> ENTERO .)
    RESTA           reduce using rule 79 (expresion -> ENTERO .)
    DIVISION        reduce using rule 79 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 79 (expresion -> ENTERO .)
    AND             reduce using rule 79 (expresion -> ENTERO .)
    OR              reduce using rule 79 (expresion -> ENTERO .)
    PAR_C           reduce using rule 79 (expresion -> ENTERO .)


state 168

    (80) expresion -> FLOTANTE .

    MAYQUE          reduce using rule 80 (expresion -> FLOTANTE .)
    MENQUE          reduce using rule 80 (expresion -> FLOTANTE .)
    MAYIGQUE        reduce using rule 80 (expresion -> FLOTANTE .)
    MENIGQUE        reduce using rule 80 (expresion -> FLOTANTE .)
    DOBLEIG         reduce using rule 80 (expresion -> FLOTANTE .)
    IGUAL           reduce using rule 80 (expresion -> FLOTANTE .)
    NOIG            reduce using rule 80 (expresion -> FLOTANTE .)
    NOIGUAL         reduce using rule 80 (expresion -> FLOTANTE .)
    SUMA            reduce using rule 80 (expresion -> FLOTANTE .)
    RESTA           reduce using rule 80 (expresion -> FLOTANTE .)
    DIVISION        reduce using rule 80 (expresion -> FLOTANTE .)
    ASTERISCO       reduce using rule 80 (expresion -> FLOTANTE .)
    AND             reduce using rule 80 (expresion -> FLOTANTE .)
    OR              reduce using rule 80 (expresion -> FLOTANTE .)
    PAR_C           reduce using rule 80 (expresion -> FLOTANTE .)


state 169

    (81) expresion -> ID .
    (82) expresion -> ID . PUNTO ID

    MAYQUE          reduce using rule 81 (expresion -> ID .)
    MENQUE          reduce using rule 81 (expresion -> ID .)
    MAYIGQUE        reduce using rule 81 (expresion -> ID .)
    MENIGQUE        reduce using rule 81 (expresion -> ID .)
    DOBLEIG         reduce using rule 81 (expresion -> ID .)
    IGUAL           reduce using rule 81 (expresion -> ID .)
    NOIG            reduce using rule 81 (expresion -> ID .)
    NOIGUAL         reduce using rule 81 (expresion -> ID .)
    SUMA            reduce using rule 81 (expresion -> ID .)
    RESTA           reduce using rule 81 (expresion -> ID .)
    DIVISION        reduce using rule 81 (expresion -> ID .)
    ASTERISCO       reduce using rule 81 (expresion -> ID .)
    AND             reduce using rule 81 (expresion -> ID .)
    OR              reduce using rule 81 (expresion -> ID .)
    PAR_C           reduce using rule 81 (expresion -> ID .)
    PUNTO           shift and go to state 197


state 170

    (87) expresion -> TRUE .

    MAYQUE          reduce using rule 87 (expresion -> TRUE .)
    MENQUE          reduce using rule 87 (expresion -> TRUE .)
    MAYIGQUE        reduce using rule 87 (expresion -> TRUE .)
    MENIGQUE        reduce using rule 87 (expresion -> TRUE .)
    DOBLEIG         reduce using rule 87 (expresion -> TRUE .)
    IGUAL           reduce using rule 87 (expresion -> TRUE .)
    NOIG            reduce using rule 87 (expresion -> TRUE .)
    NOIGUAL         reduce using rule 87 (expresion -> TRUE .)
    SUMA            reduce using rule 87 (expresion -> TRUE .)
    RESTA           reduce using rule 87 (expresion -> TRUE .)
    DIVISION        reduce using rule 87 (expresion -> TRUE .)
    ASTERISCO       reduce using rule 87 (expresion -> TRUE .)
    AND             reduce using rule 87 (expresion -> TRUE .)
    OR              reduce using rule 87 (expresion -> TRUE .)
    PAR_C           reduce using rule 87 (expresion -> TRUE .)


state 171

    (88) expresion -> FALSE .

    MAYQUE          reduce using rule 88 (expresion -> FALSE .)
    MENQUE          reduce using rule 88 (expresion -> FALSE .)
    MAYIGQUE        reduce using rule 88 (expresion -> FALSE .)
    MENIGQUE        reduce using rule 88 (expresion -> FALSE .)
    DOBLEIG         reduce using rule 88 (expresion -> FALSE .)
    IGUAL           reduce using rule 88 (expresion -> FALSE .)
    NOIG            reduce using rule 88 (expresion -> FALSE .)
    NOIGUAL         reduce using rule 88 (expresion -> FALSE .)
    SUMA            reduce using rule 88 (expresion -> FALSE .)
    RESTA           reduce using rule 88 (expresion -> FALSE .)
    DIVISION        reduce using rule 88 (expresion -> FALSE .)
    ASTERISCO       reduce using rule 88 (expresion -> FALSE .)
    AND             reduce using rule 88 (expresion -> FALSE .)
    OR              reduce using rule 88 (expresion -> FALSE .)
    PAR_C           reduce using rule 88 (expresion -> FALSE .)


state 172

    (33) constraint_esp -> UNIQUE PAR_A campos_c . PAR_C
    (35) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 198
    COMA            shift and go to state 142


state 173

    (34) constraint_esp -> FOREING KEY PAR_A . ID PAR_C REFERENCES ID PAR_A ID PAR_C

    ID              shift and go to state 199


state 174

    (15) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    CREATE          reduce using rule 15 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 15 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 15 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 175

    (23) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    CREATE          reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 23 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 176

    (55) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 200


state 177

    (56) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 201


state 178

    (65) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 65 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 65 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 65 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 65 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 65 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 65 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 179

    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 202


state 180

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 203


state 181

    (32) constraint_esp -> CHECK PAR_A expresion_logica PAR_C .

    PAR_C           reduce using rule 32 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)
    COMA            reduce using rule 32 (constraint_esp -> CHECK PAR_A expresion_logica PAR_C .)


state 182

    (100) expresion_logica -> expresion_relacional AND . expresion_relacional
    (91) expresion_relacional -> . expresion MAYQUE expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYIGQUE expresion
    (94) expresion_relacional -> . expresion MENIGQUE expresion
    (95) expresion_relacional -> . expresion DOBLEIG expresion
    (96) expresion_relacional -> . expresion IGUAL expresion
    (97) expresion_relacional -> . expresion NOIG expresion
    (98) expresion_relacional -> . expresion NOIGUAL expresion
    (99) expresion_relacional -> . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion_relacional           shift and go to state 204
    expresion                      shift and go to state 165

state 183

    (101) expresion_logica -> expresion_relacional OR . expresion_relacional
    (91) expresion_relacional -> . expresion MAYQUE expresion
    (92) expresion_relacional -> . expresion MENQUE expresion
    (93) expresion_relacional -> . expresion MAYIGQUE expresion
    (94) expresion_relacional -> . expresion MENIGQUE expresion
    (95) expresion_relacional -> . expresion DOBLEIG expresion
    (96) expresion_relacional -> . expresion IGUAL expresion
    (97) expresion_relacional -> . expresion NOIG expresion
    (98) expresion_relacional -> . expresion NOIGUAL expresion
    (99) expresion_relacional -> . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion_relacional           shift and go to state 205
    expresion                      shift and go to state 165

state 184

    (102) expresion_logica -> NOT expresion_relacional .

    PAR_C           reduce using rule 102 (expresion_logica -> NOT expresion_relacional .)


state 185

    (91) expresion_relacional -> expresion MAYQUE . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 206

state 186

    (92) expresion_relacional -> expresion MENQUE . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 207

state 187

    (93) expresion_relacional -> expresion MAYIGQUE . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 208

state 188

    (94) expresion_relacional -> expresion MENIGQUE . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 209

state 189

    (95) expresion_relacional -> expresion DOBLEIG . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 210

state 190

    (96) expresion_relacional -> expresion IGUAL . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 211

state 191

    (97) expresion_relacional -> expresion NOIG . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 212

state 192

    (98) expresion_relacional -> expresion NOIGUAL . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 213

state 193

    (83) expresion -> expresion SUMA . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 214

state 194

    (84) expresion -> expresion RESTA . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 215

state 195

    (85) expresion -> expresion DIVISION . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 216

state 196

    (86) expresion -> expresion ASTERISCO . expresion
    (78) expresion -> . CADENA
    (79) expresion -> . ENTERO
    (80) expresion -> . FLOTANTE
    (81) expresion -> . ID
    (82) expresion -> . ID PUNTO ID
    (83) expresion -> . expresion SUMA expresion
    (84) expresion -> . expresion RESTA expresion
    (85) expresion -> . expresion DIVISION expresion
    (86) expresion -> . expresion ASTERISCO expresion
    (87) expresion -> . TRUE
    (88) expresion -> . FALSE

    CADENA          shift and go to state 166
    ENTERO          shift and go to state 167
    FLOTANTE        shift and go to state 168
    ID              shift and go to state 169
    TRUE            shift and go to state 170
    FALSE           shift and go to state 171

    expresion                      shift and go to state 217

state 197

    (82) expresion -> ID PUNTO . ID

    ID              shift and go to state 218


state 198

    (33) constraint_esp -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 33 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 33 (constraint_esp -> UNIQUE PAR_A campos_c PAR_C .)


state 199

    (34) constraint_esp -> FOREING KEY PAR_A ID . PAR_C REFERENCES ID PAR_A ID PAR_C

    PAR_C           shift and go to state 219


state 200

    (55) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 55 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 55 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 55 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 55 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 55 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 55 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 201

    (56) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 56 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 56 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 56 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 56 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 56 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 56 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 202

    (38) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .

    CREATE          reduce using rule 38 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    SHOW            reduce using rule 38 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 38 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C INHERITS PAR_A ID PAR_C PTCOMA .)


state 203

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 220


state 204

    (100) expresion_logica -> expresion_relacional AND expresion_relacional .

    PAR_C           reduce using rule 100 (expresion_logica -> expresion_relacional AND expresion_relacional .)


state 205

    (101) expresion_logica -> expresion_relacional OR expresion_relacional .

    PAR_C           reduce using rule 101 (expresion_logica -> expresion_relacional OR expresion_relacional .)


state 206

    (91) expresion_relacional -> expresion MAYQUE expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 91 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 91 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 91 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 207

    (92) expresion_relacional -> expresion MENQUE expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 92 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 208

    (93) expresion_relacional -> expresion MAYIGQUE expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 93 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 93 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 93 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 209

    (94) expresion_relacional -> expresion MENIGQUE expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 94 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 94 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 94 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 210

    (95) expresion_relacional -> expresion DOBLEIG expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 95 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 95 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 95 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 211

    (96) expresion_relacional -> expresion IGUAL expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 96 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 96 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 96 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 212

    (97) expresion_relacional -> expresion NOIG expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 97 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 97 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 97 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 213

    (98) expresion_relacional -> expresion NOIGUAL expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    AND             reduce using rule 98 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 98 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 98 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 193
    RESTA           shift and go to state 194
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196


state 214

    (83) expresion -> expresion SUMA expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 83 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 83 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 83 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 83 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 83 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 83 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 83 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 83 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 83 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 83 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 83 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 83 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 83 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196

  ! DIVISION        [ reduce using rule 83 (expresion -> expresion SUMA expresion .) ]
  ! ASTERISCO       [ reduce using rule 83 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 193 ]
  ! RESTA           [ shift and go to state 194 ]


state 215

    (84) expresion -> expresion RESTA expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 84 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 84 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 84 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 84 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 84 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 84 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 84 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 84 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 84 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 84 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 84 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 84 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 84 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 195
    ASTERISCO       shift and go to state 196

  ! DIVISION        [ reduce using rule 84 (expresion -> expresion RESTA expresion .) ]
  ! ASTERISCO       [ reduce using rule 84 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 193 ]
  ! RESTA           [ shift and go to state 194 ]


state 216

    (85) expresion -> expresion DIVISION expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 85 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 85 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 193 ]
  ! RESTA           [ shift and go to state 194 ]
  ! DIVISION        [ shift and go to state 195 ]
  ! ASTERISCO       [ shift and go to state 196 ]


state 217

    (86) expresion -> expresion ASTERISCO expresion .
    (83) expresion -> expresion . SUMA expresion
    (84) expresion -> expresion . RESTA expresion
    (85) expresion -> expresion . DIVISION expresion
    (86) expresion -> expresion . ASTERISCO expresion

    MAYQUE          reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    SUMA            reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    RESTA           reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    DIVISION        reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    ASTERISCO       reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 86 (expresion -> expresion ASTERISCO expresion .)

  ! SUMA            [ shift and go to state 193 ]
  ! RESTA           [ shift and go to state 194 ]
  ! DIVISION        [ shift and go to state 195 ]
  ! ASTERISCO       [ shift and go to state 196 ]


state 218

    (82) expresion -> ID PUNTO ID .

    MAYQUE          reduce using rule 82 (expresion -> ID PUNTO ID .)
    MENQUE          reduce using rule 82 (expresion -> ID PUNTO ID .)
    MAYIGQUE        reduce using rule 82 (expresion -> ID PUNTO ID .)
    MENIGQUE        reduce using rule 82 (expresion -> ID PUNTO ID .)
    DOBLEIG         reduce using rule 82 (expresion -> ID PUNTO ID .)
    IGUAL           reduce using rule 82 (expresion -> ID PUNTO ID .)
    NOIG            reduce using rule 82 (expresion -> ID PUNTO ID .)
    NOIGUAL         reduce using rule 82 (expresion -> ID PUNTO ID .)
    SUMA            reduce using rule 82 (expresion -> ID PUNTO ID .)
    RESTA           reduce using rule 82 (expresion -> ID PUNTO ID .)
    DIVISION        reduce using rule 82 (expresion -> ID PUNTO ID .)
    ASTERISCO       reduce using rule 82 (expresion -> ID PUNTO ID .)
    AND             reduce using rule 82 (expresion -> ID PUNTO ID .)
    OR              reduce using rule 82 (expresion -> ID PUNTO ID .)
    PAR_C           reduce using rule 82 (expresion -> ID PUNTO ID .)


state 219

    (34) constraint_esp -> FOREING KEY PAR_A ID PAR_C . REFERENCES ID PAR_A ID PAR_C

    REFERENCES      shift and go to state 221


state 220

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 222


state 221

    (34) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES . ID PAR_A ID PAR_C

    ID              shift and go to state 223


state 222

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 224


state 223

    (34) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID . PAR_A ID PAR_C

    PAR_A           shift and go to state 225


state 224

    (47) cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 47 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 47 (cuerpo_createTable -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)


state 225

    (34) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A . ID PAR_C

    ID              shift and go to state 226


state 226

    (34) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID . PAR_C

    PAR_C           shift and go to state 227


state 227

    (34) constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .

    PAR_C           reduce using rule 34 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)
    COMA            reduce using rule 34 (constraint_esp -> FOREING KEY PAR_A ID PAR_C REFERENCES ID PAR_A ID PAR_C .)

