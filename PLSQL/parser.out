Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ALIAS
    ALL
    AMPERMAY
    AMPERMEN
    AMPERSON_D
    AMPMENOR
    ANY
    ARROBAMAY
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BASE64
    BETWEEN
    BPCHAR_PATTERN_OPS
    BY
    BYTEA
    CBRT
    CEIL
    CEILING
    CEJILLAIGUAL
    COLLATE
    CONSTANT
    CONVERT
    CORCHETEA
    CORCHETEC
    COS
    COSD
    COSH
    COT
    COTD
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    D_DOSPTS
    ENCODE
    ENUM
    ESCAPE
    EXCEPT
    EXCEPTION
    EXECUTE
    EXIT
    EXP
    EXTRACT
    FACTORIAL
    FIRST
    FLOOR
    FOR
    FROM
    GCD
    GET_BYTE
    GREATEST
    GROUP
    HASH
    HAVING
    HEX
    IN
    INCLUDE
    INDEX
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LAST
    LCM
    LEAST
    LENGTH
    LIKE
    LIMIT
    LLAVEA
    LLAVEC
    LN
    LOG
    LOG10
    LOOP
    LOWER
    MAX
    MAYPOT
    MD5
    MENARROBA
    MENMENOR
    MENPOT
    MIN
    MIN_SCALE
    MOD
    NEXT
    NOTICE
    NOTNULL
    NOW
    NULLS
    OFFSET
    ON
    ONLY
    ORAMPMAY
    ORDER
    ORMAYMAY
    PERFORM
    PI
    POWER
    PREPARE
    QUERY
    RADIANS
    RANDOM
    RECORD
    RETURN
    RETURNING
    ROUND
    SCALE
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SYMMETRIC
    TAN
    TAND
    TANH
    TEXT_PATTERN_OPS
    TRIM
    TRIM_SCALE
    TRUC
    TRUNC
    UNION
    UNKNOWN
    UPDATE
    USING
    VALUES
    VARCHAR_PATTERN_OPS
    WHERE
    WIDTH_BUCKET

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> createDB_insrt
Rule 8     instrucciones_global_sent -> show_databases_instr
Rule 9     instrucciones_global_sent -> show_tables_instr
Rule 10    instrucciones_global_sent -> use_database_instr
Rule 11    instrucciones_global_sent -> drop_database_instr
Rule 12    instrucciones_global_sent -> create_Table_isnrt
Rule 13    instrucciones_global_sent -> drop_insrt
Rule 14    instrucciones_global_sent -> alterDB_insrt
Rule 15    instrucciones_global_sent -> alterTable_insrt
Rule 16    instrucciones_global_sent -> error
Rule 17    instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 18    instrucciones_funct_list -> instrucciones_funct_sent
Rule 19    instrucciones_funct_sent -> asignacion
Rule 20    instrucciones_funct_sent -> declaracion
Rule 21    instrucciones_funct_sent -> imprimir
Rule 22    instrucciones_funct_sent -> sentencia_if
Rule 23    instrucciones_funct_sent -> sentencia_switch
Rule 24    instrucciones_funct_sent -> PTCOMA
Rule 25    instrucciones_funct_sent -> llamada_funcion
Rule 26    instrucciones_funct_sent -> empty
Rule 27    instrucciones_funct_sent -> error
Rule 28    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 29    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 30    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 31    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 32    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 33    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 34    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 35    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 36    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 37    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 38    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 39    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 40    createDB_dosParam -> OWNER string_type MODE ENTERO
Rule 41    createDB_dosParam -> MODE ENTERO OWNER string_type
Rule 42    createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO
Rule 43    createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO
Rule 44    createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type
Rule 45    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 46    createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO
Rule 47    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 48    createDB_unParam -> OWNER IGUAL string_type
Rule 49    createDB_unParam -> MODE IGUAL ENTERO
Rule 50    createDB_unParam -> OWNER string_type
Rule 51    createDB_unParam -> MODE ENTERO
Rule 52    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 53    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 54    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 55    show_tables_instr -> SHOW TABLES PTCOMA
Rule 56    use_database_instr -> USE ID PTCOMA
Rule 57    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
Rule 58    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
Rule 59    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 60    cuerpo_createTable_lista -> cuerpo_createTable
Rule 61    cuerpo_createTable -> ID TIPO_DATO_DEF
Rule 62    cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options
Rule 63    cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC
Rule 64    cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
Rule 65    cuerpo_createTable -> UNIQUE PARA campos_c PARC
Rule 66    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 67    campos_c -> campos_c COMA ID
Rule 68    campos_c -> ID
Rule 69    constraint_esp -> CHECK PARA expresion_logica PARC
Rule 70    constraint_esp -> UNIQUE PARA campos_c PARC
Rule 71    constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
Rule 72    createTable_options -> createTable_options cT_options
Rule 73    createTable_options -> cT_options
Rule 74    cT_options -> N_null
Rule 75    cT_options -> C_unique
Rule 76    cT_options -> llave
Rule 77    cT_options -> O_DEFAULT
Rule 78    cT_options -> C_check
Rule 79    N_null -> NOT NULL
Rule 80    N_null -> NULL
Rule 81    C_unique -> UNIQUE
Rule 82    C_unique -> CONSTRAINT ID UNIQUE
Rule 83    llave -> PRIMARY KEY
Rule 84    llave -> FOREIGN KEY
Rule 85    O_DEFAULT -> DEFAULT expresion_dato_default
Rule 86    C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC
Rule 87    C_check -> CHECK PARA expresion_logica PARC
Rule 88    expresion_dato_default -> ENTERO
Rule 89    expresion_dato_default -> FLOTANTE
Rule 90    expresion_dato_default -> CADENA
Rule 91    TIPO_DATO_DEF -> TEXT
Rule 92    TIPO_DATO_DEF -> FLOAT
Rule 93    TIPO_DATO_DEF -> INTEGER
Rule 94    TIPO_DATO_DEF -> BOOLEAN
Rule 95    TIPO_DATO_DEF -> SMALLINT
Rule 96    TIPO_DATO_DEF -> MONEY
Rule 97    TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC
Rule 98    TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC
Rule 99    TIPO_DATO_DEF -> BIGINT
Rule 100   TIPO_DATO_DEF -> REAL
Rule 101   TIPO_DATO_DEF -> DOUBLE PRECISION
Rule 102   TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time
Rule 103   TIPO_DATO_DEF -> INTERVAL
Rule 104   TIPO_DATO_DEF -> TIME
Rule 105   TIPO_DATO_DEF -> TIMESTAMP
Rule 106   TIPO_DATO_DEF -> DATE
Rule 107   TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC
Rule 108   TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC
Rule 109   TIPO_DATO_DEF -> CHAR PARA ENTERO PARC
Rule 110   TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC
Rule 111   TIPO_DATO_DEF -> CHAR PARA PARC
Rule 112   TIPO_DATO_DEF -> CHARACTER PARA PARC
Rule 113   extract_time -> YEAR
Rule 114   extract_time -> DAY
Rule 115   extract_time -> MONTH
Rule 116   extract_time -> HOUR
Rule 117   extract_time -> MINUTE
Rule 118   extract_time -> SECOND
Rule 119   drop_insrt -> DROP TABLE lista_drop_id PTCOMA
Rule 120   lista_drop_id -> lista_drop_id COMA ID
Rule 121   lista_drop_id -> ID
Rule 122   alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 123   alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 124   usuariosDB -> ID
Rule 125   usuariosDB -> CURRENT_USER
Rule 126   usuariosDB -> SESSION_USER
Rule 127   usuariosDB -> CADENA
Rule 128   alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
Rule 129   alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA
Rule 130   alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
Rule 131   alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
Rule 132   alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
Rule 133   alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
Rule 134   alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
Rule 135   alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
Rule 136   alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
Rule 137   alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA
Rule 138   alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
Rule 139   alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA
Rule 140   alterTable_alter -> alterTable_alter COMA Table_alter
Rule 141   alterTable_alter -> Table_alter
Rule 142   Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO
Rule 143   campos_add_Column -> campos_add_Column COMA tipos_datos_columnas
Rule 144   campos_add_Column -> tipos_datos_columnas
Rule 145   tipos_datos_columnas -> ID TIPO_DATO
Rule 146   TIPO_DATO -> TEXT
Rule 147   TIPO_DATO -> FLOAT
Rule 148   TIPO_DATO -> INTEGER
Rule 149   TIPO_DATO -> BOOLEAN
Rule 150   TIPO_DATO -> SMALLINT
Rule 151   TIPO_DATO -> MONEY
Rule 152   TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC
Rule 153   TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC
Rule 154   TIPO_DATO -> BIGINT
Rule 155   TIPO_DATO -> REAL
Rule 156   TIPO_DATO -> DOUBLE PRECISION
Rule 157   TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 158   TIPO_DATO -> INTERVAL
Rule 159   TIPO_DATO -> TIMESTAMP
Rule 160   TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC
Rule 161   TIPO_DATO -> VARCHAR PARA ENTERO PARC
Rule 162   TIPO_DATO -> CHAR PARA ENTERO PARC
Rule 163   TIPO_DATO -> CHARACTER PARA ENTERO PARC
Rule 164   TIPO_DATO -> CHAR PARA PARC
Rule 165   TIPO_DATO -> CHARACTER PARA PARC
Rule 166   string_type -> CADENA
Rule 167   string_type -> ID
Rule 168   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 169   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 170   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 171   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 172   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 173   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 174   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 175   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 176   llamada_funcion -> SELECT ID PARA params PARC PTCOMA
Rule 177   llamada_funcion -> CALL ID PARA params PARC PTCOMA
Rule 178   params -> params COMA expresionPLSQL
Rule 179   params -> expresionPLSQL
Rule 180   params -> empty
Rule 181   parametros -> parametros COMA parametro
Rule 182   parametros -> parametro
Rule 183   parametro -> ID tipo
Rule 184   parametro -> empty
Rule 185   sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA
Rule 186   case_list -> case_list case
Rule 187   case_list -> case
Rule 188   case -> WHEN expresionPLSQL THEN instrucciones_funct_list
Rule 189   case -> ELSE instrucciones_funct_list
Rule 190   sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
Rule 191   else -> ELSE instrucciones_funct_list
Rule 192   else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else
Rule 193   else -> <empty>
Rule 194   imprimir -> RAISE lista_imprimir PTCOMA
Rule 195   lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 196   lista_imprimir -> sent_imprimir
Rule 197   sent_imprimir -> expresionPLSQL
Rule 198   asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 199   declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 200   declaracion -> ID tipo PTCOMA
Rule 201   declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA
Rule 202   tipo -> INTEGER
Rule 203   tipo -> SMALLINT
Rule 204   tipo -> BIGINT
Rule 205   tipo -> DECIMAL
Rule 206   tipo -> NUMERIC
Rule 207   tipo -> REAL
Rule 208   tipo -> CHAR
Rule 209   tipo -> DOUBLE
Rule 210   tipo -> PRECISION
Rule 211   tipo -> MONEY
Rule 212   tipo -> FLOAT
Rule 213   tipo -> BOOLEAN
Rule 214   tipo -> VOID
Rule 215   tipo -> CHAR PARA ENTERO PARC
Rule 216   tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 217   tipo -> VARCHAR PARA ENTERO PARC
Rule 218   tipo -> CHARACTER PARA ENTERO PARC
Rule 219   tipo -> TEXT
Rule 220   tipo -> TIME
Rule 221   tipo -> TIMESTAMP
Rule 222   tipo -> DATE
Rule 223   expresionPLSQL -> log
Rule 224   log -> expresionPLSQL AND expresionPLSQL
Rule 225   log -> expresionPLSQL OR expresionPLSQL
Rule 226   log -> rel
Rule 227   rel -> arit MAYOR arit
Rule 228   rel -> arit MENOR arit
Rule 229   rel -> arit MAYORIGUAL arit
Rule 230   rel -> arit MENORIGUAL arit
Rule 231   rel -> arit IGUALIGUAL arit
Rule 232   rel -> arit NOTIGUAL arit
Rule 233   rel -> arit
Rule 234   arit -> arit POR arit
Rule 235   arit -> arit DIVISION arit
Rule 236   arit -> arit MAS arit
Rule 237   arit -> arit MENOS arit
Rule 238   arit -> arit MODULO arit
Rule 239   arit -> arit ANDB arit
Rule 240   arit -> arit SHIFTI arit
Rule 241   arit -> arit SHIFTD arit
Rule 242   arit -> arit XORB arit
Rule 243   arit -> arit ORB arit
Rule 244   arit -> PARA expresionPLSQL PARC
Rule 245   arit -> ID
Rule 246   arit -> CADENA
Rule 247   arit -> ENTERO
Rule 248   arit -> FLOTANTE
Rule 249   arit -> MENOS expresionPLSQL
Rule 250   arit -> NOTB expresionPLSQL
Rule 251   arit -> NOT expresionPLSQL
Rule 252   arit -> TRUE
Rule 253   arit -> FALSE
Rule 254   empty -> <empty>
Rule 255   agrupacion_expresion -> PARA expresion PARC
Rule 256   expresion -> expresion MAS expresion
Rule 257   expresion -> expresion MENOS expresion
Rule 258   expresion -> expresion POR expresion
Rule 259   expresion -> expresion DIV expresion
Rule 260   expresion -> expresion MODULO expresion
Rule 261   expresion -> expresion SHIFTD expresion
Rule 262   expresion -> expresion SHIFTI expresion
Rule 263   expresion -> expresion HASHTAG expresion
Rule 264   expresion -> expresion ANDB expresion
Rule 265   expresion -> expresion D_OR expresion
Rule 266   expresion -> NOTB expresion
Rule 267   expresion -> ORB expresion
Rule 268   expresion -> D_OR expresion
Rule 269   expresion -> PARA expresion_logica PARC
Rule 270   expresion -> TRUE
Rule 271   expresion -> FALSE
Rule 272   expresion_relacional -> expresion MAYOR expresion
Rule 273   expresion_relacional -> expresion MENOR expresion
Rule 274   expresion_relacional -> expresion MAYORIGUAL expresion
Rule 275   expresion_relacional -> expresion MENORIGUAL expresion
Rule 276   expresion_relacional -> expresion IGUALIGUAL expresion
Rule 277   expresion_relacional -> expresion IGUAL expresion
Rule 278   expresion_relacional -> expresion NOIG expresion
Rule 279   expresion_relacional -> expresion NOTIGUAL expresion
Rule 280   expresion_relacional -> expresion
Rule 281   expresion_logica -> expresion_relacional AND expresion_logica
Rule 282   expresion_logica -> expresion_relacional OR expresion_logica
Rule 283   expresion_logica -> NOT expresion_logica
Rule 284   expresion_logica -> expresion_relacional
Rule 285   expresion -> expresion_dato
Rule 286   expresion -> sum_insrt
Rule 287   expresion -> count_insrt
Rule 288   expresion_dato -> string_type
Rule 289   expresion_dato -> MENOS ENTERO
Rule 290   expresion_dato -> ID PUNTO ID
Rule 291   expresion_dato -> expresion_numero
Rule 292   expresion_numero -> ENTERO
Rule 293   expresion_numero -> FLOTANTE
Rule 294   sum_insrt -> SUM agrupacion_expresion
Rule 295   count_insrt -> COUNT agrupacion_expresion

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 131 132 133 134 135 136
ALIAS                : 
ALL                  : 
ALTER                : 122 123 128 129 130 131 132 133 134 135 136 137 137 138 138 139 142
AMPERMAY             : 
AMPERMEN             : 
AMPERSON_D           : 
AMPMENOR             : 
AND                  : 224 281
ANDB                 : 239 264
ANY                  : 
ARROBAMAY            : 
AS                   : 168 169 170 171 172 173 174 175
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BASE64               : 
BEGIN                : 168 169 170 171 172 173 174 175
BETWEEN              : 
BIGINT               : 99 154 204
BOOLEAN              : 94 149 213
BPCHAR_PATTERN_OPS   : 
BY                   : 
BYTEA                : 
CADENA               : 90 127 166 246
CALL                 : 177
CASE                 : 185 185
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLAIGUAL         : 
CHAR                 : 109 111 162 164 208 215
CHARACTER            : 107 110 112 160 163 165 216 218
CHECK                : 69 86 87 132 134
COLLATE              : 
COLUMN               : 129 130 131 137 138 142
COMA                 : 59 67 97 98 120 140 143 152 153 178 181 195
CONSTANT             : 
CONSTRAINT           : 66 82 86 128 134 135 136
CONVERT              : 
CORCHETEA            : 
CORCHETEC            : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 295
CREATE               : 28 29 30 31 32 33 34 35 36 37 38 39 57 58 168 169 170 171 172 173 174 175
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 125
DATABASE             : 28 29 30 31 32 33 34 35 36 37 38 39 52 53 122 123
DATABASES            : 54
DATE                 : 106 222
DATE_PART            : 
DAY                  : 114
DECIMAL              : 97 152 205
DECLARE              : 169 171 173 175
DECODE               : 
DEFAULT              : 85 201
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 259
DIVISION             : 235
DOLAR                : 168 168 168 168 169 169 169 169 170 170 170 170 171 171 171 171 172 172 172 172 173 173 173 173 174 174 174 174 175 175 175 175
DOSPUNTOS            : 198 199
DOUBLE               : 101 156 209
DROP                 : 52 53 119 128 129
D_DOSPTS             : 
D_OR                 : 265 268
ELSE                 : 189 191
ELSEIF               : 192
ENCODE               : 
END                  : 168 169 170 171 172 173 174 175 185 190
ENTERO               : 40 41 42 43 44 45 46 47 49 51 88 97 97 98 98 107 108 109 110 152 152 153 153 160 161 162 163 215 216 217 218 247 289 292
ENUM                 : 
ESCAPE               : 
EXCEPT               : 
EXCEPTION            : 
EXECUTE              : 
EXISTS               : 30 31 34 35 38 39 52
EXIT                 : 
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 253 271
FIRST                : 
FLOAT                : 92 147 212
FLOOR                : 
FLOTANTE             : 89 248 293
FOR                  : 
FOREIGN              : 64 71 84 133 136
FROM                 : 
FUNCTION             : 168 169 170 171
GCD                  : 
GET_BYTE             : 
GREATEST             : 
GROUP                : 
HASH                 : 
HASHTAG              : 263
HAVING               : 
HEX                  : 
HOUR                 : 116
ID                   : 28 29 30 31 32 33 34 35 36 37 38 39 45 47 52 53 56 57 58 58 61 62 64 64 64 66 67 68 71 71 71 82 86 120 121 122 122 123 124 128 129 130 130 130 131 132 133 133 133 133 134 134 135 135 136 136 136 136 136 137 137 138 138 139 142 145 167 168 169 170 171 172 173 174 175 176 177 183 198 199 200 201 245 290 290
IF                   : 30 31 34 35 38 39 52 190 190
IGUAL                : 42 43 44 45 46 46 47 47 48 49 198 199 277
IGUALIGUAL           : 231 276
IN                   : 
INCLUDE              : 
INDEX                : 
INHERITS             : 58
INNER                : 
INSERT               : 
INTEGER              : 93 148 202
INTERSECT            : 
INTERVAL             : 102 103 157 158
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 63 64 71 83 84 133 136
LANGUAGE             : 168 169 170 171 172 173 174 175
LAST                 : 
LCM                  : 
LEAST                : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LLAVEA               : 
LLAVEC               : 
LN                   : 
LOG                  : 
LOG10                : 
LOOP                 : 
LOWER                : 
MAS                  : 236 256
MAX                  : 
MAYOR                : 227 272
MAYORIGUAL           : 229 274
MAYPOT               : 
MD5                  : 
MENARROBA            : 
MENMENOR             : 
MENOR                : 228 273
MENORIGUAL           : 230 275
MENOS                : 237 249 257 289
MENPOT               : 
MIN                  : 
MINUTE               : 117
MIN_SCALE            : 
MOD                  : 
MODE                 : 40 41 42 43 44 45 46 47 49 51
MODULO               : 238 260
MONEY                : 96 151 211
MONTH                : 115
NEXT                 : 
NOIG                 : 278
NOT                  : 30 31 34 35 38 39 79 138 251 283
NOTB                 : 250 266
NOTICE               : 
NOTIGUAL             : 232 279
NOTNULL              : 
NOW                  : 
NULL                 : 79 80 137 138
NULLS                : 
NUMERIC              : 98 153 206
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 29 31 33 35 37 39 170 171 174 175 225 282
ORAMPMAY             : 
ORB                  : 243 267
ORDER                : 
ORMAYMAY             : 
OWNER                : 40 41 42 43 44 45 46 47 48 50 123
PARA                 : 57 58 58 63 64 64 65 69 70 71 71 86 87 97 98 107 108 109 110 111 112 132 133 133 134 135 136 136 152 153 160 161 162 163 164 165 168 169 170 171 172 173 174 175 176 177 215 216 217 218 244 255 269
PARC                 : 57 58 58 63 64 64 65 69 70 71 71 86 87 97 98 107 108 109 110 111 112 132 133 133 134 135 136 136 152 153 160 161 162 163 164 165 168 169 170 171 172 173 174 175 176 177 215 216 217 218 244 255 269
PERFORM              : 
PI                   : 
PLPGSQL              : 168 169 170 171 172 173 174 175
POR                  : 234 258
POWER                : 
PRECISION            : 101 156 210
PREPARE              : 
PRIMARY              : 63 83
PROCEDURE            : 172 173 174 175
PTCOMA               : 24 28 29 30 31 32 33 34 35 36 37 38 39 52 53 54 55 56 57 58 119 122 123 128 129 130 131 132 133 134 135 136 137 138 139 168 168 169 169 170 170 171 171 172 172 173 173 174 174 175 175 176 177 185 190 194 198 199 200 201
PUNTO                : 290
QUERY                : 
RADIANS              : 
RAISE                : 194
RANDOM               : 
REAL                 : 100 155 207
RECORD               : 
REFERENCES           : 64 71 133 136
RENAME               : 122 130
REPLACE              : 29 31 33 35 37 39 170 171 174 175
RETURN               : 
RETURNING            : 
RETURNS              : 168 169 170 171 172 173 174 175
ROUND                : 
SCALE                : 
SECOND               : 118
SELECT               : 176
SESSION_USER         : 126
SET                  : 137 138
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHIFTD               : 241 261
SHIFTI               : 240 262
SHOW                 : 54 55
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 95 150 203
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 294
SYMMETRIC            : 
TABLE                : 57 58 119 128 129 130 131 132 133 134 135 136 137 138 139
TABLES               : 55
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 91 146 219
TEXT_PATTERN_OPS     : 
THEN                 : 188 190 192
TIME                 : 104 220
TIMESTAMP            : 105 159 221
TO                   : 102 122 123 130 157
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 252 270
TRUNC                : 
TYPE                 : 142
UNION                : 
UNIQUE               : 65 70 81 82 135
UNKNOWN              : 
UPDATE               : 
USE                  : 56
USING                : 
VALUES               : 
VARCHAR              : 108 161 217
VARCHAR_PATTERN_OPS  : 
VARYING              : 107 160 216
VOID                 : 214
WHEN                 : 188
WHERE                : 
WIDTH_BUCKET         : 
XORB                 : 242
YEAR                 : 113
error                : 16 27

Nonterminals, with rules where they appear

C_check              : 78
C_unique             : 75
N_null               : 74
O_DEFAULT            : 77
TIPO_DATO            : 142 145
TIPO_DATO_DEF        : 61 62
Table_alter          : 140 141
agrupacion_expresion : 294 295
alterDB_insrt        : 14
alterTable_alter     : 139 140
alterTable_insrt     : 15
arit                 : 227 227 228 228 229 229 230 230 231 231 232 232 233 234 234 235 235 236 236 237 237 238 238 239 239 240 240 241 241 242 242 243 243
asignacion           : 19
cT_options           : 72 73
campos_add_Column    : 131 143
campos_c             : 63 65 67 70 128 129 135
case                 : 186 187
case_list            : 185 186
codigo               : 1
constraint_esp       : 66
count_insrt          : 287
createDB_dosParam    : 36 37 38 39
createDB_insrt       : 7
createDB_unParam     : 32 33 34 35
createTable_options  : 62 72
create_Table_isnrt   : 12
cuerpo_createTable   : 59 60
cuerpo_createTable_lista : 57 58 59
declaracion          : 20
drop_database_instr  : 11
drop_insrt           : 13
else                 : 190 192
empty                : 26 180 184
expresion            : 255 256 256 257 257 258 258 259 259 260 260 261 261 262 262 263 263 264 264 265 265 266 267 268 272 272 273 273 274 274 275 275 276 276 277 277 278 278 279 279 280
expresionPLSQL       : 178 179 185 188 190 192 197 198 199 201 224 224 225 225 244 249 250 251
expresion_dato       : 285
expresion_dato_default : 85
expresion_logica     : 69 86 87 132 134 269 281 282 283
expresion_numero     : 291
expresion_relacional : 281 282 284
extract_time         : 102 102 157 157
funcion              : 5
imprimir             : 21
inicio               : 0
instrucciones_funct_list : 17 168 169 169 170 171 171 172 173 173 174 175 175 188 189 190 191 192
instrucciones_funct_sent : 17 18
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_drop_id        : 119 120
lista_imprimir       : 194 195
llamada_funcion      : 6 25
llave                : 76
log                  : 223
parametro            : 181 182
parametros           : 168 169 170 171 172 173 174 175 181
params               : 176 177 178
rel                  : 226
sent_imprimir        : 195 196
sentencia_if         : 22
sentencia_switch     : 23
show_databases_instr : 8
show_tables_instr    : 9
string_type          : 40 41 42 43 44 46 48 50 288
sum_insrt            : 286
tipo                 : 168 169 170 171 172 173 174 175 183 199 200 201
tipos_datos_columnas : 143 144
use_database_instr   : 10
usuariosDB           : 123

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . drop_insrt
    (14) instrucciones_global_sent -> . alterDB_insrt
    (15) instrucciones_global_sent -> . alterTable_insrt
    (16) instrucciones_global_sent -> . error
    (168) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (170) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (172) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (174) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (30) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (54) show_databases_instr -> . SHOW DATABASES PTCOMA
    (55) show_tables_instr -> . SHOW TABLES PTCOMA
    (56) use_database_instr -> . USE ID PTCOMA
    (52) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (53) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (57) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (58) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (119) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (122) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (123) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (128) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (129) alterTable_insrt -> . ALTER TABLE ID DROP COLUMN campos_c PTCOMA
    (130) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (131) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (132) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (133) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (134) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (137) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA
    (138) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (139) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA

    error           shift and go to state 16
    CREATE          shift and go to state 17
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    SHOW            shift and go to state 20
    USE             shift and go to state 21
    DROP            shift and go to state 22
    ALTER           shift and go to state 23

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12
    drop_insrt                     shift and go to state 13
    alterDB_insrt                  shift and go to state 14
    alterTable_insrt               shift and go to state 15

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . drop_insrt
    (14) instrucciones_global_sent -> . alterDB_insrt
    (15) instrucciones_global_sent -> . alterTable_insrt
    (16) instrucciones_global_sent -> . error
    (168) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (170) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (172) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (174) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (30) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (54) show_databases_instr -> . SHOW DATABASES PTCOMA
    (55) show_tables_instr -> . SHOW TABLES PTCOMA
    (56) use_database_instr -> . USE ID PTCOMA
    (52) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (53) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (57) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (58) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (119) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (122) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (123) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (128) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (129) alterTable_insrt -> . ALTER TABLE ID DROP COLUMN campos_c PTCOMA
    (130) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (131) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (132) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (133) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (134) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (137) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA
    (138) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (139) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 16
    CREATE          shift and go to state 17
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    SHOW            shift and go to state 20
    USE             shift and go to state 21
    DROP            shift and go to state 22
    ALTER           shift and go to state 23

    instrucciones_global_sent      shift and go to state 24
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12
    drop_insrt                     shift and go to state 13
    alterDB_insrt                  shift and go to state 14
    alterTable_insrt               shift and go to state 15

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CALL            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SHOW            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    USE             reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    DROP            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    ALTER           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CALL            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SHOW            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    USE             reduce using rule 5 (instrucciones_global_sent -> funcion .)
    DROP            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    ALTER           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CALL            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SHOW            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    USE             reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    DROP            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    ALTER           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> createDB_insrt .

    error           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CALL            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SHOW            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    USE             reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    DROP            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    ALTER           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    $end            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)


state 8

    (8) instrucciones_global_sent -> show_databases_instr .

    error           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CREATE          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SELECT          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CALL            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SHOW            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    USE             reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    DROP            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    ALTER           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    $end            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)


state 9

    (9) instrucciones_global_sent -> show_tables_instr .

    error           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CREATE          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SELECT          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CALL            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SHOW            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    USE             reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    DROP            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    ALTER           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    $end            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)


state 10

    (10) instrucciones_global_sent -> use_database_instr .

    error           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CREATE          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SELECT          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CALL            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SHOW            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    USE             reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    DROP            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    ALTER           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    $end            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)


state 11

    (11) instrucciones_global_sent -> drop_database_instr .

    error           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CREATE          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SELECT          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CALL            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SHOW            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    USE             reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    DROP            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    ALTER           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    $end            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)


state 12

    (12) instrucciones_global_sent -> create_Table_isnrt .

    error           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CREATE          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SELECT          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CALL            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SHOW            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    USE             reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    DROP            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    ALTER           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    $end            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)


state 13

    (13) instrucciones_global_sent -> drop_insrt .

    error           reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    CREATE          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    SELECT          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    CALL            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    SHOW            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    USE             reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    DROP            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    ALTER           reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    $end            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)


state 14

    (14) instrucciones_global_sent -> alterDB_insrt .

    error           reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    CREATE          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    SELECT          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    CALL            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    SHOW            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    USE             reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    DROP            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    ALTER           reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    $end            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)


state 15

    (15) instrucciones_global_sent -> alterTable_insrt .

    error           reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    CREATE          reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    SELECT          reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    CALL            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    SHOW            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    USE             reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    DROP            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    ALTER           reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    $end            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)


state 16

    (16) instrucciones_global_sent -> error .

    error           reduce using rule 16 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 16 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 16 (instrucciones_global_sent -> error .)
    CALL            reduce using rule 16 (instrucciones_global_sent -> error .)
    SHOW            reduce using rule 16 (instrucciones_global_sent -> error .)
    USE             reduce using rule 16 (instrucciones_global_sent -> error .)
    DROP            reduce using rule 16 (instrucciones_global_sent -> error .)
    ALTER           reduce using rule 16 (instrucciones_global_sent -> error .)
    $end            reduce using rule 16 (instrucciones_global_sent -> error .)


state 17

    (168) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (170) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (172) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (174) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (28) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (29) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (30) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (57) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (58) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    FUNCTION        shift and go to state 25
    OR              shift and go to state 26
    PROCEDURE       shift and go to state 27
    DATABASE        shift and go to state 28
    TABLE           shift and go to state 29


state 18

    (176) llamada_funcion -> SELECT . ID PARA params PARC PTCOMA

    ID              shift and go to state 30


state 19

    (177) llamada_funcion -> CALL . ID PARA params PARC PTCOMA

    ID              shift and go to state 31


state 20

    (54) show_databases_instr -> SHOW . DATABASES PTCOMA
    (55) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 32
    TABLES          shift and go to state 33


state 21

    (56) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 34


state 22

    (52) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (53) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (119) drop_insrt -> DROP . TABLE lista_drop_id PTCOMA

    DATABASE        shift and go to state 35
    TABLE           shift and go to state 36


state 23

    (122) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (123) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA
    (128) alterTable_insrt -> ALTER . TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (129) alterTable_insrt -> ALTER . TABLE ID DROP COLUMN campos_c PTCOMA
    (130) alterTable_insrt -> ALTER . TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (131) alterTable_insrt -> ALTER . TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (132) alterTable_insrt -> ALTER . TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (133) alterTable_insrt -> ALTER . TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (134) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (137) alterTable_insrt -> ALTER . TABLE ID ALTER COLUMN ID SET NULL PTCOMA
    (138) alterTable_insrt -> ALTER . TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (139) alterTable_insrt -> ALTER . TABLE ID alterTable_alter PTCOMA

    DATABASE        shift and go to state 37
    TABLE           shift and go to state 38


state 24

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CALL            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SHOW            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    USE             reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    DROP            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    ALTER           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 25

    (168) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 39


state 26

    (170) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (174) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (29) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (31) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 40


state 27

    (172) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 41


state 28

    (28) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (30) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 42
    IF              shift and go to state 43


state 29

    (57) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC PTCOMA
    (58) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    ID              shift and go to state 44


state 30

    (176) llamada_funcion -> SELECT ID . PARA params PARC PTCOMA

    PARA            shift and go to state 45


state 31

    (177) llamada_funcion -> CALL ID . PARA params PARC PTCOMA

    PARA            shift and go to state 46


state 32

    (54) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 47


state 33

    (55) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 48


state 34

    (56) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 49


state 35

    (52) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA
    (53) drop_database_instr -> DROP DATABASE . ID PTCOMA

    IF              shift and go to state 50
    ID              shift and go to state 51


state 36

    (119) drop_insrt -> DROP TABLE . lista_drop_id PTCOMA
    (120) lista_drop_id -> . lista_drop_id COMA ID
    (121) lista_drop_id -> . ID

    ID              shift and go to state 53

    lista_drop_id                  shift and go to state 52

state 37

    (122) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (123) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 54


state 38

    (128) alterTable_insrt -> ALTER TABLE . ID DROP CONSTRAINT campos_c PTCOMA
    (129) alterTable_insrt -> ALTER TABLE . ID DROP COLUMN campos_c PTCOMA
    (130) alterTable_insrt -> ALTER TABLE . ID RENAME COLUMN ID TO ID PTCOMA
    (131) alterTable_insrt -> ALTER TABLE . ID ADD COLUMN campos_add_Column PTCOMA
    (132) alterTable_insrt -> ALTER TABLE . ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (133) alterTable_insrt -> ALTER TABLE . ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (134) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE . ID ALTER COLUMN ID SET NULL PTCOMA
    (138) alterTable_insrt -> ALTER TABLE . ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE . ID alterTable_alter PTCOMA

    ID              shift and go to state 55


state 39

    (168) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 56


state 40

    (170) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (174) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    FUNCTION        shift and go to state 57
    PROCEDURE       shift and go to state 58
    DATABASE        shift and go to state 59


state 41

    (172) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 60


state 42

    (28) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (32) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (48) createDB_unParam -> . OWNER IGUAL string_type
    (49) createDB_unParam -> . MODE IGUAL ENTERO
    (50) createDB_unParam -> . OWNER string_type
    (51) createDB_unParam -> . MODE ENTERO
    (40) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (42) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (44) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (46) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 61
    OWNER           shift and go to state 64
    MODE            shift and go to state 65

    createDB_unParam               shift and go to state 62
    createDB_dosParam              shift and go to state 63

state 43

    (30) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 66


state 44

    (57) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC PTCOMA
    (58) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    PARA            shift and go to state 67


state 45

    (176) llamada_funcion -> SELECT ID PARA . params PARC PTCOMA
    (178) params -> . params COMA expresionPLSQL
    (179) params -> . expresionPLSQL
    (180) params -> . empty
    (223) expresionPLSQL -> . log
    (254) empty -> .
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)
    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    params                         shift and go to state 70
    expresionPLSQL                 shift and go to state 71
    empty                          shift and go to state 72
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 46

    (177) llamada_funcion -> CALL ID PARA . params PARC PTCOMA
    (178) params -> . params COMA expresionPLSQL
    (179) params -> . expresionPLSQL
    (180) params -> . empty
    (223) expresionPLSQL -> . log
    (254) empty -> .
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)
    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    params                         shift and go to state 84
    expresionPLSQL                 shift and go to state 71
    empty                          shift and go to state 72
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 47

    (54) show_databases_instr -> SHOW DATABASES PTCOMA .

    error           reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CREATE          reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SELECT          reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CALL            reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 54 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 48

    (55) show_tables_instr -> SHOW TABLES PTCOMA .

    error           reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CREATE          reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SELECT          reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CALL            reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 55 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 49

    (56) use_database_instr -> USE ID PTCOMA .

    error           reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    CREATE          reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    SELECT          reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    CALL            reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 56 (use_database_instr -> USE ID PTCOMA .)


state 50

    (52) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 85


state 51

    (53) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 86


state 52

    (119) drop_insrt -> DROP TABLE lista_drop_id . PTCOMA
    (120) lista_drop_id -> lista_drop_id . COMA ID

    PTCOMA          shift and go to state 87
    COMA            shift and go to state 88


state 53

    (121) lista_drop_id -> ID .

    PTCOMA          reduce using rule 121 (lista_drop_id -> ID .)
    COMA            reduce using rule 121 (lista_drop_id -> ID .)


state 54

    (122) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (123) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 89
    OWNER           shift and go to state 90


state 55

    (128) alterTable_insrt -> ALTER TABLE ID . DROP CONSTRAINT campos_c PTCOMA
    (129) alterTable_insrt -> ALTER TABLE ID . DROP COLUMN campos_c PTCOMA
    (130) alterTable_insrt -> ALTER TABLE ID . RENAME COLUMN ID TO ID PTCOMA
    (131) alterTable_insrt -> ALTER TABLE ID . ADD COLUMN campos_add_Column PTCOMA
    (132) alterTable_insrt -> ALTER TABLE ID . ADD CHECK PARA expresion_logica PARC PTCOMA
    (133) alterTable_insrt -> ALTER TABLE ID . ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (134) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE ID . ALTER COLUMN ID SET NULL PTCOMA
    (138) alterTable_insrt -> ALTER TABLE ID . ALTER COLUMN ID SET NOT NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE ID . alterTable_alter PTCOMA
    (140) alterTable_alter -> . alterTable_alter COMA Table_alter
    (141) alterTable_alter -> . Table_alter
    (142) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO

    DROP            shift and go to state 92
    RENAME          shift and go to state 93
    ADD             shift and go to state 94
    ALTER           shift and go to state 91

    alterTable_alter               shift and go to state 95
    Table_alter                    shift and go to state 96

state 56

    (168) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> . parametros COMA parametro
    (182) parametros -> . parametro
    (183) parametro -> . ID tipo
    (184) parametro -> . empty
    (254) empty -> .

    ID              shift and go to state 97
    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)

    parametros                     shift and go to state 98
    parametro                      shift and go to state 99
    empty                          shift and go to state 100

state 57

    (170) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 101


state 58

    (174) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 102


state 59

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 103
    IF              shift and go to state 104


state 60

    (172) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> . parametros COMA parametro
    (182) parametros -> . parametro
    (183) parametro -> . ID tipo
    (184) parametro -> . empty
    (254) empty -> .

    ID              shift and go to state 97
    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)

    parametros                     shift and go to state 105
    parametro                      shift and go to state 99
    empty                          shift and go to state 100

state 61

    (28) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    error           reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CALL            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 62

    (32) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 106


state 63

    (36) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 107


state 64

    (48) createDB_unParam -> OWNER . IGUAL string_type
    (50) createDB_unParam -> OWNER . string_type
    (40) createDB_dosParam -> OWNER . string_type MODE ENTERO
    (42) createDB_dosParam -> OWNER . string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> OWNER . IGUAL string_type MODE ENTERO
    (46) createDB_dosParam -> OWNER . IGUAL string_type MODE IGUAL ENTERO
    (166) string_type -> . CADENA
    (167) string_type -> . ID

    IGUAL           shift and go to state 108
    CADENA          shift and go to state 110
    ID              shift and go to state 111

    string_type                    shift and go to state 109

state 65

    (49) createDB_unParam -> MODE . IGUAL ENTERO
    (51) createDB_unParam -> MODE . ENTERO
    (41) createDB_dosParam -> MODE . ENTERO OWNER string_type
    (44) createDB_dosParam -> MODE . ENTERO OWNER IGUAL string_type
    (45) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (47) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    IGUAL           shift and go to state 112
    ENTERO          shift and go to state 113


state 66

    (30) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 114


state 67

    (57) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC PTCOMA
    (58) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (59) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (60) cuerpo_createTable_lista -> . cuerpo_createTable
    (61) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (62) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (63) cuerpo_createTable -> . PRIMARY KEY PARA campos_c PARC
    (64) cuerpo_createTable -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
    (65) cuerpo_createTable -> . UNIQUE PARA campos_c PARC
    (66) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 115
    PRIMARY         shift and go to state 118
    FOREIGN         shift and go to state 119
    UNIQUE          shift and go to state 120
    CONSTRAINT      shift and go to state 121

    cuerpo_createTable_lista       shift and go to state 116
    cuerpo_createTable             shift and go to state 117

state 68

    (245) arit -> ID .

    MAYOR           reduce using rule 245 (arit -> ID .)
    MENOR           reduce using rule 245 (arit -> ID .)
    MAYORIGUAL      reduce using rule 245 (arit -> ID .)
    MENORIGUAL      reduce using rule 245 (arit -> ID .)
    IGUALIGUAL      reduce using rule 245 (arit -> ID .)
    NOTIGUAL        reduce using rule 245 (arit -> ID .)
    POR             reduce using rule 245 (arit -> ID .)
    DIVISION        reduce using rule 245 (arit -> ID .)
    MAS             reduce using rule 245 (arit -> ID .)
    MENOS           reduce using rule 245 (arit -> ID .)
    MODULO          reduce using rule 245 (arit -> ID .)
    ANDB            reduce using rule 245 (arit -> ID .)
    SHIFTI          reduce using rule 245 (arit -> ID .)
    SHIFTD          reduce using rule 245 (arit -> ID .)
    XORB            reduce using rule 245 (arit -> ID .)
    ORB             reduce using rule 245 (arit -> ID .)
    AND             reduce using rule 245 (arit -> ID .)
    OR              reduce using rule 245 (arit -> ID .)
    PARC            reduce using rule 245 (arit -> ID .)
    COMA            reduce using rule 245 (arit -> ID .)
    PTCOMA          reduce using rule 245 (arit -> ID .)
    THEN            reduce using rule 245 (arit -> ID .)
    WHEN            reduce using rule 245 (arit -> ID .)
    ELSE            reduce using rule 245 (arit -> ID .)


state 69

    (244) arit -> PARA . expresionPLSQL PARC
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 122
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 70

    (176) llamada_funcion -> SELECT ID PARA params . PARC PTCOMA
    (178) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 123
    COMA            shift and go to state 124


state 71

    (179) params -> expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 179 (params -> expresionPLSQL .)
    COMA            reduce using rule 179 (params -> expresionPLSQL .)
    AND             shift and go to state 125
    OR              shift and go to state 126


state 72

    (180) params -> empty .

    PARC            reduce using rule 180 (params -> empty .)
    COMA            reduce using rule 180 (params -> empty .)


state 73

    (223) expresionPLSQL -> log .

    AND             reduce using rule 223 (expresionPLSQL -> log .)
    OR              reduce using rule 223 (expresionPLSQL -> log .)
    PARC            reduce using rule 223 (expresionPLSQL -> log .)
    COMA            reduce using rule 223 (expresionPLSQL -> log .)
    MAYOR           reduce using rule 223 (expresionPLSQL -> log .)
    MENOR           reduce using rule 223 (expresionPLSQL -> log .)
    MAYORIGUAL      reduce using rule 223 (expresionPLSQL -> log .)
    MENORIGUAL      reduce using rule 223 (expresionPLSQL -> log .)
    IGUALIGUAL      reduce using rule 223 (expresionPLSQL -> log .)
    NOTIGUAL        reduce using rule 223 (expresionPLSQL -> log .)
    POR             reduce using rule 223 (expresionPLSQL -> log .)
    DIVISION        reduce using rule 223 (expresionPLSQL -> log .)
    MAS             reduce using rule 223 (expresionPLSQL -> log .)
    MENOS           reduce using rule 223 (expresionPLSQL -> log .)
    MODULO          reduce using rule 223 (expresionPLSQL -> log .)
    ANDB            reduce using rule 223 (expresionPLSQL -> log .)
    SHIFTI          reduce using rule 223 (expresionPLSQL -> log .)
    SHIFTD          reduce using rule 223 (expresionPLSQL -> log .)
    XORB            reduce using rule 223 (expresionPLSQL -> log .)
    ORB             reduce using rule 223 (expresionPLSQL -> log .)
    PTCOMA          reduce using rule 223 (expresionPLSQL -> log .)
    THEN            reduce using rule 223 (expresionPLSQL -> log .)
    WHEN            reduce using rule 223 (expresionPLSQL -> log .)
    ELSE            reduce using rule 223 (expresionPLSQL -> log .)


state 74

    (226) log -> rel .

    AND             reduce using rule 226 (log -> rel .)
    OR              reduce using rule 226 (log -> rel .)
    PARC            reduce using rule 226 (log -> rel .)
    COMA            reduce using rule 226 (log -> rel .)
    MAYOR           reduce using rule 226 (log -> rel .)
    MENOR           reduce using rule 226 (log -> rel .)
    MAYORIGUAL      reduce using rule 226 (log -> rel .)
    MENORIGUAL      reduce using rule 226 (log -> rel .)
    IGUALIGUAL      reduce using rule 226 (log -> rel .)
    NOTIGUAL        reduce using rule 226 (log -> rel .)
    POR             reduce using rule 226 (log -> rel .)
    DIVISION        reduce using rule 226 (log -> rel .)
    MAS             reduce using rule 226 (log -> rel .)
    MENOS           reduce using rule 226 (log -> rel .)
    MODULO          reduce using rule 226 (log -> rel .)
    ANDB            reduce using rule 226 (log -> rel .)
    SHIFTI          reduce using rule 226 (log -> rel .)
    SHIFTD          reduce using rule 226 (log -> rel .)
    XORB            reduce using rule 226 (log -> rel .)
    ORB             reduce using rule 226 (log -> rel .)
    PTCOMA          reduce using rule 226 (log -> rel .)
    THEN            reduce using rule 226 (log -> rel .)
    WHEN            reduce using rule 226 (log -> rel .)
    ELSE            reduce using rule 226 (log -> rel .)


state 75

    (227) rel -> arit . MAYOR arit
    (228) rel -> arit . MENOR arit
    (229) rel -> arit . MAYORIGUAL arit
    (230) rel -> arit . MENORIGUAL arit
    (231) rel -> arit . IGUALIGUAL arit
    (232) rel -> arit . NOTIGUAL arit
    (233) rel -> arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 127
    MENOR           shift and go to state 128
    MAYORIGUAL      shift and go to state 129
    MENORIGUAL      shift and go to state 130
    IGUALIGUAL      shift and go to state 131
    NOTIGUAL        shift and go to state 132
    AND             reduce using rule 233 (rel -> arit .)
    OR              reduce using rule 233 (rel -> arit .)
    PARC            reduce using rule 233 (rel -> arit .)
    COMA            reduce using rule 233 (rel -> arit .)
    PTCOMA          reduce using rule 233 (rel -> arit .)
    THEN            reduce using rule 233 (rel -> arit .)
    WHEN            reduce using rule 233 (rel -> arit .)
    ELSE            reduce using rule 233 (rel -> arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    ANDB            shift and go to state 138
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140
    XORB            shift and go to state 141
    ORB             shift and go to state 142

  ! MAYOR           [ reduce using rule 233 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 233 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 233 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 233 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 233 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 233 (rel -> arit .) ]
  ! POR             [ reduce using rule 233 (rel -> arit .) ]
  ! DIVISION        [ reduce using rule 233 (rel -> arit .) ]
  ! MAS             [ reduce using rule 233 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 233 (rel -> arit .) ]
  ! MODULO          [ reduce using rule 233 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 233 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 233 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 233 (rel -> arit .) ]
  ! XORB            [ reduce using rule 233 (rel -> arit .) ]
  ! ORB             [ reduce using rule 233 (rel -> arit .) ]


state 76

    (249) arit -> MENOS . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 143
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 77

    (246) arit -> CADENA .

    MAYOR           reduce using rule 246 (arit -> CADENA .)
    MENOR           reduce using rule 246 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 246 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 246 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 246 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 246 (arit -> CADENA .)
    POR             reduce using rule 246 (arit -> CADENA .)
    DIVISION        reduce using rule 246 (arit -> CADENA .)
    MAS             reduce using rule 246 (arit -> CADENA .)
    MENOS           reduce using rule 246 (arit -> CADENA .)
    MODULO          reduce using rule 246 (arit -> CADENA .)
    ANDB            reduce using rule 246 (arit -> CADENA .)
    SHIFTI          reduce using rule 246 (arit -> CADENA .)
    SHIFTD          reduce using rule 246 (arit -> CADENA .)
    XORB            reduce using rule 246 (arit -> CADENA .)
    ORB             reduce using rule 246 (arit -> CADENA .)
    AND             reduce using rule 246 (arit -> CADENA .)
    OR              reduce using rule 246 (arit -> CADENA .)
    PARC            reduce using rule 246 (arit -> CADENA .)
    COMA            reduce using rule 246 (arit -> CADENA .)
    PTCOMA          reduce using rule 246 (arit -> CADENA .)
    THEN            reduce using rule 246 (arit -> CADENA .)
    WHEN            reduce using rule 246 (arit -> CADENA .)
    ELSE            reduce using rule 246 (arit -> CADENA .)


state 78

    (247) arit -> ENTERO .

    MAYOR           reduce using rule 247 (arit -> ENTERO .)
    MENOR           reduce using rule 247 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 247 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 247 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 247 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 247 (arit -> ENTERO .)
    POR             reduce using rule 247 (arit -> ENTERO .)
    DIVISION        reduce using rule 247 (arit -> ENTERO .)
    MAS             reduce using rule 247 (arit -> ENTERO .)
    MENOS           reduce using rule 247 (arit -> ENTERO .)
    MODULO          reduce using rule 247 (arit -> ENTERO .)
    ANDB            reduce using rule 247 (arit -> ENTERO .)
    SHIFTI          reduce using rule 247 (arit -> ENTERO .)
    SHIFTD          reduce using rule 247 (arit -> ENTERO .)
    XORB            reduce using rule 247 (arit -> ENTERO .)
    ORB             reduce using rule 247 (arit -> ENTERO .)
    AND             reduce using rule 247 (arit -> ENTERO .)
    OR              reduce using rule 247 (arit -> ENTERO .)
    PARC            reduce using rule 247 (arit -> ENTERO .)
    COMA            reduce using rule 247 (arit -> ENTERO .)
    PTCOMA          reduce using rule 247 (arit -> ENTERO .)
    THEN            reduce using rule 247 (arit -> ENTERO .)
    WHEN            reduce using rule 247 (arit -> ENTERO .)
    ELSE            reduce using rule 247 (arit -> ENTERO .)


state 79

    (248) arit -> FLOTANTE .

    MAYOR           reduce using rule 248 (arit -> FLOTANTE .)
    MENOR           reduce using rule 248 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 248 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 248 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 248 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 248 (arit -> FLOTANTE .)
    POR             reduce using rule 248 (arit -> FLOTANTE .)
    DIVISION        reduce using rule 248 (arit -> FLOTANTE .)
    MAS             reduce using rule 248 (arit -> FLOTANTE .)
    MENOS           reduce using rule 248 (arit -> FLOTANTE .)
    MODULO          reduce using rule 248 (arit -> FLOTANTE .)
    ANDB            reduce using rule 248 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 248 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 248 (arit -> FLOTANTE .)
    XORB            reduce using rule 248 (arit -> FLOTANTE .)
    ORB             reduce using rule 248 (arit -> FLOTANTE .)
    AND             reduce using rule 248 (arit -> FLOTANTE .)
    OR              reduce using rule 248 (arit -> FLOTANTE .)
    PARC            reduce using rule 248 (arit -> FLOTANTE .)
    COMA            reduce using rule 248 (arit -> FLOTANTE .)
    PTCOMA          reduce using rule 248 (arit -> FLOTANTE .)
    THEN            reduce using rule 248 (arit -> FLOTANTE .)
    WHEN            reduce using rule 248 (arit -> FLOTANTE .)
    ELSE            reduce using rule 248 (arit -> FLOTANTE .)


state 80

    (250) arit -> NOTB . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 144
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 81

    (251) arit -> NOT . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 145
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 82

    (252) arit -> TRUE .

    MAYOR           reduce using rule 252 (arit -> TRUE .)
    MENOR           reduce using rule 252 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 252 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 252 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 252 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 252 (arit -> TRUE .)
    POR             reduce using rule 252 (arit -> TRUE .)
    DIVISION        reduce using rule 252 (arit -> TRUE .)
    MAS             reduce using rule 252 (arit -> TRUE .)
    MENOS           reduce using rule 252 (arit -> TRUE .)
    MODULO          reduce using rule 252 (arit -> TRUE .)
    ANDB            reduce using rule 252 (arit -> TRUE .)
    SHIFTI          reduce using rule 252 (arit -> TRUE .)
    SHIFTD          reduce using rule 252 (arit -> TRUE .)
    XORB            reduce using rule 252 (arit -> TRUE .)
    ORB             reduce using rule 252 (arit -> TRUE .)
    AND             reduce using rule 252 (arit -> TRUE .)
    OR              reduce using rule 252 (arit -> TRUE .)
    PARC            reduce using rule 252 (arit -> TRUE .)
    COMA            reduce using rule 252 (arit -> TRUE .)
    PTCOMA          reduce using rule 252 (arit -> TRUE .)
    THEN            reduce using rule 252 (arit -> TRUE .)
    WHEN            reduce using rule 252 (arit -> TRUE .)
    ELSE            reduce using rule 252 (arit -> TRUE .)


state 83

    (253) arit -> FALSE .

    MAYOR           reduce using rule 253 (arit -> FALSE .)
    MENOR           reduce using rule 253 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 253 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 253 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 253 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 253 (arit -> FALSE .)
    POR             reduce using rule 253 (arit -> FALSE .)
    DIVISION        reduce using rule 253 (arit -> FALSE .)
    MAS             reduce using rule 253 (arit -> FALSE .)
    MENOS           reduce using rule 253 (arit -> FALSE .)
    MODULO          reduce using rule 253 (arit -> FALSE .)
    ANDB            reduce using rule 253 (arit -> FALSE .)
    SHIFTI          reduce using rule 253 (arit -> FALSE .)
    SHIFTD          reduce using rule 253 (arit -> FALSE .)
    XORB            reduce using rule 253 (arit -> FALSE .)
    ORB             reduce using rule 253 (arit -> FALSE .)
    AND             reduce using rule 253 (arit -> FALSE .)
    OR              reduce using rule 253 (arit -> FALSE .)
    PARC            reduce using rule 253 (arit -> FALSE .)
    COMA            reduce using rule 253 (arit -> FALSE .)
    PTCOMA          reduce using rule 253 (arit -> FALSE .)
    THEN            reduce using rule 253 (arit -> FALSE .)
    WHEN            reduce using rule 253 (arit -> FALSE .)
    ELSE            reduce using rule 253 (arit -> FALSE .)


state 84

    (177) llamada_funcion -> CALL ID PARA params . PARC PTCOMA
    (178) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 146
    COMA            shift and go to state 124


state 85

    (52) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 147


state 86

    (53) drop_database_instr -> DROP DATABASE ID PTCOMA .

    error           reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CREATE          reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SELECT          reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CALL            reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 53 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 87

    (119) drop_insrt -> DROP TABLE lista_drop_id PTCOMA .

    error           reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CREATE          reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SELECT          reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CALL            reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SHOW            reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    USE             reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DROP            reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    ALTER           reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    $end            reduce using rule 119 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)


state 88

    (120) lista_drop_id -> lista_drop_id COMA . ID

    ID              shift and go to state 148


state 89

    (122) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 149


state 90

    (123) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 150


state 91

    (137) alterTable_insrt -> ALTER TABLE ID ALTER . COLUMN ID SET NULL PTCOMA
    (138) alterTable_insrt -> ALTER TABLE ID ALTER . COLUMN ID SET NOT NULL PTCOMA
    (142) Table_alter -> ALTER . COLUMN ID TYPE TIPO_DATO

    COLUMN          shift and go to state 151


state 92

    (128) alterTable_insrt -> ALTER TABLE ID DROP . CONSTRAINT campos_c PTCOMA
    (129) alterTable_insrt -> ALTER TABLE ID DROP . COLUMN campos_c PTCOMA

    CONSTRAINT      shift and go to state 152
    COLUMN          shift and go to state 153


state 93

    (130) alterTable_insrt -> ALTER TABLE ID RENAME . COLUMN ID TO ID PTCOMA

    COLUMN          shift and go to state 154


state 94

    (131) alterTable_insrt -> ALTER TABLE ID ADD . COLUMN campos_add_Column PTCOMA
    (132) alterTable_insrt -> ALTER TABLE ID ADD . CHECK PARA expresion_logica PARC PTCOMA
    (133) alterTable_insrt -> ALTER TABLE ID ADD . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (134) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    COLUMN          shift and go to state 155
    CHECK           shift and go to state 156
    FOREIGN         shift and go to state 157
    CONSTRAINT      shift and go to state 158


state 95

    (139) alterTable_insrt -> ALTER TABLE ID alterTable_alter . PTCOMA
    (140) alterTable_alter -> alterTable_alter . COMA Table_alter

    PTCOMA          shift and go to state 159
    COMA            shift and go to state 160


state 96

    (141) alterTable_alter -> Table_alter .

    PTCOMA          reduce using rule 141 (alterTable_alter -> Table_alter .)
    COMA            reduce using rule 141 (alterTable_alter -> Table_alter .)


state 97

    (183) parametro -> ID . tipo
    (202) tipo -> . INTEGER
    (203) tipo -> . SMALLINT
    (204) tipo -> . BIGINT
    (205) tipo -> . DECIMAL
    (206) tipo -> . NUMERIC
    (207) tipo -> . REAL
    (208) tipo -> . CHAR
    (209) tipo -> . DOUBLE
    (210) tipo -> . PRECISION
    (211) tipo -> . MONEY
    (212) tipo -> . FLOAT
    (213) tipo -> . BOOLEAN
    (214) tipo -> . VOID
    (215) tipo -> . CHAR PARA ENTERO PARC
    (216) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (217) tipo -> . VARCHAR PARA ENTERO PARC
    (218) tipo -> . CHARACTER PARA ENTERO PARC
    (219) tipo -> . TEXT
    (220) tipo -> . TIME
    (221) tipo -> . TIMESTAMP
    (222) tipo -> . DATE

    INTEGER         shift and go to state 162
    SMALLINT        shift and go to state 163
    BIGINT          shift and go to state 164
    DECIMAL         shift and go to state 165
    NUMERIC         shift and go to state 166
    REAL            shift and go to state 167
    CHAR            shift and go to state 168
    DOUBLE          shift and go to state 169
    PRECISION       shift and go to state 170
    MONEY           shift and go to state 171
    FLOAT           shift and go to state 172
    BOOLEAN         shift and go to state 173
    VOID            shift and go to state 174
    CHARACTER       shift and go to state 175
    VARCHAR         shift and go to state 176
    TEXT            shift and go to state 177
    TIME            shift and go to state 178
    TIMESTAMP       shift and go to state 179
    DATE            shift and go to state 180

    tipo                           shift and go to state 161

state 98

    (168) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> parametros . COMA parametro

    PARC            shift and go to state 181
    COMA            shift and go to state 182


state 99

    (182) parametros -> parametro .

    PARC            reduce using rule 182 (parametros -> parametro .)
    COMA            reduce using rule 182 (parametros -> parametro .)


state 100

    (184) parametro -> empty .

    PARC            reduce using rule 184 (parametro -> empty .)
    COMA            reduce using rule 184 (parametro -> empty .)


state 101

    (170) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 183


state 102

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 184


state 103

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (48) createDB_unParam -> . OWNER IGUAL string_type
    (49) createDB_unParam -> . MODE IGUAL ENTERO
    (50) createDB_unParam -> . OWNER string_type
    (51) createDB_unParam -> . MODE ENTERO
    (40) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (42) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (44) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (46) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 185
    OWNER           shift and go to state 64
    MODE            shift and go to state 65

    createDB_unParam               shift and go to state 186
    createDB_dosParam              shift and go to state 187

state 104

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 188


state 105

    (172) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> parametros . COMA parametro

    PARC            shift and go to state 189
    COMA            shift and go to state 182


state 106

    (32) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 107

    (36) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 36 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 108

    (48) createDB_unParam -> OWNER IGUAL . string_type
    (43) createDB_dosParam -> OWNER IGUAL . string_type MODE ENTERO
    (46) createDB_dosParam -> OWNER IGUAL . string_type MODE IGUAL ENTERO
    (166) string_type -> . CADENA
    (167) string_type -> . ID

    CADENA          shift and go to state 110
    ID              shift and go to state 111

    string_type                    shift and go to state 190

state 109

    (50) createDB_unParam -> OWNER string_type .
    (40) createDB_dosParam -> OWNER string_type . MODE ENTERO
    (42) createDB_dosParam -> OWNER string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 50 (createDB_unParam -> OWNER string_type .)
    MODE            shift and go to state 191


state 110

    (166) string_type -> CADENA .

    MODE            reduce using rule 166 (string_type -> CADENA .)
    PTCOMA          reduce using rule 166 (string_type -> CADENA .)
    MAYOR           reduce using rule 166 (string_type -> CADENA .)
    MENOR           reduce using rule 166 (string_type -> CADENA .)
    MAYORIGUAL      reduce using rule 166 (string_type -> CADENA .)
    MENORIGUAL      reduce using rule 166 (string_type -> CADENA .)
    IGUALIGUAL      reduce using rule 166 (string_type -> CADENA .)
    IGUAL           reduce using rule 166 (string_type -> CADENA .)
    NOIG            reduce using rule 166 (string_type -> CADENA .)
    NOTIGUAL        reduce using rule 166 (string_type -> CADENA .)
    MAS             reduce using rule 166 (string_type -> CADENA .)
    MENOS           reduce using rule 166 (string_type -> CADENA .)
    POR             reduce using rule 166 (string_type -> CADENA .)
    DIV             reduce using rule 166 (string_type -> CADENA .)
    MODULO          reduce using rule 166 (string_type -> CADENA .)
    SHIFTD          reduce using rule 166 (string_type -> CADENA .)
    SHIFTI          reduce using rule 166 (string_type -> CADENA .)
    HASHTAG         reduce using rule 166 (string_type -> CADENA .)
    ANDB            reduce using rule 166 (string_type -> CADENA .)
    D_OR            reduce using rule 166 (string_type -> CADENA .)
    AND             reduce using rule 166 (string_type -> CADENA .)
    OR              reduce using rule 166 (string_type -> CADENA .)
    PARC            reduce using rule 166 (string_type -> CADENA .)


state 111

    (167) string_type -> ID .

    MODE            reduce using rule 167 (string_type -> ID .)
    PTCOMA          reduce using rule 167 (string_type -> ID .)


state 112

    (49) createDB_unParam -> MODE IGUAL . ENTERO
    (45) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (47) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 192


state 113

    (51) createDB_unParam -> MODE ENTERO .
    (41) createDB_dosParam -> MODE ENTERO . OWNER string_type
    (44) createDB_dosParam -> MODE ENTERO . OWNER IGUAL string_type

    PTCOMA          reduce using rule 51 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 193


state 114

    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 194


state 115

    (61) cuerpo_createTable -> ID . TIPO_DATO_DEF
    (62) cuerpo_createTable -> ID . TIPO_DATO_DEF createTable_options
    (91) TIPO_DATO_DEF -> . TEXT
    (92) TIPO_DATO_DEF -> . FLOAT
    (93) TIPO_DATO_DEF -> . INTEGER
    (94) TIPO_DATO_DEF -> . BOOLEAN
    (95) TIPO_DATO_DEF -> . SMALLINT
    (96) TIPO_DATO_DEF -> . MONEY
    (97) TIPO_DATO_DEF -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (98) TIPO_DATO_DEF -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (99) TIPO_DATO_DEF -> . BIGINT
    (100) TIPO_DATO_DEF -> . REAL
    (101) TIPO_DATO_DEF -> . DOUBLE PRECISION
    (102) TIPO_DATO_DEF -> . INTERVAL extract_time TO extract_time
    (103) TIPO_DATO_DEF -> . INTERVAL
    (104) TIPO_DATO_DEF -> . TIME
    (105) TIPO_DATO_DEF -> . TIMESTAMP
    (106) TIPO_DATO_DEF -> . DATE
    (107) TIPO_DATO_DEF -> . CHARACTER VARYING PARA ENTERO PARC
    (108) TIPO_DATO_DEF -> . VARCHAR PARA ENTERO PARC
    (109) TIPO_DATO_DEF -> . CHAR PARA ENTERO PARC
    (110) TIPO_DATO_DEF -> . CHARACTER PARA ENTERO PARC
    (111) TIPO_DATO_DEF -> . CHAR PARA PARC
    (112) TIPO_DATO_DEF -> . CHARACTER PARA PARC

    TEXT            shift and go to state 196
    FLOAT           shift and go to state 197
    INTEGER         shift and go to state 198
    BOOLEAN         shift and go to state 199
    SMALLINT        shift and go to state 200
    MONEY           shift and go to state 201
    DECIMAL         shift and go to state 202
    NUMERIC         shift and go to state 203
    BIGINT          shift and go to state 204
    REAL            shift and go to state 205
    DOUBLE          shift and go to state 206
    INTERVAL        shift and go to state 207
    TIME            shift and go to state 208
    TIMESTAMP       shift and go to state 209
    DATE            shift and go to state 210
    CHARACTER       shift and go to state 211
    VARCHAR         shift and go to state 212
    CHAR            shift and go to state 213

    TIPO_DATO_DEF                  shift and go to state 195

state 116

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC PTCOMA
    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC INHERITS PARA ID PARC PTCOMA
    (59) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PARC            shift and go to state 214
    COMA            shift and go to state 215


state 117

    (60) cuerpo_createTable_lista -> cuerpo_createTable .

    PARC            reduce using rule 60 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 60 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 118

    (63) cuerpo_createTable -> PRIMARY . KEY PARA campos_c PARC

    KEY             shift and go to state 216


state 119

    (64) cuerpo_createTable -> FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC

    KEY             shift and go to state 217


state 120

    (65) cuerpo_createTable -> UNIQUE . PARA campos_c PARC

    PARA            shift and go to state 218


state 121

    (66) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 219


state 122

    (244) arit -> PARA expresionPLSQL . PARC
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PARC            shift and go to state 220
    AND             shift and go to state 125
    OR              shift and go to state 126


state 123

    (176) llamada_funcion -> SELECT ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 221


state 124

    (178) params -> params COMA . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 222
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 125

    (224) log -> expresionPLSQL AND . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 223
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 126

    (225) log -> expresionPLSQL OR . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 224
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 127

    (227) rel -> arit MAYOR . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 225

state 128

    (228) rel -> arit MENOR . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 226

state 129

    (229) rel -> arit MAYORIGUAL . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 227

state 130

    (230) rel -> arit MENORIGUAL . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 228

state 131

    (231) rel -> arit IGUALIGUAL . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 229

state 132

    (232) rel -> arit NOTIGUAL . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 230

state 133

    (234) arit -> arit POR . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 231

state 134

    (235) arit -> arit DIVISION . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 232

state 135

    (236) arit -> arit MAS . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 233

state 136

    (237) arit -> arit MENOS . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 234

state 137

    (238) arit -> arit MODULO . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 235

state 138

    (239) arit -> arit ANDB . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 236

state 139

    (240) arit -> arit SHIFTI . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 237

state 140

    (241) arit -> arit SHIFTD . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 238

state 141

    (242) arit -> arit XORB . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 239

state 142

    (243) arit -> arit ORB . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    arit                           shift and go to state 240

state 143

    (249) arit -> MENOS expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    MENOR           reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    MAYORIGUAL      reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    MENORIGUAL      reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    IGUALIGUAL      reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    NOTIGUAL        reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    POR             reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    DIVISION        reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    MAS             reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    MENOS           reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    MODULO          reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    ANDB            reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    SHIFTI          reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    SHIFTD          reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    XORB            reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    ORB             reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    AND             reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    OR              reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    PARC            reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    COMA            reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    PTCOMA          reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    THEN            reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    WHEN            reduce using rule 249 (arit -> MENOS expresionPLSQL .)
    ELSE            reduce using rule 249 (arit -> MENOS expresionPLSQL .)

  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 144

    (250) arit -> NOTB expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    MENOR           reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    MAYORIGUAL      reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    MENORIGUAL      reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    IGUALIGUAL      reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    NOTIGUAL        reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    POR             reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    DIVISION        reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    MAS             reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    MENOS           reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    MODULO          reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    ANDB            reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    SHIFTI          reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    SHIFTD          reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    XORB            reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    ORB             reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    AND             reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    OR              reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    PARC            reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    COMA            reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    PTCOMA          reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    THEN            reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    WHEN            reduce using rule 250 (arit -> NOTB expresionPLSQL .)
    ELSE            reduce using rule 250 (arit -> NOTB expresionPLSQL .)

  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 145

    (251) arit -> NOT expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 251 (arit -> NOT expresionPLSQL .)
    MENOR           reduce using rule 251 (arit -> NOT expresionPLSQL .)
    MAYORIGUAL      reduce using rule 251 (arit -> NOT expresionPLSQL .)
    MENORIGUAL      reduce using rule 251 (arit -> NOT expresionPLSQL .)
    IGUALIGUAL      reduce using rule 251 (arit -> NOT expresionPLSQL .)
    NOTIGUAL        reduce using rule 251 (arit -> NOT expresionPLSQL .)
    POR             reduce using rule 251 (arit -> NOT expresionPLSQL .)
    DIVISION        reduce using rule 251 (arit -> NOT expresionPLSQL .)
    MAS             reduce using rule 251 (arit -> NOT expresionPLSQL .)
    MENOS           reduce using rule 251 (arit -> NOT expresionPLSQL .)
    MODULO          reduce using rule 251 (arit -> NOT expresionPLSQL .)
    ANDB            reduce using rule 251 (arit -> NOT expresionPLSQL .)
    SHIFTI          reduce using rule 251 (arit -> NOT expresionPLSQL .)
    SHIFTD          reduce using rule 251 (arit -> NOT expresionPLSQL .)
    XORB            reduce using rule 251 (arit -> NOT expresionPLSQL .)
    ORB             reduce using rule 251 (arit -> NOT expresionPLSQL .)
    AND             reduce using rule 251 (arit -> NOT expresionPLSQL .)
    OR              reduce using rule 251 (arit -> NOT expresionPLSQL .)
    PARC            reduce using rule 251 (arit -> NOT expresionPLSQL .)
    COMA            reduce using rule 251 (arit -> NOT expresionPLSQL .)
    PTCOMA          reduce using rule 251 (arit -> NOT expresionPLSQL .)
    THEN            reduce using rule 251 (arit -> NOT expresionPLSQL .)
    WHEN            reduce using rule 251 (arit -> NOT expresionPLSQL .)
    ELSE            reduce using rule 251 (arit -> NOT expresionPLSQL .)

  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 146

    (177) llamada_funcion -> CALL ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 241


state 147

    (52) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 242


state 148

    (120) lista_drop_id -> lista_drop_id COMA ID .

    PTCOMA          reduce using rule 120 (lista_drop_id -> lista_drop_id COMA ID .)
    COMA            reduce using rule 120 (lista_drop_id -> lista_drop_id COMA ID .)


state 149

    (122) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 243


state 150

    (123) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (124) usuariosDB -> . ID
    (125) usuariosDB -> . CURRENT_USER
    (126) usuariosDB -> . SESSION_USER
    (127) usuariosDB -> . CADENA

    ID              shift and go to state 244
    CURRENT_USER    shift and go to state 246
    SESSION_USER    shift and go to state 247
    CADENA          shift and go to state 248

    usuariosDB                     shift and go to state 245

state 151

    (137) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN . ID SET NULL PTCOMA
    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN . ID SET NOT NULL PTCOMA
    (142) Table_alter -> ALTER COLUMN . ID TYPE TIPO_DATO

    ID              shift and go to state 249


state 152

    (128) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT . campos_c PTCOMA
    (67) campos_c -> . campos_c COMA ID
    (68) campos_c -> . ID

    ID              shift and go to state 250

    campos_c                       shift and go to state 251

state 153

    (129) alterTable_insrt -> ALTER TABLE ID DROP COLUMN . campos_c PTCOMA
    (67) campos_c -> . campos_c COMA ID
    (68) campos_c -> . ID

    ID              shift and go to state 250

    campos_c                       shift and go to state 252

state 154

    (130) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN . ID TO ID PTCOMA

    ID              shift and go to state 253


state 155

    (131) alterTable_insrt -> ALTER TABLE ID ADD COLUMN . campos_add_Column PTCOMA
    (143) campos_add_Column -> . campos_add_Column COMA tipos_datos_columnas
    (144) campos_add_Column -> . tipos_datos_columnas
    (145) tipos_datos_columnas -> . ID TIPO_DATO

    ID              shift and go to state 254

    campos_add_Column              shift and go to state 255
    tipos_datos_columnas           shift and go to state 256

state 156

    (132) alterTable_insrt -> ALTER TABLE ID ADD CHECK . PARA expresion_logica PARC PTCOMA

    PARA            shift and go to state 257


state 157

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    KEY             shift and go to state 258


state 158

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    ID              shift and go to state 259


state 159

    (139) alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .

    error           reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    CREATE          reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    SELECT          reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    CALL            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    SHOW            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    USE             reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    DROP            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    ALTER           reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    $end            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)


state 160

    (140) alterTable_alter -> alterTable_alter COMA . Table_alter
    (142) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO

    ALTER           shift and go to state 261

    Table_alter                    shift and go to state 260

state 161

    (183) parametro -> ID tipo .

    PARC            reduce using rule 183 (parametro -> ID tipo .)
    COMA            reduce using rule 183 (parametro -> ID tipo .)


state 162

    (202) tipo -> INTEGER .

    PARC            reduce using rule 202 (tipo -> INTEGER .)
    COMA            reduce using rule 202 (tipo -> INTEGER .)
    AS              reduce using rule 202 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 202 (tipo -> INTEGER .)
    PTCOMA          reduce using rule 202 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 202 (tipo -> INTEGER .)


state 163

    (203) tipo -> SMALLINT .

    PARC            reduce using rule 203 (tipo -> SMALLINT .)
    COMA            reduce using rule 203 (tipo -> SMALLINT .)
    AS              reduce using rule 203 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 203 (tipo -> SMALLINT .)
    PTCOMA          reduce using rule 203 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 203 (tipo -> SMALLINT .)


state 164

    (204) tipo -> BIGINT .

    PARC            reduce using rule 204 (tipo -> BIGINT .)
    COMA            reduce using rule 204 (tipo -> BIGINT .)
    AS              reduce using rule 204 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 204 (tipo -> BIGINT .)
    PTCOMA          reduce using rule 204 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 204 (tipo -> BIGINT .)


state 165

    (205) tipo -> DECIMAL .

    PARC            reduce using rule 205 (tipo -> DECIMAL .)
    COMA            reduce using rule 205 (tipo -> DECIMAL .)
    AS              reduce using rule 205 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 205 (tipo -> DECIMAL .)
    PTCOMA          reduce using rule 205 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 205 (tipo -> DECIMAL .)


state 166

    (206) tipo -> NUMERIC .

    PARC            reduce using rule 206 (tipo -> NUMERIC .)
    COMA            reduce using rule 206 (tipo -> NUMERIC .)
    AS              reduce using rule 206 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 206 (tipo -> NUMERIC .)
    PTCOMA          reduce using rule 206 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 206 (tipo -> NUMERIC .)


state 167

    (207) tipo -> REAL .

    PARC            reduce using rule 207 (tipo -> REAL .)
    COMA            reduce using rule 207 (tipo -> REAL .)
    AS              reduce using rule 207 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 207 (tipo -> REAL .)
    PTCOMA          reduce using rule 207 (tipo -> REAL .)
    DEFAULT         reduce using rule 207 (tipo -> REAL .)


state 168

    (208) tipo -> CHAR .
    (215) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 208 (tipo -> CHAR .)
    COMA            reduce using rule 208 (tipo -> CHAR .)
    AS              reduce using rule 208 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 208 (tipo -> CHAR .)
    PTCOMA          reduce using rule 208 (tipo -> CHAR .)
    DEFAULT         reduce using rule 208 (tipo -> CHAR .)
    PARA            shift and go to state 262


state 169

    (209) tipo -> DOUBLE .

    PARC            reduce using rule 209 (tipo -> DOUBLE .)
    COMA            reduce using rule 209 (tipo -> DOUBLE .)
    AS              reduce using rule 209 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 209 (tipo -> DOUBLE .)
    PTCOMA          reduce using rule 209 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 209 (tipo -> DOUBLE .)


state 170

    (210) tipo -> PRECISION .

    PARC            reduce using rule 210 (tipo -> PRECISION .)
    COMA            reduce using rule 210 (tipo -> PRECISION .)
    AS              reduce using rule 210 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 210 (tipo -> PRECISION .)
    PTCOMA          reduce using rule 210 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 210 (tipo -> PRECISION .)


state 171

    (211) tipo -> MONEY .

    PARC            reduce using rule 211 (tipo -> MONEY .)
    COMA            reduce using rule 211 (tipo -> MONEY .)
    AS              reduce using rule 211 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 211 (tipo -> MONEY .)
    PTCOMA          reduce using rule 211 (tipo -> MONEY .)
    DEFAULT         reduce using rule 211 (tipo -> MONEY .)


state 172

    (212) tipo -> FLOAT .

    PARC            reduce using rule 212 (tipo -> FLOAT .)
    COMA            reduce using rule 212 (tipo -> FLOAT .)
    AS              reduce using rule 212 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 212 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 212 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 212 (tipo -> FLOAT .)


state 173

    (213) tipo -> BOOLEAN .

    PARC            reduce using rule 213 (tipo -> BOOLEAN .)
    COMA            reduce using rule 213 (tipo -> BOOLEAN .)
    AS              reduce using rule 213 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 213 (tipo -> BOOLEAN .)
    PTCOMA          reduce using rule 213 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 213 (tipo -> BOOLEAN .)


state 174

    (214) tipo -> VOID .

    PARC            reduce using rule 214 (tipo -> VOID .)
    COMA            reduce using rule 214 (tipo -> VOID .)
    AS              reduce using rule 214 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 214 (tipo -> VOID .)
    PTCOMA          reduce using rule 214 (tipo -> VOID .)
    DEFAULT         reduce using rule 214 (tipo -> VOID .)


state 175

    (216) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (218) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 263
    PARA            shift and go to state 264


state 176

    (217) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 265


state 177

    (219) tipo -> TEXT .

    PARC            reduce using rule 219 (tipo -> TEXT .)
    COMA            reduce using rule 219 (tipo -> TEXT .)
    AS              reduce using rule 219 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 219 (tipo -> TEXT .)
    PTCOMA          reduce using rule 219 (tipo -> TEXT .)
    DEFAULT         reduce using rule 219 (tipo -> TEXT .)


state 178

    (220) tipo -> TIME .

    PARC            reduce using rule 220 (tipo -> TIME .)
    COMA            reduce using rule 220 (tipo -> TIME .)
    AS              reduce using rule 220 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 220 (tipo -> TIME .)
    PTCOMA          reduce using rule 220 (tipo -> TIME .)
    DEFAULT         reduce using rule 220 (tipo -> TIME .)


state 179

    (221) tipo -> TIMESTAMP .

    PARC            reduce using rule 221 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 221 (tipo -> TIMESTAMP .)
    AS              reduce using rule 221 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 221 (tipo -> TIMESTAMP .)
    PTCOMA          reduce using rule 221 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 221 (tipo -> TIMESTAMP .)


state 180

    (222) tipo -> DATE .

    PARC            reduce using rule 222 (tipo -> DATE .)
    COMA            reduce using rule 222 (tipo -> DATE .)
    AS              reduce using rule 222 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 222 (tipo -> DATE .)
    PTCOMA          reduce using rule 222 (tipo -> DATE .)
    DEFAULT         reduce using rule 222 (tipo -> DATE .)


state 181

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 266


state 182

    (181) parametros -> parametros COMA . parametro
    (183) parametro -> . ID tipo
    (184) parametro -> . empty
    (254) empty -> .

    ID              shift and go to state 97
    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)

    parametro                      shift and go to state 267
    empty                          shift and go to state 100

state 183

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> . parametros COMA parametro
    (182) parametros -> . parametro
    (183) parametro -> . ID tipo
    (184) parametro -> . empty
    (254) empty -> .

    ID              shift and go to state 97
    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)

    parametros                     shift and go to state 268
    parametro                      shift and go to state 99
    empty                          shift and go to state 100

state 184

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> . parametros COMA parametro
    (182) parametros -> . parametro
    (183) parametro -> . ID tipo
    (184) parametro -> . empty
    (254) empty -> .

    ID              shift and go to state 97
    PARC            reduce using rule 254 (empty -> .)
    COMA            reduce using rule 254 (empty -> .)

    parametros                     shift and go to state 269
    parametro                      shift and go to state 99
    empty                          shift and go to state 100

state 185

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    error           reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CALL            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 186

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 270


state 187

    (37) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 271


state 188

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 272


state 189

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 273


state 190

    (48) createDB_unParam -> OWNER IGUAL string_type .
    (43) createDB_dosParam -> OWNER IGUAL string_type . MODE ENTERO
    (46) createDB_dosParam -> OWNER IGUAL string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 48 (createDB_unParam -> OWNER IGUAL string_type .)
    MODE            shift and go to state 274


state 191

    (40) createDB_dosParam -> OWNER string_type MODE . ENTERO
    (42) createDB_dosParam -> OWNER string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 275
    IGUAL           shift and go to state 276


state 192

    (49) createDB_unParam -> MODE IGUAL ENTERO .
    (45) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (47) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 49 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 277


state 193

    (41) createDB_dosParam -> MODE ENTERO OWNER . string_type
    (44) createDB_dosParam -> MODE ENTERO OWNER . IGUAL string_type
    (166) string_type -> . CADENA
    (167) string_type -> . ID

    IGUAL           shift and go to state 279
    CADENA          shift and go to state 110
    ID              shift and go to state 111

    string_type                    shift and go to state 278

state 194

    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (48) createDB_unParam -> . OWNER IGUAL string_type
    (49) createDB_unParam -> . MODE IGUAL ENTERO
    (50) createDB_unParam -> . OWNER string_type
    (51) createDB_unParam -> . MODE ENTERO
    (40) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (42) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (44) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (46) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 280
    OWNER           shift and go to state 64
    MODE            shift and go to state 65

    createDB_unParam               shift and go to state 281
    createDB_dosParam              shift and go to state 282

state 195

    (61) cuerpo_createTable -> ID TIPO_DATO_DEF .
    (62) cuerpo_createTable -> ID TIPO_DATO_DEF . createTable_options
    (72) createTable_options -> . createTable_options cT_options
    (73) createTable_options -> . cT_options
    (74) cT_options -> . N_null
    (75) cT_options -> . C_unique
    (76) cT_options -> . llave
    (77) cT_options -> . O_DEFAULT
    (78) cT_options -> . C_check
    (79) N_null -> . NOT NULL
    (80) N_null -> . NULL
    (81) C_unique -> . UNIQUE
    (82) C_unique -> . CONSTRAINT ID UNIQUE
    (83) llave -> . PRIMARY KEY
    (84) llave -> . FOREIGN KEY
    (85) O_DEFAULT -> . DEFAULT expresion_dato_default
    (86) C_check -> . CONSTRAINT ID CHECK PARA expresion_logica PARC
    (87) C_check -> . CHECK PARA expresion_logica PARC

    PARC            reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    COMA            reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    NOT             shift and go to state 290
    NULL            shift and go to state 291
    UNIQUE          shift and go to state 292
    CONSTRAINT      shift and go to state 293
    PRIMARY         shift and go to state 294
    FOREIGN         shift and go to state 295
    DEFAULT         shift and go to state 296
    CHECK           shift and go to state 297

    createTable_options            shift and go to state 283
    cT_options                     shift and go to state 284
    N_null                         shift and go to state 285
    C_unique                       shift and go to state 286
    llave                          shift and go to state 287
    O_DEFAULT                      shift and go to state 288
    C_check                        shift and go to state 289

state 196

    (91) TIPO_DATO_DEF -> TEXT .

    NOT             reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    NULL            reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    UNIQUE          reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    CONSTRAINT      reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    PRIMARY         reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    FOREIGN         reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    DEFAULT         reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    CHECK           reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    PARC            reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)
    COMA            reduce using rule 91 (TIPO_DATO_DEF -> TEXT .)


state 197

    (92) TIPO_DATO_DEF -> FLOAT .

    NOT             reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    NULL            reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    UNIQUE          reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    CONSTRAINT      reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    PRIMARY         reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    FOREIGN         reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    DEFAULT         reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    CHECK           reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    PARC            reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)
    COMA            reduce using rule 92 (TIPO_DATO_DEF -> FLOAT .)


state 198

    (93) TIPO_DATO_DEF -> INTEGER .

    NOT             reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    NULL            reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    UNIQUE          reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    CONSTRAINT      reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    PRIMARY         reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    FOREIGN         reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    DEFAULT         reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    CHECK           reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    PARC            reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)
    COMA            reduce using rule 93 (TIPO_DATO_DEF -> INTEGER .)


state 199

    (94) TIPO_DATO_DEF -> BOOLEAN .

    NOT             reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    NULL            reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    UNIQUE          reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    CONSTRAINT      reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    PRIMARY         reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    FOREIGN         reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    DEFAULT         reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    CHECK           reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    PARC            reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)
    COMA            reduce using rule 94 (TIPO_DATO_DEF -> BOOLEAN .)


state 200

    (95) TIPO_DATO_DEF -> SMALLINT .

    NOT             reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    NULL            reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    UNIQUE          reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    CONSTRAINT      reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    PRIMARY         reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    FOREIGN         reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    DEFAULT         reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    CHECK           reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    PARC            reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)
    COMA            reduce using rule 95 (TIPO_DATO_DEF -> SMALLINT .)


state 201

    (96) TIPO_DATO_DEF -> MONEY .

    NOT             reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    NULL            reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    UNIQUE          reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    CONSTRAINT      reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    PRIMARY         reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    FOREIGN         reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    DEFAULT         reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    CHECK           reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    PARC            reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)
    COMA            reduce using rule 96 (TIPO_DATO_DEF -> MONEY .)


state 202

    (97) TIPO_DATO_DEF -> DECIMAL . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 298


state 203

    (98) TIPO_DATO_DEF -> NUMERIC . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 299


state 204

    (99) TIPO_DATO_DEF -> BIGINT .

    NOT             reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    NULL            reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    UNIQUE          reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    CONSTRAINT      reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    PRIMARY         reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    FOREIGN         reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    DEFAULT         reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    CHECK           reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    PARC            reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)
    COMA            reduce using rule 99 (TIPO_DATO_DEF -> BIGINT .)


state 205

    (100) TIPO_DATO_DEF -> REAL .

    NOT             reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    NULL            reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    UNIQUE          reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    CONSTRAINT      reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    PRIMARY         reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    FOREIGN         reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    DEFAULT         reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    CHECK           reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    PARC            reduce using rule 100 (TIPO_DATO_DEF -> REAL .)
    COMA            reduce using rule 100 (TIPO_DATO_DEF -> REAL .)


state 206

    (101) TIPO_DATO_DEF -> DOUBLE . PRECISION

    PRECISION       shift and go to state 300


state 207

    (102) TIPO_DATO_DEF -> INTERVAL . extract_time TO extract_time
    (103) TIPO_DATO_DEF -> INTERVAL .
    (113) extract_time -> . YEAR
    (114) extract_time -> . DAY
    (115) extract_time -> . MONTH
    (116) extract_time -> . HOUR
    (117) extract_time -> . MINUTE
    (118) extract_time -> . SECOND

    NOT             reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    NULL            reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    UNIQUE          reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    CONSTRAINT      reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    PRIMARY         reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    FOREIGN         reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    DEFAULT         reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    CHECK           reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    PARC            reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    COMA            reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL .)
    YEAR            shift and go to state 302
    DAY             shift and go to state 303
    MONTH           shift and go to state 304
    HOUR            shift and go to state 305
    MINUTE          shift and go to state 306
    SECOND          shift and go to state 307

    extract_time                   shift and go to state 301

state 208

    (104) TIPO_DATO_DEF -> TIME .

    NOT             reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    NULL            reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    UNIQUE          reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    CONSTRAINT      reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    PRIMARY         reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    FOREIGN         reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    DEFAULT         reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    CHECK           reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    PARC            reduce using rule 104 (TIPO_DATO_DEF -> TIME .)
    COMA            reduce using rule 104 (TIPO_DATO_DEF -> TIME .)


state 209

    (105) TIPO_DATO_DEF -> TIMESTAMP .

    NOT             reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    NULL            reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    UNIQUE          reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    PRIMARY         reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    FOREIGN         reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    DEFAULT         reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    CHECK           reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    PARC            reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)
    COMA            reduce using rule 105 (TIPO_DATO_DEF -> TIMESTAMP .)


state 210

    (106) TIPO_DATO_DEF -> DATE .

    NOT             reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    NULL            reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    UNIQUE          reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    CONSTRAINT      reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    PRIMARY         reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    FOREIGN         reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    DEFAULT         reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    CHECK           reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    PARC            reduce using rule 106 (TIPO_DATO_DEF -> DATE .)
    COMA            reduce using rule 106 (TIPO_DATO_DEF -> DATE .)


state 211

    (107) TIPO_DATO_DEF -> CHARACTER . VARYING PARA ENTERO PARC
    (110) TIPO_DATO_DEF -> CHARACTER . PARA ENTERO PARC
    (112) TIPO_DATO_DEF -> CHARACTER . PARA PARC

    VARYING         shift and go to state 308
    PARA            shift and go to state 309


state 212

    (108) TIPO_DATO_DEF -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 310


state 213

    (109) TIPO_DATO_DEF -> CHAR . PARA ENTERO PARC
    (111) TIPO_DATO_DEF -> CHAR . PARA PARC

    PARA            shift and go to state 311


state 214

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . PTCOMA
    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . INHERITS PARA ID PARC PTCOMA

    PTCOMA          shift and go to state 312
    INHERITS        shift and go to state 313


state 215

    (59) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (61) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (62) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (63) cuerpo_createTable -> . PRIMARY KEY PARA campos_c PARC
    (64) cuerpo_createTable -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
    (65) cuerpo_createTable -> . UNIQUE PARA campos_c PARC
    (66) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 115
    PRIMARY         shift and go to state 118
    FOREIGN         shift and go to state 119
    UNIQUE          shift and go to state 120
    CONSTRAINT      shift and go to state 121

    cuerpo_createTable             shift and go to state 314

state 216

    (63) cuerpo_createTable -> PRIMARY KEY . PARA campos_c PARC

    PARA            shift and go to state 315


state 217

    (64) cuerpo_createTable -> FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC

    PARA            shift and go to state 316


state 218

    (65) cuerpo_createTable -> UNIQUE PARA . campos_c PARC
    (67) campos_c -> . campos_c COMA ID
    (68) campos_c -> . ID

    ID              shift and go to state 250

    campos_c                       shift and go to state 317

state 219

    (66) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (69) constraint_esp -> . CHECK PARA expresion_logica PARC
    (70) constraint_esp -> . UNIQUE PARA campos_c PARC
    (71) constraint_esp -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC

    CHECK           shift and go to state 319
    UNIQUE          shift and go to state 320
    FOREIGN         shift and go to state 321

    constraint_esp                 shift and go to state 318

state 220

    (244) arit -> PARA expresionPLSQL PARC .

    MAYOR           reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    MENOR           reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    MAYORIGUAL      reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    MENORIGUAL      reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    IGUALIGUAL      reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    NOTIGUAL        reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    POR             reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    DIVISION        reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    MAS             reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    MENOS           reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    MODULO          reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    ANDB            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    SHIFTI          reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    SHIFTD          reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    XORB            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    ORB             reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    AND             reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    OR              reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    PARC            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    COMA            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    PTCOMA          reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    THEN            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    WHEN            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)
    ELSE            reduce using rule 244 (arit -> PARA expresionPLSQL PARC .)


state 221

    (176) llamada_funcion -> SELECT ID PARA params PARC PTCOMA .

    error           reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    USE             reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ALTER           reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    $end            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    END             reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ID              reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    IF              reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 176 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)


state 222

    (178) params -> params COMA expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 178 (params -> params COMA expresionPLSQL .)
    COMA            reduce using rule 178 (params -> params COMA expresionPLSQL .)
    AND             shift and go to state 125
    OR              shift and go to state 126


state 223

    (224) log -> expresionPLSQL AND expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    AND             reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    OR              reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    PARC            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    COMA            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYOR           reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOR           reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYORIGUAL      reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MENORIGUAL      reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    IGUALIGUAL      reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    NOTIGUAL        reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    POR             reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    DIVISION        reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MAS             reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOS           reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    MODULO          reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    ANDB            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTI          reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTD          reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    XORB            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    ORB             reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    PTCOMA          reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    THEN            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    WHEN            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)
    ELSE            reduce using rule 224 (log -> expresionPLSQL AND expresionPLSQL .)

  ! AND             [ shift and go to state 125 ]
  ! OR              [ shift and go to state 126 ]


state 224

    (225) log -> expresionPLSQL OR expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    OR              reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    PARC            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    COMA            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYOR           reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOR           reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYORIGUAL      reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MENORIGUAL      reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    IGUALIGUAL      reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    NOTIGUAL        reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    POR             reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    DIVISION        reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MAS             reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOS           reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    MODULO          reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    ANDB            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTI          reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTD          reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    XORB            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    ORB             reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    PTCOMA          reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    THEN            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    WHEN            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    ELSE            reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .)
    AND             shift and go to state 125

  ! AND             [ reduce using rule 225 (log -> expresionPLSQL OR expresionPLSQL .) ]
  ! OR              [ shift and go to state 126 ]


state 225

    (227) rel -> arit MAYOR arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    AND             reduce using rule 227 (rel -> arit MAYOR arit .)
    OR              reduce using rule 227 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 227 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 227 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 227 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 227 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 227 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 227 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 227 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 227 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 227 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 227 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 227 (rel -> arit MAYOR arit .)
    PTCOMA          reduce using rule 227 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 227 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 227 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 227 (rel -> arit MAYOR arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! DIVISION        [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! MODULO          [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 227 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 226

    (228) rel -> arit MENOR arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    AND             reduce using rule 228 (rel -> arit MENOR arit .)
    OR              reduce using rule 228 (rel -> arit MENOR arit .)
    PARC            reduce using rule 228 (rel -> arit MENOR arit .)
    COMA            reduce using rule 228 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 228 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 228 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 228 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 228 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 228 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 228 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 228 (rel -> arit MENOR arit .)
    XORB            reduce using rule 228 (rel -> arit MENOR arit .)
    ORB             reduce using rule 228 (rel -> arit MENOR arit .)
    PTCOMA          reduce using rule 228 (rel -> arit MENOR arit .)
    THEN            reduce using rule 228 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 228 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 228 (rel -> arit MENOR arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! DIVISION        [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! MODULO          [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 228 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 227

    (229) rel -> arit MAYORIGUAL arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    AND             reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    OR              reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    PTCOMA          reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 229 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! MODULO          [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 229 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 228

    (230) rel -> arit MENORIGUAL arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    AND             reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    OR              reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    PTCOMA          reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 230 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! MODULO          [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 230 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 229

    (231) rel -> arit IGUALIGUAL arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    AND             reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    OR              reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    PTCOMA          reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 231 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! MODULO          [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 231 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 230

    (232) rel -> arit NOTIGUAL arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    AND             reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    OR              reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    PTCOMA          reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 232 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! MODULO          [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 232 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 231

    (234) arit -> arit POR arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 234 (arit -> arit POR arit .)
    MENOR           reduce using rule 234 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 234 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 234 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 234 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 234 (arit -> arit POR arit .)
    POR             reduce using rule 234 (arit -> arit POR arit .)
    DIVISION        reduce using rule 234 (arit -> arit POR arit .)
    MAS             reduce using rule 234 (arit -> arit POR arit .)
    MENOS           reduce using rule 234 (arit -> arit POR arit .)
    MODULO          reduce using rule 234 (arit -> arit POR arit .)
    ANDB            reduce using rule 234 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 234 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 234 (arit -> arit POR arit .)
    XORB            reduce using rule 234 (arit -> arit POR arit .)
    ORB             reduce using rule 234 (arit -> arit POR arit .)
    AND             reduce using rule 234 (arit -> arit POR arit .)
    OR              reduce using rule 234 (arit -> arit POR arit .)
    PARC            reduce using rule 234 (arit -> arit POR arit .)
    COMA            reduce using rule 234 (arit -> arit POR arit .)
    PTCOMA          reduce using rule 234 (arit -> arit POR arit .)
    THEN            reduce using rule 234 (arit -> arit POR arit .)
    WHEN            reduce using rule 234 (arit -> arit POR arit .)
    ELSE            reduce using rule 234 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 133 ]
  ! DIVISION        [ shift and go to state 134 ]
  ! MAS             [ shift and go to state 135 ]
  ! MENOS           [ shift and go to state 136 ]
  ! MODULO          [ shift and go to state 137 ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 232

    (235) arit -> arit DIVISION arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 235 (arit -> arit DIVISION arit .)
    MENOR           reduce using rule 235 (arit -> arit DIVISION arit .)
    MAYORIGUAL      reduce using rule 235 (arit -> arit DIVISION arit .)
    MENORIGUAL      reduce using rule 235 (arit -> arit DIVISION arit .)
    IGUALIGUAL      reduce using rule 235 (arit -> arit DIVISION arit .)
    NOTIGUAL        reduce using rule 235 (arit -> arit DIVISION arit .)
    POR             reduce using rule 235 (arit -> arit DIVISION arit .)
    DIVISION        reduce using rule 235 (arit -> arit DIVISION arit .)
    MAS             reduce using rule 235 (arit -> arit DIVISION arit .)
    MENOS           reduce using rule 235 (arit -> arit DIVISION arit .)
    MODULO          reduce using rule 235 (arit -> arit DIVISION arit .)
    ANDB            reduce using rule 235 (arit -> arit DIVISION arit .)
    SHIFTI          reduce using rule 235 (arit -> arit DIVISION arit .)
    SHIFTD          reduce using rule 235 (arit -> arit DIVISION arit .)
    XORB            reduce using rule 235 (arit -> arit DIVISION arit .)
    ORB             reduce using rule 235 (arit -> arit DIVISION arit .)
    AND             reduce using rule 235 (arit -> arit DIVISION arit .)
    OR              reduce using rule 235 (arit -> arit DIVISION arit .)
    PARC            reduce using rule 235 (arit -> arit DIVISION arit .)
    COMA            reduce using rule 235 (arit -> arit DIVISION arit .)
    PTCOMA          reduce using rule 235 (arit -> arit DIVISION arit .)
    THEN            reduce using rule 235 (arit -> arit DIVISION arit .)
    WHEN            reduce using rule 235 (arit -> arit DIVISION arit .)
    ELSE            reduce using rule 235 (arit -> arit DIVISION arit .)

  ! POR             [ shift and go to state 133 ]
  ! DIVISION        [ shift and go to state 134 ]
  ! MAS             [ shift and go to state 135 ]
  ! MENOS           [ shift and go to state 136 ]
  ! MODULO          [ shift and go to state 137 ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 233

    (236) arit -> arit MAS arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 236 (arit -> arit MAS arit .)
    MENOR           reduce using rule 236 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 236 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 236 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 236 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 236 (arit -> arit MAS arit .)
    MAS             reduce using rule 236 (arit -> arit MAS arit .)
    MENOS           reduce using rule 236 (arit -> arit MAS arit .)
    ANDB            reduce using rule 236 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 236 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 236 (arit -> arit MAS arit .)
    XORB            reduce using rule 236 (arit -> arit MAS arit .)
    ORB             reduce using rule 236 (arit -> arit MAS arit .)
    AND             reduce using rule 236 (arit -> arit MAS arit .)
    OR              reduce using rule 236 (arit -> arit MAS arit .)
    PARC            reduce using rule 236 (arit -> arit MAS arit .)
    COMA            reduce using rule 236 (arit -> arit MAS arit .)
    PTCOMA          reduce using rule 236 (arit -> arit MAS arit .)
    THEN            reduce using rule 236 (arit -> arit MAS arit .)
    WHEN            reduce using rule 236 (arit -> arit MAS arit .)
    ELSE            reduce using rule 236 (arit -> arit MAS arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MODULO          shift and go to state 137

  ! POR             [ reduce using rule 236 (arit -> arit MAS arit .) ]
  ! DIVISION        [ reduce using rule 236 (arit -> arit MAS arit .) ]
  ! MODULO          [ reduce using rule 236 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 135 ]
  ! MENOS           [ shift and go to state 136 ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 234

    (237) arit -> arit MENOS arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 237 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 237 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 237 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 237 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 237 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 237 (arit -> arit MENOS arit .)
    MAS             reduce using rule 237 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 237 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 237 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 237 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 237 (arit -> arit MENOS arit .)
    XORB            reduce using rule 237 (arit -> arit MENOS arit .)
    ORB             reduce using rule 237 (arit -> arit MENOS arit .)
    AND             reduce using rule 237 (arit -> arit MENOS arit .)
    OR              reduce using rule 237 (arit -> arit MENOS arit .)
    PARC            reduce using rule 237 (arit -> arit MENOS arit .)
    COMA            reduce using rule 237 (arit -> arit MENOS arit .)
    PTCOMA          reduce using rule 237 (arit -> arit MENOS arit .)
    THEN            reduce using rule 237 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 237 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 237 (arit -> arit MENOS arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MODULO          shift and go to state 137

  ! POR             [ reduce using rule 237 (arit -> arit MENOS arit .) ]
  ! DIVISION        [ reduce using rule 237 (arit -> arit MENOS arit .) ]
  ! MODULO          [ reduce using rule 237 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 135 ]
  ! MENOS           [ shift and go to state 136 ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 235

    (238) arit -> arit MODULO arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 238 (arit -> arit MODULO arit .)
    MENOR           reduce using rule 238 (arit -> arit MODULO arit .)
    MAYORIGUAL      reduce using rule 238 (arit -> arit MODULO arit .)
    MENORIGUAL      reduce using rule 238 (arit -> arit MODULO arit .)
    IGUALIGUAL      reduce using rule 238 (arit -> arit MODULO arit .)
    NOTIGUAL        reduce using rule 238 (arit -> arit MODULO arit .)
    POR             reduce using rule 238 (arit -> arit MODULO arit .)
    DIVISION        reduce using rule 238 (arit -> arit MODULO arit .)
    MAS             reduce using rule 238 (arit -> arit MODULO arit .)
    MENOS           reduce using rule 238 (arit -> arit MODULO arit .)
    MODULO          reduce using rule 238 (arit -> arit MODULO arit .)
    ANDB            reduce using rule 238 (arit -> arit MODULO arit .)
    SHIFTI          reduce using rule 238 (arit -> arit MODULO arit .)
    SHIFTD          reduce using rule 238 (arit -> arit MODULO arit .)
    XORB            reduce using rule 238 (arit -> arit MODULO arit .)
    ORB             reduce using rule 238 (arit -> arit MODULO arit .)
    AND             reduce using rule 238 (arit -> arit MODULO arit .)
    OR              reduce using rule 238 (arit -> arit MODULO arit .)
    PARC            reduce using rule 238 (arit -> arit MODULO arit .)
    COMA            reduce using rule 238 (arit -> arit MODULO arit .)
    PTCOMA          reduce using rule 238 (arit -> arit MODULO arit .)
    THEN            reduce using rule 238 (arit -> arit MODULO arit .)
    WHEN            reduce using rule 238 (arit -> arit MODULO arit .)
    ELSE            reduce using rule 238 (arit -> arit MODULO arit .)

  ! POR             [ shift and go to state 133 ]
  ! DIVISION        [ shift and go to state 134 ]
  ! MAS             [ shift and go to state 135 ]
  ! MENOS           [ shift and go to state 136 ]
  ! MODULO          [ shift and go to state 137 ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 236

    (239) arit -> arit ANDB arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 239 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 239 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 239 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 239 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 239 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 239 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 239 (arit -> arit ANDB arit .)
    XORB            reduce using rule 239 (arit -> arit ANDB arit .)
    ORB             reduce using rule 239 (arit -> arit ANDB arit .)
    AND             reduce using rule 239 (arit -> arit ANDB arit .)
    OR              reduce using rule 239 (arit -> arit ANDB arit .)
    PARC            reduce using rule 239 (arit -> arit ANDB arit .)
    COMA            reduce using rule 239 (arit -> arit ANDB arit .)
    PTCOMA          reduce using rule 239 (arit -> arit ANDB arit .)
    THEN            reduce using rule 239 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 239 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 239 (arit -> arit ANDB arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! DIVISION        [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! MODULO          [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 239 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 237

    (240) arit -> arit SHIFTI arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 240 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 240 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 240 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 240 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 240 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 240 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 240 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 240 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 240 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 240 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 240 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 240 (arit -> arit SHIFTI arit .)
    OR              reduce using rule 240 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 240 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 240 (arit -> arit SHIFTI arit .)
    PTCOMA          reduce using rule 240 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 240 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 240 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 240 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137

  ! POR             [ reduce using rule 240 (arit -> arit SHIFTI arit .) ]
  ! DIVISION        [ reduce using rule 240 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 240 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 240 (arit -> arit SHIFTI arit .) ]
  ! MODULO          [ reduce using rule 240 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 238

    (241) arit -> arit SHIFTD arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 241 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 241 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 241 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 241 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 241 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 241 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 241 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 241 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 241 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 241 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 241 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 241 (arit -> arit SHIFTD arit .)
    OR              reduce using rule 241 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 241 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 241 (arit -> arit SHIFTD arit .)
    PTCOMA          reduce using rule 241 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 241 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 241 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 241 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137

  ! POR             [ reduce using rule 241 (arit -> arit SHIFTD arit .) ]
  ! DIVISION        [ reduce using rule 241 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 241 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 241 (arit -> arit SHIFTD arit .) ]
  ! MODULO          [ reduce using rule 241 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 138 ]
  ! SHIFTI          [ shift and go to state 139 ]
  ! SHIFTD          [ shift and go to state 140 ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 239

    (242) arit -> arit XORB arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 242 (arit -> arit XORB arit .)
    MENOR           reduce using rule 242 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 242 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 242 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 242 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 242 (arit -> arit XORB arit .)
    XORB            reduce using rule 242 (arit -> arit XORB arit .)
    AND             reduce using rule 242 (arit -> arit XORB arit .)
    OR              reduce using rule 242 (arit -> arit XORB arit .)
    PARC            reduce using rule 242 (arit -> arit XORB arit .)
    COMA            reduce using rule 242 (arit -> arit XORB arit .)
    PTCOMA          reduce using rule 242 (arit -> arit XORB arit .)
    THEN            reduce using rule 242 (arit -> arit XORB arit .)
    WHEN            reduce using rule 242 (arit -> arit XORB arit .)
    ELSE            reduce using rule 242 (arit -> arit XORB arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    ANDB            shift and go to state 138
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140
    ORB             shift and go to state 142

  ! POR             [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! DIVISION        [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! MODULO          [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 242 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 141 ]


state 240

    (243) arit -> arit ORB arit .
    (234) arit -> arit . POR arit
    (235) arit -> arit . DIVISION arit
    (236) arit -> arit . MAS arit
    (237) arit -> arit . MENOS arit
    (238) arit -> arit . MODULO arit
    (239) arit -> arit . ANDB arit
    (240) arit -> arit . SHIFTI arit
    (241) arit -> arit . SHIFTD arit
    (242) arit -> arit . XORB arit
    (243) arit -> arit . ORB arit

    MAYOR           reduce using rule 243 (arit -> arit ORB arit .)
    MENOR           reduce using rule 243 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 243 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 243 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 243 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 243 (arit -> arit ORB arit .)
    XORB            reduce using rule 243 (arit -> arit ORB arit .)
    ORB             reduce using rule 243 (arit -> arit ORB arit .)
    AND             reduce using rule 243 (arit -> arit ORB arit .)
    OR              reduce using rule 243 (arit -> arit ORB arit .)
    PARC            reduce using rule 243 (arit -> arit ORB arit .)
    COMA            reduce using rule 243 (arit -> arit ORB arit .)
    PTCOMA          reduce using rule 243 (arit -> arit ORB arit .)
    THEN            reduce using rule 243 (arit -> arit ORB arit .)
    WHEN            reduce using rule 243 (arit -> arit ORB arit .)
    ELSE            reduce using rule 243 (arit -> arit ORB arit .)
    POR             shift and go to state 133
    DIVISION        shift and go to state 134
    MAS             shift and go to state 135
    MENOS           shift and go to state 136
    MODULO          shift and go to state 137
    ANDB            shift and go to state 138
    SHIFTI          shift and go to state 139
    SHIFTD          shift and go to state 140

  ! POR             [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! DIVISION        [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! MODULO          [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 243 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 141 ]
  ! ORB             [ shift and go to state 142 ]


state 241

    (177) llamada_funcion -> CALL ID PARA params PARC PTCOMA .

    error           reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    USE             reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ALTER           reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    $end            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    END             reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ID              reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    IF              reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 177 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)


state 242

    (52) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    error           reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CREATE          reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SELECT          reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CALL            reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 52 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 243

    (122) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 322


state 244

    (124) usuariosDB -> ID .

    PTCOMA          reduce using rule 124 (usuariosDB -> ID .)


state 245

    (123) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 323


state 246

    (125) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 125 (usuariosDB -> CURRENT_USER .)


state 247

    (126) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 126 (usuariosDB -> SESSION_USER .)


state 248

    (127) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 127 (usuariosDB -> CADENA .)


state 249

    (137) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID . SET NULL PTCOMA
    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID . SET NOT NULL PTCOMA
    (142) Table_alter -> ALTER COLUMN ID . TYPE TIPO_DATO

    SET             shift and go to state 324
    TYPE            shift and go to state 325


state 250

    (68) campos_c -> ID .

    PTCOMA          reduce using rule 68 (campos_c -> ID .)
    COMA            reduce using rule 68 (campos_c -> ID .)
    PARC            reduce using rule 68 (campos_c -> ID .)


state 251

    (128) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c . PTCOMA
    (67) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 326
    COMA            shift and go to state 327


state 252

    (129) alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c . PTCOMA
    (67) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 328
    COMA            shift and go to state 327


state 253

    (130) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID . TO ID PTCOMA

    TO              shift and go to state 329


state 254

    (145) tipos_datos_columnas -> ID . TIPO_DATO
    (146) TIPO_DATO -> . TEXT
    (147) TIPO_DATO -> . FLOAT
    (148) TIPO_DATO -> . INTEGER
    (149) TIPO_DATO -> . BOOLEAN
    (150) TIPO_DATO -> . SMALLINT
    (151) TIPO_DATO -> . MONEY
    (152) TIPO_DATO -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (153) TIPO_DATO -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (154) TIPO_DATO -> . BIGINT
    (155) TIPO_DATO -> . REAL
    (156) TIPO_DATO -> . DOUBLE PRECISION
    (157) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (158) TIPO_DATO -> . INTERVAL
    (159) TIPO_DATO -> . TIMESTAMP
    (160) TIPO_DATO -> . CHARACTER VARYING PARA ENTERO PARC
    (161) TIPO_DATO -> . VARCHAR PARA ENTERO PARC
    (162) TIPO_DATO -> . CHAR PARA ENTERO PARC
    (163) TIPO_DATO -> . CHARACTER PARA ENTERO PARC
    (164) TIPO_DATO -> . CHAR PARA PARC
    (165) TIPO_DATO -> . CHARACTER PARA PARC

    TEXT            shift and go to state 331
    FLOAT           shift and go to state 332
    INTEGER         shift and go to state 333
    BOOLEAN         shift and go to state 334
    SMALLINT        shift and go to state 335
    MONEY           shift and go to state 336
    DECIMAL         shift and go to state 337
    NUMERIC         shift and go to state 338
    BIGINT          shift and go to state 339
    REAL            shift and go to state 340
    DOUBLE          shift and go to state 341
    INTERVAL        shift and go to state 342
    TIMESTAMP       shift and go to state 343
    CHARACTER       shift and go to state 344
    VARCHAR         shift and go to state 345
    CHAR            shift and go to state 346

    TIPO_DATO                      shift and go to state 330

state 255

    (131) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column . PTCOMA
    (143) campos_add_Column -> campos_add_Column . COMA tipos_datos_columnas

    PTCOMA          shift and go to state 347
    COMA            shift and go to state 348


state 256

    (144) campos_add_Column -> tipos_datos_columnas .

    PTCOMA          reduce using rule 144 (campos_add_Column -> tipos_datos_columnas .)
    COMA            reduce using rule 144 (campos_add_Column -> tipos_datos_columnas .)


state 257

    (132) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA . expresion_logica PARC PTCOMA
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 351
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 258

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    PARA            shift and go to state 370


state 259

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . CHECK PARA expresion_logica PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PARA campos_c PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    CHECK           shift and go to state 371
    UNIQUE          shift and go to state 372
    FOREIGN         shift and go to state 373


state 260

    (140) alterTable_alter -> alterTable_alter COMA Table_alter .

    PTCOMA          reduce using rule 140 (alterTable_alter -> alterTable_alter COMA Table_alter .)
    COMA            reduce using rule 140 (alterTable_alter -> alterTable_alter COMA Table_alter .)


state 261

    (142) Table_alter -> ALTER . COLUMN ID TYPE TIPO_DATO

    COLUMN          shift and go to state 374


state 262

    (215) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 375


state 263

    (216) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 376


state 264

    (218) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 377


state 265

    (217) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 378


state 266

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (202) tipo -> . INTEGER
    (203) tipo -> . SMALLINT
    (204) tipo -> . BIGINT
    (205) tipo -> . DECIMAL
    (206) tipo -> . NUMERIC
    (207) tipo -> . REAL
    (208) tipo -> . CHAR
    (209) tipo -> . DOUBLE
    (210) tipo -> . PRECISION
    (211) tipo -> . MONEY
    (212) tipo -> . FLOAT
    (213) tipo -> . BOOLEAN
    (214) tipo -> . VOID
    (215) tipo -> . CHAR PARA ENTERO PARC
    (216) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (217) tipo -> . VARCHAR PARA ENTERO PARC
    (218) tipo -> . CHARACTER PARA ENTERO PARC
    (219) tipo -> . TEXT
    (220) tipo -> . TIME
    (221) tipo -> . TIMESTAMP
    (222) tipo -> . DATE

    INTEGER         shift and go to state 162
    SMALLINT        shift and go to state 163
    BIGINT          shift and go to state 164
    DECIMAL         shift and go to state 165
    NUMERIC         shift and go to state 166
    REAL            shift and go to state 167
    CHAR            shift and go to state 168
    DOUBLE          shift and go to state 169
    PRECISION       shift and go to state 170
    MONEY           shift and go to state 171
    FLOAT           shift and go to state 172
    BOOLEAN         shift and go to state 173
    VOID            shift and go to state 174
    CHARACTER       shift and go to state 175
    VARCHAR         shift and go to state 176
    TEXT            shift and go to state 177
    TIME            shift and go to state 178
    TIMESTAMP       shift and go to state 179
    DATE            shift and go to state 180

    tipo                           shift and go to state 379

state 267

    (181) parametros -> parametros COMA parametro .

    PARC            reduce using rule 181 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 181 (parametros -> parametros COMA parametro .)


state 268

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> parametros . COMA parametro

    PARC            shift and go to state 380
    COMA            shift and go to state 182


state 269

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (181) parametros -> parametros . COMA parametro

    PARC            shift and go to state 381
    COMA            shift and go to state 182


state 270

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 271

    (37) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 37 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 272

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 382


state 273

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (202) tipo -> . INTEGER
    (203) tipo -> . SMALLINT
    (204) tipo -> . BIGINT
    (205) tipo -> . DECIMAL
    (206) tipo -> . NUMERIC
    (207) tipo -> . REAL
    (208) tipo -> . CHAR
    (209) tipo -> . DOUBLE
    (210) tipo -> . PRECISION
    (211) tipo -> . MONEY
    (212) tipo -> . FLOAT
    (213) tipo -> . BOOLEAN
    (214) tipo -> . VOID
    (215) tipo -> . CHAR PARA ENTERO PARC
    (216) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (217) tipo -> . VARCHAR PARA ENTERO PARC
    (218) tipo -> . CHARACTER PARA ENTERO PARC
    (219) tipo -> . TEXT
    (220) tipo -> . TIME
    (221) tipo -> . TIMESTAMP
    (222) tipo -> . DATE

    INTEGER         shift and go to state 162
    SMALLINT        shift and go to state 163
    BIGINT          shift and go to state 164
    DECIMAL         shift and go to state 165
    NUMERIC         shift and go to state 166
    REAL            shift and go to state 167
    CHAR            shift and go to state 168
    DOUBLE          shift and go to state 169
    PRECISION       shift and go to state 170
    MONEY           shift and go to state 171
    FLOAT           shift and go to state 172
    BOOLEAN         shift and go to state 173
    VOID            shift and go to state 174
    CHARACTER       shift and go to state 175
    VARCHAR         shift and go to state 176
    TEXT            shift and go to state 177
    TIME            shift and go to state 178
    TIMESTAMP       shift and go to state 179
    DATE            shift and go to state 180

    tipo                           shift and go to state 383

state 274

    (43) createDB_dosParam -> OWNER IGUAL string_type MODE . ENTERO
    (46) createDB_dosParam -> OWNER IGUAL string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 385
    IGUAL           shift and go to state 384


state 275

    (40) createDB_dosParam -> OWNER string_type MODE ENTERO .

    PTCOMA          reduce using rule 40 (createDB_dosParam -> OWNER string_type MODE ENTERO .)


state 276

    (42) createDB_dosParam -> OWNER string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 386


state 277

    (45) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (47) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 388
    IGUAL           shift and go to state 387


state 278

    (41) createDB_dosParam -> MODE ENTERO OWNER string_type .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> MODE ENTERO OWNER string_type .)


state 279

    (44) createDB_dosParam -> MODE ENTERO OWNER IGUAL . string_type
    (166) string_type -> . CADENA
    (167) string_type -> . ID

    CADENA          shift and go to state 110
    ID              shift and go to state 111

    string_type                    shift and go to state 389

state 280

    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 281

    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 390


state 282

    (38) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 391


state 283

    (62) cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .
    (72) createTable_options -> createTable_options . cT_options
    (74) cT_options -> . N_null
    (75) cT_options -> . C_unique
    (76) cT_options -> . llave
    (77) cT_options -> . O_DEFAULT
    (78) cT_options -> . C_check
    (79) N_null -> . NOT NULL
    (80) N_null -> . NULL
    (81) C_unique -> . UNIQUE
    (82) C_unique -> . CONSTRAINT ID UNIQUE
    (83) llave -> . PRIMARY KEY
    (84) llave -> . FOREIGN KEY
    (85) O_DEFAULT -> . DEFAULT expresion_dato_default
    (86) C_check -> . CONSTRAINT ID CHECK PARA expresion_logica PARC
    (87) C_check -> . CHECK PARA expresion_logica PARC

    PARC            reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    COMA            reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    NOT             shift and go to state 290
    NULL            shift and go to state 291
    UNIQUE          shift and go to state 292
    CONSTRAINT      shift and go to state 293
    PRIMARY         shift and go to state 294
    FOREIGN         shift and go to state 295
    DEFAULT         shift and go to state 296
    CHECK           shift and go to state 297

    cT_options                     shift and go to state 392
    N_null                         shift and go to state 285
    C_unique                       shift and go to state 286
    llave                          shift and go to state 287
    O_DEFAULT                      shift and go to state 288
    C_check                        shift and go to state 289

state 284

    (73) createTable_options -> cT_options .

    NOT             reduce using rule 73 (createTable_options -> cT_options .)
    NULL            reduce using rule 73 (createTable_options -> cT_options .)
    UNIQUE          reduce using rule 73 (createTable_options -> cT_options .)
    CONSTRAINT      reduce using rule 73 (createTable_options -> cT_options .)
    PRIMARY         reduce using rule 73 (createTable_options -> cT_options .)
    FOREIGN         reduce using rule 73 (createTable_options -> cT_options .)
    DEFAULT         reduce using rule 73 (createTable_options -> cT_options .)
    CHECK           reduce using rule 73 (createTable_options -> cT_options .)
    PARC            reduce using rule 73 (createTable_options -> cT_options .)
    COMA            reduce using rule 73 (createTable_options -> cT_options .)


state 285

    (74) cT_options -> N_null .

    NOT             reduce using rule 74 (cT_options -> N_null .)
    NULL            reduce using rule 74 (cT_options -> N_null .)
    UNIQUE          reduce using rule 74 (cT_options -> N_null .)
    CONSTRAINT      reduce using rule 74 (cT_options -> N_null .)
    PRIMARY         reduce using rule 74 (cT_options -> N_null .)
    FOREIGN         reduce using rule 74 (cT_options -> N_null .)
    DEFAULT         reduce using rule 74 (cT_options -> N_null .)
    CHECK           reduce using rule 74 (cT_options -> N_null .)
    PARC            reduce using rule 74 (cT_options -> N_null .)
    COMA            reduce using rule 74 (cT_options -> N_null .)


state 286

    (75) cT_options -> C_unique .

    NOT             reduce using rule 75 (cT_options -> C_unique .)
    NULL            reduce using rule 75 (cT_options -> C_unique .)
    UNIQUE          reduce using rule 75 (cT_options -> C_unique .)
    CONSTRAINT      reduce using rule 75 (cT_options -> C_unique .)
    PRIMARY         reduce using rule 75 (cT_options -> C_unique .)
    FOREIGN         reduce using rule 75 (cT_options -> C_unique .)
    DEFAULT         reduce using rule 75 (cT_options -> C_unique .)
    CHECK           reduce using rule 75 (cT_options -> C_unique .)
    PARC            reduce using rule 75 (cT_options -> C_unique .)
    COMA            reduce using rule 75 (cT_options -> C_unique .)


state 287

    (76) cT_options -> llave .

    NOT             reduce using rule 76 (cT_options -> llave .)
    NULL            reduce using rule 76 (cT_options -> llave .)
    UNIQUE          reduce using rule 76 (cT_options -> llave .)
    CONSTRAINT      reduce using rule 76 (cT_options -> llave .)
    PRIMARY         reduce using rule 76 (cT_options -> llave .)
    FOREIGN         reduce using rule 76 (cT_options -> llave .)
    DEFAULT         reduce using rule 76 (cT_options -> llave .)
    CHECK           reduce using rule 76 (cT_options -> llave .)
    PARC            reduce using rule 76 (cT_options -> llave .)
    COMA            reduce using rule 76 (cT_options -> llave .)


state 288

    (77) cT_options -> O_DEFAULT .

    NOT             reduce using rule 77 (cT_options -> O_DEFAULT .)
    NULL            reduce using rule 77 (cT_options -> O_DEFAULT .)
    UNIQUE          reduce using rule 77 (cT_options -> O_DEFAULT .)
    CONSTRAINT      reduce using rule 77 (cT_options -> O_DEFAULT .)
    PRIMARY         reduce using rule 77 (cT_options -> O_DEFAULT .)
    FOREIGN         reduce using rule 77 (cT_options -> O_DEFAULT .)
    DEFAULT         reduce using rule 77 (cT_options -> O_DEFAULT .)
    CHECK           reduce using rule 77 (cT_options -> O_DEFAULT .)
    PARC            reduce using rule 77 (cT_options -> O_DEFAULT .)
    COMA            reduce using rule 77 (cT_options -> O_DEFAULT .)


state 289

    (78) cT_options -> C_check .

    NOT             reduce using rule 78 (cT_options -> C_check .)
    NULL            reduce using rule 78 (cT_options -> C_check .)
    UNIQUE          reduce using rule 78 (cT_options -> C_check .)
    CONSTRAINT      reduce using rule 78 (cT_options -> C_check .)
    PRIMARY         reduce using rule 78 (cT_options -> C_check .)
    FOREIGN         reduce using rule 78 (cT_options -> C_check .)
    DEFAULT         reduce using rule 78 (cT_options -> C_check .)
    CHECK           reduce using rule 78 (cT_options -> C_check .)
    PARC            reduce using rule 78 (cT_options -> C_check .)
    COMA            reduce using rule 78 (cT_options -> C_check .)


state 290

    (79) N_null -> NOT . NULL

    NULL            shift and go to state 393


state 291

    (80) N_null -> NULL .

    NOT             reduce using rule 80 (N_null -> NULL .)
    NULL            reduce using rule 80 (N_null -> NULL .)
    UNIQUE          reduce using rule 80 (N_null -> NULL .)
    CONSTRAINT      reduce using rule 80 (N_null -> NULL .)
    PRIMARY         reduce using rule 80 (N_null -> NULL .)
    FOREIGN         reduce using rule 80 (N_null -> NULL .)
    DEFAULT         reduce using rule 80 (N_null -> NULL .)
    CHECK           reduce using rule 80 (N_null -> NULL .)
    PARC            reduce using rule 80 (N_null -> NULL .)
    COMA            reduce using rule 80 (N_null -> NULL .)


state 292

    (81) C_unique -> UNIQUE .

    NOT             reduce using rule 81 (C_unique -> UNIQUE .)
    NULL            reduce using rule 81 (C_unique -> UNIQUE .)
    UNIQUE          reduce using rule 81 (C_unique -> UNIQUE .)
    CONSTRAINT      reduce using rule 81 (C_unique -> UNIQUE .)
    PRIMARY         reduce using rule 81 (C_unique -> UNIQUE .)
    FOREIGN         reduce using rule 81 (C_unique -> UNIQUE .)
    DEFAULT         reduce using rule 81 (C_unique -> UNIQUE .)
    CHECK           reduce using rule 81 (C_unique -> UNIQUE .)
    PARC            reduce using rule 81 (C_unique -> UNIQUE .)
    COMA            reduce using rule 81 (C_unique -> UNIQUE .)


state 293

    (82) C_unique -> CONSTRAINT . ID UNIQUE
    (86) C_check -> CONSTRAINT . ID CHECK PARA expresion_logica PARC

    ID              shift and go to state 394


state 294

    (83) llave -> PRIMARY . KEY

    KEY             shift and go to state 395


state 295

    (84) llave -> FOREIGN . KEY

    KEY             shift and go to state 396


state 296

    (85) O_DEFAULT -> DEFAULT . expresion_dato_default
    (88) expresion_dato_default -> . ENTERO
    (89) expresion_dato_default -> . FLOTANTE
    (90) expresion_dato_default -> . CADENA

    ENTERO          shift and go to state 398
    FLOTANTE        shift and go to state 399
    CADENA          shift and go to state 400

    expresion_dato_default         shift and go to state 397

state 297

    (87) C_check -> CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 401


state 298

    (97) TIPO_DATO_DEF -> DECIMAL PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 402


state 299

    (98) TIPO_DATO_DEF -> NUMERIC PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 403


state 300

    (101) TIPO_DATO_DEF -> DOUBLE PRECISION .

    NOT             reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    NULL            reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CHECK           reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PARC            reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    COMA            reduce using rule 101 (TIPO_DATO_DEF -> DOUBLE PRECISION .)


state 301

    (102) TIPO_DATO_DEF -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 404


state 302

    (113) extract_time -> YEAR .

    TO              reduce using rule 113 (extract_time -> YEAR .)
    NOT             reduce using rule 113 (extract_time -> YEAR .)
    NULL            reduce using rule 113 (extract_time -> YEAR .)
    UNIQUE          reduce using rule 113 (extract_time -> YEAR .)
    CONSTRAINT      reduce using rule 113 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 113 (extract_time -> YEAR .)
    FOREIGN         reduce using rule 113 (extract_time -> YEAR .)
    DEFAULT         reduce using rule 113 (extract_time -> YEAR .)
    CHECK           reduce using rule 113 (extract_time -> YEAR .)
    PARC            reduce using rule 113 (extract_time -> YEAR .)
    COMA            reduce using rule 113 (extract_time -> YEAR .)
    PTCOMA          reduce using rule 113 (extract_time -> YEAR .)


state 303

    (114) extract_time -> DAY .

    TO              reduce using rule 114 (extract_time -> DAY .)
    NOT             reduce using rule 114 (extract_time -> DAY .)
    NULL            reduce using rule 114 (extract_time -> DAY .)
    UNIQUE          reduce using rule 114 (extract_time -> DAY .)
    CONSTRAINT      reduce using rule 114 (extract_time -> DAY .)
    PRIMARY         reduce using rule 114 (extract_time -> DAY .)
    FOREIGN         reduce using rule 114 (extract_time -> DAY .)
    DEFAULT         reduce using rule 114 (extract_time -> DAY .)
    CHECK           reduce using rule 114 (extract_time -> DAY .)
    PARC            reduce using rule 114 (extract_time -> DAY .)
    COMA            reduce using rule 114 (extract_time -> DAY .)
    PTCOMA          reduce using rule 114 (extract_time -> DAY .)


state 304

    (115) extract_time -> MONTH .

    TO              reduce using rule 115 (extract_time -> MONTH .)
    NOT             reduce using rule 115 (extract_time -> MONTH .)
    NULL            reduce using rule 115 (extract_time -> MONTH .)
    UNIQUE          reduce using rule 115 (extract_time -> MONTH .)
    CONSTRAINT      reduce using rule 115 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 115 (extract_time -> MONTH .)
    FOREIGN         reduce using rule 115 (extract_time -> MONTH .)
    DEFAULT         reduce using rule 115 (extract_time -> MONTH .)
    CHECK           reduce using rule 115 (extract_time -> MONTH .)
    PARC            reduce using rule 115 (extract_time -> MONTH .)
    COMA            reduce using rule 115 (extract_time -> MONTH .)
    PTCOMA          reduce using rule 115 (extract_time -> MONTH .)


state 305

    (116) extract_time -> HOUR .

    TO              reduce using rule 116 (extract_time -> HOUR .)
    NOT             reduce using rule 116 (extract_time -> HOUR .)
    NULL            reduce using rule 116 (extract_time -> HOUR .)
    UNIQUE          reduce using rule 116 (extract_time -> HOUR .)
    CONSTRAINT      reduce using rule 116 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 116 (extract_time -> HOUR .)
    FOREIGN         reduce using rule 116 (extract_time -> HOUR .)
    DEFAULT         reduce using rule 116 (extract_time -> HOUR .)
    CHECK           reduce using rule 116 (extract_time -> HOUR .)
    PARC            reduce using rule 116 (extract_time -> HOUR .)
    COMA            reduce using rule 116 (extract_time -> HOUR .)
    PTCOMA          reduce using rule 116 (extract_time -> HOUR .)


state 306

    (117) extract_time -> MINUTE .

    TO              reduce using rule 117 (extract_time -> MINUTE .)
    NOT             reduce using rule 117 (extract_time -> MINUTE .)
    NULL            reduce using rule 117 (extract_time -> MINUTE .)
    UNIQUE          reduce using rule 117 (extract_time -> MINUTE .)
    CONSTRAINT      reduce using rule 117 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 117 (extract_time -> MINUTE .)
    FOREIGN         reduce using rule 117 (extract_time -> MINUTE .)
    DEFAULT         reduce using rule 117 (extract_time -> MINUTE .)
    CHECK           reduce using rule 117 (extract_time -> MINUTE .)
    PARC            reduce using rule 117 (extract_time -> MINUTE .)
    COMA            reduce using rule 117 (extract_time -> MINUTE .)
    PTCOMA          reduce using rule 117 (extract_time -> MINUTE .)


state 307

    (118) extract_time -> SECOND .

    TO              reduce using rule 118 (extract_time -> SECOND .)
    NOT             reduce using rule 118 (extract_time -> SECOND .)
    NULL            reduce using rule 118 (extract_time -> SECOND .)
    UNIQUE          reduce using rule 118 (extract_time -> SECOND .)
    CONSTRAINT      reduce using rule 118 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 118 (extract_time -> SECOND .)
    FOREIGN         reduce using rule 118 (extract_time -> SECOND .)
    DEFAULT         reduce using rule 118 (extract_time -> SECOND .)
    CHECK           reduce using rule 118 (extract_time -> SECOND .)
    PARC            reduce using rule 118 (extract_time -> SECOND .)
    COMA            reduce using rule 118 (extract_time -> SECOND .)
    PTCOMA          reduce using rule 118 (extract_time -> SECOND .)


state 308

    (107) TIPO_DATO_DEF -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 405


state 309

    (110) TIPO_DATO_DEF -> CHARACTER PARA . ENTERO PARC
    (112) TIPO_DATO_DEF -> CHARACTER PARA . PARC

    ENTERO          shift and go to state 406
    PARC            shift and go to state 407


state 310

    (108) TIPO_DATO_DEF -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 408


state 311

    (109) TIPO_DATO_DEF -> CHAR PARA . ENTERO PARC
    (111) TIPO_DATO_DEF -> CHAR PARA . PARC

    ENTERO          shift and go to state 409
    PARC            shift and go to state 410


state 312

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .

    error           reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CREATE          reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SELECT          reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CALL            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SHOW            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    USE             reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    DROP            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    ALTER           reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    $end            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)


state 313

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS . PARA ID PARC PTCOMA

    PARA            shift and go to state 411


state 314

    (59) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PARC            reduce using rule 59 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 59 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 315

    (63) cuerpo_createTable -> PRIMARY KEY PARA . campos_c PARC
    (67) campos_c -> . campos_c COMA ID
    (68) campos_c -> . ID

    ID              shift and go to state 250

    campos_c                       shift and go to state 412

state 316

    (64) cuerpo_createTable -> FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC

    ID              shift and go to state 413


state 317

    (65) cuerpo_createTable -> UNIQUE PARA campos_c . PARC
    (67) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 414
    COMA            shift and go to state 327


state 318

    (66) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PARC            reduce using rule 66 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 66 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 319

    (69) constraint_esp -> CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 415


state 320

    (70) constraint_esp -> UNIQUE . PARA campos_c PARC

    PARA            shift and go to state 416


state 321

    (71) constraint_esp -> FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC

    KEY             shift and go to state 417


state 322

    (122) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    error           reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CREATE          reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SELECT          reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CALL            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 323

    (123) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    error           reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CREATE          reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SELECT          reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CALL            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 324

    (137) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET . NULL PTCOMA
    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET . NOT NULL PTCOMA

    NULL            shift and go to state 418
    NOT             shift and go to state 419


state 325

    (142) Table_alter -> ALTER COLUMN ID TYPE . TIPO_DATO
    (146) TIPO_DATO -> . TEXT
    (147) TIPO_DATO -> . FLOAT
    (148) TIPO_DATO -> . INTEGER
    (149) TIPO_DATO -> . BOOLEAN
    (150) TIPO_DATO -> . SMALLINT
    (151) TIPO_DATO -> . MONEY
    (152) TIPO_DATO -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (153) TIPO_DATO -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (154) TIPO_DATO -> . BIGINT
    (155) TIPO_DATO -> . REAL
    (156) TIPO_DATO -> . DOUBLE PRECISION
    (157) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (158) TIPO_DATO -> . INTERVAL
    (159) TIPO_DATO -> . TIMESTAMP
    (160) TIPO_DATO -> . CHARACTER VARYING PARA ENTERO PARC
    (161) TIPO_DATO -> . VARCHAR PARA ENTERO PARC
    (162) TIPO_DATO -> . CHAR PARA ENTERO PARC
    (163) TIPO_DATO -> . CHARACTER PARA ENTERO PARC
    (164) TIPO_DATO -> . CHAR PARA PARC
    (165) TIPO_DATO -> . CHARACTER PARA PARC

    TEXT            shift and go to state 331
    FLOAT           shift and go to state 332
    INTEGER         shift and go to state 333
    BOOLEAN         shift and go to state 334
    SMALLINT        shift and go to state 335
    MONEY           shift and go to state 336
    DECIMAL         shift and go to state 337
    NUMERIC         shift and go to state 338
    BIGINT          shift and go to state 339
    REAL            shift and go to state 340
    DOUBLE          shift and go to state 341
    INTERVAL        shift and go to state 342
    TIMESTAMP       shift and go to state 343
    CHARACTER       shift and go to state 344
    VARCHAR         shift and go to state 345
    CHAR            shift and go to state 346

    TIPO_DATO                      shift and go to state 420

state 326

    (128) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .

    error           reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    CREATE          reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    SELECT          reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    CALL            reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    SHOW            reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    USE             reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    DROP            reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    ALTER           reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    $end            reduce using rule 128 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)


state 327

    (67) campos_c -> campos_c COMA . ID

    ID              shift and go to state 421


state 328

    (129) alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .

    error           reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    CREATE          reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    SELECT          reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    CALL            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    SHOW            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    USE             reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    DROP            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    ALTER           reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    $end            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)


state 329

    (130) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO . ID PTCOMA

    ID              shift and go to state 422


state 330

    (145) tipos_datos_columnas -> ID TIPO_DATO .

    PTCOMA          reduce using rule 145 (tipos_datos_columnas -> ID TIPO_DATO .)
    COMA            reduce using rule 145 (tipos_datos_columnas -> ID TIPO_DATO .)


state 331

    (146) TIPO_DATO -> TEXT .

    PTCOMA          reduce using rule 146 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 146 (TIPO_DATO -> TEXT .)


state 332

    (147) TIPO_DATO -> FLOAT .

    PTCOMA          reduce using rule 147 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 147 (TIPO_DATO -> FLOAT .)


state 333

    (148) TIPO_DATO -> INTEGER .

    PTCOMA          reduce using rule 148 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 148 (TIPO_DATO -> INTEGER .)


state 334

    (149) TIPO_DATO -> BOOLEAN .

    PTCOMA          reduce using rule 149 (TIPO_DATO -> BOOLEAN .)
    COMA            reduce using rule 149 (TIPO_DATO -> BOOLEAN .)


state 335

    (150) TIPO_DATO -> SMALLINT .

    PTCOMA          reduce using rule 150 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 150 (TIPO_DATO -> SMALLINT .)


state 336

    (151) TIPO_DATO -> MONEY .

    PTCOMA          reduce using rule 151 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 151 (TIPO_DATO -> MONEY .)


state 337

    (152) TIPO_DATO -> DECIMAL . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 423


state 338

    (153) TIPO_DATO -> NUMERIC . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 424


state 339

    (154) TIPO_DATO -> BIGINT .

    PTCOMA          reduce using rule 154 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 154 (TIPO_DATO -> BIGINT .)


state 340

    (155) TIPO_DATO -> REAL .

    PTCOMA          reduce using rule 155 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 155 (TIPO_DATO -> REAL .)


state 341

    (156) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 425


state 342

    (157) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (158) TIPO_DATO -> INTERVAL .
    (113) extract_time -> . YEAR
    (114) extract_time -> . DAY
    (115) extract_time -> . MONTH
    (116) extract_time -> . HOUR
    (117) extract_time -> . MINUTE
    (118) extract_time -> . SECOND

    PTCOMA          reduce using rule 158 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 158 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 302
    DAY             shift and go to state 303
    MONTH           shift and go to state 304
    HOUR            shift and go to state 305
    MINUTE          shift and go to state 306
    SECOND          shift and go to state 307

    extract_time                   shift and go to state 426

state 343

    (159) TIPO_DATO -> TIMESTAMP .

    PTCOMA          reduce using rule 159 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 159 (TIPO_DATO -> TIMESTAMP .)


state 344

    (160) TIPO_DATO -> CHARACTER . VARYING PARA ENTERO PARC
    (163) TIPO_DATO -> CHARACTER . PARA ENTERO PARC
    (165) TIPO_DATO -> CHARACTER . PARA PARC

    VARYING         shift and go to state 427
    PARA            shift and go to state 428


state 345

    (161) TIPO_DATO -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 429


state 346

    (162) TIPO_DATO -> CHAR . PARA ENTERO PARC
    (164) TIPO_DATO -> CHAR . PARA PARC

    PARA            shift and go to state 430


state 347

    (131) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .

    error           reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    CREATE          reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    SELECT          reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    CALL            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    SHOW            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    USE             reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    DROP            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    ALTER           reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    $end            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)


state 348

    (143) campos_add_Column -> campos_add_Column COMA . tipos_datos_columnas
    (145) tipos_datos_columnas -> . ID TIPO_DATO

    ID              shift and go to state 254

    tipos_datos_columnas           shift and go to state 431

state 349

    (290) expresion_dato -> ID . PUNTO ID
    (167) string_type -> ID .

    PUNTO           shift and go to state 432
    MAYOR           reduce using rule 167 (string_type -> ID .)
    MENOR           reduce using rule 167 (string_type -> ID .)
    MAYORIGUAL      reduce using rule 167 (string_type -> ID .)
    MENORIGUAL      reduce using rule 167 (string_type -> ID .)
    IGUALIGUAL      reduce using rule 167 (string_type -> ID .)
    IGUAL           reduce using rule 167 (string_type -> ID .)
    NOIG            reduce using rule 167 (string_type -> ID .)
    NOTIGUAL        reduce using rule 167 (string_type -> ID .)
    MAS             reduce using rule 167 (string_type -> ID .)
    MENOS           reduce using rule 167 (string_type -> ID .)
    POR             reduce using rule 167 (string_type -> ID .)
    DIV             reduce using rule 167 (string_type -> ID .)
    MODULO          reduce using rule 167 (string_type -> ID .)
    SHIFTD          reduce using rule 167 (string_type -> ID .)
    SHIFTI          reduce using rule 167 (string_type -> ID .)
    HASHTAG         reduce using rule 167 (string_type -> ID .)
    ANDB            reduce using rule 167 (string_type -> ID .)
    D_OR            reduce using rule 167 (string_type -> ID .)
    AND             reduce using rule 167 (string_type -> ID .)
    OR              reduce using rule 167 (string_type -> ID .)
    PARC            reduce using rule 167 (string_type -> ID .)


state 350

    (269) expresion -> PARA . expresion_logica PARC
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 433
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 351

    (132) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica . PARC PTCOMA

    PARC            shift and go to state 434


state 352

    (281) expresion_logica -> expresion_relacional . AND expresion_logica
    (282) expresion_logica -> expresion_relacional . OR expresion_logica
    (284) expresion_logica -> expresion_relacional .

    AND             shift and go to state 435
    OR              shift and go to state 436
    PARC            reduce using rule 284 (expresion_logica -> expresion_relacional .)


state 353

    (283) expresion_logica -> NOT . expresion_logica
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 437
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 354

    (272) expresion_relacional -> expresion . MAYOR expresion
    (273) expresion_relacional -> expresion . MENOR expresion
    (274) expresion_relacional -> expresion . MAYORIGUAL expresion
    (275) expresion_relacional -> expresion . MENORIGUAL expresion
    (276) expresion_relacional -> expresion . IGUALIGUAL expresion
    (277) expresion_relacional -> expresion . IGUAL expresion
    (278) expresion_relacional -> expresion . NOIG expresion
    (279) expresion_relacional -> expresion . NOTIGUAL expresion
    (280) expresion_relacional -> expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           shift and go to state 438
    MENOR           shift and go to state 439
    MAYORIGUAL      shift and go to state 440
    MENORIGUAL      shift and go to state 441
    IGUALIGUAL      shift and go to state 442
    IGUAL           shift and go to state 443
    NOIG            shift and go to state 444
    NOTIGUAL        shift and go to state 445
    AND             reduce using rule 280 (expresion_relacional -> expresion .)
    OR              reduce using rule 280 (expresion_relacional -> expresion .)
    PARC            reduce using rule 280 (expresion_relacional -> expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 355

    (289) expresion_dato -> MENOS . ENTERO

    ENTERO          shift and go to state 456


state 356

    (268) expresion -> D_OR . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 457
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 357

    (266) expresion -> NOTB . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 458
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 358

    (267) expresion -> ORB . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 459
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 359

    (270) expresion -> TRUE .

    MAYOR           reduce using rule 270 (expresion -> TRUE .)
    MENOR           reduce using rule 270 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 270 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 270 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 270 (expresion -> TRUE .)
    IGUAL           reduce using rule 270 (expresion -> TRUE .)
    NOIG            reduce using rule 270 (expresion -> TRUE .)
    NOTIGUAL        reduce using rule 270 (expresion -> TRUE .)
    MAS             reduce using rule 270 (expresion -> TRUE .)
    MENOS           reduce using rule 270 (expresion -> TRUE .)
    POR             reduce using rule 270 (expresion -> TRUE .)
    DIV             reduce using rule 270 (expresion -> TRUE .)
    MODULO          reduce using rule 270 (expresion -> TRUE .)
    SHIFTD          reduce using rule 270 (expresion -> TRUE .)
    SHIFTI          reduce using rule 270 (expresion -> TRUE .)
    HASHTAG         reduce using rule 270 (expresion -> TRUE .)
    ANDB            reduce using rule 270 (expresion -> TRUE .)
    D_OR            reduce using rule 270 (expresion -> TRUE .)
    AND             reduce using rule 270 (expresion -> TRUE .)
    OR              reduce using rule 270 (expresion -> TRUE .)
    PARC            reduce using rule 270 (expresion -> TRUE .)


state 360

    (271) expresion -> FALSE .

    MAYOR           reduce using rule 271 (expresion -> FALSE .)
    MENOR           reduce using rule 271 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 271 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 271 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 271 (expresion -> FALSE .)
    IGUAL           reduce using rule 271 (expresion -> FALSE .)
    NOIG            reduce using rule 271 (expresion -> FALSE .)
    NOTIGUAL        reduce using rule 271 (expresion -> FALSE .)
    MAS             reduce using rule 271 (expresion -> FALSE .)
    MENOS           reduce using rule 271 (expresion -> FALSE .)
    POR             reduce using rule 271 (expresion -> FALSE .)
    DIV             reduce using rule 271 (expresion -> FALSE .)
    MODULO          reduce using rule 271 (expresion -> FALSE .)
    SHIFTD          reduce using rule 271 (expresion -> FALSE .)
    SHIFTI          reduce using rule 271 (expresion -> FALSE .)
    HASHTAG         reduce using rule 271 (expresion -> FALSE .)
    ANDB            reduce using rule 271 (expresion -> FALSE .)
    D_OR            reduce using rule 271 (expresion -> FALSE .)
    AND             reduce using rule 271 (expresion -> FALSE .)
    OR              reduce using rule 271 (expresion -> FALSE .)
    PARC            reduce using rule 271 (expresion -> FALSE .)


state 361

    (285) expresion -> expresion_dato .

    MAYOR           reduce using rule 285 (expresion -> expresion_dato .)
    MENOR           reduce using rule 285 (expresion -> expresion_dato .)
    MAYORIGUAL      reduce using rule 285 (expresion -> expresion_dato .)
    MENORIGUAL      reduce using rule 285 (expresion -> expresion_dato .)
    IGUALIGUAL      reduce using rule 285 (expresion -> expresion_dato .)
    IGUAL           reduce using rule 285 (expresion -> expresion_dato .)
    NOIG            reduce using rule 285 (expresion -> expresion_dato .)
    NOTIGUAL        reduce using rule 285 (expresion -> expresion_dato .)
    MAS             reduce using rule 285 (expresion -> expresion_dato .)
    MENOS           reduce using rule 285 (expresion -> expresion_dato .)
    POR             reduce using rule 285 (expresion -> expresion_dato .)
    DIV             reduce using rule 285 (expresion -> expresion_dato .)
    MODULO          reduce using rule 285 (expresion -> expresion_dato .)
    SHIFTD          reduce using rule 285 (expresion -> expresion_dato .)
    SHIFTI          reduce using rule 285 (expresion -> expresion_dato .)
    HASHTAG         reduce using rule 285 (expresion -> expresion_dato .)
    ANDB            reduce using rule 285 (expresion -> expresion_dato .)
    D_OR            reduce using rule 285 (expresion -> expresion_dato .)
    AND             reduce using rule 285 (expresion -> expresion_dato .)
    OR              reduce using rule 285 (expresion -> expresion_dato .)
    PARC            reduce using rule 285 (expresion -> expresion_dato .)


state 362

    (286) expresion -> sum_insrt .

    MAYOR           reduce using rule 286 (expresion -> sum_insrt .)
    MENOR           reduce using rule 286 (expresion -> sum_insrt .)
    MAYORIGUAL      reduce using rule 286 (expresion -> sum_insrt .)
    MENORIGUAL      reduce using rule 286 (expresion -> sum_insrt .)
    IGUALIGUAL      reduce using rule 286 (expresion -> sum_insrt .)
    IGUAL           reduce using rule 286 (expresion -> sum_insrt .)
    NOIG            reduce using rule 286 (expresion -> sum_insrt .)
    NOTIGUAL        reduce using rule 286 (expresion -> sum_insrt .)
    MAS             reduce using rule 286 (expresion -> sum_insrt .)
    MENOS           reduce using rule 286 (expresion -> sum_insrt .)
    POR             reduce using rule 286 (expresion -> sum_insrt .)
    DIV             reduce using rule 286 (expresion -> sum_insrt .)
    MODULO          reduce using rule 286 (expresion -> sum_insrt .)
    SHIFTD          reduce using rule 286 (expresion -> sum_insrt .)
    SHIFTI          reduce using rule 286 (expresion -> sum_insrt .)
    HASHTAG         reduce using rule 286 (expresion -> sum_insrt .)
    ANDB            reduce using rule 286 (expresion -> sum_insrt .)
    D_OR            reduce using rule 286 (expresion -> sum_insrt .)
    AND             reduce using rule 286 (expresion -> sum_insrt .)
    OR              reduce using rule 286 (expresion -> sum_insrt .)
    PARC            reduce using rule 286 (expresion -> sum_insrt .)


state 363

    (287) expresion -> count_insrt .

    MAYOR           reduce using rule 287 (expresion -> count_insrt .)
    MENOR           reduce using rule 287 (expresion -> count_insrt .)
    MAYORIGUAL      reduce using rule 287 (expresion -> count_insrt .)
    MENORIGUAL      reduce using rule 287 (expresion -> count_insrt .)
    IGUALIGUAL      reduce using rule 287 (expresion -> count_insrt .)
    IGUAL           reduce using rule 287 (expresion -> count_insrt .)
    NOIG            reduce using rule 287 (expresion -> count_insrt .)
    NOTIGUAL        reduce using rule 287 (expresion -> count_insrt .)
    MAS             reduce using rule 287 (expresion -> count_insrt .)
    MENOS           reduce using rule 287 (expresion -> count_insrt .)
    POR             reduce using rule 287 (expresion -> count_insrt .)
    DIV             reduce using rule 287 (expresion -> count_insrt .)
    MODULO          reduce using rule 287 (expresion -> count_insrt .)
    SHIFTD          reduce using rule 287 (expresion -> count_insrt .)
    SHIFTI          reduce using rule 287 (expresion -> count_insrt .)
    HASHTAG         reduce using rule 287 (expresion -> count_insrt .)
    ANDB            reduce using rule 287 (expresion -> count_insrt .)
    D_OR            reduce using rule 287 (expresion -> count_insrt .)
    AND             reduce using rule 287 (expresion -> count_insrt .)
    OR              reduce using rule 287 (expresion -> count_insrt .)
    PARC            reduce using rule 287 (expresion -> count_insrt .)


state 364

    (288) expresion_dato -> string_type .

    MAYOR           reduce using rule 288 (expresion_dato -> string_type .)
    MENOR           reduce using rule 288 (expresion_dato -> string_type .)
    MAYORIGUAL      reduce using rule 288 (expresion_dato -> string_type .)
    MENORIGUAL      reduce using rule 288 (expresion_dato -> string_type .)
    IGUALIGUAL      reduce using rule 288 (expresion_dato -> string_type .)
    IGUAL           reduce using rule 288 (expresion_dato -> string_type .)
    NOIG            reduce using rule 288 (expresion_dato -> string_type .)
    NOTIGUAL        reduce using rule 288 (expresion_dato -> string_type .)
    MAS             reduce using rule 288 (expresion_dato -> string_type .)
    MENOS           reduce using rule 288 (expresion_dato -> string_type .)
    POR             reduce using rule 288 (expresion_dato -> string_type .)
    DIV             reduce using rule 288 (expresion_dato -> string_type .)
    MODULO          reduce using rule 288 (expresion_dato -> string_type .)
    SHIFTD          reduce using rule 288 (expresion_dato -> string_type .)
    SHIFTI          reduce using rule 288 (expresion_dato -> string_type .)
    HASHTAG         reduce using rule 288 (expresion_dato -> string_type .)
    ANDB            reduce using rule 288 (expresion_dato -> string_type .)
    D_OR            reduce using rule 288 (expresion_dato -> string_type .)
    AND             reduce using rule 288 (expresion_dato -> string_type .)
    OR              reduce using rule 288 (expresion_dato -> string_type .)
    PARC            reduce using rule 288 (expresion_dato -> string_type .)


state 365

    (292) expresion_numero -> ENTERO .

    MAYOR           reduce using rule 292 (expresion_numero -> ENTERO .)
    MENOR           reduce using rule 292 (expresion_numero -> ENTERO .)
    MAYORIGUAL      reduce using rule 292 (expresion_numero -> ENTERO .)
    MENORIGUAL      reduce using rule 292 (expresion_numero -> ENTERO .)
    IGUALIGUAL      reduce using rule 292 (expresion_numero -> ENTERO .)
    IGUAL           reduce using rule 292 (expresion_numero -> ENTERO .)
    NOIG            reduce using rule 292 (expresion_numero -> ENTERO .)
    NOTIGUAL        reduce using rule 292 (expresion_numero -> ENTERO .)
    MAS             reduce using rule 292 (expresion_numero -> ENTERO .)
    MENOS           reduce using rule 292 (expresion_numero -> ENTERO .)
    POR             reduce using rule 292 (expresion_numero -> ENTERO .)
    DIV             reduce using rule 292 (expresion_numero -> ENTERO .)
    MODULO          reduce using rule 292 (expresion_numero -> ENTERO .)
    SHIFTD          reduce using rule 292 (expresion_numero -> ENTERO .)
    SHIFTI          reduce using rule 292 (expresion_numero -> ENTERO .)
    HASHTAG         reduce using rule 292 (expresion_numero -> ENTERO .)
    ANDB            reduce using rule 292 (expresion_numero -> ENTERO .)
    D_OR            reduce using rule 292 (expresion_numero -> ENTERO .)
    AND             reduce using rule 292 (expresion_numero -> ENTERO .)
    OR              reduce using rule 292 (expresion_numero -> ENTERO .)
    PARC            reduce using rule 292 (expresion_numero -> ENTERO .)


state 366

    (291) expresion_dato -> expresion_numero .

    MAYOR           reduce using rule 291 (expresion_dato -> expresion_numero .)
    MENOR           reduce using rule 291 (expresion_dato -> expresion_numero .)
    MAYORIGUAL      reduce using rule 291 (expresion_dato -> expresion_numero .)
    MENORIGUAL      reduce using rule 291 (expresion_dato -> expresion_numero .)
    IGUALIGUAL      reduce using rule 291 (expresion_dato -> expresion_numero .)
    IGUAL           reduce using rule 291 (expresion_dato -> expresion_numero .)
    NOIG            reduce using rule 291 (expresion_dato -> expresion_numero .)
    NOTIGUAL        reduce using rule 291 (expresion_dato -> expresion_numero .)
    MAS             reduce using rule 291 (expresion_dato -> expresion_numero .)
    MENOS           reduce using rule 291 (expresion_dato -> expresion_numero .)
    POR             reduce using rule 291 (expresion_dato -> expresion_numero .)
    DIV             reduce using rule 291 (expresion_dato -> expresion_numero .)
    MODULO          reduce using rule 291 (expresion_dato -> expresion_numero .)
    SHIFTD          reduce using rule 291 (expresion_dato -> expresion_numero .)
    SHIFTI          reduce using rule 291 (expresion_dato -> expresion_numero .)
    HASHTAG         reduce using rule 291 (expresion_dato -> expresion_numero .)
    ANDB            reduce using rule 291 (expresion_dato -> expresion_numero .)
    D_OR            reduce using rule 291 (expresion_dato -> expresion_numero .)
    AND             reduce using rule 291 (expresion_dato -> expresion_numero .)
    OR              reduce using rule 291 (expresion_dato -> expresion_numero .)
    PARC            reduce using rule 291 (expresion_dato -> expresion_numero .)


state 367

    (294) sum_insrt -> SUM . agrupacion_expresion
    (255) agrupacion_expresion -> . PARA expresion PARC

    PARA            shift and go to state 461

    agrupacion_expresion           shift and go to state 460

state 368

    (295) count_insrt -> COUNT . agrupacion_expresion
    (255) agrupacion_expresion -> . PARA expresion PARC

    PARA            shift and go to state 461

    agrupacion_expresion           shift and go to state 462

state 369

    (293) expresion_numero -> FLOTANTE .

    MAYOR           reduce using rule 293 (expresion_numero -> FLOTANTE .)
    MENOR           reduce using rule 293 (expresion_numero -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 293 (expresion_numero -> FLOTANTE .)
    MENORIGUAL      reduce using rule 293 (expresion_numero -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 293 (expresion_numero -> FLOTANTE .)
    IGUAL           reduce using rule 293 (expresion_numero -> FLOTANTE .)
    NOIG            reduce using rule 293 (expresion_numero -> FLOTANTE .)
    NOTIGUAL        reduce using rule 293 (expresion_numero -> FLOTANTE .)
    MAS             reduce using rule 293 (expresion_numero -> FLOTANTE .)
    MENOS           reduce using rule 293 (expresion_numero -> FLOTANTE .)
    POR             reduce using rule 293 (expresion_numero -> FLOTANTE .)
    DIV             reduce using rule 293 (expresion_numero -> FLOTANTE .)
    MODULO          reduce using rule 293 (expresion_numero -> FLOTANTE .)
    SHIFTD          reduce using rule 293 (expresion_numero -> FLOTANTE .)
    SHIFTI          reduce using rule 293 (expresion_numero -> FLOTANTE .)
    HASHTAG         reduce using rule 293 (expresion_numero -> FLOTANTE .)
    ANDB            reduce using rule 293 (expresion_numero -> FLOTANTE .)
    D_OR            reduce using rule 293 (expresion_numero -> FLOTANTE .)
    AND             reduce using rule 293 (expresion_numero -> FLOTANTE .)
    OR              reduce using rule 293 (expresion_numero -> FLOTANTE .)
    PARC            reduce using rule 293 (expresion_numero -> FLOTANTE .)


state 370

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC PTCOMA

    ID              shift and go to state 463


state 371

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK . PARA expresion_logica PARC PTCOMA

    PARA            shift and go to state 464


state 372

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PARA campos_c PARC PTCOMA

    PARA            shift and go to state 465


state 373

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    KEY             shift and go to state 466


state 374

    (142) Table_alter -> ALTER COLUMN . ID TYPE TIPO_DATO

    ID              shift and go to state 467


state 375

    (215) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 468


state 376

    (216) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 469


state 377

    (218) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 470


state 378

    (217) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 471


state 379

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 472


state 380

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 473


state 381

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 474


state 382

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (48) createDB_unParam -> . OWNER IGUAL string_type
    (49) createDB_unParam -> . MODE IGUAL ENTERO
    (50) createDB_unParam -> . OWNER string_type
    (51) createDB_unParam -> . MODE ENTERO
    (40) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (42) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (44) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (45) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (46) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (47) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 475
    OWNER           shift and go to state 64
    MODE            shift and go to state 65

    createDB_unParam               shift and go to state 476
    createDB_dosParam              shift and go to state 477

state 383

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 478


state 384

    (46) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 479


state 385

    (43) createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .)


state 386

    (42) createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .)


state 387

    (47) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 480


state 388

    (45) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 45 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 389

    (44) createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .)


state 390

    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 391

    (38) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 38 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 392

    (72) createTable_options -> createTable_options cT_options .

    NOT             reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    NULL            reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    UNIQUE          reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    CONSTRAINT      reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    PRIMARY         reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    FOREIGN         reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    DEFAULT         reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    CHECK           reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    PARC            reduce using rule 72 (createTable_options -> createTable_options cT_options .)
    COMA            reduce using rule 72 (createTable_options -> createTable_options cT_options .)


state 393

    (79) N_null -> NOT NULL .

    NOT             reduce using rule 79 (N_null -> NOT NULL .)
    NULL            reduce using rule 79 (N_null -> NOT NULL .)
    UNIQUE          reduce using rule 79 (N_null -> NOT NULL .)
    CONSTRAINT      reduce using rule 79 (N_null -> NOT NULL .)
    PRIMARY         reduce using rule 79 (N_null -> NOT NULL .)
    FOREIGN         reduce using rule 79 (N_null -> NOT NULL .)
    DEFAULT         reduce using rule 79 (N_null -> NOT NULL .)
    CHECK           reduce using rule 79 (N_null -> NOT NULL .)
    PARC            reduce using rule 79 (N_null -> NOT NULL .)
    COMA            reduce using rule 79 (N_null -> NOT NULL .)


state 394

    (82) C_unique -> CONSTRAINT ID . UNIQUE
    (86) C_check -> CONSTRAINT ID . CHECK PARA expresion_logica PARC

    UNIQUE          shift and go to state 481
    CHECK           shift and go to state 482


state 395

    (83) llave -> PRIMARY KEY .

    NOT             reduce using rule 83 (llave -> PRIMARY KEY .)
    NULL            reduce using rule 83 (llave -> PRIMARY KEY .)
    UNIQUE          reduce using rule 83 (llave -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 83 (llave -> PRIMARY KEY .)
    PRIMARY         reduce using rule 83 (llave -> PRIMARY KEY .)
    FOREIGN         reduce using rule 83 (llave -> PRIMARY KEY .)
    DEFAULT         reduce using rule 83 (llave -> PRIMARY KEY .)
    CHECK           reduce using rule 83 (llave -> PRIMARY KEY .)
    PARC            reduce using rule 83 (llave -> PRIMARY KEY .)
    COMA            reduce using rule 83 (llave -> PRIMARY KEY .)


state 396

    (84) llave -> FOREIGN KEY .

    NOT             reduce using rule 84 (llave -> FOREIGN KEY .)
    NULL            reduce using rule 84 (llave -> FOREIGN KEY .)
    UNIQUE          reduce using rule 84 (llave -> FOREIGN KEY .)
    CONSTRAINT      reduce using rule 84 (llave -> FOREIGN KEY .)
    PRIMARY         reduce using rule 84 (llave -> FOREIGN KEY .)
    FOREIGN         reduce using rule 84 (llave -> FOREIGN KEY .)
    DEFAULT         reduce using rule 84 (llave -> FOREIGN KEY .)
    CHECK           reduce using rule 84 (llave -> FOREIGN KEY .)
    PARC            reduce using rule 84 (llave -> FOREIGN KEY .)
    COMA            reduce using rule 84 (llave -> FOREIGN KEY .)


state 397

    (85) O_DEFAULT -> DEFAULT expresion_dato_default .

    NOT             reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    NULL            reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    UNIQUE          reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CONSTRAINT      reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PRIMARY         reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    FOREIGN         reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    DEFAULT         reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CHECK           reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PARC            reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    COMA            reduce using rule 85 (O_DEFAULT -> DEFAULT expresion_dato_default .)


state 398

    (88) expresion_dato_default -> ENTERO .

    NOT             reduce using rule 88 (expresion_dato_default -> ENTERO .)
    NULL            reduce using rule 88 (expresion_dato_default -> ENTERO .)
    UNIQUE          reduce using rule 88 (expresion_dato_default -> ENTERO .)
    CONSTRAINT      reduce using rule 88 (expresion_dato_default -> ENTERO .)
    PRIMARY         reduce using rule 88 (expresion_dato_default -> ENTERO .)
    FOREIGN         reduce using rule 88 (expresion_dato_default -> ENTERO .)
    DEFAULT         reduce using rule 88 (expresion_dato_default -> ENTERO .)
    CHECK           reduce using rule 88 (expresion_dato_default -> ENTERO .)
    PARC            reduce using rule 88 (expresion_dato_default -> ENTERO .)
    COMA            reduce using rule 88 (expresion_dato_default -> ENTERO .)


state 399

    (89) expresion_dato_default -> FLOTANTE .

    NOT             reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    NULL            reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    UNIQUE          reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    CONSTRAINT      reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    PRIMARY         reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    FOREIGN         reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    DEFAULT         reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    CHECK           reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    PARC            reduce using rule 89 (expresion_dato_default -> FLOTANTE .)
    COMA            reduce using rule 89 (expresion_dato_default -> FLOTANTE .)


state 400

    (90) expresion_dato_default -> CADENA .

    NOT             reduce using rule 90 (expresion_dato_default -> CADENA .)
    NULL            reduce using rule 90 (expresion_dato_default -> CADENA .)
    UNIQUE          reduce using rule 90 (expresion_dato_default -> CADENA .)
    CONSTRAINT      reduce using rule 90 (expresion_dato_default -> CADENA .)
    PRIMARY         reduce using rule 90 (expresion_dato_default -> CADENA .)
    FOREIGN         reduce using rule 90 (expresion_dato_default -> CADENA .)
    DEFAULT         reduce using rule 90 (expresion_dato_default -> CADENA .)
    CHECK           reduce using rule 90 (expresion_dato_default -> CADENA .)
    PARC            reduce using rule 90 (expresion_dato_default -> CADENA .)
    COMA            reduce using rule 90 (expresion_dato_default -> CADENA .)


state 401

    (87) C_check -> CHECK PARA . expresion_logica PARC
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 483
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 402

    (97) TIPO_DATO_DEF -> DECIMAL PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 484


state 403

    (98) TIPO_DATO_DEF -> NUMERIC PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 485


state 404

    (102) TIPO_DATO_DEF -> INTERVAL extract_time TO . extract_time
    (113) extract_time -> . YEAR
    (114) extract_time -> . DAY
    (115) extract_time -> . MONTH
    (116) extract_time -> . HOUR
    (117) extract_time -> . MINUTE
    (118) extract_time -> . SECOND

    YEAR            shift and go to state 302
    DAY             shift and go to state 303
    MONTH           shift and go to state 304
    HOUR            shift and go to state 305
    MINUTE          shift and go to state 306
    SECOND          shift and go to state 307

    extract_time                   shift and go to state 486

state 405

    (107) TIPO_DATO_DEF -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 487


state 406

    (110) TIPO_DATO_DEF -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 488


state 407

    (112) TIPO_DATO_DEF -> CHARACTER PARA PARC .

    NOT             reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    NULL            reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    UNIQUE          reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CONSTRAINT      reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PRIMARY         reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    FOREIGN         reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    DEFAULT         reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CHECK           reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PARC            reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    COMA            reduce using rule 112 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)


state 408

    (108) TIPO_DATO_DEF -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 489


state 409

    (109) TIPO_DATO_DEF -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 490


state 410

    (111) TIPO_DATO_DEF -> CHAR PARA PARC .

    NOT             reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    NULL            reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    UNIQUE          reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CONSTRAINT      reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PRIMARY         reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    FOREIGN         reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    DEFAULT         reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CHECK           reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PARC            reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    COMA            reduce using rule 111 (TIPO_DATO_DEF -> CHAR PARA PARC .)


state 411

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA . ID PARC PTCOMA

    ID              shift and go to state 491


state 412

    (63) cuerpo_createTable -> PRIMARY KEY PARA campos_c . PARC
    (67) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 492
    COMA            shift and go to state 327


state 413

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC

    PARC            shift and go to state 493


state 414

    (65) cuerpo_createTable -> UNIQUE PARA campos_c PARC .

    PARC            reduce using rule 65 (cuerpo_createTable -> UNIQUE PARA campos_c PARC .)
    COMA            reduce using rule 65 (cuerpo_createTable -> UNIQUE PARA campos_c PARC .)


state 415

    (69) constraint_esp -> CHECK PARA . expresion_logica PARC
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 494
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 416

    (70) constraint_esp -> UNIQUE PARA . campos_c PARC
    (67) campos_c -> . campos_c COMA ID
    (68) campos_c -> . ID

    ID              shift and go to state 250

    campos_c                       shift and go to state 495

state 417

    (71) constraint_esp -> FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC

    PARA            shift and go to state 496


state 418

    (137) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL . PTCOMA

    PTCOMA          shift and go to state 497


state 419

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT . NULL PTCOMA

    NULL            shift and go to state 498


state 420

    (142) Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .

    PTCOMA          reduce using rule 142 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)
    COMA            reduce using rule 142 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)


state 421

    (67) campos_c -> campos_c COMA ID .

    PTCOMA          reduce using rule 67 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 67 (campos_c -> campos_c COMA ID .)
    PARC            reduce using rule 67 (campos_c -> campos_c COMA ID .)


state 422

    (130) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID . PTCOMA

    PTCOMA          shift and go to state 499


state 423

    (152) TIPO_DATO -> DECIMAL PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 500


state 424

    (153) TIPO_DATO -> NUMERIC PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 501


state 425

    (156) TIPO_DATO -> DOUBLE PRECISION .

    PTCOMA          reduce using rule 156 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 156 (TIPO_DATO -> DOUBLE PRECISION .)


state 426

    (157) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 502


state 427

    (160) TIPO_DATO -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 503


state 428

    (163) TIPO_DATO -> CHARACTER PARA . ENTERO PARC
    (165) TIPO_DATO -> CHARACTER PARA . PARC

    ENTERO          shift and go to state 504
    PARC            shift and go to state 505


state 429

    (161) TIPO_DATO -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 506


state 430

    (162) TIPO_DATO -> CHAR PARA . ENTERO PARC
    (164) TIPO_DATO -> CHAR PARA . PARC

    ENTERO          shift and go to state 507
    PARC            shift and go to state 508


state 431

    (143) campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .

    PTCOMA          reduce using rule 143 (campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .)
    COMA            reduce using rule 143 (campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .)


state 432

    (290) expresion_dato -> ID PUNTO . ID

    ID              shift and go to state 509


state 433

    (269) expresion -> PARA expresion_logica . PARC

    PARC            shift and go to state 510


state 434

    (132) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC . PTCOMA

    PTCOMA          shift and go to state 511


state 435

    (281) expresion_logica -> expresion_relacional AND . expresion_logica
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_relacional           shift and go to state 352
    expresion_logica               shift and go to state 512
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 436

    (282) expresion_logica -> expresion_relacional OR . expresion_logica
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_relacional           shift and go to state 352
    expresion_logica               shift and go to state 513
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 437

    (283) expresion_logica -> NOT expresion_logica .

    PARC            reduce using rule 283 (expresion_logica -> NOT expresion_logica .)


state 438

    (272) expresion_relacional -> expresion MAYOR . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 514
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 439

    (273) expresion_relacional -> expresion MENOR . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 515
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 440

    (274) expresion_relacional -> expresion MAYORIGUAL . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 516
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 441

    (275) expresion_relacional -> expresion MENORIGUAL . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 517
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 442

    (276) expresion_relacional -> expresion IGUALIGUAL . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 518
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 443

    (277) expresion_relacional -> expresion IGUAL . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 519
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 444

    (278) expresion_relacional -> expresion NOIG . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 520
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 445

    (279) expresion_relacional -> expresion NOTIGUAL . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 521
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 446

    (256) expresion -> expresion MAS . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 522
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 447

    (257) expresion -> expresion MENOS . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 523
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 448

    (258) expresion -> expresion POR . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 524
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 449

    (259) expresion -> expresion DIV . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 525
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 450

    (260) expresion -> expresion MODULO . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 526
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 451

    (261) expresion -> expresion SHIFTD . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 527
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 452

    (262) expresion -> expresion SHIFTI . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 528
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 453

    (263) expresion -> expresion HASHTAG . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 529
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 454

    (264) expresion -> expresion ANDB . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 530
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 455

    (265) expresion -> expresion D_OR . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 531
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 456

    (289) expresion_dato -> MENOS ENTERO .

    MAYOR           reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    MENOR           reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    MAYORIGUAL      reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    MENORIGUAL      reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    IGUALIGUAL      reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    IGUAL           reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    NOIG            reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    NOTIGUAL        reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    MAS             reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    MENOS           reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    POR             reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    DIV             reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    MODULO          reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    SHIFTD          reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    SHIFTI          reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    HASHTAG         reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    ANDB            reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    D_OR            reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    AND             reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    OR              reduce using rule 289 (expresion_dato -> MENOS ENTERO .)
    PARC            reduce using rule 289 (expresion_dato -> MENOS ENTERO .)


state 457

    (268) expresion -> D_OR expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 268 (expresion -> D_OR expresion .)
    MENOR           reduce using rule 268 (expresion -> D_OR expresion .)
    MAYORIGUAL      reduce using rule 268 (expresion -> D_OR expresion .)
    MENORIGUAL      reduce using rule 268 (expresion -> D_OR expresion .)
    IGUALIGUAL      reduce using rule 268 (expresion -> D_OR expresion .)
    IGUAL           reduce using rule 268 (expresion -> D_OR expresion .)
    NOIG            reduce using rule 268 (expresion -> D_OR expresion .)
    NOTIGUAL        reduce using rule 268 (expresion -> D_OR expresion .)
    AND             reduce using rule 268 (expresion -> D_OR expresion .)
    OR              reduce using rule 268 (expresion -> D_OR expresion .)
    PARC            reduce using rule 268 (expresion -> D_OR expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455

  ! MAS             [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! MENOS           [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! POR             [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! DIV             [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! MODULO          [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! SHIFTD          [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! SHIFTI          [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! HASHTAG         [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! ANDB            [ reduce using rule 268 (expresion -> D_OR expresion .) ]
  ! D_OR            [ reduce using rule 268 (expresion -> D_OR expresion .) ]


state 458

    (266) expresion -> NOTB expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 266 (expresion -> NOTB expresion .)
    MENOR           reduce using rule 266 (expresion -> NOTB expresion .)
    MAYORIGUAL      reduce using rule 266 (expresion -> NOTB expresion .)
    MENORIGUAL      reduce using rule 266 (expresion -> NOTB expresion .)
    IGUALIGUAL      reduce using rule 266 (expresion -> NOTB expresion .)
    IGUAL           reduce using rule 266 (expresion -> NOTB expresion .)
    NOIG            reduce using rule 266 (expresion -> NOTB expresion .)
    NOTIGUAL        reduce using rule 266 (expresion -> NOTB expresion .)
    MAS             reduce using rule 266 (expresion -> NOTB expresion .)
    MENOS           reduce using rule 266 (expresion -> NOTB expresion .)
    POR             reduce using rule 266 (expresion -> NOTB expresion .)
    DIV             reduce using rule 266 (expresion -> NOTB expresion .)
    MODULO          reduce using rule 266 (expresion -> NOTB expresion .)
    SHIFTD          reduce using rule 266 (expresion -> NOTB expresion .)
    SHIFTI          reduce using rule 266 (expresion -> NOTB expresion .)
    HASHTAG         reduce using rule 266 (expresion -> NOTB expresion .)
    ANDB            reduce using rule 266 (expresion -> NOTB expresion .)
    D_OR            reduce using rule 266 (expresion -> NOTB expresion .)
    AND             reduce using rule 266 (expresion -> NOTB expresion .)
    OR              reduce using rule 266 (expresion -> NOTB expresion .)
    PARC            reduce using rule 266 (expresion -> NOTB expresion .)

  ! MAS             [ shift and go to state 446 ]
  ! MENOS           [ shift and go to state 447 ]
  ! POR             [ shift and go to state 448 ]
  ! DIV             [ shift and go to state 449 ]
  ! MODULO          [ shift and go to state 450 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 459

    (267) expresion -> ORB expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 267 (expresion -> ORB expresion .)
    MENOR           reduce using rule 267 (expresion -> ORB expresion .)
    MAYORIGUAL      reduce using rule 267 (expresion -> ORB expresion .)
    MENORIGUAL      reduce using rule 267 (expresion -> ORB expresion .)
    IGUALIGUAL      reduce using rule 267 (expresion -> ORB expresion .)
    IGUAL           reduce using rule 267 (expresion -> ORB expresion .)
    NOIG            reduce using rule 267 (expresion -> ORB expresion .)
    NOTIGUAL        reduce using rule 267 (expresion -> ORB expresion .)
    DIV             reduce using rule 267 (expresion -> ORB expresion .)
    HASHTAG         reduce using rule 267 (expresion -> ORB expresion .)
    D_OR            reduce using rule 267 (expresion -> ORB expresion .)
    AND             reduce using rule 267 (expresion -> ORB expresion .)
    OR              reduce using rule 267 (expresion -> ORB expresion .)
    PARC            reduce using rule 267 (expresion -> ORB expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    ANDB            shift and go to state 454

  ! MAS             [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! MENOS           [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! POR             [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! MODULO          [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! SHIFTD          [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! SHIFTI          [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! ANDB            [ reduce using rule 267 (expresion -> ORB expresion .) ]
  ! DIV             [ shift and go to state 449 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! D_OR            [ shift and go to state 455 ]


state 460

    (294) sum_insrt -> SUM agrupacion_expresion .

    MAYOR           reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    MENOR           reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    MAYORIGUAL      reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    MENORIGUAL      reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    IGUALIGUAL      reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    IGUAL           reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    NOIG            reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    NOTIGUAL        reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    MAS             reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    MENOS           reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    POR             reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    DIV             reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    MODULO          reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    SHIFTD          reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    SHIFTI          reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    HASHTAG         reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    ANDB            reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    D_OR            reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    AND             reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    OR              reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)
    PARC            reduce using rule 294 (sum_insrt -> SUM agrupacion_expresion .)


state 461

    (255) agrupacion_expresion -> PARA . expresion PARC
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion                      shift and go to state 532
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 462

    (295) count_insrt -> COUNT agrupacion_expresion .

    MAYOR           reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    MENOR           reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    MAYORIGUAL      reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    MENORIGUAL      reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    IGUALIGUAL      reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    IGUAL           reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    NOIG            reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    NOTIGUAL        reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    MAS             reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    MENOS           reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    POR             reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    DIV             reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    MODULO          reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    SHIFTD          reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    SHIFTI          reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    HASHTAG         reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    ANDB            reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    D_OR            reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    AND             reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    OR              reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)
    PARC            reduce using rule 295 (count_insrt -> COUNT agrupacion_expresion .)


state 463

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC PTCOMA

    PARC            shift and go to state 533


state 464

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA . expresion_logica PARC PTCOMA
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 534
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 465

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA . campos_c PARC PTCOMA
    (67) campos_c -> . campos_c COMA ID
    (68) campos_c -> . ID

    ID              shift and go to state 250

    campos_c                       shift and go to state 535

state 466

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    PARA            shift and go to state 536


state 467

    (142) Table_alter -> ALTER COLUMN ID . TYPE TIPO_DATO

    TYPE            shift and go to state 325


state 468

    (215) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 215 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 215 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 215 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 215 (tipo -> CHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 215 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 215 (tipo -> CHAR PARA ENTERO PARC .)


state 469

    (216) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 537


state 470

    (218) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 218 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 218 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 218 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 218 (tipo -> CHARACTER PARA ENTERO PARC .)
    PTCOMA          reduce using rule 218 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 218 (tipo -> CHARACTER PARA ENTERO PARC .)


state 471

    (217) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 217 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 217 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 217 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 217 (tipo -> VARCHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 217 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 217 (tipo -> VARCHAR PARA ENTERO PARC .)


state 472

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 538


state 473

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (202) tipo -> . INTEGER
    (203) tipo -> . SMALLINT
    (204) tipo -> . BIGINT
    (205) tipo -> . DECIMAL
    (206) tipo -> . NUMERIC
    (207) tipo -> . REAL
    (208) tipo -> . CHAR
    (209) tipo -> . DOUBLE
    (210) tipo -> . PRECISION
    (211) tipo -> . MONEY
    (212) tipo -> . FLOAT
    (213) tipo -> . BOOLEAN
    (214) tipo -> . VOID
    (215) tipo -> . CHAR PARA ENTERO PARC
    (216) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (217) tipo -> . VARCHAR PARA ENTERO PARC
    (218) tipo -> . CHARACTER PARA ENTERO PARC
    (219) tipo -> . TEXT
    (220) tipo -> . TIME
    (221) tipo -> . TIMESTAMP
    (222) tipo -> . DATE

    INTEGER         shift and go to state 162
    SMALLINT        shift and go to state 163
    BIGINT          shift and go to state 164
    DECIMAL         shift and go to state 165
    NUMERIC         shift and go to state 166
    REAL            shift and go to state 167
    CHAR            shift and go to state 168
    DOUBLE          shift and go to state 169
    PRECISION       shift and go to state 170
    MONEY           shift and go to state 171
    FLOAT           shift and go to state 172
    BOOLEAN         shift and go to state 173
    VOID            shift and go to state 174
    CHARACTER       shift and go to state 175
    VARCHAR         shift and go to state 176
    TEXT            shift and go to state 177
    TIME            shift and go to state 178
    TIMESTAMP       shift and go to state 179
    DATE            shift and go to state 180

    tipo                           shift and go to state 539

state 474

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (202) tipo -> . INTEGER
    (203) tipo -> . SMALLINT
    (204) tipo -> . BIGINT
    (205) tipo -> . DECIMAL
    (206) tipo -> . NUMERIC
    (207) tipo -> . REAL
    (208) tipo -> . CHAR
    (209) tipo -> . DOUBLE
    (210) tipo -> . PRECISION
    (211) tipo -> . MONEY
    (212) tipo -> . FLOAT
    (213) tipo -> . BOOLEAN
    (214) tipo -> . VOID
    (215) tipo -> . CHAR PARA ENTERO PARC
    (216) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (217) tipo -> . VARCHAR PARA ENTERO PARC
    (218) tipo -> . CHARACTER PARA ENTERO PARC
    (219) tipo -> . TEXT
    (220) tipo -> . TIME
    (221) tipo -> . TIMESTAMP
    (222) tipo -> . DATE

    INTEGER         shift and go to state 162
    SMALLINT        shift and go to state 163
    BIGINT          shift and go to state 164
    DECIMAL         shift and go to state 165
    NUMERIC         shift and go to state 166
    REAL            shift and go to state 167
    CHAR            shift and go to state 168
    DOUBLE          shift and go to state 169
    PRECISION       shift and go to state 170
    MONEY           shift and go to state 171
    FLOAT           shift and go to state 172
    BOOLEAN         shift and go to state 173
    VOID            shift and go to state 174
    CHARACTER       shift and go to state 175
    VARCHAR         shift and go to state 176
    TEXT            shift and go to state 177
    TIME            shift and go to state 178
    TIMESTAMP       shift and go to state 179
    DATE            shift and go to state 180

    tipo                           shift and go to state 540

state 475

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 476

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 541


state 477

    (39) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 542


state 478

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 543


state 479

    (46) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 46 (createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .)


state 480

    (47) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 47 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 481

    (82) C_unique -> CONSTRAINT ID UNIQUE .

    NOT             reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    CHECK           reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    PARC            reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 82 (C_unique -> CONSTRAINT ID UNIQUE .)


state 482

    (86) C_check -> CONSTRAINT ID CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 544


state 483

    (87) C_check -> CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 545


state 484

    (97) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 546


state 485

    (98) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 547


state 486

    (102) TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .

    NOT             reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    UNIQUE          reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CONSTRAINT      reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PRIMARY         reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    FOREIGN         reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    DEFAULT         reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CHECK           reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PARC            reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)


state 487

    (107) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 548


state 488

    (110) TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .

    NOT             reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    NULL            reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    UNIQUE          reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PRIMARY         reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    FOREIGN         reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CHECK           reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PARC            reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 110 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)


state 489

    (108) TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .

    NOT             reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    NULL            reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CHECK           reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PARC            reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 108 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)


state 490

    (109) TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .

    NOT             reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    NULL            reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CHECK           reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PARC            reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 109 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)


state 491

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID . PARC PTCOMA

    PARC            shift and go to state 549


state 492

    (63) cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .

    PARC            reduce using rule 63 (cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .)
    COMA            reduce using rule 63 (cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .)


state 493

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC

    REFERENCES      shift and go to state 550


state 494

    (69) constraint_esp -> CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 551


state 495

    (70) constraint_esp -> UNIQUE PARA campos_c . PARC
    (67) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 552
    COMA            shift and go to state 327


state 496

    (71) constraint_esp -> FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC

    ID              shift and go to state 553


state 497

    (137) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .

    error           reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    CREATE          reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    SELECT          reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    CALL            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    SHOW            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    USE             reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    DROP            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    ALTER           reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    $end            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)


state 498

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL . PTCOMA

    PTCOMA          shift and go to state 554


state 499

    (130) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .

    error           reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    CREATE          reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    SELECT          reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    CALL            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    SHOW            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    USE             reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    DROP            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    ALTER           reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    $end            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)


state 500

    (152) TIPO_DATO -> DECIMAL PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 555


state 501

    (153) TIPO_DATO -> NUMERIC PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 556


state 502

    (157) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (113) extract_time -> . YEAR
    (114) extract_time -> . DAY
    (115) extract_time -> . MONTH
    (116) extract_time -> . HOUR
    (117) extract_time -> . MINUTE
    (118) extract_time -> . SECOND

    YEAR            shift and go to state 302
    DAY             shift and go to state 303
    MONTH           shift and go to state 304
    HOUR            shift and go to state 305
    MINUTE          shift and go to state 306
    SECOND          shift and go to state 307

    extract_time                   shift and go to state 557

state 503

    (160) TIPO_DATO -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 558


state 504

    (163) TIPO_DATO -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 559


state 505

    (165) TIPO_DATO -> CHARACTER PARA PARC .

    PTCOMA          reduce using rule 165 (TIPO_DATO -> CHARACTER PARA PARC .)
    COMA            reduce using rule 165 (TIPO_DATO -> CHARACTER PARA PARC .)


state 506

    (161) TIPO_DATO -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 560


state 507

    (162) TIPO_DATO -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 561


state 508

    (164) TIPO_DATO -> CHAR PARA PARC .

    PTCOMA          reduce using rule 164 (TIPO_DATO -> CHAR PARA PARC .)
    COMA            reduce using rule 164 (TIPO_DATO -> CHAR PARA PARC .)


state 509

    (290) expresion_dato -> ID PUNTO ID .

    MAYOR           reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    MENOR           reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    IGUALIGUAL      reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    IGUAL           reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    NOIG            reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    NOTIGUAL        reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    MAS             reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    MENOS           reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    POR             reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    DIV             reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    MODULO          reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    SHIFTD          reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    SHIFTI          reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    HASHTAG         reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    ANDB            reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    D_OR            reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    AND             reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    OR              reduce using rule 290 (expresion_dato -> ID PUNTO ID .)
    PARC            reduce using rule 290 (expresion_dato -> ID PUNTO ID .)


state 510

    (269) expresion -> PARA expresion_logica PARC .

    MAYOR           reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    MENOR           reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    MAYORIGUAL      reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    MENORIGUAL      reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    IGUALIGUAL      reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    IGUAL           reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    NOIG            reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    NOTIGUAL        reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    MAS             reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    MENOS           reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    POR             reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    DIV             reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    MODULO          reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    SHIFTD          reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    SHIFTI          reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    HASHTAG         reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    ANDB            reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    D_OR            reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    AND             reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    OR              reduce using rule 269 (expresion -> PARA expresion_logica PARC .)
    PARC            reduce using rule 269 (expresion -> PARA expresion_logica PARC .)


state 511

    (132) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .

    error           reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    CREATE          reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    SELECT          reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    CALL            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    SHOW            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    USE             reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    DROP            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    ALTER           reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    $end            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)


state 512

    (281) expresion_logica -> expresion_relacional AND expresion_logica .

    PARC            reduce using rule 281 (expresion_logica -> expresion_relacional AND expresion_logica .)


state 513

    (282) expresion_logica -> expresion_relacional OR expresion_logica .

    PARC            reduce using rule 282 (expresion_logica -> expresion_relacional OR expresion_logica .)


state 514

    (272) expresion_relacional -> expresion MAYOR expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 272 (expresion_relacional -> expresion MAYOR expresion .)
    OR              reduce using rule 272 (expresion_relacional -> expresion MAYOR expresion .)
    PARC            reduce using rule 272 (expresion_relacional -> expresion MAYOR expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 515

    (273) expresion_relacional -> expresion MENOR expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 273 (expresion_relacional -> expresion MENOR expresion .)
    OR              reduce using rule 273 (expresion_relacional -> expresion MENOR expresion .)
    PARC            reduce using rule 273 (expresion_relacional -> expresion MENOR expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 516

    (274) expresion_relacional -> expresion MAYORIGUAL expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 274 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 274 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    PARC            reduce using rule 274 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 517

    (275) expresion_relacional -> expresion MENORIGUAL expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 275 (expresion_relacional -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 275 (expresion_relacional -> expresion MENORIGUAL expresion .)
    PARC            reduce using rule 275 (expresion_relacional -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 518

    (276) expresion_relacional -> expresion IGUALIGUAL expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 276 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 276 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    PARC            reduce using rule 276 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 519

    (277) expresion_relacional -> expresion IGUAL expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 277 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 277 (expresion_relacional -> expresion IGUAL expresion .)
    PARC            reduce using rule 277 (expresion_relacional -> expresion IGUAL expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 520

    (278) expresion_relacional -> expresion NOIG expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 278 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 278 (expresion_relacional -> expresion NOIG expresion .)
    PARC            reduce using rule 278 (expresion_relacional -> expresion NOIG expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 521

    (279) expresion_relacional -> expresion NOTIGUAL expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    AND             reduce using rule 279 (expresion_relacional -> expresion NOTIGUAL expresion .)
    OR              reduce using rule 279 (expresion_relacional -> expresion NOTIGUAL expresion .)
    PARC            reduce using rule 279 (expresion_relacional -> expresion NOTIGUAL expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 522

    (256) expresion -> expresion MAS expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 256 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 256 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 256 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 256 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 256 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 256 (expresion -> expresion MAS expresion .)
    NOIG            reduce using rule 256 (expresion -> expresion MAS expresion .)
    NOTIGUAL        reduce using rule 256 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 256 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 256 (expresion -> expresion MAS expresion .)
    DIV             reduce using rule 256 (expresion -> expresion MAS expresion .)
    SHIFTD          reduce using rule 256 (expresion -> expresion MAS expresion .)
    SHIFTI          reduce using rule 256 (expresion -> expresion MAS expresion .)
    HASHTAG         reduce using rule 256 (expresion -> expresion MAS expresion .)
    ANDB            reduce using rule 256 (expresion -> expresion MAS expresion .)
    D_OR            reduce using rule 256 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 256 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 256 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 256 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 448
    MODULO          shift and go to state 450

  ! POR             [ reduce using rule 256 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 256 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 446 ]
  ! MENOS           [ shift and go to state 447 ]
  ! DIV             [ shift and go to state 449 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 523

    (257) expresion -> expresion MENOS expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 257 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 257 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 257 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 257 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 257 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 257 (expresion -> expresion MENOS expresion .)
    NOIG            reduce using rule 257 (expresion -> expresion MENOS expresion .)
    NOTIGUAL        reduce using rule 257 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 257 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 257 (expresion -> expresion MENOS expresion .)
    DIV             reduce using rule 257 (expresion -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 257 (expresion -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 257 (expresion -> expresion MENOS expresion .)
    HASHTAG         reduce using rule 257 (expresion -> expresion MENOS expresion .)
    ANDB            reduce using rule 257 (expresion -> expresion MENOS expresion .)
    D_OR            reduce using rule 257 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 257 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 257 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 257 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 448
    MODULO          shift and go to state 450

  ! POR             [ reduce using rule 257 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 257 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 446 ]
  ! MENOS           [ shift and go to state 447 ]
  ! DIV             [ shift and go to state 449 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 524

    (258) expresion -> expresion POR expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 258 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 258 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 258 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 258 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 258 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 258 (expresion -> expresion POR expresion .)
    NOIG            reduce using rule 258 (expresion -> expresion POR expresion .)
    NOTIGUAL        reduce using rule 258 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 258 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 258 (expresion -> expresion POR expresion .)
    POR             reduce using rule 258 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 258 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 258 (expresion -> expresion POR expresion .)
    SHIFTD          reduce using rule 258 (expresion -> expresion POR expresion .)
    SHIFTI          reduce using rule 258 (expresion -> expresion POR expresion .)
    HASHTAG         reduce using rule 258 (expresion -> expresion POR expresion .)
    ANDB            reduce using rule 258 (expresion -> expresion POR expresion .)
    D_OR            reduce using rule 258 (expresion -> expresion POR expresion .)
    AND             reduce using rule 258 (expresion -> expresion POR expresion .)
    OR              reduce using rule 258 (expresion -> expresion POR expresion .)
    PARC            reduce using rule 258 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 446 ]
  ! MENOS           [ shift and go to state 447 ]
  ! POR             [ shift and go to state 448 ]
  ! DIV             [ shift and go to state 449 ]
  ! MODULO          [ shift and go to state 450 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 525

    (259) expresion -> expresion DIV expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 259 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 259 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 259 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 259 (expresion -> expresion DIV expresion .)
    IGUALIGUAL      reduce using rule 259 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 259 (expresion -> expresion DIV expresion .)
    NOIG            reduce using rule 259 (expresion -> expresion DIV expresion .)
    NOTIGUAL        reduce using rule 259 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 259 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 259 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 259 (expresion -> expresion DIV expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455

  ! MAS             [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! MENOS           [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! POR             [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! DIV             [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! MODULO          [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! SHIFTD          [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! SHIFTI          [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! HASHTAG         [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! ANDB            [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]
  ! D_OR            [ reduce using rule 259 (expresion -> expresion DIV expresion .) ]


state 526

    (260) expresion -> expresion MODULO expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 260 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 260 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 260 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 260 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 260 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 260 (expresion -> expresion MODULO expresion .)
    NOIG            reduce using rule 260 (expresion -> expresion MODULO expresion .)
    NOTIGUAL        reduce using rule 260 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 260 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 260 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 260 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 260 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 260 (expresion -> expresion MODULO expresion .)
    SHIFTD          reduce using rule 260 (expresion -> expresion MODULO expresion .)
    SHIFTI          reduce using rule 260 (expresion -> expresion MODULO expresion .)
    HASHTAG         reduce using rule 260 (expresion -> expresion MODULO expresion .)
    ANDB            reduce using rule 260 (expresion -> expresion MODULO expresion .)
    D_OR            reduce using rule 260 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 260 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 260 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 260 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 446 ]
  ! MENOS           [ shift and go to state 447 ]
  ! POR             [ shift and go to state 448 ]
  ! DIV             [ shift and go to state 449 ]
  ! MODULO          [ shift and go to state 450 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 527

    (261) expresion -> expresion SHIFTD expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    MENOR           reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    MAYORIGUAL      reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    MENORIGUAL      reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    IGUALIGUAL      reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    IGUAL           reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    NOIG            reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    NOTIGUAL        reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    DIV             reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    HASHTAG         reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    ANDB            reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    D_OR            reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    AND             reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    OR              reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    PARC            reduce using rule 261 (expresion -> expresion SHIFTD expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    MODULO          shift and go to state 450

  ! MAS             [ reduce using rule 261 (expresion -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 261 (expresion -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 261 (expresion -> expresion SHIFTD expresion .) ]
  ! MODULO          [ reduce using rule 261 (expresion -> expresion SHIFTD expresion .) ]
  ! DIV             [ shift and go to state 449 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 528

    (262) expresion -> expresion SHIFTI expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    MENOR           reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    MAYORIGUAL      reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    MENORIGUAL      reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    IGUALIGUAL      reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    IGUAL           reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    NOIG            reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    NOTIGUAL        reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    DIV             reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    HASHTAG         reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    ANDB            reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    D_OR            reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    AND             reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    OR              reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    PARC            reduce using rule 262 (expresion -> expresion SHIFTI expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    MODULO          shift and go to state 450

  ! MAS             [ reduce using rule 262 (expresion -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 262 (expresion -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 262 (expresion -> expresion SHIFTI expresion .) ]
  ! MODULO          [ reduce using rule 262 (expresion -> expresion SHIFTI expresion .) ]
  ! DIV             [ shift and go to state 449 ]
  ! SHIFTD          [ shift and go to state 451 ]
  ! SHIFTI          [ shift and go to state 452 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 529

    (263) expresion -> expresion HASHTAG expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    MENOR           reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    MAYORIGUAL      reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    MENORIGUAL      reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    IGUALIGUAL      reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    IGUAL           reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    NOIG            reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    NOTIGUAL        reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    AND             reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    OR              reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    PARC            reduce using rule 263 (expresion -> expresion HASHTAG expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455

  ! MAS             [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! MENOS           [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! POR             [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! DIV             [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! MODULO          [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! SHIFTD          [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! SHIFTI          [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! HASHTAG         [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! ANDB            [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]
  ! D_OR            [ reduce using rule 263 (expresion -> expresion HASHTAG expresion .) ]


state 530

    (264) expresion -> expresion ANDB expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 264 (expresion -> expresion ANDB expresion .)
    MENOR           reduce using rule 264 (expresion -> expresion ANDB expresion .)
    MAYORIGUAL      reduce using rule 264 (expresion -> expresion ANDB expresion .)
    MENORIGUAL      reduce using rule 264 (expresion -> expresion ANDB expresion .)
    IGUALIGUAL      reduce using rule 264 (expresion -> expresion ANDB expresion .)
    IGUAL           reduce using rule 264 (expresion -> expresion ANDB expresion .)
    NOIG            reduce using rule 264 (expresion -> expresion ANDB expresion .)
    NOTIGUAL        reduce using rule 264 (expresion -> expresion ANDB expresion .)
    DIV             reduce using rule 264 (expresion -> expresion ANDB expresion .)
    HASHTAG         reduce using rule 264 (expresion -> expresion ANDB expresion .)
    ANDB            reduce using rule 264 (expresion -> expresion ANDB expresion .)
    D_OR            reduce using rule 264 (expresion -> expresion ANDB expresion .)
    AND             reduce using rule 264 (expresion -> expresion ANDB expresion .)
    OR              reduce using rule 264 (expresion -> expresion ANDB expresion .)
    PARC            reduce using rule 264 (expresion -> expresion ANDB expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452

  ! MAS             [ reduce using rule 264 (expresion -> expresion ANDB expresion .) ]
  ! MENOS           [ reduce using rule 264 (expresion -> expresion ANDB expresion .) ]
  ! POR             [ reduce using rule 264 (expresion -> expresion ANDB expresion .) ]
  ! MODULO          [ reduce using rule 264 (expresion -> expresion ANDB expresion .) ]
  ! SHIFTD          [ reduce using rule 264 (expresion -> expresion ANDB expresion .) ]
  ! SHIFTI          [ reduce using rule 264 (expresion -> expresion ANDB expresion .) ]
  ! DIV             [ shift and go to state 449 ]
  ! HASHTAG         [ shift and go to state 453 ]
  ! ANDB            [ shift and go to state 454 ]
  ! D_OR            [ shift and go to state 455 ]


state 531

    (265) expresion -> expresion D_OR expresion .
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 265 (expresion -> expresion D_OR expresion .)
    MENOR           reduce using rule 265 (expresion -> expresion D_OR expresion .)
    MAYORIGUAL      reduce using rule 265 (expresion -> expresion D_OR expresion .)
    MENORIGUAL      reduce using rule 265 (expresion -> expresion D_OR expresion .)
    IGUALIGUAL      reduce using rule 265 (expresion -> expresion D_OR expresion .)
    IGUAL           reduce using rule 265 (expresion -> expresion D_OR expresion .)
    NOIG            reduce using rule 265 (expresion -> expresion D_OR expresion .)
    NOTIGUAL        reduce using rule 265 (expresion -> expresion D_OR expresion .)
    AND             reduce using rule 265 (expresion -> expresion D_OR expresion .)
    OR              reduce using rule 265 (expresion -> expresion D_OR expresion .)
    PARC            reduce using rule 265 (expresion -> expresion D_OR expresion .)
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455

  ! MAS             [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! MENOS           [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! POR             [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! DIV             [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! MODULO          [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! SHIFTD          [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! SHIFTI          [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! HASHTAG         [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! ANDB            [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]
  ! D_OR            [ reduce using rule 265 (expresion -> expresion D_OR expresion .) ]


state 532

    (255) agrupacion_expresion -> PARA expresion . PARC
    (256) expresion -> expresion . MAS expresion
    (257) expresion -> expresion . MENOS expresion
    (258) expresion -> expresion . POR expresion
    (259) expresion -> expresion . DIV expresion
    (260) expresion -> expresion . MODULO expresion
    (261) expresion -> expresion . SHIFTD expresion
    (262) expresion -> expresion . SHIFTI expresion
    (263) expresion -> expresion . HASHTAG expresion
    (264) expresion -> expresion . ANDB expresion
    (265) expresion -> expresion . D_OR expresion

    PARC            shift and go to state 562
    MAS             shift and go to state 446
    MENOS           shift and go to state 447
    POR             shift and go to state 448
    DIV             shift and go to state 449
    MODULO          shift and go to state 450
    SHIFTD          shift and go to state 451
    SHIFTI          shift and go to state 452
    HASHTAG         shift and go to state 453
    ANDB            shift and go to state 454
    D_OR            shift and go to state 455


state 533

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC PTCOMA

    REFERENCES      shift and go to state 563


state 534

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica . PARC PTCOMA

    PARC            shift and go to state 564


state 535

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c . PARC PTCOMA
    (67) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 565
    COMA            shift and go to state 327


state 536

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC PTCOMA

    ID              shift and go to state 566


state 537

    (216) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 216 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 216 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 216 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 216 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PTCOMA          reduce using rule 216 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 216 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 538

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 567


state 539

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 568


state 540

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 569


state 541

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 542

    (39) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 39 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 543

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 570


state 544

    (86) C_check -> CONSTRAINT ID CHECK PARA . expresion_logica PARC
    (281) expresion_logica -> . expresion_relacional AND expresion_logica
    (282) expresion_logica -> . expresion_relacional OR expresion_logica
    (283) expresion_logica -> . NOT expresion_logica
    (284) expresion_logica -> . expresion_relacional
    (272) expresion_relacional -> . expresion MAYOR expresion
    (273) expresion_relacional -> . expresion MENOR expresion
    (274) expresion_relacional -> . expresion MAYORIGUAL expresion
    (275) expresion_relacional -> . expresion MENORIGUAL expresion
    (276) expresion_relacional -> . expresion IGUALIGUAL expresion
    (277) expresion_relacional -> . expresion IGUAL expresion
    (278) expresion_relacional -> . expresion NOIG expresion
    (279) expresion_relacional -> . expresion NOTIGUAL expresion
    (280) expresion_relacional -> . expresion
    (256) expresion -> . expresion MAS expresion
    (257) expresion -> . expresion MENOS expresion
    (258) expresion -> . expresion POR expresion
    (259) expresion -> . expresion DIV expresion
    (260) expresion -> . expresion MODULO expresion
    (261) expresion -> . expresion SHIFTD expresion
    (262) expresion -> . expresion SHIFTI expresion
    (263) expresion -> . expresion HASHTAG expresion
    (264) expresion -> . expresion ANDB expresion
    (265) expresion -> . expresion D_OR expresion
    (266) expresion -> . NOTB expresion
    (267) expresion -> . ORB expresion
    (268) expresion -> . D_OR expresion
    (269) expresion -> . PARA expresion_logica PARC
    (270) expresion -> . TRUE
    (271) expresion -> . FALSE
    (285) expresion -> . expresion_dato
    (286) expresion -> . sum_insrt
    (287) expresion -> . count_insrt
    (288) expresion_dato -> . string_type
    (289) expresion_dato -> . MENOS ENTERO
    (290) expresion_dato -> . ID PUNTO ID
    (291) expresion_dato -> . expresion_numero
    (294) sum_insrt -> . SUM agrupacion_expresion
    (295) count_insrt -> . COUNT agrupacion_expresion
    (166) string_type -> . CADENA
    (167) string_type -> . ID
    (292) expresion_numero -> . ENTERO
    (293) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 353
    NOTB            shift and go to state 357
    ORB             shift and go to state 358
    D_OR            shift and go to state 356
    PARA            shift and go to state 350
    TRUE            shift and go to state 359
    FALSE           shift and go to state 360
    MENOS           shift and go to state 355
    ID              shift and go to state 349
    SUM             shift and go to state 367
    COUNT           shift and go to state 368
    CADENA          shift and go to state 110
    ENTERO          shift and go to state 365
    FLOTANTE        shift and go to state 369

    expresion_logica               shift and go to state 571
    expresion_relacional           shift and go to state 352
    expresion                      shift and go to state 354
    expresion_dato                 shift and go to state 361
    sum_insrt                      shift and go to state 362
    count_insrt                    shift and go to state 363
    string_type                    shift and go to state 364
    expresion_numero               shift and go to state 366

state 545

    (87) C_check -> CHECK PARA expresion_logica PARC .

    NOT             reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    NULL            reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    UNIQUE          reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    CONSTRAINT      reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    PRIMARY         reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    FOREIGN         reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    DEFAULT         reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    CHECK           reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    PARC            reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 87 (C_check -> CHECK PARA expresion_logica PARC .)


state 546

    (97) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 572


state 547

    (98) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 573


state 548

    (107) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .

    NOT             reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    NULL            reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    UNIQUE          reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PRIMARY         reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    FOREIGN         reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CHECK           reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PARC            reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 107 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)


state 549

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 574


state 550

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC

    ID              shift and go to state 575


state 551

    (69) constraint_esp -> CHECK PARA expresion_logica PARC .

    PARC            reduce using rule 69 (constraint_esp -> CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 69 (constraint_esp -> CHECK PARA expresion_logica PARC .)


state 552

    (70) constraint_esp -> UNIQUE PARA campos_c PARC .

    PARC            reduce using rule 70 (constraint_esp -> UNIQUE PARA campos_c PARC .)
    COMA            reduce using rule 70 (constraint_esp -> UNIQUE PARA campos_c PARC .)


state 553

    (71) constraint_esp -> FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC

    PARC            shift and go to state 576


state 554

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .

    error           reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    CREATE          reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    SELECT          reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    CALL            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    SHOW            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    USE             reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    DROP            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    ALTER           reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    $end            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)


state 555

    (152) TIPO_DATO -> DECIMAL PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 577


state 556

    (153) TIPO_DATO -> NUMERIC PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 578


state 557

    (157) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PTCOMA          reduce using rule 157 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 157 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 558

    (160) TIPO_DATO -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 579


state 559

    (163) TIPO_DATO -> CHARACTER PARA ENTERO PARC .

    PTCOMA          reduce using rule 163 (TIPO_DATO -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 163 (TIPO_DATO -> CHARACTER PARA ENTERO PARC .)


state 560

    (161) TIPO_DATO -> VARCHAR PARA ENTERO PARC .

    PTCOMA          reduce using rule 161 (TIPO_DATO -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 161 (TIPO_DATO -> VARCHAR PARA ENTERO PARC .)


state 561

    (162) TIPO_DATO -> CHAR PARA ENTERO PARC .

    PTCOMA          reduce using rule 162 (TIPO_DATO -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 162 (TIPO_DATO -> CHAR PARA ENTERO PARC .)


state 562

    (255) agrupacion_expresion -> PARA expresion PARC .

    MAYOR           reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    IGUAL           reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    NOIG            reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    NOTIGUAL        reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    MAS             reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    POR             reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    DIV             reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    SHIFTD          reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    SHIFTI          reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    HASHTAG         reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    ANDB            reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    D_OR            reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    AND             reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    OR              reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)
    PARC            reduce using rule 255 (agrupacion_expresion -> PARA expresion PARC .)


state 563

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC PTCOMA

    ID              shift and go to state 580


state 564

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC . PTCOMA

    PTCOMA          shift and go to state 581


state 565

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC . PTCOMA

    PTCOMA          shift and go to state 582


state 566

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC PTCOMA

    PARC            shift and go to state 583


state 567

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 584
    DECLARE         shift and go to state 585


state 568

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 586


state 569

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 587


state 570

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 588
    DECLARE         shift and go to state 589


state 571

    (86) C_check -> CONSTRAINT ID CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 590


state 572

    (97) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CHECK           reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 97 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)


state 573

    (98) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CHECK           reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 98 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)


state 574

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .

    error           reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CALL            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    USE             reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    DROP            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    $end            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)


state 575

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC

    PARA            shift and go to state 591


state 576

    (71) constraint_esp -> FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC

    REFERENCES      shift and go to state 592


state 577

    (152) TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 593


state 578

    (153) TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 594


state 579

    (160) TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC .

    PTCOMA          reduce using rule 160 (TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 160 (TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC .)


state 580

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC PTCOMA

    PARA            shift and go to state 595


state 581

    (134) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .

    error           reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    CREATE          reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    SELECT          reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    CALL            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    SHOW            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    USE             reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    DROP            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    ALTER           reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    $end            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)


state 582

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .

    error           reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    CREATE          reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    SELECT          reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    CALL            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    SHOW            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    USE             reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    DROP            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    ALTER           reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    $end            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)


state 583

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC PTCOMA

    REFERENCES      shift and go to state 596


state 584

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 598
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 585

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    BEGIN           reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 612
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 586

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 613


state 587

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 614


state 588

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 615
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 589

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    BEGIN           reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 616
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 590

    (86) C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .

    NOT             reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    NULL            reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    UNIQUE          reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    CONSTRAINT      reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    PRIMARY         reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    FOREIGN         reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    DEFAULT         reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    CHECK           reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    PARC            reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 86 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)


state 591

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC

    ID              shift and go to state 617


state 592

    (71) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC

    ID              shift and go to state 618


state 593

    (152) TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC .

    PTCOMA          reduce using rule 152 (TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 152 (TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC .)


state 594

    (153) TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC .

    PTCOMA          reduce using rule 153 (TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 153 (TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC .)


state 595

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC PTCOMA

    ID              shift and go to state 619


state 596

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC PTCOMA

    ID              shift and go to state 620


state 597

    (198) asignacion -> ID . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> ID . tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> ID . tipo PTCOMA
    (201) declaracion -> ID . tipo DEFAULT expresionPLSQL PTCOMA
    (202) tipo -> . INTEGER
    (203) tipo -> . SMALLINT
    (204) tipo -> . BIGINT
    (205) tipo -> . DECIMAL
    (206) tipo -> . NUMERIC
    (207) tipo -> . REAL
    (208) tipo -> . CHAR
    (209) tipo -> . DOUBLE
    (210) tipo -> . PRECISION
    (211) tipo -> . MONEY
    (212) tipo -> . FLOAT
    (213) tipo -> . BOOLEAN
    (214) tipo -> . VOID
    (215) tipo -> . CHAR PARA ENTERO PARC
    (216) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (217) tipo -> . VARCHAR PARA ENTERO PARC
    (218) tipo -> . CHARACTER PARA ENTERO PARC
    (219) tipo -> . TEXT
    (220) tipo -> . TIME
    (221) tipo -> . TIMESTAMP
    (222) tipo -> . DATE

    DOSPUNTOS       shift and go to state 621
    INTEGER         shift and go to state 162
    SMALLINT        shift and go to state 163
    BIGINT          shift and go to state 164
    DECIMAL         shift and go to state 165
    NUMERIC         shift and go to state 166
    REAL            shift and go to state 167
    CHAR            shift and go to state 168
    DOUBLE          shift and go to state 169
    PRECISION       shift and go to state 170
    MONEY           shift and go to state 171
    FLOAT           shift and go to state 172
    BOOLEAN         shift and go to state 173
    VOID            shift and go to state 174
    CHARACTER       shift and go to state 175
    VARCHAR         shift and go to state 176
    TEXT            shift and go to state 177
    TIME            shift and go to state 178
    TIMESTAMP       shift and go to state 179
    DATE            shift and go to state 180

    tipo                           shift and go to state 622

state 598

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 623
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 599

    (24) instrucciones_funct_sent -> PTCOMA .

    END             reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    PTCOMA          reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    error           reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    ID              reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    RAISE           reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    IF              reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    CASE            reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    SELECT          reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    CALL            reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    BEGIN           reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    ELSE            reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    ELSEIF          reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)
    WHEN            reduce using rule 24 (instrucciones_funct_sent -> PTCOMA .)


state 600

    (18) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PTCOMA          reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CALL            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 601

    (19) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    PTCOMA          reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    CALL            reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 19 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 19 (instrucciones_funct_sent -> asignacion .)


state 602

    (20) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    PTCOMA          reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    CALL            reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 20 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 20 (instrucciones_funct_sent -> declaracion .)


state 603

    (21) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    PTCOMA          reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    CALL            reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 21 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 21 (instrucciones_funct_sent -> imprimir .)


state 604

    (22) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    PTCOMA          reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    CALL            reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 22 (instrucciones_funct_sent -> sentencia_if .)


state 605

    (23) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    PTCOMA          reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    CALL            reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 23 (instrucciones_funct_sent -> sentencia_switch .)


state 606

    (25) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    PTCOMA          reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    CALL            reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 25 (instrucciones_funct_sent -> llamada_funcion .)


state 607

    (26) instrucciones_funct_sent -> empty .

    END             reduce using rule 26 (instrucciones_funct_sent -> empty .)
    PTCOMA          reduce using rule 26 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 26 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 26 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 26 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 26 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 26 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 26 (instrucciones_funct_sent -> empty .)
    CALL            reduce using rule 26 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 26 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 26 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 26 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 26 (instrucciones_funct_sent -> empty .)


state 608

    (27) instrucciones_funct_sent -> error .

    END             reduce using rule 27 (instrucciones_funct_sent -> error .)
    PTCOMA          reduce using rule 27 (instrucciones_funct_sent -> error .)
    error           reduce using rule 27 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 27 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 27 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 27 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 27 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 27 (instrucciones_funct_sent -> error .)
    CALL            reduce using rule 27 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 27 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 27 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 27 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 27 (instrucciones_funct_sent -> error .)


state 609

    (194) imprimir -> RAISE . lista_imprimir PTCOMA
    (195) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (196) lista_imprimir -> . sent_imprimir
    (197) sent_imprimir -> . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    lista_imprimir                 shift and go to state 625
    sent_imprimir                  shift and go to state 626
    expresionPLSQL                 shift and go to state 627
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 610

    (190) sentencia_if -> IF . expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 628
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 611

    (185) sentencia_switch -> CASE . expresionPLSQL case_list END CASE PTCOMA
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 629
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 612

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 630
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! BEGIN           [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 613

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 631
    DECLARE         shift and go to state 632


state 614

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 633
    DECLARE         shift and go to state 634


state 615

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 635
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 616

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 636
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! BEGIN           [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 617

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC

    PARC            shift and go to state 637


state 618

    (71) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC

    PARA            shift and go to state 638


state 619

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC PTCOMA

    PARC            shift and go to state 639


state 620

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC PTCOMA

    PARA            shift and go to state 640


state 621

    (198) asignacion -> ID DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 641


state 622

    (199) declaracion -> ID tipo . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> ID tipo . PTCOMA
    (201) declaracion -> ID tipo . DEFAULT expresionPLSQL PTCOMA

    DOSPUNTOS       shift and go to state 642
    PTCOMA          shift and go to state 643
    DEFAULT         shift and go to state 644


state 623

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 645


state 624

    (17) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PTCOMA          reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CALL            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 625

    (194) imprimir -> RAISE lista_imprimir . PTCOMA
    (195) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PTCOMA          shift and go to state 646
    COMA            shift and go to state 647


state 626

    (196) lista_imprimir -> sent_imprimir .

    PTCOMA          reduce using rule 196 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 196 (lista_imprimir -> sent_imprimir .)


state 627

    (197) sent_imprimir -> expresionPLSQL .
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          reduce using rule 197 (sent_imprimir -> expresionPLSQL .)
    COMA            reduce using rule 197 (sent_imprimir -> expresionPLSQL .)
    AND             shift and go to state 125
    OR              shift and go to state 126


state 628

    (190) sentencia_if -> IF expresionPLSQL . THEN instrucciones_funct_list else END IF PTCOMA
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 648
    AND             shift and go to state 125
    OR              shift and go to state 126


state 629

    (185) sentencia_switch -> CASE expresionPLSQL . case_list END CASE PTCOMA
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL
    (186) case_list -> . case_list case
    (187) case_list -> . case
    (188) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (189) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 125
    OR              shift and go to state 126
    WHEN            shift and go to state 651
    ELSE            shift and go to state 652

    case_list                      shift and go to state 649
    case                           shift and go to state 650

state 630

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 653
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 631

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 654
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 632

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    BEGIN           reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 655
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 633

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 656
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 634

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    BEGIN           reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 657
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 635

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 658


state 636

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 659
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 637

    (64) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .

    PARC            reduce using rule 64 (cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)
    COMA            reduce using rule 64 (cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)


state 638

    (71) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC

    ID              shift and go to state 660


state 639

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 661


state 640

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC PTCOMA

    ID              shift and go to state 662


state 641

    (198) asignacion -> ID DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 663
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 642

    (199) declaracion -> ID tipo DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 664


state 643

    (200) declaracion -> ID tipo PTCOMA .

    END             reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    PTCOMA          reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    error           reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    ID              reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    RAISE           reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    IF              reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    CASE            reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    SELECT          reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    CALL            reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    BEGIN           reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    ELSE            reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    ELSEIF          reduce using rule 200 (declaracion -> ID tipo PTCOMA .)
    WHEN            reduce using rule 200 (declaracion -> ID tipo PTCOMA .)


state 644

    (201) declaracion -> ID tipo DEFAULT . expresionPLSQL PTCOMA
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 665
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 645

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 666


state 646

    (194) imprimir -> RAISE lista_imprimir PTCOMA .

    END             reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    PTCOMA          reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    error           reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ID              reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    RAISE           reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    IF              reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CASE            reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    SELECT          reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CALL            reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    BEGIN           reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSE            reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSEIF          reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)
    WHEN            reduce using rule 194 (imprimir -> RAISE lista_imprimir PTCOMA .)


state 647

    (195) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (197) sent_imprimir -> . expresionPLSQL
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    sent_imprimir                  shift and go to state 667
    expresionPLSQL                 shift and go to state 627
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 648

    (190) sentencia_if -> IF expresionPLSQL THEN . instrucciones_funct_list else END IF PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    ELSE            reduce using rule 254 (empty -> .)
    ELSEIF          reduce using rule 254 (empty -> .)
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 668
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 649

    (185) sentencia_switch -> CASE expresionPLSQL case_list . END CASE PTCOMA
    (186) case_list -> case_list . case
    (188) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (189) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 669
    WHEN            shift and go to state 651
    ELSE            shift and go to state 652

    case                           shift and go to state 670

state 650

    (187) case_list -> case .

    END             reduce using rule 187 (case_list -> case .)
    WHEN            reduce using rule 187 (case_list -> case .)
    ELSE            reduce using rule 187 (case_list -> case .)


state 651

    (188) case -> WHEN . expresionPLSQL THEN instrucciones_funct_list
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 671
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 652

    (189) case -> ELSE . instrucciones_funct_list
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)
    WHEN            reduce using rule 254 (empty -> .)
    ELSE            reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 672
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 653

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 673
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 654

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 674
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 655

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 675
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! BEGIN           [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 656

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 676
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 657

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 677
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! BEGIN           [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 658

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 678


state 659

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 679
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 660

    (71) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC

    PARC            shift and go to state 680


state 661

    (133) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .

    error           reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CALL            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    USE             reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    DROP            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    $end            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)


state 662

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC PTCOMA

    PARC            shift and go to state 681


state 663

    (198) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 682
    AND             shift and go to state 125
    OR              shift and go to state 126


state 664

    (199) declaracion -> ID tipo DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 683
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 665

    (201) declaracion -> ID tipo DEFAULT expresionPLSQL . PTCOMA
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 684
    AND             shift and go to state 125
    OR              shift and go to state 126


state 666

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 685


state 667

    (195) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PTCOMA          reduce using rule 195 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 195 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 668

    (190) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list . else END IF PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (191) else -> . ELSE instrucciones_funct_list
    (192) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (193) else -> .
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 193 (else -> .)
    ELSE            shift and go to state 687
    ELSEIF          shift and go to state 688
    END             reduce using rule 193 (else -> .)
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! ELSE            [ reduce using rule 254 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]
  ! END             [ reduce using rule 254 (empty -> .) ]

    else                           shift and go to state 686
    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 669

    (185) sentencia_switch -> CASE expresionPLSQL case_list END . CASE PTCOMA

    CASE            shift and go to state 689


state 670

    (186) case_list -> case_list case .

    END             reduce using rule 186 (case_list -> case_list case .)
    WHEN            reduce using rule 186 (case_list -> case_list case .)
    ELSE            reduce using rule 186 (case_list -> case_list case .)


state 671

    (188) case -> WHEN expresionPLSQL . THEN instrucciones_funct_list
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 690
    AND             shift and go to state 125
    OR              shift and go to state 126


state 672

    (189) case -> ELSE instrucciones_funct_list .
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 189 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 189 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 189 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 189 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 189 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 189 (case -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]
  ! END             [ reduce using rule 254 (empty -> .) ]
  ! WHEN            [ reduce using rule 254 (empty -> .) ]
  ! ELSE            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 673

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 691


state 674

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 692


state 675

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 693
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 676

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 694


state 677

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 695
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 678

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 696


state 679

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 697


state 680

    (71) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .

    PARC            reduce using rule 71 (constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)
    COMA            reduce using rule 71 (constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)


state 681

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 698


state 682

    (198) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 198 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 683

    (199) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 699
    AND             shift and go to state 125
    OR              shift and go to state 126


state 684

    (201) declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .

    END             reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    error           reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ID              reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    IF              reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CASE            reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CALL            reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 201 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)


state 685

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 700


state 686

    (190) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else . END IF PTCOMA

    END             shift and go to state 701


state 687

    (191) else -> ELSE . instrucciones_funct_list
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 702
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 688

    (192) else -> ELSEIF . expresionPLSQL THEN instrucciones_funct_list else
    (223) expresionPLSQL -> . log
    (224) log -> . expresionPLSQL AND expresionPLSQL
    (225) log -> . expresionPLSQL OR expresionPLSQL
    (226) log -> . rel
    (227) rel -> . arit MAYOR arit
    (228) rel -> . arit MENOR arit
    (229) rel -> . arit MAYORIGUAL arit
    (230) rel -> . arit MENORIGUAL arit
    (231) rel -> . arit IGUALIGUAL arit
    (232) rel -> . arit NOTIGUAL arit
    (233) rel -> . arit
    (234) arit -> . arit POR arit
    (235) arit -> . arit DIVISION arit
    (236) arit -> . arit MAS arit
    (237) arit -> . arit MENOS arit
    (238) arit -> . arit MODULO arit
    (239) arit -> . arit ANDB arit
    (240) arit -> . arit SHIFTI arit
    (241) arit -> . arit SHIFTD arit
    (242) arit -> . arit XORB arit
    (243) arit -> . arit ORB arit
    (244) arit -> . PARA expresionPLSQL PARC
    (245) arit -> . ID
    (246) arit -> . CADENA
    (247) arit -> . ENTERO
    (248) arit -> . FLOTANTE
    (249) arit -> . MENOS expresionPLSQL
    (250) arit -> . NOTB expresionPLSQL
    (251) arit -> . NOT expresionPLSQL
    (252) arit -> . TRUE
    (253) arit -> . FALSE

    PARA            shift and go to state 69
    ID              shift and go to state 68
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    MENOS           shift and go to state 76
    NOTB            shift and go to state 80
    NOT             shift and go to state 81
    TRUE            shift and go to state 82
    FALSE           shift and go to state 83

    expresionPLSQL                 shift and go to state 703
    log                            shift and go to state 73
    rel                            shift and go to state 74
    arit                           shift and go to state 75

state 689

    (185) sentencia_switch -> CASE expresionPLSQL case_list END CASE . PTCOMA

    PTCOMA          shift and go to state 704


state 690

    (188) case -> WHEN expresionPLSQL THEN . instrucciones_funct_list
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    END             reduce using rule 254 (empty -> .)
    WHEN            reduce using rule 254 (empty -> .)
    ELSE            reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 705
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 691

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 706


state 692

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 707


state 693

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 708
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 694

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 709


state 695

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 710
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! END             [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 696

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 711


state 697

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 712


state 698

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .

    error           reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CALL            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    USE             reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    DROP            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    $end            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)


state 699

    (199) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 199 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 700

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 713


state 701

    (190) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END . IF PTCOMA

    IF              shift and go to state 714


state 702

    (191) else -> ELSE instrucciones_funct_list .
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 191 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 191 (else -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]
  ! END             [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 703

    (192) else -> ELSEIF expresionPLSQL . THEN instrucciones_funct_list else
    (224) log -> expresionPLSQL . AND expresionPLSQL
    (225) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 715
    AND             shift and go to state 125
    OR              shift and go to state 126


state 704

    (185) sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .

    END             reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    PTCOMA          reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    error           reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ID              reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    RAISE           reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    IF              reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CASE            reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    SELECT          reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CALL            reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    BEGIN           reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSE            reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSEIF          reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    WHEN            reduce using rule 185 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)


state 705

    (188) case -> WHEN expresionPLSQL THEN instrucciones_funct_list .
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 188 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 188 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 188 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    END             reduce using rule 188 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    WHEN            reduce using rule 188 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    ELSE            reduce using rule 188 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]
  ! END             [ reduce using rule 254 (empty -> .) ]
  ! WHEN            [ reduce using rule 254 (empty -> .) ]
  ! ELSE            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 706

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 716


state 707

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 717


state 708

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 718


state 709

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 719


state 710

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 720


state 711

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 721


state 712

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 722


state 713

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 723


state 714

    (190) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF . PTCOMA

    PTCOMA          shift and go to state 724


state 715

    (192) else -> ELSEIF expresionPLSQL THEN . instrucciones_funct_list else
    (17) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (18) instrucciones_funct_list -> . instrucciones_funct_sent
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19
    ELSE            reduce using rule 254 (empty -> .)
    ELSEIF          reduce using rule 254 (empty -> .)
    END             reduce using rule 254 (empty -> .)

  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 725
    instrucciones_funct_sent       shift and go to state 600
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 716

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 726


state 717

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 727


state 718

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 728


state 719

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 729


state 720

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 730


state 721

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 731


state 722

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 732


state 723

    (168) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 168 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 724

    (190) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .

    END             reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    PTCOMA          reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    error           reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ID              reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    RAISE           reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    IF              reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CASE            reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    SELECT          reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CALL            reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    BEGIN           reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSE            reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSEIF          reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    WHEN            reduce using rule 190 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)


state 725

    (192) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list . else
    (17) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (191) else -> . ELSE instrucciones_funct_list
    (192) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (193) else -> .
    (19) instrucciones_funct_sent -> . asignacion
    (20) instrucciones_funct_sent -> . declaracion
    (21) instrucciones_funct_sent -> . imprimir
    (22) instrucciones_funct_sent -> . sentencia_if
    (23) instrucciones_funct_sent -> . sentencia_switch
    (24) instrucciones_funct_sent -> . PTCOMA
    (25) instrucciones_funct_sent -> . llamada_funcion
    (26) instrucciones_funct_sent -> . empty
    (27) instrucciones_funct_sent -> . error
    (198) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (199) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (200) declaracion -> . ID tipo PTCOMA
    (201) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (194) imprimir -> . RAISE lista_imprimir PTCOMA
    (190) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (185) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (176) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (177) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (254) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 193 (else -> .)
    ELSE            shift and go to state 687
    ELSEIF          shift and go to state 688
    END             reduce using rule 193 (else -> .)
    PTCOMA          shift and go to state 599
    error           shift and go to state 608
    ID              shift and go to state 597
    RAISE           shift and go to state 609
    IF              shift and go to state 610
    CASE            shift and go to state 611
    SELECT          shift and go to state 18
    CALL            shift and go to state 19

  ! ELSE            [ reduce using rule 254 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 254 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 254 (empty -> .) ]
  ! error           [ reduce using rule 254 (empty -> .) ]
  ! ID              [ reduce using rule 254 (empty -> .) ]
  ! RAISE           [ reduce using rule 254 (empty -> .) ]
  ! IF              [ reduce using rule 254 (empty -> .) ]
  ! CASE            [ reduce using rule 254 (empty -> .) ]
  ! SELECT          [ reduce using rule 254 (empty -> .) ]
  ! CALL            [ reduce using rule 254 (empty -> .) ]
  ! END             [ reduce using rule 254 (empty -> .) ]

    else                           shift and go to state 733
    instrucciones_funct_sent       shift and go to state 624
    asignacion                     shift and go to state 601
    declaracion                    shift and go to state 602
    imprimir                       shift and go to state 603
    sentencia_if                   shift and go to state 604
    sentencia_switch               shift and go to state 605
    llamada_funcion                shift and go to state 606
    empty                          shift and go to state 607

state 726

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 734


state 727

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 735


state 728

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 736


state 729

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 737


state 730

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 738


state 731

    (172) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 172 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 732

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 739


state 733

    (192) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .

    END             reduce using rule 192 (else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .)


state 734

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 740


state 735

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 741


state 736

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 742


state 737

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 743


state 738

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 744


state 739

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 745


state 740

    (169) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 169 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 741

    (170) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 170 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 742

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 746


state 743

    (174) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 174 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 744

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 747


state 745

    (173) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 173 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 746

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 748


state 747

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 749


state 748

    (171) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 171 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 749

    (175) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 175 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 75 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 75 resolved as shift
WARNING: shift/reduce conflict for POR in state 75 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 75 resolved as shift
WARNING: shift/reduce conflict for MAS in state 75 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 75 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 75 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 75 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 75 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 75 resolved as shift
WARNING: shift/reduce conflict for XORB in state 75 resolved as shift
WARNING: shift/reduce conflict for ORB in state 75 resolved as shift
WARNING: shift/reduce conflict for MAS in state 457 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 457 resolved as shift
WARNING: shift/reduce conflict for POR in state 457 resolved as shift
WARNING: shift/reduce conflict for DIV in state 457 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 457 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 457 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 457 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 457 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 457 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 457 resolved as shift
WARNING: shift/reduce conflict for MAS in state 525 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 525 resolved as shift
WARNING: shift/reduce conflict for POR in state 525 resolved as shift
WARNING: shift/reduce conflict for DIV in state 525 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 525 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 525 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 525 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 525 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 525 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 525 resolved as shift
WARNING: shift/reduce conflict for MAS in state 529 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 529 resolved as shift
WARNING: shift/reduce conflict for POR in state 529 resolved as shift
WARNING: shift/reduce conflict for DIV in state 529 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 529 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 529 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 529 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 529 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 529 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 529 resolved as shift
WARNING: shift/reduce conflict for MAS in state 531 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 531 resolved as shift
WARNING: shift/reduce conflict for POR in state 531 resolved as shift
WARNING: shift/reduce conflict for DIV in state 531 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 531 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 531 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 531 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 531 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 531 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 531 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 584 resolved as shift
WARNING: shift/reduce conflict for error in state 584 resolved as shift
WARNING: shift/reduce conflict for ID in state 584 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 584 resolved as shift
WARNING: shift/reduce conflict for IF in state 584 resolved as shift
WARNING: shift/reduce conflict for CASE in state 584 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 584 resolved as shift
WARNING: shift/reduce conflict for CALL in state 584 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 585 resolved as shift
WARNING: shift/reduce conflict for error in state 585 resolved as shift
WARNING: shift/reduce conflict for ID in state 585 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 585 resolved as shift
WARNING: shift/reduce conflict for IF in state 585 resolved as shift
WARNING: shift/reduce conflict for CASE in state 585 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 585 resolved as shift
WARNING: shift/reduce conflict for CALL in state 585 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 588 resolved as shift
WARNING: shift/reduce conflict for error in state 588 resolved as shift
WARNING: shift/reduce conflict for ID in state 588 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 588 resolved as shift
WARNING: shift/reduce conflict for IF in state 588 resolved as shift
WARNING: shift/reduce conflict for CASE in state 588 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 588 resolved as shift
WARNING: shift/reduce conflict for CALL in state 588 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 589 resolved as shift
WARNING: shift/reduce conflict for error in state 589 resolved as shift
WARNING: shift/reduce conflict for ID in state 589 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 589 resolved as shift
WARNING: shift/reduce conflict for IF in state 589 resolved as shift
WARNING: shift/reduce conflict for CASE in state 589 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 589 resolved as shift
WARNING: shift/reduce conflict for CALL in state 589 resolved as shift
WARNING: shift/reduce conflict for END in state 598 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 598 resolved as shift
WARNING: shift/reduce conflict for error in state 598 resolved as shift
WARNING: shift/reduce conflict for ID in state 598 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 598 resolved as shift
WARNING: shift/reduce conflict for IF in state 598 resolved as shift
WARNING: shift/reduce conflict for CASE in state 598 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 598 resolved as shift
WARNING: shift/reduce conflict for CALL in state 598 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 612 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 612 resolved as shift
WARNING: shift/reduce conflict for error in state 612 resolved as shift
WARNING: shift/reduce conflict for ID in state 612 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 612 resolved as shift
WARNING: shift/reduce conflict for IF in state 612 resolved as shift
WARNING: shift/reduce conflict for CASE in state 612 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 612 resolved as shift
WARNING: shift/reduce conflict for CALL in state 612 resolved as shift
WARNING: shift/reduce conflict for END in state 615 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 615 resolved as shift
WARNING: shift/reduce conflict for error in state 615 resolved as shift
WARNING: shift/reduce conflict for ID in state 615 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 615 resolved as shift
WARNING: shift/reduce conflict for IF in state 615 resolved as shift
WARNING: shift/reduce conflict for CASE in state 615 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 615 resolved as shift
WARNING: shift/reduce conflict for CALL in state 615 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 616 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 616 resolved as shift
WARNING: shift/reduce conflict for error in state 616 resolved as shift
WARNING: shift/reduce conflict for ID in state 616 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 616 resolved as shift
WARNING: shift/reduce conflict for IF in state 616 resolved as shift
WARNING: shift/reduce conflict for CASE in state 616 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 616 resolved as shift
WARNING: shift/reduce conflict for CALL in state 616 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 630 resolved as shift
WARNING: shift/reduce conflict for error in state 630 resolved as shift
WARNING: shift/reduce conflict for ID in state 630 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 630 resolved as shift
WARNING: shift/reduce conflict for IF in state 630 resolved as shift
WARNING: shift/reduce conflict for CASE in state 630 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 630 resolved as shift
WARNING: shift/reduce conflict for CALL in state 630 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 631 resolved as shift
WARNING: shift/reduce conflict for error in state 631 resolved as shift
WARNING: shift/reduce conflict for ID in state 631 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 631 resolved as shift
WARNING: shift/reduce conflict for IF in state 631 resolved as shift
WARNING: shift/reduce conflict for CASE in state 631 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 631 resolved as shift
WARNING: shift/reduce conflict for CALL in state 631 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 632 resolved as shift
WARNING: shift/reduce conflict for error in state 632 resolved as shift
WARNING: shift/reduce conflict for ID in state 632 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 632 resolved as shift
WARNING: shift/reduce conflict for IF in state 632 resolved as shift
WARNING: shift/reduce conflict for CASE in state 632 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 632 resolved as shift
WARNING: shift/reduce conflict for CALL in state 632 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 633 resolved as shift
WARNING: shift/reduce conflict for error in state 633 resolved as shift
WARNING: shift/reduce conflict for ID in state 633 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 633 resolved as shift
WARNING: shift/reduce conflict for IF in state 633 resolved as shift
WARNING: shift/reduce conflict for CASE in state 633 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 633 resolved as shift
WARNING: shift/reduce conflict for CALL in state 633 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 634 resolved as shift
WARNING: shift/reduce conflict for error in state 634 resolved as shift
WARNING: shift/reduce conflict for ID in state 634 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 634 resolved as shift
WARNING: shift/reduce conflict for IF in state 634 resolved as shift
WARNING: shift/reduce conflict for CASE in state 634 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 634 resolved as shift
WARNING: shift/reduce conflict for CALL in state 634 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 636 resolved as shift
WARNING: shift/reduce conflict for error in state 636 resolved as shift
WARNING: shift/reduce conflict for ID in state 636 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 636 resolved as shift
WARNING: shift/reduce conflict for IF in state 636 resolved as shift
WARNING: shift/reduce conflict for CASE in state 636 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 636 resolved as shift
WARNING: shift/reduce conflict for CALL in state 636 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 648 resolved as shift
WARNING: shift/reduce conflict for error in state 648 resolved as shift
WARNING: shift/reduce conflict for ID in state 648 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 648 resolved as shift
WARNING: shift/reduce conflict for IF in state 648 resolved as shift
WARNING: shift/reduce conflict for CASE in state 648 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 648 resolved as shift
WARNING: shift/reduce conflict for CALL in state 648 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 652 resolved as shift
WARNING: shift/reduce conflict for error in state 652 resolved as shift
WARNING: shift/reduce conflict for ID in state 652 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 652 resolved as shift
WARNING: shift/reduce conflict for IF in state 652 resolved as shift
WARNING: shift/reduce conflict for CASE in state 652 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 652 resolved as shift
WARNING: shift/reduce conflict for CALL in state 652 resolved as shift
WARNING: shift/reduce conflict for END in state 653 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 653 resolved as shift
WARNING: shift/reduce conflict for error in state 653 resolved as shift
WARNING: shift/reduce conflict for ID in state 653 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 653 resolved as shift
WARNING: shift/reduce conflict for IF in state 653 resolved as shift
WARNING: shift/reduce conflict for CASE in state 653 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 653 resolved as shift
WARNING: shift/reduce conflict for CALL in state 653 resolved as shift
WARNING: shift/reduce conflict for END in state 654 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 654 resolved as shift
WARNING: shift/reduce conflict for error in state 654 resolved as shift
WARNING: shift/reduce conflict for ID in state 654 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 654 resolved as shift
WARNING: shift/reduce conflict for IF in state 654 resolved as shift
WARNING: shift/reduce conflict for CASE in state 654 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 654 resolved as shift
WARNING: shift/reduce conflict for CALL in state 654 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 655 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 655 resolved as shift
WARNING: shift/reduce conflict for error in state 655 resolved as shift
WARNING: shift/reduce conflict for ID in state 655 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 655 resolved as shift
WARNING: shift/reduce conflict for IF in state 655 resolved as shift
WARNING: shift/reduce conflict for CASE in state 655 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 655 resolved as shift
WARNING: shift/reduce conflict for CALL in state 655 resolved as shift
WARNING: shift/reduce conflict for END in state 656 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 656 resolved as shift
WARNING: shift/reduce conflict for error in state 656 resolved as shift
WARNING: shift/reduce conflict for ID in state 656 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 656 resolved as shift
WARNING: shift/reduce conflict for IF in state 656 resolved as shift
WARNING: shift/reduce conflict for CASE in state 656 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 656 resolved as shift
WARNING: shift/reduce conflict for CALL in state 656 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 657 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 657 resolved as shift
WARNING: shift/reduce conflict for error in state 657 resolved as shift
WARNING: shift/reduce conflict for ID in state 657 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 657 resolved as shift
WARNING: shift/reduce conflict for IF in state 657 resolved as shift
WARNING: shift/reduce conflict for CASE in state 657 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 657 resolved as shift
WARNING: shift/reduce conflict for CALL in state 657 resolved as shift
WARNING: shift/reduce conflict for END in state 659 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 659 resolved as shift
WARNING: shift/reduce conflict for error in state 659 resolved as shift
WARNING: shift/reduce conflict for ID in state 659 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 659 resolved as shift
WARNING: shift/reduce conflict for IF in state 659 resolved as shift
WARNING: shift/reduce conflict for CASE in state 659 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 659 resolved as shift
WARNING: shift/reduce conflict for CALL in state 659 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 668 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 668 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 668 resolved as shift
WARNING: shift/reduce conflict for error in state 668 resolved as shift
WARNING: shift/reduce conflict for ID in state 668 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 668 resolved as shift
WARNING: shift/reduce conflict for IF in state 668 resolved as shift
WARNING: shift/reduce conflict for CASE in state 668 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 668 resolved as shift
WARNING: shift/reduce conflict for CALL in state 668 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 672 resolved as shift
WARNING: shift/reduce conflict for error in state 672 resolved as shift
WARNING: shift/reduce conflict for ID in state 672 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 672 resolved as shift
WARNING: shift/reduce conflict for IF in state 672 resolved as shift
WARNING: shift/reduce conflict for CASE in state 672 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 672 resolved as shift
WARNING: shift/reduce conflict for CALL in state 672 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 675 resolved as shift
WARNING: shift/reduce conflict for error in state 675 resolved as shift
WARNING: shift/reduce conflict for ID in state 675 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 675 resolved as shift
WARNING: shift/reduce conflict for IF in state 675 resolved as shift
WARNING: shift/reduce conflict for CASE in state 675 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 675 resolved as shift
WARNING: shift/reduce conflict for CALL in state 675 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 677 resolved as shift
WARNING: shift/reduce conflict for error in state 677 resolved as shift
WARNING: shift/reduce conflict for ID in state 677 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 677 resolved as shift
WARNING: shift/reduce conflict for IF in state 677 resolved as shift
WARNING: shift/reduce conflict for CASE in state 677 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 677 resolved as shift
WARNING: shift/reduce conflict for CALL in state 677 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 687 resolved as shift
WARNING: shift/reduce conflict for error in state 687 resolved as shift
WARNING: shift/reduce conflict for ID in state 687 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 687 resolved as shift
WARNING: shift/reduce conflict for IF in state 687 resolved as shift
WARNING: shift/reduce conflict for CASE in state 687 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 687 resolved as shift
WARNING: shift/reduce conflict for CALL in state 687 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 690 resolved as shift
WARNING: shift/reduce conflict for error in state 690 resolved as shift
WARNING: shift/reduce conflict for ID in state 690 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 690 resolved as shift
WARNING: shift/reduce conflict for IF in state 690 resolved as shift
WARNING: shift/reduce conflict for CASE in state 690 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 690 resolved as shift
WARNING: shift/reduce conflict for CALL in state 690 resolved as shift
WARNING: shift/reduce conflict for END in state 693 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 693 resolved as shift
WARNING: shift/reduce conflict for error in state 693 resolved as shift
WARNING: shift/reduce conflict for ID in state 693 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 693 resolved as shift
WARNING: shift/reduce conflict for IF in state 693 resolved as shift
WARNING: shift/reduce conflict for CASE in state 693 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 693 resolved as shift
WARNING: shift/reduce conflict for CALL in state 693 resolved as shift
WARNING: shift/reduce conflict for END in state 695 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 695 resolved as shift
WARNING: shift/reduce conflict for error in state 695 resolved as shift
WARNING: shift/reduce conflict for ID in state 695 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 695 resolved as shift
WARNING: shift/reduce conflict for IF in state 695 resolved as shift
WARNING: shift/reduce conflict for CASE in state 695 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 695 resolved as shift
WARNING: shift/reduce conflict for CALL in state 695 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 702 resolved as shift
WARNING: shift/reduce conflict for error in state 702 resolved as shift
WARNING: shift/reduce conflict for ID in state 702 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 702 resolved as shift
WARNING: shift/reduce conflict for IF in state 702 resolved as shift
WARNING: shift/reduce conflict for CASE in state 702 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 702 resolved as shift
WARNING: shift/reduce conflict for CALL in state 702 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 705 resolved as shift
WARNING: shift/reduce conflict for error in state 705 resolved as shift
WARNING: shift/reduce conflict for ID in state 705 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 705 resolved as shift
WARNING: shift/reduce conflict for IF in state 705 resolved as shift
WARNING: shift/reduce conflict for CASE in state 705 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 705 resolved as shift
WARNING: shift/reduce conflict for CALL in state 705 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 715 resolved as shift
WARNING: shift/reduce conflict for error in state 715 resolved as shift
WARNING: shift/reduce conflict for ID in state 715 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 715 resolved as shift
WARNING: shift/reduce conflict for IF in state 715 resolved as shift
WARNING: shift/reduce conflict for CASE in state 715 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 715 resolved as shift
WARNING: shift/reduce conflict for CALL in state 715 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 725 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 725 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 725 resolved as shift
WARNING: shift/reduce conflict for error in state 725 resolved as shift
WARNING: shift/reduce conflict for ID in state 725 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 725 resolved as shift
WARNING: shift/reduce conflict for IF in state 725 resolved as shift
WARNING: shift/reduce conflict for CASE in state 725 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 725 resolved as shift
WARNING: shift/reduce conflict for CALL in state 725 resolved as shift
WARNING: reduce/reduce conflict in state 668 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 668
WARNING: reduce/reduce conflict in state 672 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 672
WARNING: reduce/reduce conflict in state 702 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 702
WARNING: reduce/reduce conflict in state 705 resolved using rule (case -> WHEN expresionPLSQL THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 705
WARNING: reduce/reduce conflict in state 725 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 725
