Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORCHETEA
    CORCHETEC
    LLAVEA
    LLAVEC

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> createDB_insrt
Rule 8     instrucciones_global_sent -> show_databases_instr
Rule 9     instrucciones_global_sent -> show_tables_instr
Rule 10    instrucciones_global_sent -> use_database_instr
Rule 11    instrucciones_global_sent -> drop_database_instr
Rule 12    instrucciones_global_sent -> create_Table_isnrt
Rule 13    instrucciones_global_sent -> error
Rule 14    instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 15    instrucciones_funct_list -> instrucciones_funct_sent
Rule 16    instrucciones_funct_sent -> asignacion
Rule 17    instrucciones_funct_sent -> declaracion
Rule 18    instrucciones_funct_sent -> imprimir
Rule 19    instrucciones_funct_sent -> sentencia_if
Rule 20    instrucciones_funct_sent -> sentencia_switch
Rule 21    instrucciones_funct_sent -> PTCOMA
Rule 22    instrucciones_funct_sent -> llamada_funcion
Rule 23    instrucciones_funct_sent -> empty
Rule 24    instrucciones_funct_sent -> error
Rule 25    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 26    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 27    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 28    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 29    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 30    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 31    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 32    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 33    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 34    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 35    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 36    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 37    createDB_dosParam -> OWNER string_type MODE ENTERO
Rule 38    createDB_dosParam -> MODE ENTERO OWNER string_type
Rule 39    createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO
Rule 40    createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO
Rule 41    createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type
Rule 42    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 43    createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO
Rule 44    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 45    createDB_unParam -> OWNER IGUAL string_type
Rule 46    createDB_unParam -> MODE IGUAL ENTERO
Rule 47    createDB_unParam -> OWNER string_type
Rule 48    createDB_unParam -> MODE ENTERO
Rule 49    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 50    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 51    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 52    show_tables_instr -> SHOW TABLES PTCOMA
Rule 53    use_database_instr -> USE ID PTCOMA
Rule 54    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
Rule 55    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
Rule 56    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 57    cuerpo_createTable_lista -> cuerpo_createTable
Rule 58    cuerpo_createTable -> ID TIPO_DATO_DEF
Rule 59    cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options
Rule 60    createTable_options -> createTable_options cT_options
Rule 61    createTable_options -> cT_options
Rule 62    cT_options -> N_null
Rule 63    cT_options -> C_unique
Rule 64    cT_options -> llave
Rule 65    cT_options -> O_DEFAULT
Rule 66    N_null -> NOT NULL
Rule 67    N_null -> NULL
Rule 68    C_unique -> UNIQUE
Rule 69    C_unique -> CONSTRAINT ID UNIQUE
Rule 70    llave -> PRIMARY KEY
Rule 71    llave -> FOREIGN KEY
Rule 72    O_DEFAULT -> DEFAULT expresion_dato_default
Rule 73    expresion_dato_default -> ENTERO
Rule 74    expresion_dato_default -> FLOTANTE
Rule 75    expresion_dato_default -> CADENA
Rule 76    TIPO_DATO_DEF -> TEXT
Rule 77    TIPO_DATO_DEF -> FLOAT
Rule 78    TIPO_DATO_DEF -> INTEGER
Rule 79    TIPO_DATO_DEF -> BOOLEAN
Rule 80    TIPO_DATO_DEF -> SMALLINT
Rule 81    TIPO_DATO_DEF -> MONEY
Rule 82    TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC
Rule 83    TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC
Rule 84    TIPO_DATO_DEF -> BIGINT
Rule 85    TIPO_DATO_DEF -> REAL
Rule 86    TIPO_DATO_DEF -> DOUBLE PRECISION
Rule 87    TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time
Rule 88    TIPO_DATO_DEF -> INTERVAL
Rule 89    TIPO_DATO_DEF -> TIME
Rule 90    TIPO_DATO_DEF -> TIMESTAMP
Rule 91    TIPO_DATO_DEF -> DATE
Rule 92    TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC
Rule 93    TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC
Rule 94    TIPO_DATO_DEF -> CHAR PARA ENTERO PARC
Rule 95    TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC
Rule 96    TIPO_DATO_DEF -> CHAR PARA PARC
Rule 97    TIPO_DATO_DEF -> CHARACTER PARA PARC
Rule 98    extract_time -> YEAR
Rule 99    extract_time -> DAY
Rule 100   extract_time -> MONTH
Rule 101   extract_time -> HOUR
Rule 102   extract_time -> MINUTE
Rule 103   extract_time -> SECOND
Rule 104   string_type -> CADENA
Rule 105   string_type -> ID
Rule 106   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 107   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 108   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 109   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 110   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 111   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 112   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 113   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 114   llamada_funcion -> SELECT ID PARA params PARC PTCOMA
Rule 115   llamada_funcion -> CALL ID PARA params PARC PTCOMA
Rule 116   params -> params COMA expresionPLSQL
Rule 117   params -> expresionPLSQL
Rule 118   params -> empty
Rule 119   parametros -> parametros COMA parametro
Rule 120   parametros -> parametro
Rule 121   parametro -> ID tipo
Rule 122   parametro -> empty
Rule 123   sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA
Rule 124   case_list -> case_list case
Rule 125   case_list -> case
Rule 126   case -> WHEN expresionPLSQL THEN instrucciones_funct_list
Rule 127   case -> ELSE instrucciones_funct_list
Rule 128   sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
Rule 129   else -> ELSE instrucciones_funct_list
Rule 130   else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else
Rule 131   else -> <empty>
Rule 132   imprimir -> RAISE lista_imprimir PTCOMA
Rule 133   lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 134   lista_imprimir -> sent_imprimir
Rule 135   sent_imprimir -> expresionPLSQL
Rule 136   asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 137   declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 138   declaracion -> ID tipo PTCOMA
Rule 139   declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA
Rule 140   tipo -> INTEGER
Rule 141   tipo -> SMALLINT
Rule 142   tipo -> BIGINT
Rule 143   tipo -> DECIMAL
Rule 144   tipo -> NUMERIC
Rule 145   tipo -> REAL
Rule 146   tipo -> CHAR
Rule 147   tipo -> DOUBLE
Rule 148   tipo -> PRECISION
Rule 149   tipo -> MONEY
Rule 150   tipo -> FLOAT
Rule 151   tipo -> BOOLEAN
Rule 152   tipo -> VOID
Rule 153   tipo -> CHAR PARA ENTERO PARC
Rule 154   tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 155   tipo -> VARCHAR PARA ENTERO PARC
Rule 156   tipo -> CHARACTER PARA ENTERO PARC
Rule 157   tipo -> TEXT
Rule 158   tipo -> TIME
Rule 159   tipo -> TIMESTAMP
Rule 160   tipo -> DATE
Rule 161   expresionPLSQL -> log
Rule 162   log -> expresionPLSQL AND expresionPLSQL
Rule 163   log -> expresionPLSQL OR expresionPLSQL
Rule 164   log -> rel
Rule 165   rel -> arit MAYOR arit
Rule 166   rel -> arit MENOR arit
Rule 167   rel -> arit MAYORIGUAL arit
Rule 168   rel -> arit MENORIGUAL arit
Rule 169   rel -> arit IGUALIGUAL arit
Rule 170   rel -> arit NOTIGUAL arit
Rule 171   rel -> arit
Rule 172   arit -> arit POR arit
Rule 173   arit -> arit DIV arit
Rule 174   arit -> arit MAS arit
Rule 175   arit -> arit MENOS arit
Rule 176   arit -> arit MOD arit
Rule 177   arit -> arit ANDB arit
Rule 178   arit -> arit SHIFTI arit
Rule 179   arit -> arit SHIFTD arit
Rule 180   arit -> arit XORB arit
Rule 181   arit -> arit ORB arit
Rule 182   arit -> PARA expresionPLSQL PARC
Rule 183   arit -> ID
Rule 184   arit -> CADENA
Rule 185   arit -> ENTERO
Rule 186   arit -> FLOTANTE
Rule 187   arit -> MENOS expresionPLSQL
Rule 188   arit -> NOTB expresionPLSQL
Rule 189   arit -> NOT expresionPLSQL
Rule 190   arit -> TRUE
Rule 191   arit -> FALSE
Rule 192   empty -> <empty>

Terminals, with rules where they appear

AND                  : 162
ANDB                 : 177
AS                   : 106 107 108 109 110 111 112 113
BEGIN                : 106 107 108 109 110 111 112 113
BIGINT               : 84 142
BOOLEAN              : 79 151
CADENA               : 75 104 184
CALL                 : 115
CASE                 : 123 123
CHAR                 : 94 96 146 153
CHARACTER            : 92 95 97 154 156
COMA                 : 56 82 83 116 119 133
CONSTRAINT           : 69
CORCHETEA            : 
CORCHETEC            : 
CREATE               : 25 26 27 28 29 30 31 32 33 34 35 36 54 55 106 107 108 109 110 111 112 113
DATABASE             : 25 26 27 28 29 30 31 32 33 34 35 36 49 50
DATABASES            : 51
DATE                 : 91 160
DAY                  : 99
DECIMAL              : 82 143
DECLARE              : 107 109 111 113
DEFAULT              : 72 139
DIV                  : 173
DOLAR                : 106 106 106 106 107 107 107 107 108 108 108 108 109 109 109 109 110 110 110 110 111 111 111 111 112 112 112 112 113 113 113 113
DOSPUNTOS            : 136 137
DOUBLE               : 86 147
DROP                 : 49 50
ELSE                 : 127 129
ELSEIF               : 130
END                  : 106 107 108 109 110 111 112 113 123 128
ENTERO               : 37 38 39 40 41 42 43 44 46 48 73 82 82 83 83 92 93 94 95 153 154 155 156 185
EXISTS               : 27 28 31 32 35 36 49
FALSE                : 191
FLOAT                : 77 150
FLOTANTE             : 74 186
FOREIGN              : 71
FUNCTION             : 106 107 108 109
HOUR                 : 101
ID                   : 25 26 27 28 29 30 31 32 33 34 35 36 42 44 49 50 53 54 55 55 58 59 69 105 106 107 108 109 110 111 112 113 114 115 121 136 137 138 139 183
IF                   : 27 28 31 32 35 36 49 128 128
IGUAL                : 39 40 41 42 43 43 44 44 45 46 136 137
IGUALIGUAL           : 169
INHERITS             : 55
INTEGER              : 78 140
INTERVAL             : 87 88
KEY                  : 70 71
LANGUAGE             : 106 107 108 109 110 111 112 113
LLAVEA               : 
LLAVEC               : 
MAS                  : 174
MAYOR                : 165
MAYORIGUAL           : 167
MENOR                : 166
MENORIGUAL           : 168
MENOS                : 175 187
MINUTE               : 102
MOD                  : 176
MODE                 : 37 38 39 40 41 42 43 44 46 48
MONEY                : 81 149
MONTH                : 100
NOT                  : 27 28 31 32 35 36 66 189
NOTB                 : 188
NOTIGUAL             : 170
NULL                 : 66 67
NUMERIC              : 83 144
OR                   : 26 28 30 32 34 36 108 109 112 113 163
ORB                  : 181
OWNER                : 37 38 39 40 41 42 43 44 45 47
PARA                 : 54 55 55 82 83 92 93 94 95 96 97 106 107 108 109 110 111 112 113 114 115 153 154 155 156 182
PARC                 : 54 55 55 82 83 92 93 94 95 96 97 106 107 108 109 110 111 112 113 114 115 153 154 155 156 182
PLPGSQL              : 106 107 108 109 110 111 112 113
POR                  : 172
PRECISION            : 86 148
PRIMARY              : 70
PROCEDURE            : 110 111 112 113
PTCOMA               : 21 25 26 27 28 29 30 31 32 33 34 35 36 49 50 51 52 53 54 55 106 106 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 115 123 128 132 136 137 138 139
RAISE                : 132
REAL                 : 85 145
REPLACE              : 26 28 30 32 34 36 108 109 112 113
RETURNS              : 106 107 108 109 110 111 112 113
SECOND               : 103
SELECT               : 114
SHIFTD               : 179
SHIFTI               : 178
SHOW                 : 51 52
SMALLINT             : 80 141
TABLE                : 54 55
TABLES               : 52
TEXT                 : 76 157
THEN                 : 126 128 130
TIME                 : 89 158
TIMESTAMP            : 90 159
TO                   : 87
TRUE                 : 190
UNIQUE               : 68 69
USE                  : 53
VARCHAR              : 93 155
VARYING              : 92 154
VOID                 : 152
WHEN                 : 126
XORB                 : 180
YEAR                 : 98
error                : 13 24

Nonterminals, with rules where they appear

C_unique             : 63
N_null               : 62
O_DEFAULT            : 65
TIPO_DATO_DEF        : 58 59
arit                 : 165 165 166 166 167 167 168 168 169 169 170 170 171 172 172 173 173 174 174 175 175 176 176 177 177 178 178 179 179 180 180 181 181
asignacion           : 16
cT_options           : 60 61
case                 : 124 125
case_list            : 123 124
codigo               : 1
createDB_dosParam    : 33 34 35 36
createDB_insrt       : 7
createDB_unParam     : 29 30 31 32
createTable_options  : 59 60
create_Table_isnrt   : 12
cuerpo_createTable   : 56 57
cuerpo_createTable_lista : 54 55 56
declaracion          : 17
drop_database_instr  : 11
else                 : 128 130
empty                : 23 118 122
expresionPLSQL       : 116 117 123 126 128 130 135 136 137 139 162 162 163 163 182 187 188 189
expresion_dato_default : 72
extract_time         : 87 87
funcion              : 5
imprimir             : 18
inicio               : 0
instrucciones_funct_list : 14 106 107 107 108 109 109 110 111 111 112 113 113 126 127 128 129 130
instrucciones_funct_sent : 14 15
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_imprimir       : 132 133
llamada_funcion      : 6 22
llave                : 64
log                  : 161
parametro            : 119 120
parametros           : 106 107 108 109 110 111 112 113 119
params               : 114 115 116
rel                  : 164
sent_imprimir        : 133 134
sentencia_if         : 19
sentencia_switch     : 20
show_databases_instr : 8
show_tables_instr    : 9
string_type          : 37 38 39 40 41 43 45 47
tipo                 : 106 107 108 109 110 111 112 113 121 137 138 139
use_database_instr   : 10

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . error
    (106) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (108) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (110) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (112) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (25) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (26) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (51) show_databases_instr -> . SHOW DATABASES PTCOMA
    (52) show_tables_instr -> . SHOW TABLES PTCOMA
    (53) use_database_instr -> . USE ID PTCOMA
    (49) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (50) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (54) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (55) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    error           shift and go to state 13
    CREATE          shift and go to state 14
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    SHOW            shift and go to state 17
    USE             shift and go to state 18
    DROP            shift and go to state 19

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . error
    (106) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (108) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (110) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (112) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (25) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (26) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (51) show_databases_instr -> . SHOW DATABASES PTCOMA
    (52) show_tables_instr -> . SHOW TABLES PTCOMA
    (53) use_database_instr -> . USE ID PTCOMA
    (49) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (50) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (54) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (55) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 13
    CREATE          shift and go to state 14
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    SHOW            shift and go to state 17
    USE             shift and go to state 18
    DROP            shift and go to state 19

    instrucciones_global_sent      shift and go to state 20
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CALL            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SHOW            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    USE             reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    DROP            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CALL            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SHOW            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    USE             reduce using rule 5 (instrucciones_global_sent -> funcion .)
    DROP            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CALL            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SHOW            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    USE             reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    DROP            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> createDB_insrt .

    error           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CALL            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SHOW            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    USE             reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    DROP            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    $end            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)


state 8

    (8) instrucciones_global_sent -> show_databases_instr .

    error           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CREATE          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SELECT          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CALL            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SHOW            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    USE             reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    DROP            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    $end            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)


state 9

    (9) instrucciones_global_sent -> show_tables_instr .

    error           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CREATE          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SELECT          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CALL            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SHOW            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    USE             reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    DROP            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    $end            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)


state 10

    (10) instrucciones_global_sent -> use_database_instr .

    error           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CREATE          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SELECT          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CALL            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SHOW            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    USE             reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    DROP            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    $end            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)


state 11

    (11) instrucciones_global_sent -> drop_database_instr .

    error           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CREATE          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SELECT          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CALL            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SHOW            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    USE             reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    DROP            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    $end            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)


state 12

    (12) instrucciones_global_sent -> create_Table_isnrt .

    error           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CREATE          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SELECT          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CALL            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SHOW            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    USE             reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    DROP            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    $end            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)


state 13

    (13) instrucciones_global_sent -> error .

    error           reduce using rule 13 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 13 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 13 (instrucciones_global_sent -> error .)
    CALL            reduce using rule 13 (instrucciones_global_sent -> error .)
    SHOW            reduce using rule 13 (instrucciones_global_sent -> error .)
    USE             reduce using rule 13 (instrucciones_global_sent -> error .)
    DROP            reduce using rule 13 (instrucciones_global_sent -> error .)
    $end            reduce using rule 13 (instrucciones_global_sent -> error .)


state 14

    (106) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (108) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (110) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (112) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (25) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (26) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (27) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (54) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (55) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    FUNCTION        shift and go to state 21
    OR              shift and go to state 22
    PROCEDURE       shift and go to state 23
    DATABASE        shift and go to state 24
    TABLE           shift and go to state 25


state 15

    (114) llamada_funcion -> SELECT . ID PARA params PARC PTCOMA

    ID              shift and go to state 26


state 16

    (115) llamada_funcion -> CALL . ID PARA params PARC PTCOMA

    ID              shift and go to state 27


state 17

    (51) show_databases_instr -> SHOW . DATABASES PTCOMA
    (52) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 28
    TABLES          shift and go to state 29


state 18

    (53) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 30


state 19

    (49) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (50) drop_database_instr -> DROP . DATABASE ID PTCOMA

    DATABASE        shift and go to state 31


state 20

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CALL            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SHOW            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    USE             reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    DROP            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 21

    (106) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 32


state 22

    (108) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (112) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (26) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (28) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 33


state 23

    (110) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 34


state 24

    (25) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (27) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 35
    IF              shift and go to state 36


state 25

    (54) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC PTCOMA
    (55) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    ID              shift and go to state 37


state 26

    (114) llamada_funcion -> SELECT ID . PARA params PARC PTCOMA

    PARA            shift and go to state 38


state 27

    (115) llamada_funcion -> CALL ID . PARA params PARC PTCOMA

    PARA            shift and go to state 39


state 28

    (51) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 40


state 29

    (52) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 41


state 30

    (53) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 42


state 31

    (49) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA
    (50) drop_database_instr -> DROP DATABASE . ID PTCOMA

    IF              shift and go to state 43
    ID              shift and go to state 44


state 32

    (106) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 45


state 33

    (108) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (112) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (26) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    FUNCTION        shift and go to state 46
    PROCEDURE       shift and go to state 47
    DATABASE        shift and go to state 48


state 34

    (110) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 49


state 35

    (25) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (29) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (45) createDB_unParam -> . OWNER IGUAL string_type
    (46) createDB_unParam -> . MODE IGUAL ENTERO
    (47) createDB_unParam -> . OWNER string_type
    (48) createDB_unParam -> . MODE ENTERO
    (37) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (38) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (39) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 50
    OWNER           shift and go to state 53
    MODE            shift and go to state 54

    createDB_unParam               shift and go to state 51
    createDB_dosParam              shift and go to state 52

state 36

    (27) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 55


state 37

    (54) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC PTCOMA
    (55) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    PARA            shift and go to state 56


state 38

    (114) llamada_funcion -> SELECT ID PARA . params PARC PTCOMA
    (116) params -> . params COMA expresionPLSQL
    (117) params -> . expresionPLSQL
    (118) params -> . empty
    (161) expresionPLSQL -> . log
    (192) empty -> .
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 59
    expresionPLSQL                 shift and go to state 60
    empty                          shift and go to state 61
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 39

    (115) llamada_funcion -> CALL ID PARA . params PARC PTCOMA
    (116) params -> . params COMA expresionPLSQL
    (117) params -> . expresionPLSQL
    (118) params -> . empty
    (161) expresionPLSQL -> . log
    (192) empty -> .
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    params                         shift and go to state 73
    expresionPLSQL                 shift and go to state 60
    empty                          shift and go to state 61
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 40

    (51) show_databases_instr -> SHOW DATABASES PTCOMA .

    error           reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CREATE          reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SELECT          reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CALL            reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 51 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 41

    (52) show_tables_instr -> SHOW TABLES PTCOMA .

    error           reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CREATE          reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SELECT          reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CALL            reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 52 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 42

    (53) use_database_instr -> USE ID PTCOMA .

    error           reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    CREATE          reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    SELECT          reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    CALL            reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 53 (use_database_instr -> USE ID PTCOMA .)


state 43

    (49) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 74


state 44

    (50) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 75


state 45

    (106) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> . parametros COMA parametro
    (120) parametros -> . parametro
    (121) parametro -> . ID tipo
    (122) parametro -> . empty
    (192) empty -> .

    ID              shift and go to state 76
    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    parametros                     shift and go to state 77
    parametro                      shift and go to state 78
    empty                          shift and go to state 79

state 46

    (108) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 80


state 47

    (112) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 81


state 48

    (26) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 82
    IF              shift and go to state 83


state 49

    (110) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> . parametros COMA parametro
    (120) parametros -> . parametro
    (121) parametro -> . ID tipo
    (122) parametro -> . empty
    (192) empty -> .

    ID              shift and go to state 76
    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    parametros                     shift and go to state 84
    parametro                      shift and go to state 78
    empty                          shift and go to state 79

state 50

    (25) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    error           reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CALL            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 25 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 51

    (29) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 85


state 52

    (33) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 86


state 53

    (45) createDB_unParam -> OWNER . IGUAL string_type
    (47) createDB_unParam -> OWNER . string_type
    (37) createDB_dosParam -> OWNER . string_type MODE ENTERO
    (39) createDB_dosParam -> OWNER . string_type MODE IGUAL ENTERO
    (40) createDB_dosParam -> OWNER . IGUAL string_type MODE ENTERO
    (43) createDB_dosParam -> OWNER . IGUAL string_type MODE IGUAL ENTERO
    (104) string_type -> . CADENA
    (105) string_type -> . ID

    IGUAL           shift and go to state 87
    CADENA          shift and go to state 89
    ID              shift and go to state 90

    string_type                    shift and go to state 88

state 54

    (46) createDB_unParam -> MODE . IGUAL ENTERO
    (48) createDB_unParam -> MODE . ENTERO
    (38) createDB_dosParam -> MODE . ENTERO OWNER string_type
    (41) createDB_dosParam -> MODE . ENTERO OWNER IGUAL string_type
    (42) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (44) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    IGUAL           shift and go to state 91
    ENTERO          shift and go to state 92


state 55

    (27) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 93


state 56

    (54) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC PTCOMA
    (55) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (56) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (57) cuerpo_createTable_lista -> . cuerpo_createTable
    (58) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (59) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options

    ID              shift and go to state 94

    cuerpo_createTable_lista       shift and go to state 95
    cuerpo_createTable             shift and go to state 96

state 57

    (183) arit -> ID .

    MAYOR           reduce using rule 183 (arit -> ID .)
    MENOR           reduce using rule 183 (arit -> ID .)
    MAYORIGUAL      reduce using rule 183 (arit -> ID .)
    MENORIGUAL      reduce using rule 183 (arit -> ID .)
    IGUALIGUAL      reduce using rule 183 (arit -> ID .)
    NOTIGUAL        reduce using rule 183 (arit -> ID .)
    POR             reduce using rule 183 (arit -> ID .)
    DIV             reduce using rule 183 (arit -> ID .)
    MAS             reduce using rule 183 (arit -> ID .)
    MENOS           reduce using rule 183 (arit -> ID .)
    MOD             reduce using rule 183 (arit -> ID .)
    ANDB            reduce using rule 183 (arit -> ID .)
    SHIFTI          reduce using rule 183 (arit -> ID .)
    SHIFTD          reduce using rule 183 (arit -> ID .)
    XORB            reduce using rule 183 (arit -> ID .)
    ORB             reduce using rule 183 (arit -> ID .)
    AND             reduce using rule 183 (arit -> ID .)
    OR              reduce using rule 183 (arit -> ID .)
    PARC            reduce using rule 183 (arit -> ID .)
    COMA            reduce using rule 183 (arit -> ID .)
    PTCOMA          reduce using rule 183 (arit -> ID .)
    THEN            reduce using rule 183 (arit -> ID .)
    WHEN            reduce using rule 183 (arit -> ID .)
    ELSE            reduce using rule 183 (arit -> ID .)


state 58

    (182) arit -> PARA . expresionPLSQL PARC
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 97
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 59

    (114) llamada_funcion -> SELECT ID PARA params . PARC PTCOMA
    (116) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 98
    COMA            shift and go to state 99


state 60

    (117) params -> expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 117 (params -> expresionPLSQL .)
    COMA            reduce using rule 117 (params -> expresionPLSQL .)
    AND             shift and go to state 100
    OR              shift and go to state 101


state 61

    (118) params -> empty .

    PARC            reduce using rule 118 (params -> empty .)
    COMA            reduce using rule 118 (params -> empty .)


state 62

    (161) expresionPLSQL -> log .

    AND             reduce using rule 161 (expresionPLSQL -> log .)
    OR              reduce using rule 161 (expresionPLSQL -> log .)
    PARC            reduce using rule 161 (expresionPLSQL -> log .)
    COMA            reduce using rule 161 (expresionPLSQL -> log .)
    MAYOR           reduce using rule 161 (expresionPLSQL -> log .)
    MENOR           reduce using rule 161 (expresionPLSQL -> log .)
    MAYORIGUAL      reduce using rule 161 (expresionPLSQL -> log .)
    MENORIGUAL      reduce using rule 161 (expresionPLSQL -> log .)
    IGUALIGUAL      reduce using rule 161 (expresionPLSQL -> log .)
    NOTIGUAL        reduce using rule 161 (expresionPLSQL -> log .)
    POR             reduce using rule 161 (expresionPLSQL -> log .)
    DIV             reduce using rule 161 (expresionPLSQL -> log .)
    MAS             reduce using rule 161 (expresionPLSQL -> log .)
    MENOS           reduce using rule 161 (expresionPLSQL -> log .)
    MOD             reduce using rule 161 (expresionPLSQL -> log .)
    ANDB            reduce using rule 161 (expresionPLSQL -> log .)
    SHIFTI          reduce using rule 161 (expresionPLSQL -> log .)
    SHIFTD          reduce using rule 161 (expresionPLSQL -> log .)
    XORB            reduce using rule 161 (expresionPLSQL -> log .)
    ORB             reduce using rule 161 (expresionPLSQL -> log .)
    PTCOMA          reduce using rule 161 (expresionPLSQL -> log .)
    THEN            reduce using rule 161 (expresionPLSQL -> log .)
    WHEN            reduce using rule 161 (expresionPLSQL -> log .)
    ELSE            reduce using rule 161 (expresionPLSQL -> log .)


state 63

    (164) log -> rel .

    AND             reduce using rule 164 (log -> rel .)
    OR              reduce using rule 164 (log -> rel .)
    PARC            reduce using rule 164 (log -> rel .)
    COMA            reduce using rule 164 (log -> rel .)
    MAYOR           reduce using rule 164 (log -> rel .)
    MENOR           reduce using rule 164 (log -> rel .)
    MAYORIGUAL      reduce using rule 164 (log -> rel .)
    MENORIGUAL      reduce using rule 164 (log -> rel .)
    IGUALIGUAL      reduce using rule 164 (log -> rel .)
    NOTIGUAL        reduce using rule 164 (log -> rel .)
    POR             reduce using rule 164 (log -> rel .)
    DIV             reduce using rule 164 (log -> rel .)
    MAS             reduce using rule 164 (log -> rel .)
    MENOS           reduce using rule 164 (log -> rel .)
    MOD             reduce using rule 164 (log -> rel .)
    ANDB            reduce using rule 164 (log -> rel .)
    SHIFTI          reduce using rule 164 (log -> rel .)
    SHIFTD          reduce using rule 164 (log -> rel .)
    XORB            reduce using rule 164 (log -> rel .)
    ORB             reduce using rule 164 (log -> rel .)
    PTCOMA          reduce using rule 164 (log -> rel .)
    THEN            reduce using rule 164 (log -> rel .)
    WHEN            reduce using rule 164 (log -> rel .)
    ELSE            reduce using rule 164 (log -> rel .)


state 64

    (165) rel -> arit . MAYOR arit
    (166) rel -> arit . MENOR arit
    (167) rel -> arit . MAYORIGUAL arit
    (168) rel -> arit . MENORIGUAL arit
    (169) rel -> arit . IGUALIGUAL arit
    (170) rel -> arit . NOTIGUAL arit
    (171) rel -> arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 102
    MENOR           shift and go to state 103
    MAYORIGUAL      shift and go to state 104
    MENORIGUAL      shift and go to state 105
    IGUALIGUAL      shift and go to state 106
    NOTIGUAL        shift and go to state 107
    AND             reduce using rule 171 (rel -> arit .)
    OR              reduce using rule 171 (rel -> arit .)
    PARC            reduce using rule 171 (rel -> arit .)
    COMA            reduce using rule 171 (rel -> arit .)
    PTCOMA          reduce using rule 171 (rel -> arit .)
    THEN            reduce using rule 171 (rel -> arit .)
    WHEN            reduce using rule 171 (rel -> arit .)
    ELSE            reduce using rule 171 (rel -> arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    ANDB            shift and go to state 113
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115
    XORB            shift and go to state 116
    ORB             shift and go to state 117

  ! MAYOR           [ reduce using rule 171 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 171 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 171 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 171 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 171 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 171 (rel -> arit .) ]
  ! POR             [ reduce using rule 171 (rel -> arit .) ]
  ! DIV             [ reduce using rule 171 (rel -> arit .) ]
  ! MAS             [ reduce using rule 171 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 171 (rel -> arit .) ]
  ! MOD             [ reduce using rule 171 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 171 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 171 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 171 (rel -> arit .) ]
  ! XORB            [ reduce using rule 171 (rel -> arit .) ]
  ! ORB             [ reduce using rule 171 (rel -> arit .) ]


state 65

    (187) arit -> MENOS . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 118
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 66

    (184) arit -> CADENA .

    MAYOR           reduce using rule 184 (arit -> CADENA .)
    MENOR           reduce using rule 184 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 184 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 184 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 184 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 184 (arit -> CADENA .)
    POR             reduce using rule 184 (arit -> CADENA .)
    DIV             reduce using rule 184 (arit -> CADENA .)
    MAS             reduce using rule 184 (arit -> CADENA .)
    MENOS           reduce using rule 184 (arit -> CADENA .)
    MOD             reduce using rule 184 (arit -> CADENA .)
    ANDB            reduce using rule 184 (arit -> CADENA .)
    SHIFTI          reduce using rule 184 (arit -> CADENA .)
    SHIFTD          reduce using rule 184 (arit -> CADENA .)
    XORB            reduce using rule 184 (arit -> CADENA .)
    ORB             reduce using rule 184 (arit -> CADENA .)
    AND             reduce using rule 184 (arit -> CADENA .)
    OR              reduce using rule 184 (arit -> CADENA .)
    PARC            reduce using rule 184 (arit -> CADENA .)
    COMA            reduce using rule 184 (arit -> CADENA .)
    PTCOMA          reduce using rule 184 (arit -> CADENA .)
    THEN            reduce using rule 184 (arit -> CADENA .)
    WHEN            reduce using rule 184 (arit -> CADENA .)
    ELSE            reduce using rule 184 (arit -> CADENA .)


state 67

    (185) arit -> ENTERO .

    MAYOR           reduce using rule 185 (arit -> ENTERO .)
    MENOR           reduce using rule 185 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 185 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 185 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 185 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 185 (arit -> ENTERO .)
    POR             reduce using rule 185 (arit -> ENTERO .)
    DIV             reduce using rule 185 (arit -> ENTERO .)
    MAS             reduce using rule 185 (arit -> ENTERO .)
    MENOS           reduce using rule 185 (arit -> ENTERO .)
    MOD             reduce using rule 185 (arit -> ENTERO .)
    ANDB            reduce using rule 185 (arit -> ENTERO .)
    SHIFTI          reduce using rule 185 (arit -> ENTERO .)
    SHIFTD          reduce using rule 185 (arit -> ENTERO .)
    XORB            reduce using rule 185 (arit -> ENTERO .)
    ORB             reduce using rule 185 (arit -> ENTERO .)
    AND             reduce using rule 185 (arit -> ENTERO .)
    OR              reduce using rule 185 (arit -> ENTERO .)
    PARC            reduce using rule 185 (arit -> ENTERO .)
    COMA            reduce using rule 185 (arit -> ENTERO .)
    PTCOMA          reduce using rule 185 (arit -> ENTERO .)
    THEN            reduce using rule 185 (arit -> ENTERO .)
    WHEN            reduce using rule 185 (arit -> ENTERO .)
    ELSE            reduce using rule 185 (arit -> ENTERO .)


state 68

    (186) arit -> FLOTANTE .

    MAYOR           reduce using rule 186 (arit -> FLOTANTE .)
    MENOR           reduce using rule 186 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 186 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 186 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 186 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 186 (arit -> FLOTANTE .)
    POR             reduce using rule 186 (arit -> FLOTANTE .)
    DIV             reduce using rule 186 (arit -> FLOTANTE .)
    MAS             reduce using rule 186 (arit -> FLOTANTE .)
    MENOS           reduce using rule 186 (arit -> FLOTANTE .)
    MOD             reduce using rule 186 (arit -> FLOTANTE .)
    ANDB            reduce using rule 186 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 186 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 186 (arit -> FLOTANTE .)
    XORB            reduce using rule 186 (arit -> FLOTANTE .)
    ORB             reduce using rule 186 (arit -> FLOTANTE .)
    AND             reduce using rule 186 (arit -> FLOTANTE .)
    OR              reduce using rule 186 (arit -> FLOTANTE .)
    PARC            reduce using rule 186 (arit -> FLOTANTE .)
    COMA            reduce using rule 186 (arit -> FLOTANTE .)
    PTCOMA          reduce using rule 186 (arit -> FLOTANTE .)
    THEN            reduce using rule 186 (arit -> FLOTANTE .)
    WHEN            reduce using rule 186 (arit -> FLOTANTE .)
    ELSE            reduce using rule 186 (arit -> FLOTANTE .)


state 69

    (188) arit -> NOTB . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 119
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 70

    (189) arit -> NOT . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 120
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 71

    (190) arit -> TRUE .

    MAYOR           reduce using rule 190 (arit -> TRUE .)
    MENOR           reduce using rule 190 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 190 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 190 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 190 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 190 (arit -> TRUE .)
    POR             reduce using rule 190 (arit -> TRUE .)
    DIV             reduce using rule 190 (arit -> TRUE .)
    MAS             reduce using rule 190 (arit -> TRUE .)
    MENOS           reduce using rule 190 (arit -> TRUE .)
    MOD             reduce using rule 190 (arit -> TRUE .)
    ANDB            reduce using rule 190 (arit -> TRUE .)
    SHIFTI          reduce using rule 190 (arit -> TRUE .)
    SHIFTD          reduce using rule 190 (arit -> TRUE .)
    XORB            reduce using rule 190 (arit -> TRUE .)
    ORB             reduce using rule 190 (arit -> TRUE .)
    AND             reduce using rule 190 (arit -> TRUE .)
    OR              reduce using rule 190 (arit -> TRUE .)
    PARC            reduce using rule 190 (arit -> TRUE .)
    COMA            reduce using rule 190 (arit -> TRUE .)
    PTCOMA          reduce using rule 190 (arit -> TRUE .)
    THEN            reduce using rule 190 (arit -> TRUE .)
    WHEN            reduce using rule 190 (arit -> TRUE .)
    ELSE            reduce using rule 190 (arit -> TRUE .)


state 72

    (191) arit -> FALSE .

    MAYOR           reduce using rule 191 (arit -> FALSE .)
    MENOR           reduce using rule 191 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 191 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 191 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 191 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 191 (arit -> FALSE .)
    POR             reduce using rule 191 (arit -> FALSE .)
    DIV             reduce using rule 191 (arit -> FALSE .)
    MAS             reduce using rule 191 (arit -> FALSE .)
    MENOS           reduce using rule 191 (arit -> FALSE .)
    MOD             reduce using rule 191 (arit -> FALSE .)
    ANDB            reduce using rule 191 (arit -> FALSE .)
    SHIFTI          reduce using rule 191 (arit -> FALSE .)
    SHIFTD          reduce using rule 191 (arit -> FALSE .)
    XORB            reduce using rule 191 (arit -> FALSE .)
    ORB             reduce using rule 191 (arit -> FALSE .)
    AND             reduce using rule 191 (arit -> FALSE .)
    OR              reduce using rule 191 (arit -> FALSE .)
    PARC            reduce using rule 191 (arit -> FALSE .)
    COMA            reduce using rule 191 (arit -> FALSE .)
    PTCOMA          reduce using rule 191 (arit -> FALSE .)
    THEN            reduce using rule 191 (arit -> FALSE .)
    WHEN            reduce using rule 191 (arit -> FALSE .)
    ELSE            reduce using rule 191 (arit -> FALSE .)


state 73

    (115) llamada_funcion -> CALL ID PARA params . PARC PTCOMA
    (116) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 121
    COMA            shift and go to state 99


state 74

    (49) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 122


state 75

    (50) drop_database_instr -> DROP DATABASE ID PTCOMA .

    error           reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CREATE          reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SELECT          reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CALL            reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 50 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 76

    (121) parametro -> ID . tipo
    (140) tipo -> . INTEGER
    (141) tipo -> . SMALLINT
    (142) tipo -> . BIGINT
    (143) tipo -> . DECIMAL
    (144) tipo -> . NUMERIC
    (145) tipo -> . REAL
    (146) tipo -> . CHAR
    (147) tipo -> . DOUBLE
    (148) tipo -> . PRECISION
    (149) tipo -> . MONEY
    (150) tipo -> . FLOAT
    (151) tipo -> . BOOLEAN
    (152) tipo -> . VOID
    (153) tipo -> . CHAR PARA ENTERO PARC
    (154) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (155) tipo -> . VARCHAR PARA ENTERO PARC
    (156) tipo -> . CHARACTER PARA ENTERO PARC
    (157) tipo -> . TEXT
    (158) tipo -> . TIME
    (159) tipo -> . TIMESTAMP
    (160) tipo -> . DATE

    INTEGER         shift and go to state 124
    SMALLINT        shift and go to state 125
    BIGINT          shift and go to state 126
    DECIMAL         shift and go to state 127
    NUMERIC         shift and go to state 128
    REAL            shift and go to state 129
    CHAR            shift and go to state 130
    DOUBLE          shift and go to state 131
    PRECISION       shift and go to state 132
    MONEY           shift and go to state 133
    FLOAT           shift and go to state 134
    BOOLEAN         shift and go to state 135
    VOID            shift and go to state 136
    CHARACTER       shift and go to state 137
    VARCHAR         shift and go to state 138
    TEXT            shift and go to state 139
    TIME            shift and go to state 140
    TIMESTAMP       shift and go to state 141
    DATE            shift and go to state 142

    tipo                           shift and go to state 123

state 77

    (106) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> parametros . COMA parametro

    PARC            shift and go to state 143
    COMA            shift and go to state 144


state 78

    (120) parametros -> parametro .

    PARC            reduce using rule 120 (parametros -> parametro .)
    COMA            reduce using rule 120 (parametros -> parametro .)


state 79

    (122) parametro -> empty .

    PARC            reduce using rule 122 (parametro -> empty .)
    COMA            reduce using rule 122 (parametro -> empty .)


state 80

    (108) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 145


state 81

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 146


state 82

    (26) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (45) createDB_unParam -> . OWNER IGUAL string_type
    (46) createDB_unParam -> . MODE IGUAL ENTERO
    (47) createDB_unParam -> . OWNER string_type
    (48) createDB_unParam -> . MODE ENTERO
    (37) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (38) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (39) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 147
    OWNER           shift and go to state 53
    MODE            shift and go to state 54

    createDB_unParam               shift and go to state 148
    createDB_dosParam              shift and go to state 149

state 83

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 150


state 84

    (110) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> parametros . COMA parametro

    PARC            shift and go to state 151
    COMA            shift and go to state 144


state 85

    (29) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 86

    (33) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 87

    (45) createDB_unParam -> OWNER IGUAL . string_type
    (40) createDB_dosParam -> OWNER IGUAL . string_type MODE ENTERO
    (43) createDB_dosParam -> OWNER IGUAL . string_type MODE IGUAL ENTERO
    (104) string_type -> . CADENA
    (105) string_type -> . ID

    CADENA          shift and go to state 89
    ID              shift and go to state 90

    string_type                    shift and go to state 152

state 88

    (47) createDB_unParam -> OWNER string_type .
    (37) createDB_dosParam -> OWNER string_type . MODE ENTERO
    (39) createDB_dosParam -> OWNER string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 47 (createDB_unParam -> OWNER string_type .)
    MODE            shift and go to state 153


state 89

    (104) string_type -> CADENA .

    MODE            reduce using rule 104 (string_type -> CADENA .)
    PTCOMA          reduce using rule 104 (string_type -> CADENA .)


state 90

    (105) string_type -> ID .

    MODE            reduce using rule 105 (string_type -> ID .)
    PTCOMA          reduce using rule 105 (string_type -> ID .)


state 91

    (46) createDB_unParam -> MODE IGUAL . ENTERO
    (42) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (44) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 154


state 92

    (48) createDB_unParam -> MODE ENTERO .
    (38) createDB_dosParam -> MODE ENTERO . OWNER string_type
    (41) createDB_dosParam -> MODE ENTERO . OWNER IGUAL string_type

    PTCOMA          reduce using rule 48 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 155


state 93

    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 156


state 94

    (58) cuerpo_createTable -> ID . TIPO_DATO_DEF
    (59) cuerpo_createTable -> ID . TIPO_DATO_DEF createTable_options
    (76) TIPO_DATO_DEF -> . TEXT
    (77) TIPO_DATO_DEF -> . FLOAT
    (78) TIPO_DATO_DEF -> . INTEGER
    (79) TIPO_DATO_DEF -> . BOOLEAN
    (80) TIPO_DATO_DEF -> . SMALLINT
    (81) TIPO_DATO_DEF -> . MONEY
    (82) TIPO_DATO_DEF -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (83) TIPO_DATO_DEF -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (84) TIPO_DATO_DEF -> . BIGINT
    (85) TIPO_DATO_DEF -> . REAL
    (86) TIPO_DATO_DEF -> . DOUBLE PRECISION
    (87) TIPO_DATO_DEF -> . INTERVAL extract_time TO extract_time
    (88) TIPO_DATO_DEF -> . INTERVAL
    (89) TIPO_DATO_DEF -> . TIME
    (90) TIPO_DATO_DEF -> . TIMESTAMP
    (91) TIPO_DATO_DEF -> . DATE
    (92) TIPO_DATO_DEF -> . CHARACTER VARYING PARA ENTERO PARC
    (93) TIPO_DATO_DEF -> . VARCHAR PARA ENTERO PARC
    (94) TIPO_DATO_DEF -> . CHAR PARA ENTERO PARC
    (95) TIPO_DATO_DEF -> . CHARACTER PARA ENTERO PARC
    (96) TIPO_DATO_DEF -> . CHAR PARA PARC
    (97) TIPO_DATO_DEF -> . CHARACTER PARA PARC

    TEXT            shift and go to state 158
    FLOAT           shift and go to state 159
    INTEGER         shift and go to state 160
    BOOLEAN         shift and go to state 161
    SMALLINT        shift and go to state 162
    MONEY           shift and go to state 163
    DECIMAL         shift and go to state 164
    NUMERIC         shift and go to state 165
    BIGINT          shift and go to state 166
    REAL            shift and go to state 167
    DOUBLE          shift and go to state 168
    INTERVAL        shift and go to state 169
    TIME            shift and go to state 170
    TIMESTAMP       shift and go to state 171
    DATE            shift and go to state 172
    CHARACTER       shift and go to state 173
    VARCHAR         shift and go to state 174
    CHAR            shift and go to state 175

    TIPO_DATO_DEF                  shift and go to state 157

state 95

    (54) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC PTCOMA
    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC INHERITS PARA ID PARC PTCOMA
    (56) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PARC            shift and go to state 176
    COMA            shift and go to state 177


state 96

    (57) cuerpo_createTable_lista -> cuerpo_createTable .

    PARC            reduce using rule 57 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 57 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 97

    (182) arit -> PARA expresionPLSQL . PARC
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PARC            shift and go to state 178
    AND             shift and go to state 100
    OR              shift and go to state 101


state 98

    (114) llamada_funcion -> SELECT ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 179


state 99

    (116) params -> params COMA . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 180
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 100

    (162) log -> expresionPLSQL AND . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 181
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 101

    (163) log -> expresionPLSQL OR . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 182
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 102

    (165) rel -> arit MAYOR . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 183

state 103

    (166) rel -> arit MENOR . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 184

state 104

    (167) rel -> arit MAYORIGUAL . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 185

state 105

    (168) rel -> arit MENORIGUAL . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 186

state 106

    (169) rel -> arit IGUALIGUAL . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 187

state 107

    (170) rel -> arit NOTIGUAL . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 188

state 108

    (172) arit -> arit POR . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 189

state 109

    (173) arit -> arit DIV . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 190

state 110

    (174) arit -> arit MAS . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 191

state 111

    (175) arit -> arit MENOS . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 192

state 112

    (176) arit -> arit MOD . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 193

state 113

    (177) arit -> arit ANDB . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 194

state 114

    (178) arit -> arit SHIFTI . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 195

state 115

    (179) arit -> arit SHIFTD . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 196

state 116

    (180) arit -> arit XORB . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 197

state 117

    (181) arit -> arit ORB . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    arit                           shift and go to state 198

state 118

    (187) arit -> MENOS expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    MENOR           reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    MAYORIGUAL      reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    MENORIGUAL      reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    IGUALIGUAL      reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    NOTIGUAL        reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    POR             reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    DIV             reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    MAS             reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    MENOS           reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    MOD             reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    ANDB            reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    SHIFTI          reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    SHIFTD          reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    XORB            reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    ORB             reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    AND             reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    OR              reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    PARC            reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    COMA            reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    PTCOMA          reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    THEN            reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    WHEN            reduce using rule 187 (arit -> MENOS expresionPLSQL .)
    ELSE            reduce using rule 187 (arit -> MENOS expresionPLSQL .)

  ! AND             [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]


state 119

    (188) arit -> NOTB expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    MENOR           reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    MAYORIGUAL      reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    MENORIGUAL      reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    IGUALIGUAL      reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    NOTIGUAL        reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    POR             reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    DIV             reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    MAS             reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    MENOS           reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    MOD             reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    ANDB            reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    SHIFTI          reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    SHIFTD          reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    XORB            reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    ORB             reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    AND             reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    OR              reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    PARC            reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    COMA            reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    PTCOMA          reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    THEN            reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    WHEN            reduce using rule 188 (arit -> NOTB expresionPLSQL .)
    ELSE            reduce using rule 188 (arit -> NOTB expresionPLSQL .)

  ! AND             [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]


state 120

    (189) arit -> NOT expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 189 (arit -> NOT expresionPLSQL .)
    MENOR           reduce using rule 189 (arit -> NOT expresionPLSQL .)
    MAYORIGUAL      reduce using rule 189 (arit -> NOT expresionPLSQL .)
    MENORIGUAL      reduce using rule 189 (arit -> NOT expresionPLSQL .)
    IGUALIGUAL      reduce using rule 189 (arit -> NOT expresionPLSQL .)
    NOTIGUAL        reduce using rule 189 (arit -> NOT expresionPLSQL .)
    POR             reduce using rule 189 (arit -> NOT expresionPLSQL .)
    DIV             reduce using rule 189 (arit -> NOT expresionPLSQL .)
    MAS             reduce using rule 189 (arit -> NOT expresionPLSQL .)
    MENOS           reduce using rule 189 (arit -> NOT expresionPLSQL .)
    MOD             reduce using rule 189 (arit -> NOT expresionPLSQL .)
    ANDB            reduce using rule 189 (arit -> NOT expresionPLSQL .)
    SHIFTI          reduce using rule 189 (arit -> NOT expresionPLSQL .)
    SHIFTD          reduce using rule 189 (arit -> NOT expresionPLSQL .)
    XORB            reduce using rule 189 (arit -> NOT expresionPLSQL .)
    ORB             reduce using rule 189 (arit -> NOT expresionPLSQL .)
    AND             reduce using rule 189 (arit -> NOT expresionPLSQL .)
    OR              reduce using rule 189 (arit -> NOT expresionPLSQL .)
    PARC            reduce using rule 189 (arit -> NOT expresionPLSQL .)
    COMA            reduce using rule 189 (arit -> NOT expresionPLSQL .)
    PTCOMA          reduce using rule 189 (arit -> NOT expresionPLSQL .)
    THEN            reduce using rule 189 (arit -> NOT expresionPLSQL .)
    WHEN            reduce using rule 189 (arit -> NOT expresionPLSQL .)
    ELSE            reduce using rule 189 (arit -> NOT expresionPLSQL .)

  ! AND             [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]


state 121

    (115) llamada_funcion -> CALL ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 199


state 122

    (49) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 200


state 123

    (121) parametro -> ID tipo .

    PARC            reduce using rule 121 (parametro -> ID tipo .)
    COMA            reduce using rule 121 (parametro -> ID tipo .)


state 124

    (140) tipo -> INTEGER .

    PARC            reduce using rule 140 (tipo -> INTEGER .)
    COMA            reduce using rule 140 (tipo -> INTEGER .)
    AS              reduce using rule 140 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 140 (tipo -> INTEGER .)
    PTCOMA          reduce using rule 140 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 140 (tipo -> INTEGER .)


state 125

    (141) tipo -> SMALLINT .

    PARC            reduce using rule 141 (tipo -> SMALLINT .)
    COMA            reduce using rule 141 (tipo -> SMALLINT .)
    AS              reduce using rule 141 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 141 (tipo -> SMALLINT .)
    PTCOMA          reduce using rule 141 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 141 (tipo -> SMALLINT .)


state 126

    (142) tipo -> BIGINT .

    PARC            reduce using rule 142 (tipo -> BIGINT .)
    COMA            reduce using rule 142 (tipo -> BIGINT .)
    AS              reduce using rule 142 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 142 (tipo -> BIGINT .)
    PTCOMA          reduce using rule 142 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 142 (tipo -> BIGINT .)


state 127

    (143) tipo -> DECIMAL .

    PARC            reduce using rule 143 (tipo -> DECIMAL .)
    COMA            reduce using rule 143 (tipo -> DECIMAL .)
    AS              reduce using rule 143 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 143 (tipo -> DECIMAL .)
    PTCOMA          reduce using rule 143 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 143 (tipo -> DECIMAL .)


state 128

    (144) tipo -> NUMERIC .

    PARC            reduce using rule 144 (tipo -> NUMERIC .)
    COMA            reduce using rule 144 (tipo -> NUMERIC .)
    AS              reduce using rule 144 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 144 (tipo -> NUMERIC .)
    PTCOMA          reduce using rule 144 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 144 (tipo -> NUMERIC .)


state 129

    (145) tipo -> REAL .

    PARC            reduce using rule 145 (tipo -> REAL .)
    COMA            reduce using rule 145 (tipo -> REAL .)
    AS              reduce using rule 145 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 145 (tipo -> REAL .)
    PTCOMA          reduce using rule 145 (tipo -> REAL .)
    DEFAULT         reduce using rule 145 (tipo -> REAL .)


state 130

    (146) tipo -> CHAR .
    (153) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 146 (tipo -> CHAR .)
    COMA            reduce using rule 146 (tipo -> CHAR .)
    AS              reduce using rule 146 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 146 (tipo -> CHAR .)
    PTCOMA          reduce using rule 146 (tipo -> CHAR .)
    DEFAULT         reduce using rule 146 (tipo -> CHAR .)
    PARA            shift and go to state 201


state 131

    (147) tipo -> DOUBLE .

    PARC            reduce using rule 147 (tipo -> DOUBLE .)
    COMA            reduce using rule 147 (tipo -> DOUBLE .)
    AS              reduce using rule 147 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 147 (tipo -> DOUBLE .)
    PTCOMA          reduce using rule 147 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 147 (tipo -> DOUBLE .)


state 132

    (148) tipo -> PRECISION .

    PARC            reduce using rule 148 (tipo -> PRECISION .)
    COMA            reduce using rule 148 (tipo -> PRECISION .)
    AS              reduce using rule 148 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 148 (tipo -> PRECISION .)
    PTCOMA          reduce using rule 148 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 148 (tipo -> PRECISION .)


state 133

    (149) tipo -> MONEY .

    PARC            reduce using rule 149 (tipo -> MONEY .)
    COMA            reduce using rule 149 (tipo -> MONEY .)
    AS              reduce using rule 149 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 149 (tipo -> MONEY .)
    PTCOMA          reduce using rule 149 (tipo -> MONEY .)
    DEFAULT         reduce using rule 149 (tipo -> MONEY .)


state 134

    (150) tipo -> FLOAT .

    PARC            reduce using rule 150 (tipo -> FLOAT .)
    COMA            reduce using rule 150 (tipo -> FLOAT .)
    AS              reduce using rule 150 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 150 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 150 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 150 (tipo -> FLOAT .)


state 135

    (151) tipo -> BOOLEAN .

    PARC            reduce using rule 151 (tipo -> BOOLEAN .)
    COMA            reduce using rule 151 (tipo -> BOOLEAN .)
    AS              reduce using rule 151 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 151 (tipo -> BOOLEAN .)
    PTCOMA          reduce using rule 151 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 151 (tipo -> BOOLEAN .)


state 136

    (152) tipo -> VOID .

    PARC            reduce using rule 152 (tipo -> VOID .)
    COMA            reduce using rule 152 (tipo -> VOID .)
    AS              reduce using rule 152 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 152 (tipo -> VOID .)
    PTCOMA          reduce using rule 152 (tipo -> VOID .)
    DEFAULT         reduce using rule 152 (tipo -> VOID .)


state 137

    (154) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (156) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 202
    PARA            shift and go to state 203


state 138

    (155) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 204


state 139

    (157) tipo -> TEXT .

    PARC            reduce using rule 157 (tipo -> TEXT .)
    COMA            reduce using rule 157 (tipo -> TEXT .)
    AS              reduce using rule 157 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 157 (tipo -> TEXT .)
    PTCOMA          reduce using rule 157 (tipo -> TEXT .)
    DEFAULT         reduce using rule 157 (tipo -> TEXT .)


state 140

    (158) tipo -> TIME .

    PARC            reduce using rule 158 (tipo -> TIME .)
    COMA            reduce using rule 158 (tipo -> TIME .)
    AS              reduce using rule 158 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 158 (tipo -> TIME .)
    PTCOMA          reduce using rule 158 (tipo -> TIME .)
    DEFAULT         reduce using rule 158 (tipo -> TIME .)


state 141

    (159) tipo -> TIMESTAMP .

    PARC            reduce using rule 159 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 159 (tipo -> TIMESTAMP .)
    AS              reduce using rule 159 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 159 (tipo -> TIMESTAMP .)
    PTCOMA          reduce using rule 159 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 159 (tipo -> TIMESTAMP .)


state 142

    (160) tipo -> DATE .

    PARC            reduce using rule 160 (tipo -> DATE .)
    COMA            reduce using rule 160 (tipo -> DATE .)
    AS              reduce using rule 160 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 160 (tipo -> DATE .)
    PTCOMA          reduce using rule 160 (tipo -> DATE .)
    DEFAULT         reduce using rule 160 (tipo -> DATE .)


state 143

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 205


state 144

    (119) parametros -> parametros COMA . parametro
    (121) parametro -> . ID tipo
    (122) parametro -> . empty
    (192) empty -> .

    ID              shift and go to state 76
    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    parametro                      shift and go to state 206
    empty                          shift and go to state 79

state 145

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> . parametros COMA parametro
    (120) parametros -> . parametro
    (121) parametro -> . ID tipo
    (122) parametro -> . empty
    (192) empty -> .

    ID              shift and go to state 76
    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    parametros                     shift and go to state 207
    parametro                      shift and go to state 78
    empty                          shift and go to state 79

state 146

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> . parametros COMA parametro
    (120) parametros -> . parametro
    (121) parametro -> . ID tipo
    (122) parametro -> . empty
    (192) empty -> .

    ID              shift and go to state 76
    PARC            reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    parametros                     shift and go to state 208
    parametro                      shift and go to state 78
    empty                          shift and go to state 79

state 147

    (26) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    error           reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CALL            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 26 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 148

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 209


state 149

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 210


state 150

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 211


state 151

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 212


state 152

    (45) createDB_unParam -> OWNER IGUAL string_type .
    (40) createDB_dosParam -> OWNER IGUAL string_type . MODE ENTERO
    (43) createDB_dosParam -> OWNER IGUAL string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 45 (createDB_unParam -> OWNER IGUAL string_type .)
    MODE            shift and go to state 213


state 153

    (37) createDB_dosParam -> OWNER string_type MODE . ENTERO
    (39) createDB_dosParam -> OWNER string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 214
    IGUAL           shift and go to state 215


state 154

    (46) createDB_unParam -> MODE IGUAL ENTERO .
    (42) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (44) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 46 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 216


state 155

    (38) createDB_dosParam -> MODE ENTERO OWNER . string_type
    (41) createDB_dosParam -> MODE ENTERO OWNER . IGUAL string_type
    (104) string_type -> . CADENA
    (105) string_type -> . ID

    IGUAL           shift and go to state 218
    CADENA          shift and go to state 89
    ID              shift and go to state 90

    string_type                    shift and go to state 217

state 156

    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (45) createDB_unParam -> . OWNER IGUAL string_type
    (46) createDB_unParam -> . MODE IGUAL ENTERO
    (47) createDB_unParam -> . OWNER string_type
    (48) createDB_unParam -> . MODE ENTERO
    (37) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (38) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (39) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 219
    OWNER           shift and go to state 53
    MODE            shift and go to state 54

    createDB_unParam               shift and go to state 220
    createDB_dosParam              shift and go to state 221

state 157

    (58) cuerpo_createTable -> ID TIPO_DATO_DEF .
    (59) cuerpo_createTable -> ID TIPO_DATO_DEF . createTable_options
    (60) createTable_options -> . createTable_options cT_options
    (61) createTable_options -> . cT_options
    (62) cT_options -> . N_null
    (63) cT_options -> . C_unique
    (64) cT_options -> . llave
    (65) cT_options -> . O_DEFAULT
    (66) N_null -> . NOT NULL
    (67) N_null -> . NULL
    (68) C_unique -> . UNIQUE
    (69) C_unique -> . CONSTRAINT ID UNIQUE
    (70) llave -> . PRIMARY KEY
    (71) llave -> . FOREIGN KEY
    (72) O_DEFAULT -> . DEFAULT expresion_dato_default

    PARC            reduce using rule 58 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    COMA            reduce using rule 58 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    NOT             shift and go to state 228
    NULL            shift and go to state 229
    UNIQUE          shift and go to state 230
    CONSTRAINT      shift and go to state 231
    PRIMARY         shift and go to state 232
    FOREIGN         shift and go to state 233
    DEFAULT         shift and go to state 234

    createTable_options            shift and go to state 222
    cT_options                     shift and go to state 223
    N_null                         shift and go to state 224
    C_unique                       shift and go to state 225
    llave                          shift and go to state 226
    O_DEFAULT                      shift and go to state 227

state 158

    (76) TIPO_DATO_DEF -> TEXT .

    NOT             reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    NULL            reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    UNIQUE          reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    CONSTRAINT      reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    PRIMARY         reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    FOREIGN         reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    DEFAULT         reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    PARC            reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)
    COMA            reduce using rule 76 (TIPO_DATO_DEF -> TEXT .)


state 159

    (77) TIPO_DATO_DEF -> FLOAT .

    NOT             reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    NULL            reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    UNIQUE          reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    CONSTRAINT      reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    PRIMARY         reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    FOREIGN         reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    DEFAULT         reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    PARC            reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)
    COMA            reduce using rule 77 (TIPO_DATO_DEF -> FLOAT .)


state 160

    (78) TIPO_DATO_DEF -> INTEGER .

    NOT             reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    NULL            reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    UNIQUE          reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    CONSTRAINT      reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    PRIMARY         reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    FOREIGN         reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    DEFAULT         reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    PARC            reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)
    COMA            reduce using rule 78 (TIPO_DATO_DEF -> INTEGER .)


state 161

    (79) TIPO_DATO_DEF -> BOOLEAN .

    NOT             reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    NULL            reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    UNIQUE          reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    CONSTRAINT      reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    PRIMARY         reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    FOREIGN         reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    DEFAULT         reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    PARC            reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)
    COMA            reduce using rule 79 (TIPO_DATO_DEF -> BOOLEAN .)


state 162

    (80) TIPO_DATO_DEF -> SMALLINT .

    NOT             reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    NULL            reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    UNIQUE          reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    CONSTRAINT      reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    PRIMARY         reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    FOREIGN         reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    DEFAULT         reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    PARC            reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)
    COMA            reduce using rule 80 (TIPO_DATO_DEF -> SMALLINT .)


state 163

    (81) TIPO_DATO_DEF -> MONEY .

    NOT             reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    NULL            reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    UNIQUE          reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    CONSTRAINT      reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    PRIMARY         reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    FOREIGN         reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    DEFAULT         reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    PARC            reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)
    COMA            reduce using rule 81 (TIPO_DATO_DEF -> MONEY .)


state 164

    (82) TIPO_DATO_DEF -> DECIMAL . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 235


state 165

    (83) TIPO_DATO_DEF -> NUMERIC . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 236


state 166

    (84) TIPO_DATO_DEF -> BIGINT .

    NOT             reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    NULL            reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    UNIQUE          reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    CONSTRAINT      reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    PRIMARY         reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    FOREIGN         reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    DEFAULT         reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    PARC            reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)
    COMA            reduce using rule 84 (TIPO_DATO_DEF -> BIGINT .)


state 167

    (85) TIPO_DATO_DEF -> REAL .

    NOT             reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    NULL            reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    UNIQUE          reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    CONSTRAINT      reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    PRIMARY         reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    FOREIGN         reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    DEFAULT         reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    PARC            reduce using rule 85 (TIPO_DATO_DEF -> REAL .)
    COMA            reduce using rule 85 (TIPO_DATO_DEF -> REAL .)


state 168

    (86) TIPO_DATO_DEF -> DOUBLE . PRECISION

    PRECISION       shift and go to state 237


state 169

    (87) TIPO_DATO_DEF -> INTERVAL . extract_time TO extract_time
    (88) TIPO_DATO_DEF -> INTERVAL .
    (98) extract_time -> . YEAR
    (99) extract_time -> . DAY
    (100) extract_time -> . MONTH
    (101) extract_time -> . HOUR
    (102) extract_time -> . MINUTE
    (103) extract_time -> . SECOND

    NOT             reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    NULL            reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    UNIQUE          reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    CONSTRAINT      reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    PRIMARY         reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    FOREIGN         reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    DEFAULT         reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    PARC            reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    COMA            reduce using rule 88 (TIPO_DATO_DEF -> INTERVAL .)
    YEAR            shift and go to state 239
    DAY             shift and go to state 240
    MONTH           shift and go to state 241
    HOUR            shift and go to state 242
    MINUTE          shift and go to state 243
    SECOND          shift and go to state 244

    extract_time                   shift and go to state 238

state 170

    (89) TIPO_DATO_DEF -> TIME .

    NOT             reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    NULL            reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    UNIQUE          reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    CONSTRAINT      reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    PRIMARY         reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    FOREIGN         reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    DEFAULT         reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    PARC            reduce using rule 89 (TIPO_DATO_DEF -> TIME .)
    COMA            reduce using rule 89 (TIPO_DATO_DEF -> TIME .)


state 171

    (90) TIPO_DATO_DEF -> TIMESTAMP .

    NOT             reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    NULL            reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    UNIQUE          reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    PRIMARY         reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    FOREIGN         reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    DEFAULT         reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    PARC            reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)
    COMA            reduce using rule 90 (TIPO_DATO_DEF -> TIMESTAMP .)


state 172

    (91) TIPO_DATO_DEF -> DATE .

    NOT             reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    NULL            reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    UNIQUE          reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    CONSTRAINT      reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    PRIMARY         reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    FOREIGN         reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    DEFAULT         reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    PARC            reduce using rule 91 (TIPO_DATO_DEF -> DATE .)
    COMA            reduce using rule 91 (TIPO_DATO_DEF -> DATE .)


state 173

    (92) TIPO_DATO_DEF -> CHARACTER . VARYING PARA ENTERO PARC
    (95) TIPO_DATO_DEF -> CHARACTER . PARA ENTERO PARC
    (97) TIPO_DATO_DEF -> CHARACTER . PARA PARC

    VARYING         shift and go to state 245
    PARA            shift and go to state 246


state 174

    (93) TIPO_DATO_DEF -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 247


state 175

    (94) TIPO_DATO_DEF -> CHAR . PARA ENTERO PARC
    (96) TIPO_DATO_DEF -> CHAR . PARA PARC

    PARA            shift and go to state 248


state 176

    (54) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . PTCOMA
    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . INHERITS PARA ID PARC PTCOMA

    PTCOMA          shift and go to state 249
    INHERITS        shift and go to state 250


state 177

    (56) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (58) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (59) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options

    ID              shift and go to state 94

    cuerpo_createTable             shift and go to state 251

state 178

    (182) arit -> PARA expresionPLSQL PARC .

    MAYOR           reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    MENOR           reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    MAYORIGUAL      reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    MENORIGUAL      reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    IGUALIGUAL      reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    NOTIGUAL        reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    POR             reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    DIV             reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    MAS             reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    MENOS           reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    MOD             reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    ANDB            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    SHIFTI          reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    SHIFTD          reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    XORB            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    ORB             reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    AND             reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    OR              reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    PARC            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    COMA            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    PTCOMA          reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    THEN            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    WHEN            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)
    ELSE            reduce using rule 182 (arit -> PARA expresionPLSQL PARC .)


state 179

    (114) llamada_funcion -> SELECT ID PARA params PARC PTCOMA .

    error           reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    USE             reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    $end            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    END             reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ID              reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    IF              reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 114 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)


state 180

    (116) params -> params COMA expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 116 (params -> params COMA expresionPLSQL .)
    COMA            reduce using rule 116 (params -> params COMA expresionPLSQL .)
    AND             shift and go to state 100
    OR              shift and go to state 101


state 181

    (162) log -> expresionPLSQL AND expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    AND             reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    OR              reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    PARC            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    COMA            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYOR           reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOR           reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYORIGUAL      reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MENORIGUAL      reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    IGUALIGUAL      reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    NOTIGUAL        reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    POR             reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    DIV             reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MAS             reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOS           reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    MOD             reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    ANDB            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTI          reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTD          reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    XORB            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    ORB             reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    PTCOMA          reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    THEN            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    WHEN            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)
    ELSE            reduce using rule 162 (log -> expresionPLSQL AND expresionPLSQL .)

  ! AND             [ shift and go to state 100 ]
  ! OR              [ shift and go to state 101 ]


state 182

    (163) log -> expresionPLSQL OR expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    OR              reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    PARC            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    COMA            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYOR           reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOR           reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYORIGUAL      reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MENORIGUAL      reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    IGUALIGUAL      reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    NOTIGUAL        reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    POR             reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    DIV             reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MAS             reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOS           reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    MOD             reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    ANDB            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTI          reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTD          reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    XORB            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    ORB             reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    PTCOMA          reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    THEN            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    WHEN            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    ELSE            reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .)
    AND             shift and go to state 100

  ! AND             [ reduce using rule 163 (log -> expresionPLSQL OR expresionPLSQL .) ]
  ! OR              [ shift and go to state 101 ]


state 183

    (165) rel -> arit MAYOR arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    AND             reduce using rule 165 (rel -> arit MAYOR arit .)
    OR              reduce using rule 165 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 165 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 165 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 165 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 165 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 165 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 165 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 165 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 165 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 165 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 165 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 165 (rel -> arit MAYOR arit .)
    PTCOMA          reduce using rule 165 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 165 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 165 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 165 (rel -> arit MAYOR arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! DIV             [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! MOD             [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 165 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 184

    (166) rel -> arit MENOR arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    AND             reduce using rule 166 (rel -> arit MENOR arit .)
    OR              reduce using rule 166 (rel -> arit MENOR arit .)
    PARC            reduce using rule 166 (rel -> arit MENOR arit .)
    COMA            reduce using rule 166 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 166 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 166 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 166 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 166 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 166 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 166 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 166 (rel -> arit MENOR arit .)
    XORB            reduce using rule 166 (rel -> arit MENOR arit .)
    ORB             reduce using rule 166 (rel -> arit MENOR arit .)
    PTCOMA          reduce using rule 166 (rel -> arit MENOR arit .)
    THEN            reduce using rule 166 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 166 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 166 (rel -> arit MENOR arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! DIV             [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! MOD             [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 166 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 185

    (167) rel -> arit MAYORIGUAL arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    AND             reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    OR              reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    PTCOMA          reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 167 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! DIV             [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! MOD             [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 167 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 186

    (168) rel -> arit MENORIGUAL arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    AND             reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    OR              reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    PTCOMA          reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 168 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! DIV             [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! MOD             [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 168 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 187

    (169) rel -> arit IGUALIGUAL arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    AND             reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    OR              reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    PTCOMA          reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 169 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! DIV             [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! MOD             [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 169 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 188

    (170) rel -> arit NOTIGUAL arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    AND             reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    OR              reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    PTCOMA          reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 170 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! DIV             [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! MOD             [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 170 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 189

    (172) arit -> arit POR arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 172 (arit -> arit POR arit .)
    MENOR           reduce using rule 172 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 172 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 172 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 172 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 172 (arit -> arit POR arit .)
    POR             reduce using rule 172 (arit -> arit POR arit .)
    DIV             reduce using rule 172 (arit -> arit POR arit .)
    MAS             reduce using rule 172 (arit -> arit POR arit .)
    MENOS           reduce using rule 172 (arit -> arit POR arit .)
    MOD             reduce using rule 172 (arit -> arit POR arit .)
    ANDB            reduce using rule 172 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 172 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 172 (arit -> arit POR arit .)
    XORB            reduce using rule 172 (arit -> arit POR arit .)
    ORB             reduce using rule 172 (arit -> arit POR arit .)
    AND             reduce using rule 172 (arit -> arit POR arit .)
    OR              reduce using rule 172 (arit -> arit POR arit .)
    PARC            reduce using rule 172 (arit -> arit POR arit .)
    COMA            reduce using rule 172 (arit -> arit POR arit .)
    PTCOMA          reduce using rule 172 (arit -> arit POR arit .)
    THEN            reduce using rule 172 (arit -> arit POR arit .)
    WHEN            reduce using rule 172 (arit -> arit POR arit .)
    ELSE            reduce using rule 172 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 108 ]
  ! DIV             [ shift and go to state 109 ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 190

    (173) arit -> arit DIV arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 173 (arit -> arit DIV arit .)
    MENOR           reduce using rule 173 (arit -> arit DIV arit .)
    MAYORIGUAL      reduce using rule 173 (arit -> arit DIV arit .)
    MENORIGUAL      reduce using rule 173 (arit -> arit DIV arit .)
    IGUALIGUAL      reduce using rule 173 (arit -> arit DIV arit .)
    NOTIGUAL        reduce using rule 173 (arit -> arit DIV arit .)
    POR             reduce using rule 173 (arit -> arit DIV arit .)
    DIV             reduce using rule 173 (arit -> arit DIV arit .)
    MAS             reduce using rule 173 (arit -> arit DIV arit .)
    MENOS           reduce using rule 173 (arit -> arit DIV arit .)
    MOD             reduce using rule 173 (arit -> arit DIV arit .)
    ANDB            reduce using rule 173 (arit -> arit DIV arit .)
    SHIFTI          reduce using rule 173 (arit -> arit DIV arit .)
    SHIFTD          reduce using rule 173 (arit -> arit DIV arit .)
    XORB            reduce using rule 173 (arit -> arit DIV arit .)
    ORB             reduce using rule 173 (arit -> arit DIV arit .)
    AND             reduce using rule 173 (arit -> arit DIV arit .)
    OR              reduce using rule 173 (arit -> arit DIV arit .)
    PARC            reduce using rule 173 (arit -> arit DIV arit .)
    COMA            reduce using rule 173 (arit -> arit DIV arit .)
    PTCOMA          reduce using rule 173 (arit -> arit DIV arit .)
    THEN            reduce using rule 173 (arit -> arit DIV arit .)
    WHEN            reduce using rule 173 (arit -> arit DIV arit .)
    ELSE            reduce using rule 173 (arit -> arit DIV arit .)

  ! POR             [ shift and go to state 108 ]
  ! DIV             [ shift and go to state 109 ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 191

    (174) arit -> arit MAS arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 174 (arit -> arit MAS arit .)
    MENOR           reduce using rule 174 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 174 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 174 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 174 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 174 (arit -> arit MAS arit .)
    MAS             reduce using rule 174 (arit -> arit MAS arit .)
    MENOS           reduce using rule 174 (arit -> arit MAS arit .)
    ANDB            reduce using rule 174 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 174 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 174 (arit -> arit MAS arit .)
    XORB            reduce using rule 174 (arit -> arit MAS arit .)
    ORB             reduce using rule 174 (arit -> arit MAS arit .)
    AND             reduce using rule 174 (arit -> arit MAS arit .)
    OR              reduce using rule 174 (arit -> arit MAS arit .)
    PARC            reduce using rule 174 (arit -> arit MAS arit .)
    COMA            reduce using rule 174 (arit -> arit MAS arit .)
    PTCOMA          reduce using rule 174 (arit -> arit MAS arit .)
    THEN            reduce using rule 174 (arit -> arit MAS arit .)
    WHEN            reduce using rule 174 (arit -> arit MAS arit .)
    ELSE            reduce using rule 174 (arit -> arit MAS arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MOD             shift and go to state 112

  ! POR             [ reduce using rule 174 (arit -> arit MAS arit .) ]
  ! DIV             [ reduce using rule 174 (arit -> arit MAS arit .) ]
  ! MOD             [ reduce using rule 174 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 192

    (175) arit -> arit MENOS arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 175 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 175 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 175 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 175 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 175 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 175 (arit -> arit MENOS arit .)
    MAS             reduce using rule 175 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 175 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 175 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 175 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 175 (arit -> arit MENOS arit .)
    XORB            reduce using rule 175 (arit -> arit MENOS arit .)
    ORB             reduce using rule 175 (arit -> arit MENOS arit .)
    AND             reduce using rule 175 (arit -> arit MENOS arit .)
    OR              reduce using rule 175 (arit -> arit MENOS arit .)
    PARC            reduce using rule 175 (arit -> arit MENOS arit .)
    COMA            reduce using rule 175 (arit -> arit MENOS arit .)
    PTCOMA          reduce using rule 175 (arit -> arit MENOS arit .)
    THEN            reduce using rule 175 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 175 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 175 (arit -> arit MENOS arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MOD             shift and go to state 112

  ! POR             [ reduce using rule 175 (arit -> arit MENOS arit .) ]
  ! DIV             [ reduce using rule 175 (arit -> arit MENOS arit .) ]
  ! MOD             [ reduce using rule 175 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 193

    (176) arit -> arit MOD arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 176 (arit -> arit MOD arit .)
    MENOR           reduce using rule 176 (arit -> arit MOD arit .)
    MAYORIGUAL      reduce using rule 176 (arit -> arit MOD arit .)
    MENORIGUAL      reduce using rule 176 (arit -> arit MOD arit .)
    IGUALIGUAL      reduce using rule 176 (arit -> arit MOD arit .)
    NOTIGUAL        reduce using rule 176 (arit -> arit MOD arit .)
    POR             reduce using rule 176 (arit -> arit MOD arit .)
    DIV             reduce using rule 176 (arit -> arit MOD arit .)
    MAS             reduce using rule 176 (arit -> arit MOD arit .)
    MENOS           reduce using rule 176 (arit -> arit MOD arit .)
    MOD             reduce using rule 176 (arit -> arit MOD arit .)
    ANDB            reduce using rule 176 (arit -> arit MOD arit .)
    SHIFTI          reduce using rule 176 (arit -> arit MOD arit .)
    SHIFTD          reduce using rule 176 (arit -> arit MOD arit .)
    XORB            reduce using rule 176 (arit -> arit MOD arit .)
    ORB             reduce using rule 176 (arit -> arit MOD arit .)
    AND             reduce using rule 176 (arit -> arit MOD arit .)
    OR              reduce using rule 176 (arit -> arit MOD arit .)
    PARC            reduce using rule 176 (arit -> arit MOD arit .)
    COMA            reduce using rule 176 (arit -> arit MOD arit .)
    PTCOMA          reduce using rule 176 (arit -> arit MOD arit .)
    THEN            reduce using rule 176 (arit -> arit MOD arit .)
    WHEN            reduce using rule 176 (arit -> arit MOD arit .)
    ELSE            reduce using rule 176 (arit -> arit MOD arit .)

  ! POR             [ shift and go to state 108 ]
  ! DIV             [ shift and go to state 109 ]
  ! MAS             [ shift and go to state 110 ]
  ! MENOS           [ shift and go to state 111 ]
  ! MOD             [ shift and go to state 112 ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 194

    (177) arit -> arit ANDB arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 177 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 177 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 177 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 177 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 177 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 177 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 177 (arit -> arit ANDB arit .)
    XORB            reduce using rule 177 (arit -> arit ANDB arit .)
    ORB             reduce using rule 177 (arit -> arit ANDB arit .)
    AND             reduce using rule 177 (arit -> arit ANDB arit .)
    OR              reduce using rule 177 (arit -> arit ANDB arit .)
    PARC            reduce using rule 177 (arit -> arit ANDB arit .)
    COMA            reduce using rule 177 (arit -> arit ANDB arit .)
    PTCOMA          reduce using rule 177 (arit -> arit ANDB arit .)
    THEN            reduce using rule 177 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 177 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 177 (arit -> arit ANDB arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! DIV             [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! MOD             [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 177 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 195

    (178) arit -> arit SHIFTI arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 178 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 178 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 178 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 178 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 178 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 178 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 178 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 178 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 178 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 178 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 178 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 178 (arit -> arit SHIFTI arit .)
    OR              reduce using rule 178 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 178 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 178 (arit -> arit SHIFTI arit .)
    PTCOMA          reduce using rule 178 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 178 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 178 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 178 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112

  ! POR             [ reduce using rule 178 (arit -> arit SHIFTI arit .) ]
  ! DIV             [ reduce using rule 178 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 178 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 178 (arit -> arit SHIFTI arit .) ]
  ! MOD             [ reduce using rule 178 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 196

    (179) arit -> arit SHIFTD arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 179 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 179 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 179 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 179 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 179 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 179 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 179 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 179 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 179 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 179 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 179 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 179 (arit -> arit SHIFTD arit .)
    OR              reduce using rule 179 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 179 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 179 (arit -> arit SHIFTD arit .)
    PTCOMA          reduce using rule 179 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 179 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 179 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 179 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112

  ! POR             [ reduce using rule 179 (arit -> arit SHIFTD arit .) ]
  ! DIV             [ reduce using rule 179 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 179 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 179 (arit -> arit SHIFTD arit .) ]
  ! MOD             [ reduce using rule 179 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 113 ]
  ! SHIFTI          [ shift and go to state 114 ]
  ! SHIFTD          [ shift and go to state 115 ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 197

    (180) arit -> arit XORB arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 180 (arit -> arit XORB arit .)
    MENOR           reduce using rule 180 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 180 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 180 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 180 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 180 (arit -> arit XORB arit .)
    XORB            reduce using rule 180 (arit -> arit XORB arit .)
    AND             reduce using rule 180 (arit -> arit XORB arit .)
    OR              reduce using rule 180 (arit -> arit XORB arit .)
    PARC            reduce using rule 180 (arit -> arit XORB arit .)
    COMA            reduce using rule 180 (arit -> arit XORB arit .)
    PTCOMA          reduce using rule 180 (arit -> arit XORB arit .)
    THEN            reduce using rule 180 (arit -> arit XORB arit .)
    WHEN            reduce using rule 180 (arit -> arit XORB arit .)
    ELSE            reduce using rule 180 (arit -> arit XORB arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    ANDB            shift and go to state 113
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115
    ORB             shift and go to state 117

  ! POR             [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! DIV             [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! MOD             [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 180 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 116 ]


state 198

    (181) arit -> arit ORB arit .
    (172) arit -> arit . POR arit
    (173) arit -> arit . DIV arit
    (174) arit -> arit . MAS arit
    (175) arit -> arit . MENOS arit
    (176) arit -> arit . MOD arit
    (177) arit -> arit . ANDB arit
    (178) arit -> arit . SHIFTI arit
    (179) arit -> arit . SHIFTD arit
    (180) arit -> arit . XORB arit
    (181) arit -> arit . ORB arit

    MAYOR           reduce using rule 181 (arit -> arit ORB arit .)
    MENOR           reduce using rule 181 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 181 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 181 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 181 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 181 (arit -> arit ORB arit .)
    XORB            reduce using rule 181 (arit -> arit ORB arit .)
    ORB             reduce using rule 181 (arit -> arit ORB arit .)
    AND             reduce using rule 181 (arit -> arit ORB arit .)
    OR              reduce using rule 181 (arit -> arit ORB arit .)
    PARC            reduce using rule 181 (arit -> arit ORB arit .)
    COMA            reduce using rule 181 (arit -> arit ORB arit .)
    PTCOMA          reduce using rule 181 (arit -> arit ORB arit .)
    THEN            reduce using rule 181 (arit -> arit ORB arit .)
    WHEN            reduce using rule 181 (arit -> arit ORB arit .)
    ELSE            reduce using rule 181 (arit -> arit ORB arit .)
    POR             shift and go to state 108
    DIV             shift and go to state 109
    MAS             shift and go to state 110
    MENOS           shift and go to state 111
    MOD             shift and go to state 112
    ANDB            shift and go to state 113
    SHIFTI          shift and go to state 114
    SHIFTD          shift and go to state 115

  ! POR             [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! DIV             [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! MOD             [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 181 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 116 ]
  ! ORB             [ shift and go to state 117 ]


state 199

    (115) llamada_funcion -> CALL ID PARA params PARC PTCOMA .

    error           reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    USE             reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    $end            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    END             reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ID              reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    IF              reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 115 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)


state 200

    (49) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    error           reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CREATE          reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SELECT          reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CALL            reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 49 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 201

    (153) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 252


state 202

    (154) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 253


state 203

    (156) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 254


state 204

    (155) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 255


state 205

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (140) tipo -> . INTEGER
    (141) tipo -> . SMALLINT
    (142) tipo -> . BIGINT
    (143) tipo -> . DECIMAL
    (144) tipo -> . NUMERIC
    (145) tipo -> . REAL
    (146) tipo -> . CHAR
    (147) tipo -> . DOUBLE
    (148) tipo -> . PRECISION
    (149) tipo -> . MONEY
    (150) tipo -> . FLOAT
    (151) tipo -> . BOOLEAN
    (152) tipo -> . VOID
    (153) tipo -> . CHAR PARA ENTERO PARC
    (154) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (155) tipo -> . VARCHAR PARA ENTERO PARC
    (156) tipo -> . CHARACTER PARA ENTERO PARC
    (157) tipo -> . TEXT
    (158) tipo -> . TIME
    (159) tipo -> . TIMESTAMP
    (160) tipo -> . DATE

    INTEGER         shift and go to state 124
    SMALLINT        shift and go to state 125
    BIGINT          shift and go to state 126
    DECIMAL         shift and go to state 127
    NUMERIC         shift and go to state 128
    REAL            shift and go to state 129
    CHAR            shift and go to state 130
    DOUBLE          shift and go to state 131
    PRECISION       shift and go to state 132
    MONEY           shift and go to state 133
    FLOAT           shift and go to state 134
    BOOLEAN         shift and go to state 135
    VOID            shift and go to state 136
    CHARACTER       shift and go to state 137
    VARCHAR         shift and go to state 138
    TEXT            shift and go to state 139
    TIME            shift and go to state 140
    TIMESTAMP       shift and go to state 141
    DATE            shift and go to state 142

    tipo                           shift and go to state 256

state 206

    (119) parametros -> parametros COMA parametro .

    PARC            reduce using rule 119 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 119 (parametros -> parametros COMA parametro .)


state 207

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> parametros . COMA parametro

    PARC            shift and go to state 257
    COMA            shift and go to state 144


state 208

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (119) parametros -> parametros . COMA parametro

    PARC            shift and go to state 258
    COMA            shift and go to state 144


state 209

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 210

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 211

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 259


state 212

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (140) tipo -> . INTEGER
    (141) tipo -> . SMALLINT
    (142) tipo -> . BIGINT
    (143) tipo -> . DECIMAL
    (144) tipo -> . NUMERIC
    (145) tipo -> . REAL
    (146) tipo -> . CHAR
    (147) tipo -> . DOUBLE
    (148) tipo -> . PRECISION
    (149) tipo -> . MONEY
    (150) tipo -> . FLOAT
    (151) tipo -> . BOOLEAN
    (152) tipo -> . VOID
    (153) tipo -> . CHAR PARA ENTERO PARC
    (154) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (155) tipo -> . VARCHAR PARA ENTERO PARC
    (156) tipo -> . CHARACTER PARA ENTERO PARC
    (157) tipo -> . TEXT
    (158) tipo -> . TIME
    (159) tipo -> . TIMESTAMP
    (160) tipo -> . DATE

    INTEGER         shift and go to state 124
    SMALLINT        shift and go to state 125
    BIGINT          shift and go to state 126
    DECIMAL         shift and go to state 127
    NUMERIC         shift and go to state 128
    REAL            shift and go to state 129
    CHAR            shift and go to state 130
    DOUBLE          shift and go to state 131
    PRECISION       shift and go to state 132
    MONEY           shift and go to state 133
    FLOAT           shift and go to state 134
    BOOLEAN         shift and go to state 135
    VOID            shift and go to state 136
    CHARACTER       shift and go to state 137
    VARCHAR         shift and go to state 138
    TEXT            shift and go to state 139
    TIME            shift and go to state 140
    TIMESTAMP       shift and go to state 141
    DATE            shift and go to state 142

    tipo                           shift and go to state 260

state 213

    (40) createDB_dosParam -> OWNER IGUAL string_type MODE . ENTERO
    (43) createDB_dosParam -> OWNER IGUAL string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 262
    IGUAL           shift and go to state 261


state 214

    (37) createDB_dosParam -> OWNER string_type MODE ENTERO .

    PTCOMA          reduce using rule 37 (createDB_dosParam -> OWNER string_type MODE ENTERO .)


state 215

    (39) createDB_dosParam -> OWNER string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 263


state 216

    (42) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 265
    IGUAL           shift and go to state 264


state 217

    (38) createDB_dosParam -> MODE ENTERO OWNER string_type .

    PTCOMA          reduce using rule 38 (createDB_dosParam -> MODE ENTERO OWNER string_type .)


state 218

    (41) createDB_dosParam -> MODE ENTERO OWNER IGUAL . string_type
    (104) string_type -> . CADENA
    (105) string_type -> . ID

    CADENA          shift and go to state 89
    ID              shift and go to state 90

    string_type                    shift and go to state 266

state 219

    (27) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 220

    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 267


state 221

    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 268


state 222

    (59) cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .
    (60) createTable_options -> createTable_options . cT_options
    (62) cT_options -> . N_null
    (63) cT_options -> . C_unique
    (64) cT_options -> . llave
    (65) cT_options -> . O_DEFAULT
    (66) N_null -> . NOT NULL
    (67) N_null -> . NULL
    (68) C_unique -> . UNIQUE
    (69) C_unique -> . CONSTRAINT ID UNIQUE
    (70) llave -> . PRIMARY KEY
    (71) llave -> . FOREIGN KEY
    (72) O_DEFAULT -> . DEFAULT expresion_dato_default

    PARC            reduce using rule 59 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    COMA            reduce using rule 59 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    NOT             shift and go to state 228
    NULL            shift and go to state 229
    UNIQUE          shift and go to state 230
    CONSTRAINT      shift and go to state 231
    PRIMARY         shift and go to state 232
    FOREIGN         shift and go to state 233
    DEFAULT         shift and go to state 234

    cT_options                     shift and go to state 269
    N_null                         shift and go to state 224
    C_unique                       shift and go to state 225
    llave                          shift and go to state 226
    O_DEFAULT                      shift and go to state 227

state 223

    (61) createTable_options -> cT_options .

    NOT             reduce using rule 61 (createTable_options -> cT_options .)
    NULL            reduce using rule 61 (createTable_options -> cT_options .)
    UNIQUE          reduce using rule 61 (createTable_options -> cT_options .)
    CONSTRAINT      reduce using rule 61 (createTable_options -> cT_options .)
    PRIMARY         reduce using rule 61 (createTable_options -> cT_options .)
    FOREIGN         reduce using rule 61 (createTable_options -> cT_options .)
    DEFAULT         reduce using rule 61 (createTable_options -> cT_options .)
    PARC            reduce using rule 61 (createTable_options -> cT_options .)
    COMA            reduce using rule 61 (createTable_options -> cT_options .)


state 224

    (62) cT_options -> N_null .

    NOT             reduce using rule 62 (cT_options -> N_null .)
    NULL            reduce using rule 62 (cT_options -> N_null .)
    UNIQUE          reduce using rule 62 (cT_options -> N_null .)
    CONSTRAINT      reduce using rule 62 (cT_options -> N_null .)
    PRIMARY         reduce using rule 62 (cT_options -> N_null .)
    FOREIGN         reduce using rule 62 (cT_options -> N_null .)
    DEFAULT         reduce using rule 62 (cT_options -> N_null .)
    PARC            reduce using rule 62 (cT_options -> N_null .)
    COMA            reduce using rule 62 (cT_options -> N_null .)


state 225

    (63) cT_options -> C_unique .

    NOT             reduce using rule 63 (cT_options -> C_unique .)
    NULL            reduce using rule 63 (cT_options -> C_unique .)
    UNIQUE          reduce using rule 63 (cT_options -> C_unique .)
    CONSTRAINT      reduce using rule 63 (cT_options -> C_unique .)
    PRIMARY         reduce using rule 63 (cT_options -> C_unique .)
    FOREIGN         reduce using rule 63 (cT_options -> C_unique .)
    DEFAULT         reduce using rule 63 (cT_options -> C_unique .)
    PARC            reduce using rule 63 (cT_options -> C_unique .)
    COMA            reduce using rule 63 (cT_options -> C_unique .)


state 226

    (64) cT_options -> llave .

    NOT             reduce using rule 64 (cT_options -> llave .)
    NULL            reduce using rule 64 (cT_options -> llave .)
    UNIQUE          reduce using rule 64 (cT_options -> llave .)
    CONSTRAINT      reduce using rule 64 (cT_options -> llave .)
    PRIMARY         reduce using rule 64 (cT_options -> llave .)
    FOREIGN         reduce using rule 64 (cT_options -> llave .)
    DEFAULT         reduce using rule 64 (cT_options -> llave .)
    PARC            reduce using rule 64 (cT_options -> llave .)
    COMA            reduce using rule 64 (cT_options -> llave .)


state 227

    (65) cT_options -> O_DEFAULT .

    NOT             reduce using rule 65 (cT_options -> O_DEFAULT .)
    NULL            reduce using rule 65 (cT_options -> O_DEFAULT .)
    UNIQUE          reduce using rule 65 (cT_options -> O_DEFAULT .)
    CONSTRAINT      reduce using rule 65 (cT_options -> O_DEFAULT .)
    PRIMARY         reduce using rule 65 (cT_options -> O_DEFAULT .)
    FOREIGN         reduce using rule 65 (cT_options -> O_DEFAULT .)
    DEFAULT         reduce using rule 65 (cT_options -> O_DEFAULT .)
    PARC            reduce using rule 65 (cT_options -> O_DEFAULT .)
    COMA            reduce using rule 65 (cT_options -> O_DEFAULT .)


state 228

    (66) N_null -> NOT . NULL

    NULL            shift and go to state 270


state 229

    (67) N_null -> NULL .

    NOT             reduce using rule 67 (N_null -> NULL .)
    NULL            reduce using rule 67 (N_null -> NULL .)
    UNIQUE          reduce using rule 67 (N_null -> NULL .)
    CONSTRAINT      reduce using rule 67 (N_null -> NULL .)
    PRIMARY         reduce using rule 67 (N_null -> NULL .)
    FOREIGN         reduce using rule 67 (N_null -> NULL .)
    DEFAULT         reduce using rule 67 (N_null -> NULL .)
    PARC            reduce using rule 67 (N_null -> NULL .)
    COMA            reduce using rule 67 (N_null -> NULL .)


state 230

    (68) C_unique -> UNIQUE .

    NOT             reduce using rule 68 (C_unique -> UNIQUE .)
    NULL            reduce using rule 68 (C_unique -> UNIQUE .)
    UNIQUE          reduce using rule 68 (C_unique -> UNIQUE .)
    CONSTRAINT      reduce using rule 68 (C_unique -> UNIQUE .)
    PRIMARY         reduce using rule 68 (C_unique -> UNIQUE .)
    FOREIGN         reduce using rule 68 (C_unique -> UNIQUE .)
    DEFAULT         reduce using rule 68 (C_unique -> UNIQUE .)
    PARC            reduce using rule 68 (C_unique -> UNIQUE .)
    COMA            reduce using rule 68 (C_unique -> UNIQUE .)


state 231

    (69) C_unique -> CONSTRAINT . ID UNIQUE

    ID              shift and go to state 271


state 232

    (70) llave -> PRIMARY . KEY

    KEY             shift and go to state 272


state 233

    (71) llave -> FOREIGN . KEY

    KEY             shift and go to state 273


state 234

    (72) O_DEFAULT -> DEFAULT . expresion_dato_default
    (73) expresion_dato_default -> . ENTERO
    (74) expresion_dato_default -> . FLOTANTE
    (75) expresion_dato_default -> . CADENA

    ENTERO          shift and go to state 275
    FLOTANTE        shift and go to state 276
    CADENA          shift and go to state 277

    expresion_dato_default         shift and go to state 274

state 235

    (82) TIPO_DATO_DEF -> DECIMAL PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 278


state 236

    (83) TIPO_DATO_DEF -> NUMERIC PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 279


state 237

    (86) TIPO_DATO_DEF -> DOUBLE PRECISION .

    NOT             reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    NULL            reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PARC            reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    COMA            reduce using rule 86 (TIPO_DATO_DEF -> DOUBLE PRECISION .)


state 238

    (87) TIPO_DATO_DEF -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 280


state 239

    (98) extract_time -> YEAR .

    TO              reduce using rule 98 (extract_time -> YEAR .)
    NOT             reduce using rule 98 (extract_time -> YEAR .)
    NULL            reduce using rule 98 (extract_time -> YEAR .)
    UNIQUE          reduce using rule 98 (extract_time -> YEAR .)
    CONSTRAINT      reduce using rule 98 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 98 (extract_time -> YEAR .)
    FOREIGN         reduce using rule 98 (extract_time -> YEAR .)
    DEFAULT         reduce using rule 98 (extract_time -> YEAR .)
    PARC            reduce using rule 98 (extract_time -> YEAR .)
    COMA            reduce using rule 98 (extract_time -> YEAR .)


state 240

    (99) extract_time -> DAY .

    TO              reduce using rule 99 (extract_time -> DAY .)
    NOT             reduce using rule 99 (extract_time -> DAY .)
    NULL            reduce using rule 99 (extract_time -> DAY .)
    UNIQUE          reduce using rule 99 (extract_time -> DAY .)
    CONSTRAINT      reduce using rule 99 (extract_time -> DAY .)
    PRIMARY         reduce using rule 99 (extract_time -> DAY .)
    FOREIGN         reduce using rule 99 (extract_time -> DAY .)
    DEFAULT         reduce using rule 99 (extract_time -> DAY .)
    PARC            reduce using rule 99 (extract_time -> DAY .)
    COMA            reduce using rule 99 (extract_time -> DAY .)


state 241

    (100) extract_time -> MONTH .

    TO              reduce using rule 100 (extract_time -> MONTH .)
    NOT             reduce using rule 100 (extract_time -> MONTH .)
    NULL            reduce using rule 100 (extract_time -> MONTH .)
    UNIQUE          reduce using rule 100 (extract_time -> MONTH .)
    CONSTRAINT      reduce using rule 100 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 100 (extract_time -> MONTH .)
    FOREIGN         reduce using rule 100 (extract_time -> MONTH .)
    DEFAULT         reduce using rule 100 (extract_time -> MONTH .)
    PARC            reduce using rule 100 (extract_time -> MONTH .)
    COMA            reduce using rule 100 (extract_time -> MONTH .)


state 242

    (101) extract_time -> HOUR .

    TO              reduce using rule 101 (extract_time -> HOUR .)
    NOT             reduce using rule 101 (extract_time -> HOUR .)
    NULL            reduce using rule 101 (extract_time -> HOUR .)
    UNIQUE          reduce using rule 101 (extract_time -> HOUR .)
    CONSTRAINT      reduce using rule 101 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 101 (extract_time -> HOUR .)
    FOREIGN         reduce using rule 101 (extract_time -> HOUR .)
    DEFAULT         reduce using rule 101 (extract_time -> HOUR .)
    PARC            reduce using rule 101 (extract_time -> HOUR .)
    COMA            reduce using rule 101 (extract_time -> HOUR .)


state 243

    (102) extract_time -> MINUTE .

    TO              reduce using rule 102 (extract_time -> MINUTE .)
    NOT             reduce using rule 102 (extract_time -> MINUTE .)
    NULL            reduce using rule 102 (extract_time -> MINUTE .)
    UNIQUE          reduce using rule 102 (extract_time -> MINUTE .)
    CONSTRAINT      reduce using rule 102 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 102 (extract_time -> MINUTE .)
    FOREIGN         reduce using rule 102 (extract_time -> MINUTE .)
    DEFAULT         reduce using rule 102 (extract_time -> MINUTE .)
    PARC            reduce using rule 102 (extract_time -> MINUTE .)
    COMA            reduce using rule 102 (extract_time -> MINUTE .)


state 244

    (103) extract_time -> SECOND .

    TO              reduce using rule 103 (extract_time -> SECOND .)
    NOT             reduce using rule 103 (extract_time -> SECOND .)
    NULL            reduce using rule 103 (extract_time -> SECOND .)
    UNIQUE          reduce using rule 103 (extract_time -> SECOND .)
    CONSTRAINT      reduce using rule 103 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 103 (extract_time -> SECOND .)
    FOREIGN         reduce using rule 103 (extract_time -> SECOND .)
    DEFAULT         reduce using rule 103 (extract_time -> SECOND .)
    PARC            reduce using rule 103 (extract_time -> SECOND .)
    COMA            reduce using rule 103 (extract_time -> SECOND .)


state 245

    (92) TIPO_DATO_DEF -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 281


state 246

    (95) TIPO_DATO_DEF -> CHARACTER PARA . ENTERO PARC
    (97) TIPO_DATO_DEF -> CHARACTER PARA . PARC

    ENTERO          shift and go to state 282
    PARC            shift and go to state 283


state 247

    (93) TIPO_DATO_DEF -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 284


state 248

    (94) TIPO_DATO_DEF -> CHAR PARA . ENTERO PARC
    (96) TIPO_DATO_DEF -> CHAR PARA . PARC

    ENTERO          shift and go to state 285
    PARC            shift and go to state 286


state 249

    (54) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .

    error           reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CREATE          reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SELECT          reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CALL            reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SHOW            reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    USE             reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    DROP            reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    $end            reduce using rule 54 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)


state 250

    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS . PARA ID PARC PTCOMA

    PARA            shift and go to state 287


state 251

    (56) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PARC            reduce using rule 56 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 56 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 252

    (153) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 288


state 253

    (154) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 289


state 254

    (156) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 290


state 255

    (155) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 291


state 256

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 292


state 257

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 293


state 258

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 294


state 259

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (45) createDB_unParam -> . OWNER IGUAL string_type
    (46) createDB_unParam -> . MODE IGUAL ENTERO
    (47) createDB_unParam -> . OWNER string_type
    (48) createDB_unParam -> . MODE ENTERO
    (37) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (38) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (39) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (40) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (41) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (42) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 295
    OWNER           shift and go to state 53
    MODE            shift and go to state 54

    createDB_unParam               shift and go to state 296
    createDB_dosParam              shift and go to state 297

state 260

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 298


state 261

    (43) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 299


state 262

    (40) createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .

    PTCOMA          reduce using rule 40 (createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .)


state 263

    (39) createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 39 (createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .)


state 264

    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 300


state 265

    (42) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 266

    (41) createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .)


state 267

    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 268

    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 269

    (60) createTable_options -> createTable_options cT_options .

    NOT             reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    NULL            reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    UNIQUE          reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    CONSTRAINT      reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    PRIMARY         reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    FOREIGN         reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    DEFAULT         reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    PARC            reduce using rule 60 (createTable_options -> createTable_options cT_options .)
    COMA            reduce using rule 60 (createTable_options -> createTable_options cT_options .)


state 270

    (66) N_null -> NOT NULL .

    NOT             reduce using rule 66 (N_null -> NOT NULL .)
    NULL            reduce using rule 66 (N_null -> NOT NULL .)
    UNIQUE          reduce using rule 66 (N_null -> NOT NULL .)
    CONSTRAINT      reduce using rule 66 (N_null -> NOT NULL .)
    PRIMARY         reduce using rule 66 (N_null -> NOT NULL .)
    FOREIGN         reduce using rule 66 (N_null -> NOT NULL .)
    DEFAULT         reduce using rule 66 (N_null -> NOT NULL .)
    PARC            reduce using rule 66 (N_null -> NOT NULL .)
    COMA            reduce using rule 66 (N_null -> NOT NULL .)


state 271

    (69) C_unique -> CONSTRAINT ID . UNIQUE

    UNIQUE          shift and go to state 301


state 272

    (70) llave -> PRIMARY KEY .

    NOT             reduce using rule 70 (llave -> PRIMARY KEY .)
    NULL            reduce using rule 70 (llave -> PRIMARY KEY .)
    UNIQUE          reduce using rule 70 (llave -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 70 (llave -> PRIMARY KEY .)
    PRIMARY         reduce using rule 70 (llave -> PRIMARY KEY .)
    FOREIGN         reduce using rule 70 (llave -> PRIMARY KEY .)
    DEFAULT         reduce using rule 70 (llave -> PRIMARY KEY .)
    PARC            reduce using rule 70 (llave -> PRIMARY KEY .)
    COMA            reduce using rule 70 (llave -> PRIMARY KEY .)


state 273

    (71) llave -> FOREIGN KEY .

    NOT             reduce using rule 71 (llave -> FOREIGN KEY .)
    NULL            reduce using rule 71 (llave -> FOREIGN KEY .)
    UNIQUE          reduce using rule 71 (llave -> FOREIGN KEY .)
    CONSTRAINT      reduce using rule 71 (llave -> FOREIGN KEY .)
    PRIMARY         reduce using rule 71 (llave -> FOREIGN KEY .)
    FOREIGN         reduce using rule 71 (llave -> FOREIGN KEY .)
    DEFAULT         reduce using rule 71 (llave -> FOREIGN KEY .)
    PARC            reduce using rule 71 (llave -> FOREIGN KEY .)
    COMA            reduce using rule 71 (llave -> FOREIGN KEY .)


state 274

    (72) O_DEFAULT -> DEFAULT expresion_dato_default .

    NOT             reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    NULL            reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    UNIQUE          reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CONSTRAINT      reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PRIMARY         reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    FOREIGN         reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    DEFAULT         reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PARC            reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    COMA            reduce using rule 72 (O_DEFAULT -> DEFAULT expresion_dato_default .)


state 275

    (73) expresion_dato_default -> ENTERO .

    NOT             reduce using rule 73 (expresion_dato_default -> ENTERO .)
    NULL            reduce using rule 73 (expresion_dato_default -> ENTERO .)
    UNIQUE          reduce using rule 73 (expresion_dato_default -> ENTERO .)
    CONSTRAINT      reduce using rule 73 (expresion_dato_default -> ENTERO .)
    PRIMARY         reduce using rule 73 (expresion_dato_default -> ENTERO .)
    FOREIGN         reduce using rule 73 (expresion_dato_default -> ENTERO .)
    DEFAULT         reduce using rule 73 (expresion_dato_default -> ENTERO .)
    PARC            reduce using rule 73 (expresion_dato_default -> ENTERO .)
    COMA            reduce using rule 73 (expresion_dato_default -> ENTERO .)


state 276

    (74) expresion_dato_default -> FLOTANTE .

    NOT             reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    NULL            reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    UNIQUE          reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    CONSTRAINT      reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    PRIMARY         reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    FOREIGN         reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    DEFAULT         reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    PARC            reduce using rule 74 (expresion_dato_default -> FLOTANTE .)
    COMA            reduce using rule 74 (expresion_dato_default -> FLOTANTE .)


state 277

    (75) expresion_dato_default -> CADENA .

    NOT             reduce using rule 75 (expresion_dato_default -> CADENA .)
    NULL            reduce using rule 75 (expresion_dato_default -> CADENA .)
    UNIQUE          reduce using rule 75 (expresion_dato_default -> CADENA .)
    CONSTRAINT      reduce using rule 75 (expresion_dato_default -> CADENA .)
    PRIMARY         reduce using rule 75 (expresion_dato_default -> CADENA .)
    FOREIGN         reduce using rule 75 (expresion_dato_default -> CADENA .)
    DEFAULT         reduce using rule 75 (expresion_dato_default -> CADENA .)
    PARC            reduce using rule 75 (expresion_dato_default -> CADENA .)
    COMA            reduce using rule 75 (expresion_dato_default -> CADENA .)


state 278

    (82) TIPO_DATO_DEF -> DECIMAL PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 302


state 279

    (83) TIPO_DATO_DEF -> NUMERIC PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 303


state 280

    (87) TIPO_DATO_DEF -> INTERVAL extract_time TO . extract_time
    (98) extract_time -> . YEAR
    (99) extract_time -> . DAY
    (100) extract_time -> . MONTH
    (101) extract_time -> . HOUR
    (102) extract_time -> . MINUTE
    (103) extract_time -> . SECOND

    YEAR            shift and go to state 239
    DAY             shift and go to state 240
    MONTH           shift and go to state 241
    HOUR            shift and go to state 242
    MINUTE          shift and go to state 243
    SECOND          shift and go to state 244

    extract_time                   shift and go to state 304

state 281

    (92) TIPO_DATO_DEF -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 305


state 282

    (95) TIPO_DATO_DEF -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 306


state 283

    (97) TIPO_DATO_DEF -> CHARACTER PARA PARC .

    NOT             reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    NULL            reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    UNIQUE          reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CONSTRAINT      reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PRIMARY         reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    FOREIGN         reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    DEFAULT         reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PARC            reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    COMA            reduce using rule 97 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)


state 284

    (93) TIPO_DATO_DEF -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 307


state 285

    (94) TIPO_DATO_DEF -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 308


state 286

    (96) TIPO_DATO_DEF -> CHAR PARA PARC .

    NOT             reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    NULL            reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    UNIQUE          reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CONSTRAINT      reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PRIMARY         reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    FOREIGN         reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    DEFAULT         reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PARC            reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    COMA            reduce using rule 96 (TIPO_DATO_DEF -> CHAR PARA PARC .)


state 287

    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA . ID PARC PTCOMA

    ID              shift and go to state 309


state 288

    (153) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 153 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 153 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 153 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 153 (tipo -> CHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 153 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 153 (tipo -> CHAR PARA ENTERO PARC .)


state 289

    (154) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 310


state 290

    (156) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 156 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 156 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 156 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 156 (tipo -> CHARACTER PARA ENTERO PARC .)
    PTCOMA          reduce using rule 156 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 156 (tipo -> CHARACTER PARA ENTERO PARC .)


state 291

    (155) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 155 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 155 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 155 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 155 (tipo -> VARCHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 155 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 155 (tipo -> VARCHAR PARA ENTERO PARC .)


state 292

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 311


state 293

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (140) tipo -> . INTEGER
    (141) tipo -> . SMALLINT
    (142) tipo -> . BIGINT
    (143) tipo -> . DECIMAL
    (144) tipo -> . NUMERIC
    (145) tipo -> . REAL
    (146) tipo -> . CHAR
    (147) tipo -> . DOUBLE
    (148) tipo -> . PRECISION
    (149) tipo -> . MONEY
    (150) tipo -> . FLOAT
    (151) tipo -> . BOOLEAN
    (152) tipo -> . VOID
    (153) tipo -> . CHAR PARA ENTERO PARC
    (154) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (155) tipo -> . VARCHAR PARA ENTERO PARC
    (156) tipo -> . CHARACTER PARA ENTERO PARC
    (157) tipo -> . TEXT
    (158) tipo -> . TIME
    (159) tipo -> . TIMESTAMP
    (160) tipo -> . DATE

    INTEGER         shift and go to state 124
    SMALLINT        shift and go to state 125
    BIGINT          shift and go to state 126
    DECIMAL         shift and go to state 127
    NUMERIC         shift and go to state 128
    REAL            shift and go to state 129
    CHAR            shift and go to state 130
    DOUBLE          shift and go to state 131
    PRECISION       shift and go to state 132
    MONEY           shift and go to state 133
    FLOAT           shift and go to state 134
    BOOLEAN         shift and go to state 135
    VOID            shift and go to state 136
    CHARACTER       shift and go to state 137
    VARCHAR         shift and go to state 138
    TEXT            shift and go to state 139
    TIME            shift and go to state 140
    TIMESTAMP       shift and go to state 141
    DATE            shift and go to state 142

    tipo                           shift and go to state 312

state 294

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (140) tipo -> . INTEGER
    (141) tipo -> . SMALLINT
    (142) tipo -> . BIGINT
    (143) tipo -> . DECIMAL
    (144) tipo -> . NUMERIC
    (145) tipo -> . REAL
    (146) tipo -> . CHAR
    (147) tipo -> . DOUBLE
    (148) tipo -> . PRECISION
    (149) tipo -> . MONEY
    (150) tipo -> . FLOAT
    (151) tipo -> . BOOLEAN
    (152) tipo -> . VOID
    (153) tipo -> . CHAR PARA ENTERO PARC
    (154) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (155) tipo -> . VARCHAR PARA ENTERO PARC
    (156) tipo -> . CHARACTER PARA ENTERO PARC
    (157) tipo -> . TEXT
    (158) tipo -> . TIME
    (159) tipo -> . TIMESTAMP
    (160) tipo -> . DATE

    INTEGER         shift and go to state 124
    SMALLINT        shift and go to state 125
    BIGINT          shift and go to state 126
    DECIMAL         shift and go to state 127
    NUMERIC         shift and go to state 128
    REAL            shift and go to state 129
    CHAR            shift and go to state 130
    DOUBLE          shift and go to state 131
    PRECISION       shift and go to state 132
    MONEY           shift and go to state 133
    FLOAT           shift and go to state 134
    BOOLEAN         shift and go to state 135
    VOID            shift and go to state 136
    CHARACTER       shift and go to state 137
    VARCHAR         shift and go to state 138
    TEXT            shift and go to state 139
    TIME            shift and go to state 140
    TIMESTAMP       shift and go to state 141
    DATE            shift and go to state 142

    tipo                           shift and go to state 313

state 295

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 296

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 314


state 297

    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 315


state 298

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 316


state 299

    (43) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .)


state 300

    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 301

    (69) C_unique -> CONSTRAINT ID UNIQUE .

    NOT             reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    PARC            reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 69 (C_unique -> CONSTRAINT ID UNIQUE .)


state 302

    (82) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 317


state 303

    (83) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 318


state 304

    (87) TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .

    NOT             reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    UNIQUE          reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CONSTRAINT      reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PRIMARY         reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    FOREIGN         reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    DEFAULT         reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PARC            reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 87 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)


state 305

    (92) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 319


state 306

    (95) TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .

    NOT             reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    NULL            reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    UNIQUE          reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PRIMARY         reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    FOREIGN         reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PARC            reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 95 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)


state 307

    (93) TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .

    NOT             reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    NULL            reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PARC            reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 93 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)


state 308

    (94) TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .

    NOT             reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    NULL            reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PARC            reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 94 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)


state 309

    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID . PARC PTCOMA

    PARC            shift and go to state 320


state 310

    (154) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 154 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 154 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 154 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 154 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PTCOMA          reduce using rule 154 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 154 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 311

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 321


state 312

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 322


state 313

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 323


state 314

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 315

    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 316

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 324


state 317

    (82) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 325


state 318

    (83) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 326


state 319

    (92) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .

    NOT             reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    NULL            reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    UNIQUE          reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PRIMARY         reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    FOREIGN         reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PARC            reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 92 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)


state 320

    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 327


state 321

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 328
    DECLARE         shift and go to state 329


state 322

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 330


state 323

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 331


state 324

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 332
    DECLARE         shift and go to state 333


state 325

    (82) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 82 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)


state 326

    (83) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 83 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)


state 327

    (55) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .

    error           reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CALL            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    USE             reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    DROP            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    $end            reduce using rule 55 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)


state 328

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 335
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 329

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    BEGIN           reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 349
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 330

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 350


state 331

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 351


state 332

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 352
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 333

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    BEGIN           reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 353
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 334

    (136) asignacion -> ID . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> ID . tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> ID . tipo PTCOMA
    (139) declaracion -> ID . tipo DEFAULT expresionPLSQL PTCOMA
    (140) tipo -> . INTEGER
    (141) tipo -> . SMALLINT
    (142) tipo -> . BIGINT
    (143) tipo -> . DECIMAL
    (144) tipo -> . NUMERIC
    (145) tipo -> . REAL
    (146) tipo -> . CHAR
    (147) tipo -> . DOUBLE
    (148) tipo -> . PRECISION
    (149) tipo -> . MONEY
    (150) tipo -> . FLOAT
    (151) tipo -> . BOOLEAN
    (152) tipo -> . VOID
    (153) tipo -> . CHAR PARA ENTERO PARC
    (154) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (155) tipo -> . VARCHAR PARA ENTERO PARC
    (156) tipo -> . CHARACTER PARA ENTERO PARC
    (157) tipo -> . TEXT
    (158) tipo -> . TIME
    (159) tipo -> . TIMESTAMP
    (160) tipo -> . DATE

    DOSPUNTOS       shift and go to state 354
    INTEGER         shift and go to state 124
    SMALLINT        shift and go to state 125
    BIGINT          shift and go to state 126
    DECIMAL         shift and go to state 127
    NUMERIC         shift and go to state 128
    REAL            shift and go to state 129
    CHAR            shift and go to state 130
    DOUBLE          shift and go to state 131
    PRECISION       shift and go to state 132
    MONEY           shift and go to state 133
    FLOAT           shift and go to state 134
    BOOLEAN         shift and go to state 135
    VOID            shift and go to state 136
    CHARACTER       shift and go to state 137
    VARCHAR         shift and go to state 138
    TEXT            shift and go to state 139
    TIME            shift and go to state 140
    TIMESTAMP       shift and go to state 141
    DATE            shift and go to state 142

    tipo                           shift and go to state 355

state 335

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 356
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 336

    (21) instrucciones_funct_sent -> PTCOMA .

    END             reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    PTCOMA          reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    error           reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    ID              reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    RAISE           reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    IF              reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    CASE            reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    SELECT          reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    CALL            reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    BEGIN           reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    ELSE            reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    ELSEIF          reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)
    WHEN            reduce using rule 21 (instrucciones_funct_sent -> PTCOMA .)


state 337

    (15) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PTCOMA          reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CALL            reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 15 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 338

    (16) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    PTCOMA          reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    CALL            reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 16 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 16 (instrucciones_funct_sent -> asignacion .)


state 339

    (17) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    PTCOMA          reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    CALL            reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 17 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 17 (instrucciones_funct_sent -> declaracion .)


state 340

    (18) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    PTCOMA          reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    CALL            reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 18 (instrucciones_funct_sent -> imprimir .)


state 341

    (19) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    PTCOMA          reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    CALL            reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 19 (instrucciones_funct_sent -> sentencia_if .)


state 342

    (20) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    PTCOMA          reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    CALL            reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 20 (instrucciones_funct_sent -> sentencia_switch .)


state 343

    (22) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    PTCOMA          reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    CALL            reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 22 (instrucciones_funct_sent -> llamada_funcion .)


state 344

    (23) instrucciones_funct_sent -> empty .

    END             reduce using rule 23 (instrucciones_funct_sent -> empty .)
    PTCOMA          reduce using rule 23 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 23 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 23 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 23 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 23 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 23 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 23 (instrucciones_funct_sent -> empty .)
    CALL            reduce using rule 23 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 23 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 23 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 23 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 23 (instrucciones_funct_sent -> empty .)


state 345

    (24) instrucciones_funct_sent -> error .

    END             reduce using rule 24 (instrucciones_funct_sent -> error .)
    PTCOMA          reduce using rule 24 (instrucciones_funct_sent -> error .)
    error           reduce using rule 24 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 24 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 24 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 24 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 24 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 24 (instrucciones_funct_sent -> error .)
    CALL            reduce using rule 24 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 24 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 24 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 24 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 24 (instrucciones_funct_sent -> error .)


state 346

    (132) imprimir -> RAISE . lista_imprimir PTCOMA
    (133) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (134) lista_imprimir -> . sent_imprimir
    (135) sent_imprimir -> . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    lista_imprimir                 shift and go to state 358
    sent_imprimir                  shift and go to state 359
    expresionPLSQL                 shift and go to state 360
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 347

    (128) sentencia_if -> IF . expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 361
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 348

    (123) sentencia_switch -> CASE . expresionPLSQL case_list END CASE PTCOMA
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 362
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 349

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 363
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! BEGIN           [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 350

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 364
    DECLARE         shift and go to state 365


state 351

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 366
    DECLARE         shift and go to state 367


state 352

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 368
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 353

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 369
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! BEGIN           [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 354

    (136) asignacion -> ID DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 370


state 355

    (137) declaracion -> ID tipo . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> ID tipo . PTCOMA
    (139) declaracion -> ID tipo . DEFAULT expresionPLSQL PTCOMA

    DOSPUNTOS       shift and go to state 371
    PTCOMA          shift and go to state 372
    DEFAULT         shift and go to state 373


state 356

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 374


state 357

    (14) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PTCOMA          reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CALL            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 358

    (132) imprimir -> RAISE lista_imprimir . PTCOMA
    (133) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PTCOMA          shift and go to state 375
    COMA            shift and go to state 376


state 359

    (134) lista_imprimir -> sent_imprimir .

    PTCOMA          reduce using rule 134 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 134 (lista_imprimir -> sent_imprimir .)


state 360

    (135) sent_imprimir -> expresionPLSQL .
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          reduce using rule 135 (sent_imprimir -> expresionPLSQL .)
    COMA            reduce using rule 135 (sent_imprimir -> expresionPLSQL .)
    AND             shift and go to state 100
    OR              shift and go to state 101


state 361

    (128) sentencia_if -> IF expresionPLSQL . THEN instrucciones_funct_list else END IF PTCOMA
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 377
    AND             shift and go to state 100
    OR              shift and go to state 101


state 362

    (123) sentencia_switch -> CASE expresionPLSQL . case_list END CASE PTCOMA
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL
    (124) case_list -> . case_list case
    (125) case_list -> . case
    (126) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (127) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 100
    OR              shift and go to state 101
    WHEN            shift and go to state 380
    ELSE            shift and go to state 381

    case_list                      shift and go to state 378
    case                           shift and go to state 379

state 363

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 382
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 364

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 383
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 365

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    BEGIN           reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 384
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 366

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 385
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 367

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    BEGIN           reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 386
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 368

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 387


state 369

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 388
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 370

    (136) asignacion -> ID DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 389
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 371

    (137) declaracion -> ID tipo DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 390


state 372

    (138) declaracion -> ID tipo PTCOMA .

    END             reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    PTCOMA          reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    error           reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    ID              reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    RAISE           reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    IF              reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    CASE            reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    SELECT          reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    CALL            reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    BEGIN           reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    ELSE            reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    ELSEIF          reduce using rule 138 (declaracion -> ID tipo PTCOMA .)
    WHEN            reduce using rule 138 (declaracion -> ID tipo PTCOMA .)


state 373

    (139) declaracion -> ID tipo DEFAULT . expresionPLSQL PTCOMA
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 391
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 374

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 392


state 375

    (132) imprimir -> RAISE lista_imprimir PTCOMA .

    END             reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    PTCOMA          reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    error           reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ID              reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    RAISE           reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    IF              reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CASE            reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    SELECT          reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CALL            reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    BEGIN           reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSE            reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSEIF          reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)
    WHEN            reduce using rule 132 (imprimir -> RAISE lista_imprimir PTCOMA .)


state 376

    (133) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (135) sent_imprimir -> . expresionPLSQL
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    sent_imprimir                  shift and go to state 393
    expresionPLSQL                 shift and go to state 360
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 377

    (128) sentencia_if -> IF expresionPLSQL THEN . instrucciones_funct_list else END IF PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    ELSE            reduce using rule 192 (empty -> .)
    ELSEIF          reduce using rule 192 (empty -> .)
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 394
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 378

    (123) sentencia_switch -> CASE expresionPLSQL case_list . END CASE PTCOMA
    (124) case_list -> case_list . case
    (126) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (127) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 395
    WHEN            shift and go to state 380
    ELSE            shift and go to state 381

    case                           shift and go to state 396

state 379

    (125) case_list -> case .

    END             reduce using rule 125 (case_list -> case .)
    WHEN            reduce using rule 125 (case_list -> case .)
    ELSE            reduce using rule 125 (case_list -> case .)


state 380

    (126) case -> WHEN . expresionPLSQL THEN instrucciones_funct_list
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 397
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 381

    (127) case -> ELSE . instrucciones_funct_list
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)
    WHEN            reduce using rule 192 (empty -> .)
    ELSE            reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 398
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 382

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 399
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 383

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 400
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 384

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 401
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! BEGIN           [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 385

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 402
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 386

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 403
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! BEGIN           [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 387

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 404


state 388

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 405
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 389

    (136) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 406
    AND             shift and go to state 100
    OR              shift and go to state 101


state 390

    (137) declaracion -> ID tipo DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 407
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 391

    (139) declaracion -> ID tipo DEFAULT expresionPLSQL . PTCOMA
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 408
    AND             shift and go to state 100
    OR              shift and go to state 101


state 392

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 409


state 393

    (133) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PTCOMA          reduce using rule 133 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 133 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 394

    (128) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list . else END IF PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (129) else -> . ELSE instrucciones_funct_list
    (130) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (131) else -> .
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 131 (else -> .)
    ELSE            shift and go to state 411
    ELSEIF          shift and go to state 412
    END             reduce using rule 131 (else -> .)
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! ELSE            [ reduce using rule 192 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]
  ! END             [ reduce using rule 192 (empty -> .) ]

    else                           shift and go to state 410
    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 395

    (123) sentencia_switch -> CASE expresionPLSQL case_list END . CASE PTCOMA

    CASE            shift and go to state 413


state 396

    (124) case_list -> case_list case .

    END             reduce using rule 124 (case_list -> case_list case .)
    WHEN            reduce using rule 124 (case_list -> case_list case .)
    ELSE            reduce using rule 124 (case_list -> case_list case .)


state 397

    (126) case -> WHEN expresionPLSQL . THEN instrucciones_funct_list
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 414
    AND             shift and go to state 100
    OR              shift and go to state 101


state 398

    (127) case -> ELSE instrucciones_funct_list .
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 127 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 127 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 127 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 127 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 127 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 127 (case -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]
  ! END             [ reduce using rule 192 (empty -> .) ]
  ! WHEN            [ reduce using rule 192 (empty -> .) ]
  ! ELSE            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 399

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 415


state 400

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 416


state 401

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 417
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 402

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 418


state 403

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 419
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 404

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 420


state 405

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 421


state 406

    (136) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 136 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 407

    (137) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 422
    AND             shift and go to state 100
    OR              shift and go to state 101


state 408

    (139) declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .

    END             reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    error           reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ID              reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    IF              reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CASE            reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CALL            reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 139 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)


state 409

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 423


state 410

    (128) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else . END IF PTCOMA

    END             shift and go to state 424


state 411

    (129) else -> ELSE . instrucciones_funct_list
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 425
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 412

    (130) else -> ELSEIF . expresionPLSQL THEN instrucciones_funct_list else
    (161) expresionPLSQL -> . log
    (162) log -> . expresionPLSQL AND expresionPLSQL
    (163) log -> . expresionPLSQL OR expresionPLSQL
    (164) log -> . rel
    (165) rel -> . arit MAYOR arit
    (166) rel -> . arit MENOR arit
    (167) rel -> . arit MAYORIGUAL arit
    (168) rel -> . arit MENORIGUAL arit
    (169) rel -> . arit IGUALIGUAL arit
    (170) rel -> . arit NOTIGUAL arit
    (171) rel -> . arit
    (172) arit -> . arit POR arit
    (173) arit -> . arit DIV arit
    (174) arit -> . arit MAS arit
    (175) arit -> . arit MENOS arit
    (176) arit -> . arit MOD arit
    (177) arit -> . arit ANDB arit
    (178) arit -> . arit SHIFTI arit
    (179) arit -> . arit SHIFTD arit
    (180) arit -> . arit XORB arit
    (181) arit -> . arit ORB arit
    (182) arit -> . PARA expresionPLSQL PARC
    (183) arit -> . ID
    (184) arit -> . CADENA
    (185) arit -> . ENTERO
    (186) arit -> . FLOTANTE
    (187) arit -> . MENOS expresionPLSQL
    (188) arit -> . NOTB expresionPLSQL
    (189) arit -> . NOT expresionPLSQL
    (190) arit -> . TRUE
    (191) arit -> . FALSE

    PARA            shift and go to state 58
    ID              shift and go to state 57
    CADENA          shift and go to state 66
    ENTERO          shift and go to state 67
    FLOTANTE        shift and go to state 68
    MENOS           shift and go to state 65
    NOTB            shift and go to state 69
    NOT             shift and go to state 70
    TRUE            shift and go to state 71
    FALSE           shift and go to state 72

    expresionPLSQL                 shift and go to state 426
    log                            shift and go to state 62
    rel                            shift and go to state 63
    arit                           shift and go to state 64

state 413

    (123) sentencia_switch -> CASE expresionPLSQL case_list END CASE . PTCOMA

    PTCOMA          shift and go to state 427


state 414

    (126) case -> WHEN expresionPLSQL THEN . instrucciones_funct_list
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    END             reduce using rule 192 (empty -> .)
    WHEN            reduce using rule 192 (empty -> .)
    ELSE            reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 428
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 415

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 429


state 416

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 430


state 417

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 431
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 418

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 432


state 419

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 433
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! END             [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 420

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 434


state 421

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 435


state 422

    (137) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 137 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 423

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 436


state 424

    (128) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END . IF PTCOMA

    IF              shift and go to state 437


state 425

    (129) else -> ELSE instrucciones_funct_list .
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 129 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 129 (else -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]
  ! END             [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 426

    (130) else -> ELSEIF expresionPLSQL . THEN instrucciones_funct_list else
    (162) log -> expresionPLSQL . AND expresionPLSQL
    (163) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 438
    AND             shift and go to state 100
    OR              shift and go to state 101


state 427

    (123) sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .

    END             reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    PTCOMA          reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    error           reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ID              reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    RAISE           reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    IF              reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CASE            reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    SELECT          reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CALL            reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    BEGIN           reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSE            reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSEIF          reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    WHEN            reduce using rule 123 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)


state 428

    (126) case -> WHEN expresionPLSQL THEN instrucciones_funct_list .
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 126 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 126 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 126 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    END             reduce using rule 126 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    WHEN            reduce using rule 126 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    ELSE            reduce using rule 126 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]
  ! END             [ reduce using rule 192 (empty -> .) ]
  ! WHEN            [ reduce using rule 192 (empty -> .) ]
  ! ELSE            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 429

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 439


state 430

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 440


state 431

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 441


state 432

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 442


state 433

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 443


state 434

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 444


state 435

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 445


state 436

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 446


state 437

    (128) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF . PTCOMA

    PTCOMA          shift and go to state 447


state 438

    (130) else -> ELSEIF expresionPLSQL THEN . instrucciones_funct_list else
    (14) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (15) instrucciones_funct_list -> . instrucciones_funct_sent
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16
    ELSE            reduce using rule 192 (empty -> .)
    ELSEIF          reduce using rule 192 (empty -> .)
    END             reduce using rule 192 (empty -> .)

  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 448
    instrucciones_funct_sent       shift and go to state 337
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 439

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 449


state 440

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 450


state 441

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 451


state 442

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 452


state 443

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 453


state 444

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 454


state 445

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 455


state 446

    (106) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 106 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 447

    (128) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .

    END             reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    PTCOMA          reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    error           reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ID              reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    RAISE           reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    IF              reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CASE            reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    SELECT          reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CALL            reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    BEGIN           reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSE            reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSEIF          reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    WHEN            reduce using rule 128 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)


state 448

    (130) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list . else
    (14) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (129) else -> . ELSE instrucciones_funct_list
    (130) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (131) else -> .
    (16) instrucciones_funct_sent -> . asignacion
    (17) instrucciones_funct_sent -> . declaracion
    (18) instrucciones_funct_sent -> . imprimir
    (19) instrucciones_funct_sent -> . sentencia_if
    (20) instrucciones_funct_sent -> . sentencia_switch
    (21) instrucciones_funct_sent -> . PTCOMA
    (22) instrucciones_funct_sent -> . llamada_funcion
    (23) instrucciones_funct_sent -> . empty
    (24) instrucciones_funct_sent -> . error
    (136) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (137) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (138) declaracion -> . ID tipo PTCOMA
    (139) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (132) imprimir -> . RAISE lista_imprimir PTCOMA
    (128) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (123) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (114) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (115) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (192) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 131 (else -> .)
    ELSE            shift and go to state 411
    ELSEIF          shift and go to state 412
    END             reduce using rule 131 (else -> .)
    PTCOMA          shift and go to state 336
    error           shift and go to state 345
    ID              shift and go to state 334
    RAISE           shift and go to state 346
    IF              shift and go to state 347
    CASE            shift and go to state 348
    SELECT          shift and go to state 15
    CALL            shift and go to state 16

  ! ELSE            [ reduce using rule 192 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 192 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 192 (empty -> .) ]
  ! error           [ reduce using rule 192 (empty -> .) ]
  ! ID              [ reduce using rule 192 (empty -> .) ]
  ! RAISE           [ reduce using rule 192 (empty -> .) ]
  ! IF              [ reduce using rule 192 (empty -> .) ]
  ! CASE            [ reduce using rule 192 (empty -> .) ]
  ! SELECT          [ reduce using rule 192 (empty -> .) ]
  ! CALL            [ reduce using rule 192 (empty -> .) ]
  ! END             [ reduce using rule 192 (empty -> .) ]

    else                           shift and go to state 456
    instrucciones_funct_sent       shift and go to state 357
    asignacion                     shift and go to state 338
    declaracion                    shift and go to state 339
    imprimir                       shift and go to state 340
    sentencia_if                   shift and go to state 341
    sentencia_switch               shift and go to state 342
    llamada_funcion                shift and go to state 343
    empty                          shift and go to state 344

state 449

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 457


state 450

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 458


state 451

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 459


state 452

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 460


state 453

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 461


state 454

    (110) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 110 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 455

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 462


state 456

    (130) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .

    END             reduce using rule 130 (else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .)


state 457

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 463


state 458

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 464


state 459

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 465


state 460

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 466


state 461

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 467


state 462

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 468


state 463

    (107) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 107 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 464

    (108) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 108 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 465

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 469


state 466

    (112) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 112 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 467

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 470


state 468

    (111) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 111 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 469

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 471


state 470

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 472


state 471

    (109) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 109 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 472

    (113) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 113 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 64 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 64 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 64 resolved as shift
WARNING: shift/reduce conflict for POR in state 64 resolved as shift
WARNING: shift/reduce conflict for DIV in state 64 resolved as shift
WARNING: shift/reduce conflict for MAS in state 64 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 64 resolved as shift
WARNING: shift/reduce conflict for MOD in state 64 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 64 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 64 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 64 resolved as shift
WARNING: shift/reduce conflict for XORB in state 64 resolved as shift
WARNING: shift/reduce conflict for ORB in state 64 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 328 resolved as shift
WARNING: shift/reduce conflict for error in state 328 resolved as shift
WARNING: shift/reduce conflict for ID in state 328 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 328 resolved as shift
WARNING: shift/reduce conflict for IF in state 328 resolved as shift
WARNING: shift/reduce conflict for CASE in state 328 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 328 resolved as shift
WARNING: shift/reduce conflict for CALL in state 328 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 329 resolved as shift
WARNING: shift/reduce conflict for error in state 329 resolved as shift
WARNING: shift/reduce conflict for ID in state 329 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 329 resolved as shift
WARNING: shift/reduce conflict for IF in state 329 resolved as shift
WARNING: shift/reduce conflict for CASE in state 329 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 329 resolved as shift
WARNING: shift/reduce conflict for CALL in state 329 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 332 resolved as shift
WARNING: shift/reduce conflict for error in state 332 resolved as shift
WARNING: shift/reduce conflict for ID in state 332 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 332 resolved as shift
WARNING: shift/reduce conflict for IF in state 332 resolved as shift
WARNING: shift/reduce conflict for CASE in state 332 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 332 resolved as shift
WARNING: shift/reduce conflict for CALL in state 332 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 333 resolved as shift
WARNING: shift/reduce conflict for error in state 333 resolved as shift
WARNING: shift/reduce conflict for ID in state 333 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 333 resolved as shift
WARNING: shift/reduce conflict for IF in state 333 resolved as shift
WARNING: shift/reduce conflict for CASE in state 333 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 333 resolved as shift
WARNING: shift/reduce conflict for CALL in state 333 resolved as shift
WARNING: shift/reduce conflict for END in state 335 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 335 resolved as shift
WARNING: shift/reduce conflict for error in state 335 resolved as shift
WARNING: shift/reduce conflict for ID in state 335 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 335 resolved as shift
WARNING: shift/reduce conflict for IF in state 335 resolved as shift
WARNING: shift/reduce conflict for CASE in state 335 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 335 resolved as shift
WARNING: shift/reduce conflict for CALL in state 335 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 349 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 349 resolved as shift
WARNING: shift/reduce conflict for error in state 349 resolved as shift
WARNING: shift/reduce conflict for ID in state 349 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 349 resolved as shift
WARNING: shift/reduce conflict for IF in state 349 resolved as shift
WARNING: shift/reduce conflict for CASE in state 349 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 349 resolved as shift
WARNING: shift/reduce conflict for CALL in state 349 resolved as shift
WARNING: shift/reduce conflict for END in state 352 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 352 resolved as shift
WARNING: shift/reduce conflict for error in state 352 resolved as shift
WARNING: shift/reduce conflict for ID in state 352 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 352 resolved as shift
WARNING: shift/reduce conflict for IF in state 352 resolved as shift
WARNING: shift/reduce conflict for CASE in state 352 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 352 resolved as shift
WARNING: shift/reduce conflict for CALL in state 352 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 353 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 353 resolved as shift
WARNING: shift/reduce conflict for error in state 353 resolved as shift
WARNING: shift/reduce conflict for ID in state 353 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 353 resolved as shift
WARNING: shift/reduce conflict for IF in state 353 resolved as shift
WARNING: shift/reduce conflict for CASE in state 353 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 353 resolved as shift
WARNING: shift/reduce conflict for CALL in state 353 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 363 resolved as shift
WARNING: shift/reduce conflict for error in state 363 resolved as shift
WARNING: shift/reduce conflict for ID in state 363 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 363 resolved as shift
WARNING: shift/reduce conflict for IF in state 363 resolved as shift
WARNING: shift/reduce conflict for CASE in state 363 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 363 resolved as shift
WARNING: shift/reduce conflict for CALL in state 363 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 364 resolved as shift
WARNING: shift/reduce conflict for error in state 364 resolved as shift
WARNING: shift/reduce conflict for ID in state 364 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 364 resolved as shift
WARNING: shift/reduce conflict for IF in state 364 resolved as shift
WARNING: shift/reduce conflict for CASE in state 364 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 364 resolved as shift
WARNING: shift/reduce conflict for CALL in state 364 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 365 resolved as shift
WARNING: shift/reduce conflict for error in state 365 resolved as shift
WARNING: shift/reduce conflict for ID in state 365 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 365 resolved as shift
WARNING: shift/reduce conflict for IF in state 365 resolved as shift
WARNING: shift/reduce conflict for CASE in state 365 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 365 resolved as shift
WARNING: shift/reduce conflict for CALL in state 365 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 366 resolved as shift
WARNING: shift/reduce conflict for error in state 366 resolved as shift
WARNING: shift/reduce conflict for ID in state 366 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 366 resolved as shift
WARNING: shift/reduce conflict for IF in state 366 resolved as shift
WARNING: shift/reduce conflict for CASE in state 366 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 366 resolved as shift
WARNING: shift/reduce conflict for CALL in state 366 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 367 resolved as shift
WARNING: shift/reduce conflict for error in state 367 resolved as shift
WARNING: shift/reduce conflict for ID in state 367 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 367 resolved as shift
WARNING: shift/reduce conflict for IF in state 367 resolved as shift
WARNING: shift/reduce conflict for CASE in state 367 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 367 resolved as shift
WARNING: shift/reduce conflict for CALL in state 367 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 369 resolved as shift
WARNING: shift/reduce conflict for error in state 369 resolved as shift
WARNING: shift/reduce conflict for ID in state 369 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 369 resolved as shift
WARNING: shift/reduce conflict for IF in state 369 resolved as shift
WARNING: shift/reduce conflict for CASE in state 369 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 369 resolved as shift
WARNING: shift/reduce conflict for CALL in state 369 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 377 resolved as shift
WARNING: shift/reduce conflict for error in state 377 resolved as shift
WARNING: shift/reduce conflict for ID in state 377 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 377 resolved as shift
WARNING: shift/reduce conflict for IF in state 377 resolved as shift
WARNING: shift/reduce conflict for CASE in state 377 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 377 resolved as shift
WARNING: shift/reduce conflict for CALL in state 377 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 381 resolved as shift
WARNING: shift/reduce conflict for error in state 381 resolved as shift
WARNING: shift/reduce conflict for ID in state 381 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 381 resolved as shift
WARNING: shift/reduce conflict for IF in state 381 resolved as shift
WARNING: shift/reduce conflict for CASE in state 381 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 381 resolved as shift
WARNING: shift/reduce conflict for CALL in state 381 resolved as shift
WARNING: shift/reduce conflict for END in state 382 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 382 resolved as shift
WARNING: shift/reduce conflict for error in state 382 resolved as shift
WARNING: shift/reduce conflict for ID in state 382 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 382 resolved as shift
WARNING: shift/reduce conflict for IF in state 382 resolved as shift
WARNING: shift/reduce conflict for CASE in state 382 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 382 resolved as shift
WARNING: shift/reduce conflict for CALL in state 382 resolved as shift
WARNING: shift/reduce conflict for END in state 383 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 383 resolved as shift
WARNING: shift/reduce conflict for error in state 383 resolved as shift
WARNING: shift/reduce conflict for ID in state 383 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 383 resolved as shift
WARNING: shift/reduce conflict for IF in state 383 resolved as shift
WARNING: shift/reduce conflict for CASE in state 383 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 383 resolved as shift
WARNING: shift/reduce conflict for CALL in state 383 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 384 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 384 resolved as shift
WARNING: shift/reduce conflict for error in state 384 resolved as shift
WARNING: shift/reduce conflict for ID in state 384 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 384 resolved as shift
WARNING: shift/reduce conflict for IF in state 384 resolved as shift
WARNING: shift/reduce conflict for CASE in state 384 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 384 resolved as shift
WARNING: shift/reduce conflict for CALL in state 384 resolved as shift
WARNING: shift/reduce conflict for END in state 385 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 385 resolved as shift
WARNING: shift/reduce conflict for error in state 385 resolved as shift
WARNING: shift/reduce conflict for ID in state 385 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 385 resolved as shift
WARNING: shift/reduce conflict for IF in state 385 resolved as shift
WARNING: shift/reduce conflict for CASE in state 385 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 385 resolved as shift
WARNING: shift/reduce conflict for CALL in state 385 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 386 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 386 resolved as shift
WARNING: shift/reduce conflict for error in state 386 resolved as shift
WARNING: shift/reduce conflict for ID in state 386 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 386 resolved as shift
WARNING: shift/reduce conflict for IF in state 386 resolved as shift
WARNING: shift/reduce conflict for CASE in state 386 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 386 resolved as shift
WARNING: shift/reduce conflict for CALL in state 386 resolved as shift
WARNING: shift/reduce conflict for END in state 388 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 388 resolved as shift
WARNING: shift/reduce conflict for error in state 388 resolved as shift
WARNING: shift/reduce conflict for ID in state 388 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 388 resolved as shift
WARNING: shift/reduce conflict for IF in state 388 resolved as shift
WARNING: shift/reduce conflict for CASE in state 388 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 388 resolved as shift
WARNING: shift/reduce conflict for CALL in state 388 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 394 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 394 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 394 resolved as shift
WARNING: shift/reduce conflict for error in state 394 resolved as shift
WARNING: shift/reduce conflict for ID in state 394 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 394 resolved as shift
WARNING: shift/reduce conflict for IF in state 394 resolved as shift
WARNING: shift/reduce conflict for CASE in state 394 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 394 resolved as shift
WARNING: shift/reduce conflict for CALL in state 394 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 398 resolved as shift
WARNING: shift/reduce conflict for error in state 398 resolved as shift
WARNING: shift/reduce conflict for ID in state 398 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 398 resolved as shift
WARNING: shift/reduce conflict for IF in state 398 resolved as shift
WARNING: shift/reduce conflict for CASE in state 398 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 398 resolved as shift
WARNING: shift/reduce conflict for CALL in state 398 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 401 resolved as shift
WARNING: shift/reduce conflict for error in state 401 resolved as shift
WARNING: shift/reduce conflict for ID in state 401 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 401 resolved as shift
WARNING: shift/reduce conflict for IF in state 401 resolved as shift
WARNING: shift/reduce conflict for CASE in state 401 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 401 resolved as shift
WARNING: shift/reduce conflict for CALL in state 401 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 403 resolved as shift
WARNING: shift/reduce conflict for error in state 403 resolved as shift
WARNING: shift/reduce conflict for ID in state 403 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 403 resolved as shift
WARNING: shift/reduce conflict for IF in state 403 resolved as shift
WARNING: shift/reduce conflict for CASE in state 403 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 403 resolved as shift
WARNING: shift/reduce conflict for CALL in state 403 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 411 resolved as shift
WARNING: shift/reduce conflict for error in state 411 resolved as shift
WARNING: shift/reduce conflict for ID in state 411 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 411 resolved as shift
WARNING: shift/reduce conflict for IF in state 411 resolved as shift
WARNING: shift/reduce conflict for CASE in state 411 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 411 resolved as shift
WARNING: shift/reduce conflict for CALL in state 411 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 414 resolved as shift
WARNING: shift/reduce conflict for error in state 414 resolved as shift
WARNING: shift/reduce conflict for ID in state 414 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 414 resolved as shift
WARNING: shift/reduce conflict for IF in state 414 resolved as shift
WARNING: shift/reduce conflict for CASE in state 414 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 414 resolved as shift
WARNING: shift/reduce conflict for CALL in state 414 resolved as shift
WARNING: shift/reduce conflict for END in state 417 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 417 resolved as shift
WARNING: shift/reduce conflict for error in state 417 resolved as shift
WARNING: shift/reduce conflict for ID in state 417 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 417 resolved as shift
WARNING: shift/reduce conflict for IF in state 417 resolved as shift
WARNING: shift/reduce conflict for CASE in state 417 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 417 resolved as shift
WARNING: shift/reduce conflict for CALL in state 417 resolved as shift
WARNING: shift/reduce conflict for END in state 419 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 419 resolved as shift
WARNING: shift/reduce conflict for error in state 419 resolved as shift
WARNING: shift/reduce conflict for ID in state 419 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 419 resolved as shift
WARNING: shift/reduce conflict for IF in state 419 resolved as shift
WARNING: shift/reduce conflict for CASE in state 419 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 419 resolved as shift
WARNING: shift/reduce conflict for CALL in state 419 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 425 resolved as shift
WARNING: shift/reduce conflict for error in state 425 resolved as shift
WARNING: shift/reduce conflict for ID in state 425 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 425 resolved as shift
WARNING: shift/reduce conflict for IF in state 425 resolved as shift
WARNING: shift/reduce conflict for CASE in state 425 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 425 resolved as shift
WARNING: shift/reduce conflict for CALL in state 425 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 428 resolved as shift
WARNING: shift/reduce conflict for error in state 428 resolved as shift
WARNING: shift/reduce conflict for ID in state 428 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 428 resolved as shift
WARNING: shift/reduce conflict for IF in state 428 resolved as shift
WARNING: shift/reduce conflict for CASE in state 428 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 428 resolved as shift
WARNING: shift/reduce conflict for CALL in state 428 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 438 resolved as shift
WARNING: shift/reduce conflict for error in state 438 resolved as shift
WARNING: shift/reduce conflict for ID in state 438 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 438 resolved as shift
WARNING: shift/reduce conflict for IF in state 438 resolved as shift
WARNING: shift/reduce conflict for CASE in state 438 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 438 resolved as shift
WARNING: shift/reduce conflict for CALL in state 438 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 448 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 448 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 448 resolved as shift
WARNING: shift/reduce conflict for error in state 448 resolved as shift
WARNING: shift/reduce conflict for ID in state 448 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 448 resolved as shift
WARNING: shift/reduce conflict for IF in state 448 resolved as shift
WARNING: shift/reduce conflict for CASE in state 448 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 448 resolved as shift
WARNING: shift/reduce conflict for CALL in state 448 resolved as shift
WARNING: reduce/reduce conflict in state 394 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 394
WARNING: reduce/reduce conflict in state 398 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 398
WARNING: reduce/reduce conflict in state 425 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 425
WARNING: reduce/reduce conflict in state 428 resolved using rule (case -> WHEN expresionPLSQL THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 428
WARNING: reduce/reduce conflict in state 448 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 448
