Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ADD
    ALIAS
    ALL
    AMPERMAY
    AMPERMEN
    AMPERSON_D
    AMPMENOR
    ANY
    ARROBAMAY
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BASE64
    BETWEEN
    BPCHAR_PATTERN_OPS
    BY
    BYTEA
    CBRT
    CEIL
    CEILING
    CEJILLAIGUAL
    COLLATE
    COLUMN
    CONSTANT
    CONVERT
    CORCHETEA
    CORCHETEC
    COS
    COSD
    COSH
    COT
    COTD
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    D_DOSPTS
    ENCODE
    ENUM
    ESCAPE
    EXCEPT
    EXCEPTION
    EXECUTE
    EXIT
    EXP
    EXTRACT
    FACTORIAL
    FIRST
    FLOOR
    FOR
    FROM
    GCD
    GET_BYTE
    GREATEST
    GROUP
    HASH
    HAVING
    HEX
    IN
    INCLUDE
    INDEX
    INNER
    INSERT
    INTERSECT
    INTO
    IS
    ISNULL
    JOIN
    LAST
    LCM
    LEAST
    LENGTH
    LIKE
    LIMIT
    LLAVEA
    LLAVEC
    LN
    LOG
    LOG10
    LOOP
    LOWER
    MAX
    MAYPOT
    MD5
    MENARROBA
    MENMENOR
    MENPOT
    MIN
    MIN_SCALE
    MOD
    NEXT
    NOTICE
    NOTNULL
    NOW
    NULLS
    OFFSET
    ON
    ONLY
    ORAMPMAY
    ORDER
    ORMAYMAY
    PERFORM
    PI
    POWER
    PREPARE
    QUERY
    RADIANS
    RANDOM
    RECORD
    RETURN
    RETURNING
    ROUND
    SCALE
    SET
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SYMMETRIC
    TAN
    TAND
    TANH
    TEXT_PATTERN_OPS
    TRIM
    TRIM_SCALE
    TRUC
    TRUNC
    TYPE
    UNION
    UNKNOWN
    UPDATE
    USING
    VALUES
    VARCHAR_PATTERN_OPS
    WHERE
    WIDTH_BUCKET

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> createDB_insrt
Rule 8     instrucciones_global_sent -> show_databases_instr
Rule 9     instrucciones_global_sent -> show_tables_instr
Rule 10    instrucciones_global_sent -> use_database_instr
Rule 11    instrucciones_global_sent -> drop_database_instr
Rule 12    instrucciones_global_sent -> create_Table_isnrt
Rule 13    instrucciones_global_sent -> drop_insrt
Rule 14    instrucciones_global_sent -> alterDB_insrt
Rule 15    instrucciones_global_sent -> error
Rule 16    instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 17    instrucciones_funct_list -> instrucciones_funct_sent
Rule 18    instrucciones_funct_sent -> asignacion
Rule 19    instrucciones_funct_sent -> declaracion
Rule 20    instrucciones_funct_sent -> imprimir
Rule 21    instrucciones_funct_sent -> sentencia_if
Rule 22    instrucciones_funct_sent -> sentencia_switch
Rule 23    instrucciones_funct_sent -> PTCOMA
Rule 24    instrucciones_funct_sent -> llamada_funcion
Rule 25    instrucciones_funct_sent -> empty
Rule 26    instrucciones_funct_sent -> error
Rule 27    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 28    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 29    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 30    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 31    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 32    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 33    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 34    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 35    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 36    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 37    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 38    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 39    createDB_dosParam -> OWNER string_type MODE ENTERO
Rule 40    createDB_dosParam -> MODE ENTERO OWNER string_type
Rule 41    createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO
Rule 42    createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO
Rule 43    createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type
Rule 44    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 45    createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO
Rule 46    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 47    createDB_unParam -> OWNER IGUAL string_type
Rule 48    createDB_unParam -> MODE IGUAL ENTERO
Rule 49    createDB_unParam -> OWNER string_type
Rule 50    createDB_unParam -> MODE ENTERO
Rule 51    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 52    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 53    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 54    show_tables_instr -> SHOW TABLES PTCOMA
Rule 55    use_database_instr -> USE ID PTCOMA
Rule 56    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
Rule 57    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
Rule 58    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 59    cuerpo_createTable_lista -> cuerpo_createTable
Rule 60    cuerpo_createTable -> ID TIPO_DATO_DEF
Rule 61    cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options
Rule 62    cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC
Rule 63    cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
Rule 64    cuerpo_createTable -> UNIQUE PARA campos_c PARC
Rule 65    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 66    campos_c -> campos_c COMA ID
Rule 67    campos_c -> ID
Rule 68    constraint_esp -> CHECK PARA expresion_logica PARC
Rule 69    constraint_esp -> UNIQUE PARA campos_c PARC
Rule 70    constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
Rule 71    createTable_options -> createTable_options cT_options
Rule 72    createTable_options -> cT_options
Rule 73    cT_options -> N_null
Rule 74    cT_options -> C_unique
Rule 75    cT_options -> llave
Rule 76    cT_options -> O_DEFAULT
Rule 77    cT_options -> C_check
Rule 78    N_null -> NOT NULL
Rule 79    N_null -> NULL
Rule 80    C_unique -> UNIQUE
Rule 81    C_unique -> CONSTRAINT ID UNIQUE
Rule 82    llave -> PRIMARY KEY
Rule 83    llave -> FOREIGN KEY
Rule 84    O_DEFAULT -> DEFAULT expresion_dato_default
Rule 85    C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC
Rule 86    C_check -> CHECK PARA expresion_logica PARC
Rule 87    expresion_dato_default -> ENTERO
Rule 88    expresion_dato_default -> FLOTANTE
Rule 89    expresion_dato_default -> CADENA
Rule 90    TIPO_DATO_DEF -> TEXT
Rule 91    TIPO_DATO_DEF -> FLOAT
Rule 92    TIPO_DATO_DEF -> INTEGER
Rule 93    TIPO_DATO_DEF -> BOOLEAN
Rule 94    TIPO_DATO_DEF -> SMALLINT
Rule 95    TIPO_DATO_DEF -> MONEY
Rule 96    TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC
Rule 97    TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC
Rule 98    TIPO_DATO_DEF -> BIGINT
Rule 99    TIPO_DATO_DEF -> REAL
Rule 100   TIPO_DATO_DEF -> DOUBLE PRECISION
Rule 101   TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time
Rule 102   TIPO_DATO_DEF -> INTERVAL
Rule 103   TIPO_DATO_DEF -> TIME
Rule 104   TIPO_DATO_DEF -> TIMESTAMP
Rule 105   TIPO_DATO_DEF -> DATE
Rule 106   TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC
Rule 107   TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC
Rule 108   TIPO_DATO_DEF -> CHAR PARA ENTERO PARC
Rule 109   TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC
Rule 110   TIPO_DATO_DEF -> CHAR PARA PARC
Rule 111   TIPO_DATO_DEF -> CHARACTER PARA PARC
Rule 112   extract_time -> YEAR
Rule 113   extract_time -> DAY
Rule 114   extract_time -> MONTH
Rule 115   extract_time -> HOUR
Rule 116   extract_time -> MINUTE
Rule 117   extract_time -> SECOND
Rule 118   drop_insrt -> DROP TABLE lista_drop_id PTCOMA
Rule 119   lista_drop_id -> lista_drop_id COMA ID
Rule 120   lista_drop_id -> ID
Rule 121   alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 122   alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 123   usuariosDB -> ID
Rule 124   usuariosDB -> CURRENT_USER
Rule 125   usuariosDB -> SESSION_USER
Rule 126   usuariosDB -> CADENA
Rule 127   string_type -> CADENA
Rule 128   string_type -> ID
Rule 129   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 130   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 131   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 132   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 133   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 134   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 135   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 136   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 137   llamada_funcion -> SELECT ID PARA params PARC PTCOMA
Rule 138   llamada_funcion -> CALL ID PARA params PARC PTCOMA
Rule 139   params -> params COMA expresionPLSQL
Rule 140   params -> expresionPLSQL
Rule 141   params -> empty
Rule 142   parametros -> parametros COMA parametro
Rule 143   parametros -> parametro
Rule 144   parametro -> ID tipo
Rule 145   parametro -> empty
Rule 146   sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA
Rule 147   case_list -> case_list case
Rule 148   case_list -> case
Rule 149   case -> WHEN expresionPLSQL THEN instrucciones_funct_list
Rule 150   case -> ELSE instrucciones_funct_list
Rule 151   sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
Rule 152   else -> ELSE instrucciones_funct_list
Rule 153   else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else
Rule 154   else -> <empty>
Rule 155   imprimir -> RAISE lista_imprimir PTCOMA
Rule 156   lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 157   lista_imprimir -> sent_imprimir
Rule 158   sent_imprimir -> expresionPLSQL
Rule 159   asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 160   declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 161   declaracion -> ID tipo PTCOMA
Rule 162   declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA
Rule 163   tipo -> INTEGER
Rule 164   tipo -> SMALLINT
Rule 165   tipo -> BIGINT
Rule 166   tipo -> DECIMAL
Rule 167   tipo -> NUMERIC
Rule 168   tipo -> REAL
Rule 169   tipo -> CHAR
Rule 170   tipo -> DOUBLE
Rule 171   tipo -> PRECISION
Rule 172   tipo -> MONEY
Rule 173   tipo -> FLOAT
Rule 174   tipo -> BOOLEAN
Rule 175   tipo -> VOID
Rule 176   tipo -> CHAR PARA ENTERO PARC
Rule 177   tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 178   tipo -> VARCHAR PARA ENTERO PARC
Rule 179   tipo -> CHARACTER PARA ENTERO PARC
Rule 180   tipo -> TEXT
Rule 181   tipo -> TIME
Rule 182   tipo -> TIMESTAMP
Rule 183   tipo -> DATE
Rule 184   expresionPLSQL -> log
Rule 185   log -> expresionPLSQL AND expresionPLSQL
Rule 186   log -> expresionPLSQL OR expresionPLSQL
Rule 187   log -> rel
Rule 188   rel -> arit MAYOR arit
Rule 189   rel -> arit MENOR arit
Rule 190   rel -> arit MAYORIGUAL arit
Rule 191   rel -> arit MENORIGUAL arit
Rule 192   rel -> arit IGUALIGUAL arit
Rule 193   rel -> arit NOTIGUAL arit
Rule 194   rel -> arit
Rule 195   arit -> arit POR arit
Rule 196   arit -> arit DIVISION arit
Rule 197   arit -> arit MAS arit
Rule 198   arit -> arit MENOS arit
Rule 199   arit -> arit MODULO arit
Rule 200   arit -> arit ANDB arit
Rule 201   arit -> arit SHIFTI arit
Rule 202   arit -> arit SHIFTD arit
Rule 203   arit -> arit XORB arit
Rule 204   arit -> arit ORB arit
Rule 205   arit -> PARA expresionPLSQL PARC
Rule 206   arit -> ID
Rule 207   arit -> CADENA
Rule 208   arit -> ENTERO
Rule 209   arit -> FLOTANTE
Rule 210   arit -> MENOS expresionPLSQL
Rule 211   arit -> NOTB expresionPLSQL
Rule 212   arit -> NOT expresionPLSQL
Rule 213   arit -> TRUE
Rule 214   arit -> FALSE
Rule 215   empty -> <empty>
Rule 216   agrupacion_expresion -> PARA expresion PARC
Rule 217   expresion -> expresion MAS expresion
Rule 218   expresion -> expresion MENOS expresion
Rule 219   expresion -> expresion POR expresion
Rule 220   expresion -> expresion DIV expresion
Rule 221   expresion -> expresion MODULO expresion
Rule 222   expresion -> expresion SHIFTD expresion
Rule 223   expresion -> expresion SHIFTI expresion
Rule 224   expresion -> expresion HASHTAG expresion
Rule 225   expresion -> expresion ANDB expresion
Rule 226   expresion -> expresion D_OR expresion
Rule 227   expresion -> NOTB expresion
Rule 228   expresion -> ORB expresion
Rule 229   expresion -> D_OR expresion
Rule 230   expresion -> PARA expresion_logica PARC
Rule 231   expresion -> TRUE
Rule 232   expresion -> FALSE
Rule 233   expresion_relacional -> expresion MAYOR expresion
Rule 234   expresion_relacional -> expresion MENOR expresion
Rule 235   expresion_relacional -> expresion MAYORIGUAL expresion
Rule 236   expresion_relacional -> expresion MENORIGUAL expresion
Rule 237   expresion_relacional -> expresion IGUALIGUAL expresion
Rule 238   expresion_relacional -> expresion IGUAL expresion
Rule 239   expresion_relacional -> expresion NOIG expresion
Rule 240   expresion_relacional -> expresion NOTIGUAL expresion
Rule 241   expresion_relacional -> expresion
Rule 242   expresion_logica -> expresion_relacional AND expresion_logica
Rule 243   expresion_logica -> expresion_relacional OR expresion_logica
Rule 244   expresion_logica -> NOT expresion_logica
Rule 245   expresion_logica -> expresion_relacional
Rule 246   expresion -> expresion_dato
Rule 247   expresion -> sum_insrt
Rule 248   expresion -> count_insrt
Rule 249   expresion_dato -> string_type
Rule 250   expresion_dato -> MENOS ENTERO
Rule 251   expresion_dato -> ID PUNTO ID
Rule 252   expresion_dato -> expresion_numero
Rule 253   expresion_numero -> ENTERO
Rule 254   expresion_numero -> FLOTANTE
Rule 255   sum_insrt -> SUM agrupacion_expresion
Rule 256   count_insrt -> COUNT agrupacion_expresion

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 
ALIAS                : 
ALL                  : 
ALTER                : 121 122
AMPERMAY             : 
AMPERMEN             : 
AMPERSON_D           : 
AMPMENOR             : 
AND                  : 185 242
ANDB                 : 200 225
ANY                  : 
ARROBAMAY            : 
AS                   : 129 130 131 132 133 134 135 136
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BASE64               : 
BEGIN                : 129 130 131 132 133 134 135 136
BETWEEN              : 
BIGINT               : 98 165
BOOLEAN              : 93 174
BPCHAR_PATTERN_OPS   : 
BY                   : 
BYTEA                : 
CADENA               : 89 126 127 207
CALL                 : 138
CASE                 : 146 146
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLAIGUAL         : 
CHAR                 : 108 110 169 176
CHARACTER            : 106 109 111 177 179
CHECK                : 68 85 86
COLLATE              : 
COLUMN               : 
COMA                 : 58 66 96 97 119 139 142 156
CONSTANT             : 
CONSTRAINT           : 65 81 85
CONVERT              : 
CORCHETEA            : 
CORCHETEC            : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 256
CREATE               : 27 28 29 30 31 32 33 34 35 36 37 38 56 57 129 130 131 132 133 134 135 136
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 124
DATABASE             : 27 28 29 30 31 32 33 34 35 36 37 38 51 52 121 122
DATABASES            : 53
DATE                 : 105 183
DATE_PART            : 
DAY                  : 113
DECIMAL              : 96 166
DECLARE              : 130 132 134 136
DECODE               : 
DEFAULT              : 84 162
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 220
DIVISION             : 196
DOLAR                : 129 129 129 129 130 130 130 130 131 131 131 131 132 132 132 132 133 133 133 133 134 134 134 134 135 135 135 135 136 136 136 136
DOSPUNTOS            : 159 160
DOUBLE               : 100 170
DROP                 : 51 52 118
D_DOSPTS             : 
D_OR                 : 226 229
ELSE                 : 150 152
ELSEIF               : 153
ENCODE               : 
END                  : 129 130 131 132 133 134 135 136 146 151
ENTERO               : 39 40 41 42 43 44 45 46 48 50 87 96 96 97 97 106 107 108 109 176 177 178 179 208 250 253
ENUM                 : 
ESCAPE               : 
EXCEPT               : 
EXCEPTION            : 
EXECUTE              : 
EXISTS               : 29 30 33 34 37 38 51
EXIT                 : 
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 214 232
FIRST                : 
FLOAT                : 91 173
FLOOR                : 
FLOTANTE             : 88 209 254
FOR                  : 
FOREIGN              : 63 70 83
FROM                 : 
FUNCTION             : 129 130 131 132
GCD                  : 
GET_BYTE             : 
GREATEST             : 
GROUP                : 
HASH                 : 
HASHTAG              : 224
HAVING               : 
HEX                  : 
HOUR                 : 115
ID                   : 27 28 29 30 31 32 33 34 35 36 37 38 44 46 51 52 55 56 57 57 60 61 63 63 63 65 66 67 70 70 70 81 85 119 120 121 121 122 123 128 129 130 131 132 133 134 135 136 137 138 144 159 160 161 162 206 251 251
IF                   : 29 30 33 34 37 38 51 151 151
IGUAL                : 41 42 43 44 45 45 46 46 47 48 159 160 238
IGUALIGUAL           : 192 237
IN                   : 
INCLUDE              : 
INDEX                : 
INHERITS             : 57
INNER                : 
INSERT               : 
INTEGER              : 92 163
INTERSECT            : 
INTERVAL             : 101 102
INTO                 : 
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 62 63 70 82 83
LANGUAGE             : 129 130 131 132 133 134 135 136
LAST                 : 
LCM                  : 
LEAST                : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LLAVEA               : 
LLAVEC               : 
LN                   : 
LOG                  : 
LOG10                : 
LOOP                 : 
LOWER                : 
MAS                  : 197 217
MAX                  : 
MAYOR                : 188 233
MAYORIGUAL           : 190 235
MAYPOT               : 
MD5                  : 
MENARROBA            : 
MENMENOR             : 
MENOR                : 189 234
MENORIGUAL           : 191 236
MENOS                : 198 210 218 250
MENPOT               : 
MIN                  : 
MINUTE               : 116
MIN_SCALE            : 
MOD                  : 
MODE                 : 39 40 41 42 43 44 45 46 48 50
MODULO               : 199 221
MONEY                : 95 172
MONTH                : 114
NEXT                 : 
NOIG                 : 239
NOT                  : 29 30 33 34 37 38 78 212 244
NOTB                 : 211 227
NOTICE               : 
NOTIGUAL             : 193 240
NOTNULL              : 
NOW                  : 
NULL                 : 78 79
NULLS                : 
NUMERIC              : 97 167
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 28 30 32 34 36 38 131 132 135 136 186 243
ORAMPMAY             : 
ORB                  : 204 228
ORDER                : 
ORMAYMAY             : 
OWNER                : 39 40 41 42 43 44 45 46 47 49 122
PARA                 : 56 57 57 62 63 63 64 68 69 70 70 85 86 96 97 106 107 108 109 110 111 129 130 131 132 133 134 135 136 137 138 176 177 178 179 205 216 230
PARC                 : 56 57 57 62 63 63 64 68 69 70 70 85 86 96 97 106 107 108 109 110 111 129 130 131 132 133 134 135 136 137 138 176 177 178 179 205 216 230
PERFORM              : 
PI                   : 
PLPGSQL              : 129 130 131 132 133 134 135 136
POR                  : 195 219
POWER                : 
PRECISION            : 100 171
PREPARE              : 
PRIMARY              : 62 82
PROCEDURE            : 133 134 135 136
PTCOMA               : 23 27 28 29 30 31 32 33 34 35 36 37 38 51 52 53 54 55 56 57 118 121 122 129 129 130 130 131 131 132 132 133 133 134 134 135 135 136 136 137 138 146 151 155 159 160 161 162
PUNTO                : 251
QUERY                : 
RADIANS              : 
RAISE                : 155
RANDOM               : 
REAL                 : 99 168
RECORD               : 
REFERENCES           : 63 70
RENAME               : 121
REPLACE              : 28 30 32 34 36 38 131 132 135 136
RETURN               : 
RETURNING            : 
RETURNS              : 129 130 131 132 133 134 135 136
ROUND                : 
SCALE                : 
SECOND               : 117
SELECT               : 137
SESSION_USER         : 125
SET                  : 
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHIFTD               : 202 222
SHIFTI               : 201 223
SHOW                 : 53 54
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 94 164
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 255
SYMMETRIC            : 
TABLE                : 56 57 118
TABLES               : 54
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 90 180
TEXT_PATTERN_OPS     : 
THEN                 : 149 151 153
TIME                 : 103 181
TIMESTAMP            : 104 182
TO                   : 101 121 122
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 213 231
TRUNC                : 
TYPE                 : 
UNION                : 
UNIQUE               : 64 69 80 81
UNKNOWN              : 
UPDATE               : 
USE                  : 55
USING                : 
VALUES               : 
VARCHAR              : 107 178
VARCHAR_PATTERN_OPS  : 
VARYING              : 106 177
VOID                 : 175
WHEN                 : 149
WHERE                : 
WIDTH_BUCKET         : 
XORB                 : 203
YEAR                 : 112
error                : 15 26

Nonterminals, with rules where they appear

C_check              : 77
C_unique             : 74
N_null               : 73
O_DEFAULT            : 76
TIPO_DATO_DEF        : 60 61
agrupacion_expresion : 255 256
alterDB_insrt        : 14
arit                 : 188 188 189 189 190 190 191 191 192 192 193 193 194 195 195 196 196 197 197 198 198 199 199 200 200 201 201 202 202 203 203 204 204
asignacion           : 18
cT_options           : 71 72
campos_c             : 62 64 66 69
case                 : 147 148
case_list            : 146 147
codigo               : 1
constraint_esp       : 65
count_insrt          : 248
createDB_dosParam    : 35 36 37 38
createDB_insrt       : 7
createDB_unParam     : 31 32 33 34
createTable_options  : 61 71
create_Table_isnrt   : 12
cuerpo_createTable   : 58 59
cuerpo_createTable_lista : 56 57 58
declaracion          : 19
drop_database_instr  : 11
drop_insrt           : 13
else                 : 151 153
empty                : 25 141 145
expresion            : 216 217 217 218 218 219 219 220 220 221 221 222 222 223 223 224 224 225 225 226 226 227 228 229 233 233 234 234 235 235 236 236 237 237 238 238 239 239 240 240 241
expresionPLSQL       : 139 140 146 149 151 153 158 159 160 162 185 185 186 186 205 210 211 212
expresion_dato       : 246
expresion_dato_default : 84
expresion_logica     : 68 85 86 230 242 243 244
expresion_numero     : 252
expresion_relacional : 242 243 245
extract_time         : 101 101
funcion              : 5
imprimir             : 20
inicio               : 0
instrucciones_funct_list : 16 129 130 130 131 132 132 133 134 134 135 136 136 149 150 151 152 153
instrucciones_funct_sent : 16 17
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_drop_id        : 118 119
lista_imprimir       : 155 156
llamada_funcion      : 6 24
llave                : 75
log                  : 184
parametro            : 142 143
parametros           : 129 130 131 132 133 134 135 136 142
params               : 137 138 139
rel                  : 187
sent_imprimir        : 156 157
sentencia_if         : 21
sentencia_switch     : 22
show_databases_instr : 8
show_tables_instr    : 9
string_type          : 39 40 41 42 43 45 47 49 249
sum_insrt            : 247
tipo                 : 129 130 131 132 133 134 135 136 144 160 161 162
use_database_instr   : 10
usuariosDB           : 122

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . drop_insrt
    (14) instrucciones_global_sent -> . alterDB_insrt
    (15) instrucciones_global_sent -> . error
    (129) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (131) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (133) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (135) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (53) show_databases_instr -> . SHOW DATABASES PTCOMA
    (54) show_tables_instr -> . SHOW TABLES PTCOMA
    (55) use_database_instr -> . USE ID PTCOMA
    (51) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (52) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (56) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (57) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (118) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (121) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (122) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA

    error           shift and go to state 15
    CREATE          shift and go to state 16
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    SHOW            shift and go to state 19
    USE             shift and go to state 20
    DROP            shift and go to state 21
    ALTER           shift and go to state 22

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12
    drop_insrt                     shift and go to state 13
    alterDB_insrt                  shift and go to state 14

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . drop_insrt
    (14) instrucciones_global_sent -> . alterDB_insrt
    (15) instrucciones_global_sent -> . error
    (129) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (131) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (133) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (135) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (53) show_databases_instr -> . SHOW DATABASES PTCOMA
    (54) show_tables_instr -> . SHOW TABLES PTCOMA
    (55) use_database_instr -> . USE ID PTCOMA
    (51) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (52) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (56) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (57) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (118) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (121) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (122) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 15
    CREATE          shift and go to state 16
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    SHOW            shift and go to state 19
    USE             shift and go to state 20
    DROP            shift and go to state 21
    ALTER           shift and go to state 22

    instrucciones_global_sent      shift and go to state 23
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12
    drop_insrt                     shift and go to state 13
    alterDB_insrt                  shift and go to state 14

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CALL            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SHOW            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    USE             reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    DROP            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    ALTER           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CALL            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SHOW            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    USE             reduce using rule 5 (instrucciones_global_sent -> funcion .)
    DROP            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    ALTER           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CALL            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SHOW            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    USE             reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    DROP            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    ALTER           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> createDB_insrt .

    error           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CALL            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SHOW            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    USE             reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    DROP            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    ALTER           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    $end            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)


state 8

    (8) instrucciones_global_sent -> show_databases_instr .

    error           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CREATE          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SELECT          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CALL            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SHOW            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    USE             reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    DROP            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    ALTER           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    $end            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)


state 9

    (9) instrucciones_global_sent -> show_tables_instr .

    error           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CREATE          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SELECT          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CALL            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SHOW            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    USE             reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    DROP            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    ALTER           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    $end            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)


state 10

    (10) instrucciones_global_sent -> use_database_instr .

    error           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CREATE          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SELECT          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CALL            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SHOW            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    USE             reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    DROP            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    ALTER           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    $end            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)


state 11

    (11) instrucciones_global_sent -> drop_database_instr .

    error           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CREATE          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SELECT          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CALL            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SHOW            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    USE             reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    DROP            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    ALTER           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    $end            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)


state 12

    (12) instrucciones_global_sent -> create_Table_isnrt .

    error           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CREATE          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SELECT          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CALL            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SHOW            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    USE             reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    DROP            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    ALTER           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    $end            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)


state 13

    (13) instrucciones_global_sent -> drop_insrt .

    error           reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    CREATE          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    SELECT          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    CALL            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    SHOW            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    USE             reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    DROP            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    ALTER           reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    $end            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)


state 14

    (14) instrucciones_global_sent -> alterDB_insrt .

    error           reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    CREATE          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    SELECT          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    CALL            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    SHOW            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    USE             reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    DROP            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    ALTER           reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    $end            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)


state 15

    (15) instrucciones_global_sent -> error .

    error           reduce using rule 15 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 15 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 15 (instrucciones_global_sent -> error .)
    CALL            reduce using rule 15 (instrucciones_global_sent -> error .)
    SHOW            reduce using rule 15 (instrucciones_global_sent -> error .)
    USE             reduce using rule 15 (instrucciones_global_sent -> error .)
    DROP            reduce using rule 15 (instrucciones_global_sent -> error .)
    ALTER           reduce using rule 15 (instrucciones_global_sent -> error .)
    $end            reduce using rule 15 (instrucciones_global_sent -> error .)


state 16

    (129) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (131) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (133) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (135) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (27) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (28) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (29) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (36) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (56) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (57) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    FUNCTION        shift and go to state 24
    OR              shift and go to state 25
    PROCEDURE       shift and go to state 26
    DATABASE        shift and go to state 27
    TABLE           shift and go to state 28


state 17

    (137) llamada_funcion -> SELECT . ID PARA params PARC PTCOMA

    ID              shift and go to state 29


state 18

    (138) llamada_funcion -> CALL . ID PARA params PARC PTCOMA

    ID              shift and go to state 30


state 19

    (53) show_databases_instr -> SHOW . DATABASES PTCOMA
    (54) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 31
    TABLES          shift and go to state 32


state 20

    (55) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 33


state 21

    (51) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (52) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (118) drop_insrt -> DROP . TABLE lista_drop_id PTCOMA

    DATABASE        shift and go to state 34
    TABLE           shift and go to state 35


state 22

    (121) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (122) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA

    DATABASE        shift and go to state 36


state 23

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CALL            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SHOW            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    USE             reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    DROP            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    ALTER           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 24

    (129) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 37


state 25

    (131) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (135) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (28) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (30) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 38


state 26

    (133) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 39


state 27

    (27) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (29) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 40
    IF              shift and go to state 41


state 28

    (56) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    ID              shift and go to state 42


state 29

    (137) llamada_funcion -> SELECT ID . PARA params PARC PTCOMA

    PARA            shift and go to state 43


state 30

    (138) llamada_funcion -> CALL ID . PARA params PARC PTCOMA

    PARA            shift and go to state 44


state 31

    (53) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 45


state 32

    (54) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 46


state 33

    (55) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 47


state 34

    (51) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA
    (52) drop_database_instr -> DROP DATABASE . ID PTCOMA

    IF              shift and go to state 48
    ID              shift and go to state 49


state 35

    (118) drop_insrt -> DROP TABLE . lista_drop_id PTCOMA
    (119) lista_drop_id -> . lista_drop_id COMA ID
    (120) lista_drop_id -> . ID

    ID              shift and go to state 51

    lista_drop_id                  shift and go to state 50

state 36

    (121) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (122) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 52


state 37

    (129) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 53


state 38

    (131) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (135) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    FUNCTION        shift and go to state 54
    PROCEDURE       shift and go to state 55
    DATABASE        shift and go to state 56


state 39

    (133) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 57


state 40

    (27) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (31) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (47) createDB_unParam -> . OWNER IGUAL string_type
    (48) createDB_unParam -> . MODE IGUAL ENTERO
    (49) createDB_unParam -> . OWNER string_type
    (50) createDB_unParam -> . MODE ENTERO
    (39) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (41) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 58
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 59
    createDB_dosParam              shift and go to state 60

state 41

    (29) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 63


state 42

    (56) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    PARA            shift and go to state 64


state 43

    (137) llamada_funcion -> SELECT ID PARA . params PARC PTCOMA
    (139) params -> . params COMA expresionPLSQL
    (140) params -> . expresionPLSQL
    (141) params -> . empty
    (184) expresionPLSQL -> . log
    (215) empty -> .
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)
    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    params                         shift and go to state 67
    expresionPLSQL                 shift and go to state 68
    empty                          shift and go to state 69
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 44

    (138) llamada_funcion -> CALL ID PARA . params PARC PTCOMA
    (139) params -> . params COMA expresionPLSQL
    (140) params -> . expresionPLSQL
    (141) params -> . empty
    (184) expresionPLSQL -> . log
    (215) empty -> .
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)
    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    params                         shift and go to state 81
    expresionPLSQL                 shift and go to state 68
    empty                          shift and go to state 69
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 45

    (53) show_databases_instr -> SHOW DATABASES PTCOMA .

    error           reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CREATE          reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SELECT          reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CALL            reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 53 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 46

    (54) show_tables_instr -> SHOW TABLES PTCOMA .

    error           reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CREATE          reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SELECT          reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CALL            reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 54 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 47

    (55) use_database_instr -> USE ID PTCOMA .

    error           reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    CREATE          reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    SELECT          reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    CALL            reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 55 (use_database_instr -> USE ID PTCOMA .)


state 48

    (51) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 82


state 49

    (52) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 83


state 50

    (118) drop_insrt -> DROP TABLE lista_drop_id . PTCOMA
    (119) lista_drop_id -> lista_drop_id . COMA ID

    PTCOMA          shift and go to state 84
    COMA            shift and go to state 85


state 51

    (120) lista_drop_id -> ID .

    PTCOMA          reduce using rule 120 (lista_drop_id -> ID .)
    COMA            reduce using rule 120 (lista_drop_id -> ID .)


state 52

    (121) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (122) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 86
    OWNER           shift and go to state 87


state 53

    (129) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> . parametros COMA parametro
    (143) parametros -> . parametro
    (144) parametro -> . ID tipo
    (145) parametro -> . empty
    (215) empty -> .

    ID              shift and go to state 88
    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)

    parametros                     shift and go to state 89
    parametro                      shift and go to state 90
    empty                          shift and go to state 91

state 54

    (131) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 92


state 55

    (135) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 93


state 56

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 94
    IF              shift and go to state 95


state 57

    (133) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> . parametros COMA parametro
    (143) parametros -> . parametro
    (144) parametro -> . ID tipo
    (145) parametro -> . empty
    (215) empty -> .

    ID              shift and go to state 88
    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)

    parametros                     shift and go to state 96
    parametro                      shift and go to state 90
    empty                          shift and go to state 91

state 58

    (27) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    error           reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CALL            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 59

    (31) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 97


state 60

    (35) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 98


state 61

    (47) createDB_unParam -> OWNER . IGUAL string_type
    (49) createDB_unParam -> OWNER . string_type
    (39) createDB_dosParam -> OWNER . string_type MODE ENTERO
    (41) createDB_dosParam -> OWNER . string_type MODE IGUAL ENTERO
    (42) createDB_dosParam -> OWNER . IGUAL string_type MODE ENTERO
    (45) createDB_dosParam -> OWNER . IGUAL string_type MODE IGUAL ENTERO
    (127) string_type -> . CADENA
    (128) string_type -> . ID

    IGUAL           shift and go to state 99
    CADENA          shift and go to state 101
    ID              shift and go to state 102

    string_type                    shift and go to state 100

state 62

    (48) createDB_unParam -> MODE . IGUAL ENTERO
    (50) createDB_unParam -> MODE . ENTERO
    (40) createDB_dosParam -> MODE . ENTERO OWNER string_type
    (43) createDB_dosParam -> MODE . ENTERO OWNER IGUAL string_type
    (44) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (46) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    IGUAL           shift and go to state 103
    ENTERO          shift and go to state 104


state 63

    (29) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 105


state 64

    (56) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (58) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (59) cuerpo_createTable_lista -> . cuerpo_createTable
    (60) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (61) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (62) cuerpo_createTable -> . PRIMARY KEY PARA campos_c PARC
    (63) cuerpo_createTable -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
    (64) cuerpo_createTable -> . UNIQUE PARA campos_c PARC
    (65) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 106
    PRIMARY         shift and go to state 109
    FOREIGN         shift and go to state 110
    UNIQUE          shift and go to state 111
    CONSTRAINT      shift and go to state 112

    cuerpo_createTable_lista       shift and go to state 107
    cuerpo_createTable             shift and go to state 108

state 65

    (206) arit -> ID .

    MAYOR           reduce using rule 206 (arit -> ID .)
    MENOR           reduce using rule 206 (arit -> ID .)
    MAYORIGUAL      reduce using rule 206 (arit -> ID .)
    MENORIGUAL      reduce using rule 206 (arit -> ID .)
    IGUALIGUAL      reduce using rule 206 (arit -> ID .)
    NOTIGUAL        reduce using rule 206 (arit -> ID .)
    POR             reduce using rule 206 (arit -> ID .)
    DIVISION        reduce using rule 206 (arit -> ID .)
    MAS             reduce using rule 206 (arit -> ID .)
    MENOS           reduce using rule 206 (arit -> ID .)
    MODULO          reduce using rule 206 (arit -> ID .)
    ANDB            reduce using rule 206 (arit -> ID .)
    SHIFTI          reduce using rule 206 (arit -> ID .)
    SHIFTD          reduce using rule 206 (arit -> ID .)
    XORB            reduce using rule 206 (arit -> ID .)
    ORB             reduce using rule 206 (arit -> ID .)
    AND             reduce using rule 206 (arit -> ID .)
    OR              reduce using rule 206 (arit -> ID .)
    PARC            reduce using rule 206 (arit -> ID .)
    COMA            reduce using rule 206 (arit -> ID .)
    PTCOMA          reduce using rule 206 (arit -> ID .)
    THEN            reduce using rule 206 (arit -> ID .)
    WHEN            reduce using rule 206 (arit -> ID .)
    ELSE            reduce using rule 206 (arit -> ID .)


state 66

    (205) arit -> PARA . expresionPLSQL PARC
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 113
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 67

    (137) llamada_funcion -> SELECT ID PARA params . PARC PTCOMA
    (139) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 114
    COMA            shift and go to state 115


state 68

    (140) params -> expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 140 (params -> expresionPLSQL .)
    COMA            reduce using rule 140 (params -> expresionPLSQL .)
    AND             shift and go to state 116
    OR              shift and go to state 117


state 69

    (141) params -> empty .

    PARC            reduce using rule 141 (params -> empty .)
    COMA            reduce using rule 141 (params -> empty .)


state 70

    (184) expresionPLSQL -> log .

    AND             reduce using rule 184 (expresionPLSQL -> log .)
    OR              reduce using rule 184 (expresionPLSQL -> log .)
    PARC            reduce using rule 184 (expresionPLSQL -> log .)
    COMA            reduce using rule 184 (expresionPLSQL -> log .)
    MAYOR           reduce using rule 184 (expresionPLSQL -> log .)
    MENOR           reduce using rule 184 (expresionPLSQL -> log .)
    MAYORIGUAL      reduce using rule 184 (expresionPLSQL -> log .)
    MENORIGUAL      reduce using rule 184 (expresionPLSQL -> log .)
    IGUALIGUAL      reduce using rule 184 (expresionPLSQL -> log .)
    NOTIGUAL        reduce using rule 184 (expresionPLSQL -> log .)
    POR             reduce using rule 184 (expresionPLSQL -> log .)
    DIVISION        reduce using rule 184 (expresionPLSQL -> log .)
    MAS             reduce using rule 184 (expresionPLSQL -> log .)
    MENOS           reduce using rule 184 (expresionPLSQL -> log .)
    MODULO          reduce using rule 184 (expresionPLSQL -> log .)
    ANDB            reduce using rule 184 (expresionPLSQL -> log .)
    SHIFTI          reduce using rule 184 (expresionPLSQL -> log .)
    SHIFTD          reduce using rule 184 (expresionPLSQL -> log .)
    XORB            reduce using rule 184 (expresionPLSQL -> log .)
    ORB             reduce using rule 184 (expresionPLSQL -> log .)
    PTCOMA          reduce using rule 184 (expresionPLSQL -> log .)
    THEN            reduce using rule 184 (expresionPLSQL -> log .)
    WHEN            reduce using rule 184 (expresionPLSQL -> log .)
    ELSE            reduce using rule 184 (expresionPLSQL -> log .)


state 71

    (187) log -> rel .

    AND             reduce using rule 187 (log -> rel .)
    OR              reduce using rule 187 (log -> rel .)
    PARC            reduce using rule 187 (log -> rel .)
    COMA            reduce using rule 187 (log -> rel .)
    MAYOR           reduce using rule 187 (log -> rel .)
    MENOR           reduce using rule 187 (log -> rel .)
    MAYORIGUAL      reduce using rule 187 (log -> rel .)
    MENORIGUAL      reduce using rule 187 (log -> rel .)
    IGUALIGUAL      reduce using rule 187 (log -> rel .)
    NOTIGUAL        reduce using rule 187 (log -> rel .)
    POR             reduce using rule 187 (log -> rel .)
    DIVISION        reduce using rule 187 (log -> rel .)
    MAS             reduce using rule 187 (log -> rel .)
    MENOS           reduce using rule 187 (log -> rel .)
    MODULO          reduce using rule 187 (log -> rel .)
    ANDB            reduce using rule 187 (log -> rel .)
    SHIFTI          reduce using rule 187 (log -> rel .)
    SHIFTD          reduce using rule 187 (log -> rel .)
    XORB            reduce using rule 187 (log -> rel .)
    ORB             reduce using rule 187 (log -> rel .)
    PTCOMA          reduce using rule 187 (log -> rel .)
    THEN            reduce using rule 187 (log -> rel .)
    WHEN            reduce using rule 187 (log -> rel .)
    ELSE            reduce using rule 187 (log -> rel .)


state 72

    (188) rel -> arit . MAYOR arit
    (189) rel -> arit . MENOR arit
    (190) rel -> arit . MAYORIGUAL arit
    (191) rel -> arit . MENORIGUAL arit
    (192) rel -> arit . IGUALIGUAL arit
    (193) rel -> arit . NOTIGUAL arit
    (194) rel -> arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 118
    MENOR           shift and go to state 119
    MAYORIGUAL      shift and go to state 120
    MENORIGUAL      shift and go to state 121
    IGUALIGUAL      shift and go to state 122
    NOTIGUAL        shift and go to state 123
    AND             reduce using rule 194 (rel -> arit .)
    OR              reduce using rule 194 (rel -> arit .)
    PARC            reduce using rule 194 (rel -> arit .)
    COMA            reduce using rule 194 (rel -> arit .)
    PTCOMA          reduce using rule 194 (rel -> arit .)
    THEN            reduce using rule 194 (rel -> arit .)
    WHEN            reduce using rule 194 (rel -> arit .)
    ELSE            reduce using rule 194 (rel -> arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    ANDB            shift and go to state 129
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131
    XORB            shift and go to state 132
    ORB             shift and go to state 133

  ! MAYOR           [ reduce using rule 194 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 194 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 194 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 194 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 194 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 194 (rel -> arit .) ]
  ! POR             [ reduce using rule 194 (rel -> arit .) ]
  ! DIVISION        [ reduce using rule 194 (rel -> arit .) ]
  ! MAS             [ reduce using rule 194 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 194 (rel -> arit .) ]
  ! MODULO          [ reduce using rule 194 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 194 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 194 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 194 (rel -> arit .) ]
  ! XORB            [ reduce using rule 194 (rel -> arit .) ]
  ! ORB             [ reduce using rule 194 (rel -> arit .) ]


state 73

    (210) arit -> MENOS . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 134
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 74

    (207) arit -> CADENA .

    MAYOR           reduce using rule 207 (arit -> CADENA .)
    MENOR           reduce using rule 207 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 207 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 207 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 207 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 207 (arit -> CADENA .)
    POR             reduce using rule 207 (arit -> CADENA .)
    DIVISION        reduce using rule 207 (arit -> CADENA .)
    MAS             reduce using rule 207 (arit -> CADENA .)
    MENOS           reduce using rule 207 (arit -> CADENA .)
    MODULO          reduce using rule 207 (arit -> CADENA .)
    ANDB            reduce using rule 207 (arit -> CADENA .)
    SHIFTI          reduce using rule 207 (arit -> CADENA .)
    SHIFTD          reduce using rule 207 (arit -> CADENA .)
    XORB            reduce using rule 207 (arit -> CADENA .)
    ORB             reduce using rule 207 (arit -> CADENA .)
    AND             reduce using rule 207 (arit -> CADENA .)
    OR              reduce using rule 207 (arit -> CADENA .)
    PARC            reduce using rule 207 (arit -> CADENA .)
    COMA            reduce using rule 207 (arit -> CADENA .)
    PTCOMA          reduce using rule 207 (arit -> CADENA .)
    THEN            reduce using rule 207 (arit -> CADENA .)
    WHEN            reduce using rule 207 (arit -> CADENA .)
    ELSE            reduce using rule 207 (arit -> CADENA .)


state 75

    (208) arit -> ENTERO .

    MAYOR           reduce using rule 208 (arit -> ENTERO .)
    MENOR           reduce using rule 208 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 208 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 208 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 208 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 208 (arit -> ENTERO .)
    POR             reduce using rule 208 (arit -> ENTERO .)
    DIVISION        reduce using rule 208 (arit -> ENTERO .)
    MAS             reduce using rule 208 (arit -> ENTERO .)
    MENOS           reduce using rule 208 (arit -> ENTERO .)
    MODULO          reduce using rule 208 (arit -> ENTERO .)
    ANDB            reduce using rule 208 (arit -> ENTERO .)
    SHIFTI          reduce using rule 208 (arit -> ENTERO .)
    SHIFTD          reduce using rule 208 (arit -> ENTERO .)
    XORB            reduce using rule 208 (arit -> ENTERO .)
    ORB             reduce using rule 208 (arit -> ENTERO .)
    AND             reduce using rule 208 (arit -> ENTERO .)
    OR              reduce using rule 208 (arit -> ENTERO .)
    PARC            reduce using rule 208 (arit -> ENTERO .)
    COMA            reduce using rule 208 (arit -> ENTERO .)
    PTCOMA          reduce using rule 208 (arit -> ENTERO .)
    THEN            reduce using rule 208 (arit -> ENTERO .)
    WHEN            reduce using rule 208 (arit -> ENTERO .)
    ELSE            reduce using rule 208 (arit -> ENTERO .)


state 76

    (209) arit -> FLOTANTE .

    MAYOR           reduce using rule 209 (arit -> FLOTANTE .)
    MENOR           reduce using rule 209 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 209 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 209 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 209 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 209 (arit -> FLOTANTE .)
    POR             reduce using rule 209 (arit -> FLOTANTE .)
    DIVISION        reduce using rule 209 (arit -> FLOTANTE .)
    MAS             reduce using rule 209 (arit -> FLOTANTE .)
    MENOS           reduce using rule 209 (arit -> FLOTANTE .)
    MODULO          reduce using rule 209 (arit -> FLOTANTE .)
    ANDB            reduce using rule 209 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 209 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 209 (arit -> FLOTANTE .)
    XORB            reduce using rule 209 (arit -> FLOTANTE .)
    ORB             reduce using rule 209 (arit -> FLOTANTE .)
    AND             reduce using rule 209 (arit -> FLOTANTE .)
    OR              reduce using rule 209 (arit -> FLOTANTE .)
    PARC            reduce using rule 209 (arit -> FLOTANTE .)
    COMA            reduce using rule 209 (arit -> FLOTANTE .)
    PTCOMA          reduce using rule 209 (arit -> FLOTANTE .)
    THEN            reduce using rule 209 (arit -> FLOTANTE .)
    WHEN            reduce using rule 209 (arit -> FLOTANTE .)
    ELSE            reduce using rule 209 (arit -> FLOTANTE .)


state 77

    (211) arit -> NOTB . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 135
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 78

    (212) arit -> NOT . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 136
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 79

    (213) arit -> TRUE .

    MAYOR           reduce using rule 213 (arit -> TRUE .)
    MENOR           reduce using rule 213 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 213 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 213 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 213 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 213 (arit -> TRUE .)
    POR             reduce using rule 213 (arit -> TRUE .)
    DIVISION        reduce using rule 213 (arit -> TRUE .)
    MAS             reduce using rule 213 (arit -> TRUE .)
    MENOS           reduce using rule 213 (arit -> TRUE .)
    MODULO          reduce using rule 213 (arit -> TRUE .)
    ANDB            reduce using rule 213 (arit -> TRUE .)
    SHIFTI          reduce using rule 213 (arit -> TRUE .)
    SHIFTD          reduce using rule 213 (arit -> TRUE .)
    XORB            reduce using rule 213 (arit -> TRUE .)
    ORB             reduce using rule 213 (arit -> TRUE .)
    AND             reduce using rule 213 (arit -> TRUE .)
    OR              reduce using rule 213 (arit -> TRUE .)
    PARC            reduce using rule 213 (arit -> TRUE .)
    COMA            reduce using rule 213 (arit -> TRUE .)
    PTCOMA          reduce using rule 213 (arit -> TRUE .)
    THEN            reduce using rule 213 (arit -> TRUE .)
    WHEN            reduce using rule 213 (arit -> TRUE .)
    ELSE            reduce using rule 213 (arit -> TRUE .)


state 80

    (214) arit -> FALSE .

    MAYOR           reduce using rule 214 (arit -> FALSE .)
    MENOR           reduce using rule 214 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 214 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 214 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 214 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 214 (arit -> FALSE .)
    POR             reduce using rule 214 (arit -> FALSE .)
    DIVISION        reduce using rule 214 (arit -> FALSE .)
    MAS             reduce using rule 214 (arit -> FALSE .)
    MENOS           reduce using rule 214 (arit -> FALSE .)
    MODULO          reduce using rule 214 (arit -> FALSE .)
    ANDB            reduce using rule 214 (arit -> FALSE .)
    SHIFTI          reduce using rule 214 (arit -> FALSE .)
    SHIFTD          reduce using rule 214 (arit -> FALSE .)
    XORB            reduce using rule 214 (arit -> FALSE .)
    ORB             reduce using rule 214 (arit -> FALSE .)
    AND             reduce using rule 214 (arit -> FALSE .)
    OR              reduce using rule 214 (arit -> FALSE .)
    PARC            reduce using rule 214 (arit -> FALSE .)
    COMA            reduce using rule 214 (arit -> FALSE .)
    PTCOMA          reduce using rule 214 (arit -> FALSE .)
    THEN            reduce using rule 214 (arit -> FALSE .)
    WHEN            reduce using rule 214 (arit -> FALSE .)
    ELSE            reduce using rule 214 (arit -> FALSE .)


state 81

    (138) llamada_funcion -> CALL ID PARA params . PARC PTCOMA
    (139) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 137
    COMA            shift and go to state 115


state 82

    (51) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 138


state 83

    (52) drop_database_instr -> DROP DATABASE ID PTCOMA .

    error           reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CREATE          reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SELECT          reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CALL            reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 52 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 84

    (118) drop_insrt -> DROP TABLE lista_drop_id PTCOMA .

    error           reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CREATE          reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SELECT          reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CALL            reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SHOW            reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    USE             reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DROP            reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    ALTER           reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    $end            reduce using rule 118 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)


state 85

    (119) lista_drop_id -> lista_drop_id COMA . ID

    ID              shift and go to state 139


state 86

    (121) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 140


state 87

    (122) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 141


state 88

    (144) parametro -> ID . tipo
    (163) tipo -> . INTEGER
    (164) tipo -> . SMALLINT
    (165) tipo -> . BIGINT
    (166) tipo -> . DECIMAL
    (167) tipo -> . NUMERIC
    (168) tipo -> . REAL
    (169) tipo -> . CHAR
    (170) tipo -> . DOUBLE
    (171) tipo -> . PRECISION
    (172) tipo -> . MONEY
    (173) tipo -> . FLOAT
    (174) tipo -> . BOOLEAN
    (175) tipo -> . VOID
    (176) tipo -> . CHAR PARA ENTERO PARC
    (177) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (178) tipo -> . VARCHAR PARA ENTERO PARC
    (179) tipo -> . CHARACTER PARA ENTERO PARC
    (180) tipo -> . TEXT
    (181) tipo -> . TIME
    (182) tipo -> . TIMESTAMP
    (183) tipo -> . DATE

    INTEGER         shift and go to state 143
    SMALLINT        shift and go to state 144
    BIGINT          shift and go to state 145
    DECIMAL         shift and go to state 146
    NUMERIC         shift and go to state 147
    REAL            shift and go to state 148
    CHAR            shift and go to state 149
    DOUBLE          shift and go to state 150
    PRECISION       shift and go to state 151
    MONEY           shift and go to state 152
    FLOAT           shift and go to state 153
    BOOLEAN         shift and go to state 154
    VOID            shift and go to state 155
    CHARACTER       shift and go to state 156
    VARCHAR         shift and go to state 157
    TEXT            shift and go to state 158
    TIME            shift and go to state 159
    TIMESTAMP       shift and go to state 160
    DATE            shift and go to state 161

    tipo                           shift and go to state 142

state 89

    (129) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> parametros . COMA parametro

    PARC            shift and go to state 162
    COMA            shift and go to state 163


state 90

    (143) parametros -> parametro .

    PARC            reduce using rule 143 (parametros -> parametro .)
    COMA            reduce using rule 143 (parametros -> parametro .)


state 91

    (145) parametro -> empty .

    PARC            reduce using rule 145 (parametro -> empty .)
    COMA            reduce using rule 145 (parametro -> empty .)


state 92

    (131) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 164


state 93

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 165


state 94

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (47) createDB_unParam -> . OWNER IGUAL string_type
    (48) createDB_unParam -> . MODE IGUAL ENTERO
    (49) createDB_unParam -> . OWNER string_type
    (50) createDB_unParam -> . MODE ENTERO
    (39) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (41) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 166
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 167
    createDB_dosParam              shift and go to state 168

state 95

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 169


state 96

    (133) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> parametros . COMA parametro

    PARC            shift and go to state 170
    COMA            shift and go to state 163


state 97

    (31) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 98

    (35) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 99

    (47) createDB_unParam -> OWNER IGUAL . string_type
    (42) createDB_dosParam -> OWNER IGUAL . string_type MODE ENTERO
    (45) createDB_dosParam -> OWNER IGUAL . string_type MODE IGUAL ENTERO
    (127) string_type -> . CADENA
    (128) string_type -> . ID

    CADENA          shift and go to state 101
    ID              shift and go to state 102

    string_type                    shift and go to state 171

state 100

    (49) createDB_unParam -> OWNER string_type .
    (39) createDB_dosParam -> OWNER string_type . MODE ENTERO
    (41) createDB_dosParam -> OWNER string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 49 (createDB_unParam -> OWNER string_type .)
    MODE            shift and go to state 172


state 101

    (127) string_type -> CADENA .

    MODE            reduce using rule 127 (string_type -> CADENA .)
    PTCOMA          reduce using rule 127 (string_type -> CADENA .)
    MAYOR           reduce using rule 127 (string_type -> CADENA .)
    MENOR           reduce using rule 127 (string_type -> CADENA .)
    MAYORIGUAL      reduce using rule 127 (string_type -> CADENA .)
    MENORIGUAL      reduce using rule 127 (string_type -> CADENA .)
    IGUALIGUAL      reduce using rule 127 (string_type -> CADENA .)
    IGUAL           reduce using rule 127 (string_type -> CADENA .)
    NOIG            reduce using rule 127 (string_type -> CADENA .)
    NOTIGUAL        reduce using rule 127 (string_type -> CADENA .)
    MAS             reduce using rule 127 (string_type -> CADENA .)
    MENOS           reduce using rule 127 (string_type -> CADENA .)
    POR             reduce using rule 127 (string_type -> CADENA .)
    DIV             reduce using rule 127 (string_type -> CADENA .)
    MODULO          reduce using rule 127 (string_type -> CADENA .)
    SHIFTD          reduce using rule 127 (string_type -> CADENA .)
    SHIFTI          reduce using rule 127 (string_type -> CADENA .)
    HASHTAG         reduce using rule 127 (string_type -> CADENA .)
    ANDB            reduce using rule 127 (string_type -> CADENA .)
    D_OR            reduce using rule 127 (string_type -> CADENA .)
    AND             reduce using rule 127 (string_type -> CADENA .)
    OR              reduce using rule 127 (string_type -> CADENA .)
    PARC            reduce using rule 127 (string_type -> CADENA .)


state 102

    (128) string_type -> ID .

    MODE            reduce using rule 128 (string_type -> ID .)
    PTCOMA          reduce using rule 128 (string_type -> ID .)


state 103

    (48) createDB_unParam -> MODE IGUAL . ENTERO
    (44) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (46) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 173


state 104

    (50) createDB_unParam -> MODE ENTERO .
    (40) createDB_dosParam -> MODE ENTERO . OWNER string_type
    (43) createDB_dosParam -> MODE ENTERO . OWNER IGUAL string_type

    PTCOMA          reduce using rule 50 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 174


state 105

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 175


state 106

    (60) cuerpo_createTable -> ID . TIPO_DATO_DEF
    (61) cuerpo_createTable -> ID . TIPO_DATO_DEF createTable_options
    (90) TIPO_DATO_DEF -> . TEXT
    (91) TIPO_DATO_DEF -> . FLOAT
    (92) TIPO_DATO_DEF -> . INTEGER
    (93) TIPO_DATO_DEF -> . BOOLEAN
    (94) TIPO_DATO_DEF -> . SMALLINT
    (95) TIPO_DATO_DEF -> . MONEY
    (96) TIPO_DATO_DEF -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (97) TIPO_DATO_DEF -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (98) TIPO_DATO_DEF -> . BIGINT
    (99) TIPO_DATO_DEF -> . REAL
    (100) TIPO_DATO_DEF -> . DOUBLE PRECISION
    (101) TIPO_DATO_DEF -> . INTERVAL extract_time TO extract_time
    (102) TIPO_DATO_DEF -> . INTERVAL
    (103) TIPO_DATO_DEF -> . TIME
    (104) TIPO_DATO_DEF -> . TIMESTAMP
    (105) TIPO_DATO_DEF -> . DATE
    (106) TIPO_DATO_DEF -> . CHARACTER VARYING PARA ENTERO PARC
    (107) TIPO_DATO_DEF -> . VARCHAR PARA ENTERO PARC
    (108) TIPO_DATO_DEF -> . CHAR PARA ENTERO PARC
    (109) TIPO_DATO_DEF -> . CHARACTER PARA ENTERO PARC
    (110) TIPO_DATO_DEF -> . CHAR PARA PARC
    (111) TIPO_DATO_DEF -> . CHARACTER PARA PARC

    TEXT            shift and go to state 177
    FLOAT           shift and go to state 178
    INTEGER         shift and go to state 179
    BOOLEAN         shift and go to state 180
    SMALLINT        shift and go to state 181
    MONEY           shift and go to state 182
    DECIMAL         shift and go to state 183
    NUMERIC         shift and go to state 184
    BIGINT          shift and go to state 185
    REAL            shift and go to state 186
    DOUBLE          shift and go to state 187
    INTERVAL        shift and go to state 188
    TIME            shift and go to state 189
    TIMESTAMP       shift and go to state 190
    DATE            shift and go to state 191
    CHARACTER       shift and go to state 192
    VARCHAR         shift and go to state 193
    CHAR            shift and go to state 194

    TIPO_DATO_DEF                  shift and go to state 176

state 107

    (56) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC INHERITS PARA ID PARC PTCOMA
    (58) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PARC            shift and go to state 195
    COMA            shift and go to state 196


state 108

    (59) cuerpo_createTable_lista -> cuerpo_createTable .

    PARC            reduce using rule 59 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 59 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 109

    (62) cuerpo_createTable -> PRIMARY . KEY PARA campos_c PARC

    KEY             shift and go to state 197


state 110

    (63) cuerpo_createTable -> FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC

    KEY             shift and go to state 198


state 111

    (64) cuerpo_createTable -> UNIQUE . PARA campos_c PARC

    PARA            shift and go to state 199


state 112

    (65) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 200


state 113

    (205) arit -> PARA expresionPLSQL . PARC
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PARC            shift and go to state 201
    AND             shift and go to state 116
    OR              shift and go to state 117


state 114

    (137) llamada_funcion -> SELECT ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 202


state 115

    (139) params -> params COMA . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 203
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 116

    (185) log -> expresionPLSQL AND . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 204
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 117

    (186) log -> expresionPLSQL OR . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 205
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 118

    (188) rel -> arit MAYOR . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 206

state 119

    (189) rel -> arit MENOR . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 207

state 120

    (190) rel -> arit MAYORIGUAL . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 208

state 121

    (191) rel -> arit MENORIGUAL . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 209

state 122

    (192) rel -> arit IGUALIGUAL . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 210

state 123

    (193) rel -> arit NOTIGUAL . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 211

state 124

    (195) arit -> arit POR . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 212

state 125

    (196) arit -> arit DIVISION . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 213

state 126

    (197) arit -> arit MAS . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 214

state 127

    (198) arit -> arit MENOS . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 215

state 128

    (199) arit -> arit MODULO . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 216

state 129

    (200) arit -> arit ANDB . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 217

state 130

    (201) arit -> arit SHIFTI . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 218

state 131

    (202) arit -> arit SHIFTD . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 219

state 132

    (203) arit -> arit XORB . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 220

state 133

    (204) arit -> arit ORB . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    arit                           shift and go to state 221

state 134

    (210) arit -> MENOS expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    MENOR           reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    MAYORIGUAL      reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    MENORIGUAL      reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    IGUALIGUAL      reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    NOTIGUAL        reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    POR             reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    DIVISION        reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    MAS             reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    MENOS           reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    MODULO          reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    ANDB            reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    SHIFTI          reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    SHIFTD          reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    XORB            reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    ORB             reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    AND             reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    OR              reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    PARC            reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    COMA            reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    PTCOMA          reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    THEN            reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    WHEN            reduce using rule 210 (arit -> MENOS expresionPLSQL .)
    ELSE            reduce using rule 210 (arit -> MENOS expresionPLSQL .)

  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]


state 135

    (211) arit -> NOTB expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    MENOR           reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    MAYORIGUAL      reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    MENORIGUAL      reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    IGUALIGUAL      reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    NOTIGUAL        reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    POR             reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    DIVISION        reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    MAS             reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    MENOS           reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    MODULO          reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    ANDB            reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    SHIFTI          reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    SHIFTD          reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    XORB            reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    ORB             reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    AND             reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    OR              reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    PARC            reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    COMA            reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    PTCOMA          reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    THEN            reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    WHEN            reduce using rule 211 (arit -> NOTB expresionPLSQL .)
    ELSE            reduce using rule 211 (arit -> NOTB expresionPLSQL .)

  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]


state 136

    (212) arit -> NOT expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 212 (arit -> NOT expresionPLSQL .)
    MENOR           reduce using rule 212 (arit -> NOT expresionPLSQL .)
    MAYORIGUAL      reduce using rule 212 (arit -> NOT expresionPLSQL .)
    MENORIGUAL      reduce using rule 212 (arit -> NOT expresionPLSQL .)
    IGUALIGUAL      reduce using rule 212 (arit -> NOT expresionPLSQL .)
    NOTIGUAL        reduce using rule 212 (arit -> NOT expresionPLSQL .)
    POR             reduce using rule 212 (arit -> NOT expresionPLSQL .)
    DIVISION        reduce using rule 212 (arit -> NOT expresionPLSQL .)
    MAS             reduce using rule 212 (arit -> NOT expresionPLSQL .)
    MENOS           reduce using rule 212 (arit -> NOT expresionPLSQL .)
    MODULO          reduce using rule 212 (arit -> NOT expresionPLSQL .)
    ANDB            reduce using rule 212 (arit -> NOT expresionPLSQL .)
    SHIFTI          reduce using rule 212 (arit -> NOT expresionPLSQL .)
    SHIFTD          reduce using rule 212 (arit -> NOT expresionPLSQL .)
    XORB            reduce using rule 212 (arit -> NOT expresionPLSQL .)
    ORB             reduce using rule 212 (arit -> NOT expresionPLSQL .)
    AND             reduce using rule 212 (arit -> NOT expresionPLSQL .)
    OR              reduce using rule 212 (arit -> NOT expresionPLSQL .)
    PARC            reduce using rule 212 (arit -> NOT expresionPLSQL .)
    COMA            reduce using rule 212 (arit -> NOT expresionPLSQL .)
    PTCOMA          reduce using rule 212 (arit -> NOT expresionPLSQL .)
    THEN            reduce using rule 212 (arit -> NOT expresionPLSQL .)
    WHEN            reduce using rule 212 (arit -> NOT expresionPLSQL .)
    ELSE            reduce using rule 212 (arit -> NOT expresionPLSQL .)

  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]


state 137

    (138) llamada_funcion -> CALL ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 222


state 138

    (51) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 223


state 139

    (119) lista_drop_id -> lista_drop_id COMA ID .

    PTCOMA          reduce using rule 119 (lista_drop_id -> lista_drop_id COMA ID .)
    COMA            reduce using rule 119 (lista_drop_id -> lista_drop_id COMA ID .)


state 140

    (121) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 224


state 141

    (122) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (123) usuariosDB -> . ID
    (124) usuariosDB -> . CURRENT_USER
    (125) usuariosDB -> . SESSION_USER
    (126) usuariosDB -> . CADENA

    ID              shift and go to state 225
    CURRENT_USER    shift and go to state 227
    SESSION_USER    shift and go to state 228
    CADENA          shift and go to state 229

    usuariosDB                     shift and go to state 226

state 142

    (144) parametro -> ID tipo .

    PARC            reduce using rule 144 (parametro -> ID tipo .)
    COMA            reduce using rule 144 (parametro -> ID tipo .)


state 143

    (163) tipo -> INTEGER .

    PARC            reduce using rule 163 (tipo -> INTEGER .)
    COMA            reduce using rule 163 (tipo -> INTEGER .)
    AS              reduce using rule 163 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 163 (tipo -> INTEGER .)
    PTCOMA          reduce using rule 163 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 163 (tipo -> INTEGER .)


state 144

    (164) tipo -> SMALLINT .

    PARC            reduce using rule 164 (tipo -> SMALLINT .)
    COMA            reduce using rule 164 (tipo -> SMALLINT .)
    AS              reduce using rule 164 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 164 (tipo -> SMALLINT .)
    PTCOMA          reduce using rule 164 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 164 (tipo -> SMALLINT .)


state 145

    (165) tipo -> BIGINT .

    PARC            reduce using rule 165 (tipo -> BIGINT .)
    COMA            reduce using rule 165 (tipo -> BIGINT .)
    AS              reduce using rule 165 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 165 (tipo -> BIGINT .)
    PTCOMA          reduce using rule 165 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 165 (tipo -> BIGINT .)


state 146

    (166) tipo -> DECIMAL .

    PARC            reduce using rule 166 (tipo -> DECIMAL .)
    COMA            reduce using rule 166 (tipo -> DECIMAL .)
    AS              reduce using rule 166 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 166 (tipo -> DECIMAL .)
    PTCOMA          reduce using rule 166 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 166 (tipo -> DECIMAL .)


state 147

    (167) tipo -> NUMERIC .

    PARC            reduce using rule 167 (tipo -> NUMERIC .)
    COMA            reduce using rule 167 (tipo -> NUMERIC .)
    AS              reduce using rule 167 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 167 (tipo -> NUMERIC .)
    PTCOMA          reduce using rule 167 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 167 (tipo -> NUMERIC .)


state 148

    (168) tipo -> REAL .

    PARC            reduce using rule 168 (tipo -> REAL .)
    COMA            reduce using rule 168 (tipo -> REAL .)
    AS              reduce using rule 168 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 168 (tipo -> REAL .)
    PTCOMA          reduce using rule 168 (tipo -> REAL .)
    DEFAULT         reduce using rule 168 (tipo -> REAL .)


state 149

    (169) tipo -> CHAR .
    (176) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 169 (tipo -> CHAR .)
    COMA            reduce using rule 169 (tipo -> CHAR .)
    AS              reduce using rule 169 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 169 (tipo -> CHAR .)
    PTCOMA          reduce using rule 169 (tipo -> CHAR .)
    DEFAULT         reduce using rule 169 (tipo -> CHAR .)
    PARA            shift and go to state 230


state 150

    (170) tipo -> DOUBLE .

    PARC            reduce using rule 170 (tipo -> DOUBLE .)
    COMA            reduce using rule 170 (tipo -> DOUBLE .)
    AS              reduce using rule 170 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 170 (tipo -> DOUBLE .)
    PTCOMA          reduce using rule 170 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 170 (tipo -> DOUBLE .)


state 151

    (171) tipo -> PRECISION .

    PARC            reduce using rule 171 (tipo -> PRECISION .)
    COMA            reduce using rule 171 (tipo -> PRECISION .)
    AS              reduce using rule 171 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 171 (tipo -> PRECISION .)
    PTCOMA          reduce using rule 171 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 171 (tipo -> PRECISION .)


state 152

    (172) tipo -> MONEY .

    PARC            reduce using rule 172 (tipo -> MONEY .)
    COMA            reduce using rule 172 (tipo -> MONEY .)
    AS              reduce using rule 172 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 172 (tipo -> MONEY .)
    PTCOMA          reduce using rule 172 (tipo -> MONEY .)
    DEFAULT         reduce using rule 172 (tipo -> MONEY .)


state 153

    (173) tipo -> FLOAT .

    PARC            reduce using rule 173 (tipo -> FLOAT .)
    COMA            reduce using rule 173 (tipo -> FLOAT .)
    AS              reduce using rule 173 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 173 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 173 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 173 (tipo -> FLOAT .)


state 154

    (174) tipo -> BOOLEAN .

    PARC            reduce using rule 174 (tipo -> BOOLEAN .)
    COMA            reduce using rule 174 (tipo -> BOOLEAN .)
    AS              reduce using rule 174 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 174 (tipo -> BOOLEAN .)
    PTCOMA          reduce using rule 174 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 174 (tipo -> BOOLEAN .)


state 155

    (175) tipo -> VOID .

    PARC            reduce using rule 175 (tipo -> VOID .)
    COMA            reduce using rule 175 (tipo -> VOID .)
    AS              reduce using rule 175 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 175 (tipo -> VOID .)
    PTCOMA          reduce using rule 175 (tipo -> VOID .)
    DEFAULT         reduce using rule 175 (tipo -> VOID .)


state 156

    (177) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (179) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 231
    PARA            shift and go to state 232


state 157

    (178) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 233


state 158

    (180) tipo -> TEXT .

    PARC            reduce using rule 180 (tipo -> TEXT .)
    COMA            reduce using rule 180 (tipo -> TEXT .)
    AS              reduce using rule 180 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 180 (tipo -> TEXT .)
    PTCOMA          reduce using rule 180 (tipo -> TEXT .)
    DEFAULT         reduce using rule 180 (tipo -> TEXT .)


state 159

    (181) tipo -> TIME .

    PARC            reduce using rule 181 (tipo -> TIME .)
    COMA            reduce using rule 181 (tipo -> TIME .)
    AS              reduce using rule 181 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 181 (tipo -> TIME .)
    PTCOMA          reduce using rule 181 (tipo -> TIME .)
    DEFAULT         reduce using rule 181 (tipo -> TIME .)


state 160

    (182) tipo -> TIMESTAMP .

    PARC            reduce using rule 182 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 182 (tipo -> TIMESTAMP .)
    AS              reduce using rule 182 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 182 (tipo -> TIMESTAMP .)
    PTCOMA          reduce using rule 182 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 182 (tipo -> TIMESTAMP .)


state 161

    (183) tipo -> DATE .

    PARC            reduce using rule 183 (tipo -> DATE .)
    COMA            reduce using rule 183 (tipo -> DATE .)
    AS              reduce using rule 183 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 183 (tipo -> DATE .)
    PTCOMA          reduce using rule 183 (tipo -> DATE .)
    DEFAULT         reduce using rule 183 (tipo -> DATE .)


state 162

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 234


state 163

    (142) parametros -> parametros COMA . parametro
    (144) parametro -> . ID tipo
    (145) parametro -> . empty
    (215) empty -> .

    ID              shift and go to state 88
    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)

    parametro                      shift and go to state 235
    empty                          shift and go to state 91

state 164

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> . parametros COMA parametro
    (143) parametros -> . parametro
    (144) parametro -> . ID tipo
    (145) parametro -> . empty
    (215) empty -> .

    ID              shift and go to state 88
    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)

    parametros                     shift and go to state 236
    parametro                      shift and go to state 90
    empty                          shift and go to state 91

state 165

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> . parametros COMA parametro
    (143) parametros -> . parametro
    (144) parametro -> . ID tipo
    (145) parametro -> . empty
    (215) empty -> .

    ID              shift and go to state 88
    PARC            reduce using rule 215 (empty -> .)
    COMA            reduce using rule 215 (empty -> .)

    parametros                     shift and go to state 237
    parametro                      shift and go to state 90
    empty                          shift and go to state 91

state 166

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    error           reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CALL            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 167

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 238


state 168

    (36) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 239


state 169

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 240


state 170

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 241


state 171

    (47) createDB_unParam -> OWNER IGUAL string_type .
    (42) createDB_dosParam -> OWNER IGUAL string_type . MODE ENTERO
    (45) createDB_dosParam -> OWNER IGUAL string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 47 (createDB_unParam -> OWNER IGUAL string_type .)
    MODE            shift and go to state 242


state 172

    (39) createDB_dosParam -> OWNER string_type MODE . ENTERO
    (41) createDB_dosParam -> OWNER string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 243
    IGUAL           shift and go to state 244


state 173

    (48) createDB_unParam -> MODE IGUAL ENTERO .
    (44) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (46) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 48 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 245


state 174

    (40) createDB_dosParam -> MODE ENTERO OWNER . string_type
    (43) createDB_dosParam -> MODE ENTERO OWNER . IGUAL string_type
    (127) string_type -> . CADENA
    (128) string_type -> . ID

    IGUAL           shift and go to state 247
    CADENA          shift and go to state 101
    ID              shift and go to state 102

    string_type                    shift and go to state 246

state 175

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (47) createDB_unParam -> . OWNER IGUAL string_type
    (48) createDB_unParam -> . MODE IGUAL ENTERO
    (49) createDB_unParam -> . OWNER string_type
    (50) createDB_unParam -> . MODE ENTERO
    (39) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (41) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 248
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 249
    createDB_dosParam              shift and go to state 250

state 176

    (60) cuerpo_createTable -> ID TIPO_DATO_DEF .
    (61) cuerpo_createTable -> ID TIPO_DATO_DEF . createTable_options
    (71) createTable_options -> . createTable_options cT_options
    (72) createTable_options -> . cT_options
    (73) cT_options -> . N_null
    (74) cT_options -> . C_unique
    (75) cT_options -> . llave
    (76) cT_options -> . O_DEFAULT
    (77) cT_options -> . C_check
    (78) N_null -> . NOT NULL
    (79) N_null -> . NULL
    (80) C_unique -> . UNIQUE
    (81) C_unique -> . CONSTRAINT ID UNIQUE
    (82) llave -> . PRIMARY KEY
    (83) llave -> . FOREIGN KEY
    (84) O_DEFAULT -> . DEFAULT expresion_dato_default
    (85) C_check -> . CONSTRAINT ID CHECK PARA expresion_logica PARC
    (86) C_check -> . CHECK PARA expresion_logica PARC

    PARC            reduce using rule 60 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    COMA            reduce using rule 60 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    NOT             shift and go to state 258
    NULL            shift and go to state 259
    UNIQUE          shift and go to state 260
    CONSTRAINT      shift and go to state 261
    PRIMARY         shift and go to state 262
    FOREIGN         shift and go to state 263
    DEFAULT         shift and go to state 264
    CHECK           shift and go to state 265

    createTable_options            shift and go to state 251
    cT_options                     shift and go to state 252
    N_null                         shift and go to state 253
    C_unique                       shift and go to state 254
    llave                          shift and go to state 255
    O_DEFAULT                      shift and go to state 256
    C_check                        shift and go to state 257

state 177

    (90) TIPO_DATO_DEF -> TEXT .

    NOT             reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    NULL            reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    UNIQUE          reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    CONSTRAINT      reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    PRIMARY         reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    FOREIGN         reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    DEFAULT         reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    CHECK           reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    PARC            reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)
    COMA            reduce using rule 90 (TIPO_DATO_DEF -> TEXT .)


state 178

    (91) TIPO_DATO_DEF -> FLOAT .

    NOT             reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    NULL            reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    UNIQUE          reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    CONSTRAINT      reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    PRIMARY         reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    FOREIGN         reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    DEFAULT         reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    CHECK           reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    PARC            reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)
    COMA            reduce using rule 91 (TIPO_DATO_DEF -> FLOAT .)


state 179

    (92) TIPO_DATO_DEF -> INTEGER .

    NOT             reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    NULL            reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    UNIQUE          reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    CONSTRAINT      reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    PRIMARY         reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    FOREIGN         reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    DEFAULT         reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    CHECK           reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    PARC            reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)
    COMA            reduce using rule 92 (TIPO_DATO_DEF -> INTEGER .)


state 180

    (93) TIPO_DATO_DEF -> BOOLEAN .

    NOT             reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    NULL            reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    UNIQUE          reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    CONSTRAINT      reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    PRIMARY         reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    FOREIGN         reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    DEFAULT         reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    CHECK           reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    PARC            reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)
    COMA            reduce using rule 93 (TIPO_DATO_DEF -> BOOLEAN .)


state 181

    (94) TIPO_DATO_DEF -> SMALLINT .

    NOT             reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    NULL            reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    UNIQUE          reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    CONSTRAINT      reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    PRIMARY         reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    FOREIGN         reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    DEFAULT         reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    CHECK           reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    PARC            reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)
    COMA            reduce using rule 94 (TIPO_DATO_DEF -> SMALLINT .)


state 182

    (95) TIPO_DATO_DEF -> MONEY .

    NOT             reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    NULL            reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    UNIQUE          reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    CONSTRAINT      reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    PRIMARY         reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    FOREIGN         reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    DEFAULT         reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    CHECK           reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    PARC            reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)
    COMA            reduce using rule 95 (TIPO_DATO_DEF -> MONEY .)


state 183

    (96) TIPO_DATO_DEF -> DECIMAL . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 266


state 184

    (97) TIPO_DATO_DEF -> NUMERIC . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 267


state 185

    (98) TIPO_DATO_DEF -> BIGINT .

    NOT             reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    NULL            reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    UNIQUE          reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    CONSTRAINT      reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    PRIMARY         reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    FOREIGN         reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    DEFAULT         reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    CHECK           reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    PARC            reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)
    COMA            reduce using rule 98 (TIPO_DATO_DEF -> BIGINT .)


state 186

    (99) TIPO_DATO_DEF -> REAL .

    NOT             reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    NULL            reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    UNIQUE          reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    CONSTRAINT      reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    PRIMARY         reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    FOREIGN         reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    DEFAULT         reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    CHECK           reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    PARC            reduce using rule 99 (TIPO_DATO_DEF -> REAL .)
    COMA            reduce using rule 99 (TIPO_DATO_DEF -> REAL .)


state 187

    (100) TIPO_DATO_DEF -> DOUBLE . PRECISION

    PRECISION       shift and go to state 268


state 188

    (101) TIPO_DATO_DEF -> INTERVAL . extract_time TO extract_time
    (102) TIPO_DATO_DEF -> INTERVAL .
    (112) extract_time -> . YEAR
    (113) extract_time -> . DAY
    (114) extract_time -> . MONTH
    (115) extract_time -> . HOUR
    (116) extract_time -> . MINUTE
    (117) extract_time -> . SECOND

    NOT             reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    NULL            reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    UNIQUE          reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    CONSTRAINT      reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    PRIMARY         reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    FOREIGN         reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    DEFAULT         reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    CHECK           reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    PARC            reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    COMA            reduce using rule 102 (TIPO_DATO_DEF -> INTERVAL .)
    YEAR            shift and go to state 270
    DAY             shift and go to state 271
    MONTH           shift and go to state 272
    HOUR            shift and go to state 273
    MINUTE          shift and go to state 274
    SECOND          shift and go to state 275

    extract_time                   shift and go to state 269

state 189

    (103) TIPO_DATO_DEF -> TIME .

    NOT             reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    NULL            reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    UNIQUE          reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    CONSTRAINT      reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    PRIMARY         reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    FOREIGN         reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    DEFAULT         reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    CHECK           reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    PARC            reduce using rule 103 (TIPO_DATO_DEF -> TIME .)
    COMA            reduce using rule 103 (TIPO_DATO_DEF -> TIME .)


state 190

    (104) TIPO_DATO_DEF -> TIMESTAMP .

    NOT             reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    NULL            reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    UNIQUE          reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    PRIMARY         reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    FOREIGN         reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    DEFAULT         reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    CHECK           reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    PARC            reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)
    COMA            reduce using rule 104 (TIPO_DATO_DEF -> TIMESTAMP .)


state 191

    (105) TIPO_DATO_DEF -> DATE .

    NOT             reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    NULL            reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    UNIQUE          reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    CONSTRAINT      reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    PRIMARY         reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    FOREIGN         reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    DEFAULT         reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    CHECK           reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    PARC            reduce using rule 105 (TIPO_DATO_DEF -> DATE .)
    COMA            reduce using rule 105 (TIPO_DATO_DEF -> DATE .)


state 192

    (106) TIPO_DATO_DEF -> CHARACTER . VARYING PARA ENTERO PARC
    (109) TIPO_DATO_DEF -> CHARACTER . PARA ENTERO PARC
    (111) TIPO_DATO_DEF -> CHARACTER . PARA PARC

    VARYING         shift and go to state 276
    PARA            shift and go to state 277


state 193

    (107) TIPO_DATO_DEF -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 278


state 194

    (108) TIPO_DATO_DEF -> CHAR . PARA ENTERO PARC
    (110) TIPO_DATO_DEF -> CHAR . PARA PARC

    PARA            shift and go to state 279


state 195

    (56) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . PTCOMA
    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . INHERITS PARA ID PARC PTCOMA

    PTCOMA          shift and go to state 280
    INHERITS        shift and go to state 281


state 196

    (58) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (60) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (61) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (62) cuerpo_createTable -> . PRIMARY KEY PARA campos_c PARC
    (63) cuerpo_createTable -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
    (64) cuerpo_createTable -> . UNIQUE PARA campos_c PARC
    (65) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 106
    PRIMARY         shift and go to state 109
    FOREIGN         shift and go to state 110
    UNIQUE          shift and go to state 111
    CONSTRAINT      shift and go to state 112

    cuerpo_createTable             shift and go to state 282

state 197

    (62) cuerpo_createTable -> PRIMARY KEY . PARA campos_c PARC

    PARA            shift and go to state 283


state 198

    (63) cuerpo_createTable -> FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC

    PARA            shift and go to state 284


state 199

    (64) cuerpo_createTable -> UNIQUE PARA . campos_c PARC
    (66) campos_c -> . campos_c COMA ID
    (67) campos_c -> . ID

    ID              shift and go to state 286

    campos_c                       shift and go to state 285

state 200

    (65) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (68) constraint_esp -> . CHECK PARA expresion_logica PARC
    (69) constraint_esp -> . UNIQUE PARA campos_c PARC
    (70) constraint_esp -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC

    CHECK           shift and go to state 288
    UNIQUE          shift and go to state 289
    FOREIGN         shift and go to state 290

    constraint_esp                 shift and go to state 287

state 201

    (205) arit -> PARA expresionPLSQL PARC .

    MAYOR           reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    MENOR           reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    MAYORIGUAL      reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    MENORIGUAL      reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    IGUALIGUAL      reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    NOTIGUAL        reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    POR             reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    DIVISION        reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    MAS             reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    MENOS           reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    MODULO          reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    ANDB            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    SHIFTI          reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    SHIFTD          reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    XORB            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    ORB             reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    AND             reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    OR              reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    PARC            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    COMA            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    PTCOMA          reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    THEN            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    WHEN            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)
    ELSE            reduce using rule 205 (arit -> PARA expresionPLSQL PARC .)


state 202

    (137) llamada_funcion -> SELECT ID PARA params PARC PTCOMA .

    error           reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    USE             reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ALTER           reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    $end            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    END             reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ID              reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    IF              reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 137 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)


state 203

    (139) params -> params COMA expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 139 (params -> params COMA expresionPLSQL .)
    COMA            reduce using rule 139 (params -> params COMA expresionPLSQL .)
    AND             shift and go to state 116
    OR              shift and go to state 117


state 204

    (185) log -> expresionPLSQL AND expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    AND             reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    OR              reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    PARC            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    COMA            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYOR           reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOR           reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYORIGUAL      reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MENORIGUAL      reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    IGUALIGUAL      reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    NOTIGUAL        reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    POR             reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    DIVISION        reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MAS             reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOS           reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    MODULO          reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    ANDB            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTI          reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTD          reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    XORB            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    ORB             reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    PTCOMA          reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    THEN            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    WHEN            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)
    ELSE            reduce using rule 185 (log -> expresionPLSQL AND expresionPLSQL .)

  ! AND             [ shift and go to state 116 ]
  ! OR              [ shift and go to state 117 ]


state 205

    (186) log -> expresionPLSQL OR expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    OR              reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    PARC            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    COMA            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYOR           reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOR           reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYORIGUAL      reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MENORIGUAL      reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    IGUALIGUAL      reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    NOTIGUAL        reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    POR             reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    DIVISION        reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MAS             reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOS           reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    MODULO          reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    ANDB            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTI          reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTD          reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    XORB            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    ORB             reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    PTCOMA          reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    THEN            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    WHEN            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    ELSE            reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .)
    AND             shift and go to state 116

  ! AND             [ reduce using rule 186 (log -> expresionPLSQL OR expresionPLSQL .) ]
  ! OR              [ shift and go to state 117 ]


state 206

    (188) rel -> arit MAYOR arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    AND             reduce using rule 188 (rel -> arit MAYOR arit .)
    OR              reduce using rule 188 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 188 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 188 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 188 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 188 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 188 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 188 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 188 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 188 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 188 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 188 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 188 (rel -> arit MAYOR arit .)
    PTCOMA          reduce using rule 188 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 188 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 188 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 188 (rel -> arit MAYOR arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! DIVISION        [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! MODULO          [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 188 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 207

    (189) rel -> arit MENOR arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    AND             reduce using rule 189 (rel -> arit MENOR arit .)
    OR              reduce using rule 189 (rel -> arit MENOR arit .)
    PARC            reduce using rule 189 (rel -> arit MENOR arit .)
    COMA            reduce using rule 189 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 189 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 189 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 189 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 189 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 189 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 189 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 189 (rel -> arit MENOR arit .)
    XORB            reduce using rule 189 (rel -> arit MENOR arit .)
    ORB             reduce using rule 189 (rel -> arit MENOR arit .)
    PTCOMA          reduce using rule 189 (rel -> arit MENOR arit .)
    THEN            reduce using rule 189 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 189 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 189 (rel -> arit MENOR arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! DIVISION        [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! MODULO          [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 189 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 208

    (190) rel -> arit MAYORIGUAL arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    AND             reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    OR              reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    PTCOMA          reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 190 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! MODULO          [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 190 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 209

    (191) rel -> arit MENORIGUAL arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    AND             reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    OR              reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    PTCOMA          reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 191 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! MODULO          [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 191 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 210

    (192) rel -> arit IGUALIGUAL arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    AND             reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    OR              reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    PTCOMA          reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 192 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! MODULO          [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 192 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 211

    (193) rel -> arit NOTIGUAL arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    AND             reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    OR              reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    PTCOMA          reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 193 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! MODULO          [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 193 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 212

    (195) arit -> arit POR arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 195 (arit -> arit POR arit .)
    MENOR           reduce using rule 195 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 195 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 195 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 195 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 195 (arit -> arit POR arit .)
    POR             reduce using rule 195 (arit -> arit POR arit .)
    DIVISION        reduce using rule 195 (arit -> arit POR arit .)
    MAS             reduce using rule 195 (arit -> arit POR arit .)
    MENOS           reduce using rule 195 (arit -> arit POR arit .)
    MODULO          reduce using rule 195 (arit -> arit POR arit .)
    ANDB            reduce using rule 195 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 195 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 195 (arit -> arit POR arit .)
    XORB            reduce using rule 195 (arit -> arit POR arit .)
    ORB             reduce using rule 195 (arit -> arit POR arit .)
    AND             reduce using rule 195 (arit -> arit POR arit .)
    OR              reduce using rule 195 (arit -> arit POR arit .)
    PARC            reduce using rule 195 (arit -> arit POR arit .)
    COMA            reduce using rule 195 (arit -> arit POR arit .)
    PTCOMA          reduce using rule 195 (arit -> arit POR arit .)
    THEN            reduce using rule 195 (arit -> arit POR arit .)
    WHEN            reduce using rule 195 (arit -> arit POR arit .)
    ELSE            reduce using rule 195 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 124 ]
  ! DIVISION        [ shift and go to state 125 ]
  ! MAS             [ shift and go to state 126 ]
  ! MENOS           [ shift and go to state 127 ]
  ! MODULO          [ shift and go to state 128 ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 213

    (196) arit -> arit DIVISION arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 196 (arit -> arit DIVISION arit .)
    MENOR           reduce using rule 196 (arit -> arit DIVISION arit .)
    MAYORIGUAL      reduce using rule 196 (arit -> arit DIVISION arit .)
    MENORIGUAL      reduce using rule 196 (arit -> arit DIVISION arit .)
    IGUALIGUAL      reduce using rule 196 (arit -> arit DIVISION arit .)
    NOTIGUAL        reduce using rule 196 (arit -> arit DIVISION arit .)
    POR             reduce using rule 196 (arit -> arit DIVISION arit .)
    DIVISION        reduce using rule 196 (arit -> arit DIVISION arit .)
    MAS             reduce using rule 196 (arit -> arit DIVISION arit .)
    MENOS           reduce using rule 196 (arit -> arit DIVISION arit .)
    MODULO          reduce using rule 196 (arit -> arit DIVISION arit .)
    ANDB            reduce using rule 196 (arit -> arit DIVISION arit .)
    SHIFTI          reduce using rule 196 (arit -> arit DIVISION arit .)
    SHIFTD          reduce using rule 196 (arit -> arit DIVISION arit .)
    XORB            reduce using rule 196 (arit -> arit DIVISION arit .)
    ORB             reduce using rule 196 (arit -> arit DIVISION arit .)
    AND             reduce using rule 196 (arit -> arit DIVISION arit .)
    OR              reduce using rule 196 (arit -> arit DIVISION arit .)
    PARC            reduce using rule 196 (arit -> arit DIVISION arit .)
    COMA            reduce using rule 196 (arit -> arit DIVISION arit .)
    PTCOMA          reduce using rule 196 (arit -> arit DIVISION arit .)
    THEN            reduce using rule 196 (arit -> arit DIVISION arit .)
    WHEN            reduce using rule 196 (arit -> arit DIVISION arit .)
    ELSE            reduce using rule 196 (arit -> arit DIVISION arit .)

  ! POR             [ shift and go to state 124 ]
  ! DIVISION        [ shift and go to state 125 ]
  ! MAS             [ shift and go to state 126 ]
  ! MENOS           [ shift and go to state 127 ]
  ! MODULO          [ shift and go to state 128 ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 214

    (197) arit -> arit MAS arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 197 (arit -> arit MAS arit .)
    MENOR           reduce using rule 197 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 197 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 197 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 197 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 197 (arit -> arit MAS arit .)
    MAS             reduce using rule 197 (arit -> arit MAS arit .)
    MENOS           reduce using rule 197 (arit -> arit MAS arit .)
    ANDB            reduce using rule 197 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 197 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 197 (arit -> arit MAS arit .)
    XORB            reduce using rule 197 (arit -> arit MAS arit .)
    ORB             reduce using rule 197 (arit -> arit MAS arit .)
    AND             reduce using rule 197 (arit -> arit MAS arit .)
    OR              reduce using rule 197 (arit -> arit MAS arit .)
    PARC            reduce using rule 197 (arit -> arit MAS arit .)
    COMA            reduce using rule 197 (arit -> arit MAS arit .)
    PTCOMA          reduce using rule 197 (arit -> arit MAS arit .)
    THEN            reduce using rule 197 (arit -> arit MAS arit .)
    WHEN            reduce using rule 197 (arit -> arit MAS arit .)
    ELSE            reduce using rule 197 (arit -> arit MAS arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MODULO          shift and go to state 128

  ! POR             [ reduce using rule 197 (arit -> arit MAS arit .) ]
  ! DIVISION        [ reduce using rule 197 (arit -> arit MAS arit .) ]
  ! MODULO          [ reduce using rule 197 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 126 ]
  ! MENOS           [ shift and go to state 127 ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 215

    (198) arit -> arit MENOS arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 198 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 198 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 198 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 198 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 198 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 198 (arit -> arit MENOS arit .)
    MAS             reduce using rule 198 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 198 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 198 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 198 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 198 (arit -> arit MENOS arit .)
    XORB            reduce using rule 198 (arit -> arit MENOS arit .)
    ORB             reduce using rule 198 (arit -> arit MENOS arit .)
    AND             reduce using rule 198 (arit -> arit MENOS arit .)
    OR              reduce using rule 198 (arit -> arit MENOS arit .)
    PARC            reduce using rule 198 (arit -> arit MENOS arit .)
    COMA            reduce using rule 198 (arit -> arit MENOS arit .)
    PTCOMA          reduce using rule 198 (arit -> arit MENOS arit .)
    THEN            reduce using rule 198 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 198 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 198 (arit -> arit MENOS arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MODULO          shift and go to state 128

  ! POR             [ reduce using rule 198 (arit -> arit MENOS arit .) ]
  ! DIVISION        [ reduce using rule 198 (arit -> arit MENOS arit .) ]
  ! MODULO          [ reduce using rule 198 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 126 ]
  ! MENOS           [ shift and go to state 127 ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 216

    (199) arit -> arit MODULO arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 199 (arit -> arit MODULO arit .)
    MENOR           reduce using rule 199 (arit -> arit MODULO arit .)
    MAYORIGUAL      reduce using rule 199 (arit -> arit MODULO arit .)
    MENORIGUAL      reduce using rule 199 (arit -> arit MODULO arit .)
    IGUALIGUAL      reduce using rule 199 (arit -> arit MODULO arit .)
    NOTIGUAL        reduce using rule 199 (arit -> arit MODULO arit .)
    POR             reduce using rule 199 (arit -> arit MODULO arit .)
    DIVISION        reduce using rule 199 (arit -> arit MODULO arit .)
    MAS             reduce using rule 199 (arit -> arit MODULO arit .)
    MENOS           reduce using rule 199 (arit -> arit MODULO arit .)
    MODULO          reduce using rule 199 (arit -> arit MODULO arit .)
    ANDB            reduce using rule 199 (arit -> arit MODULO arit .)
    SHIFTI          reduce using rule 199 (arit -> arit MODULO arit .)
    SHIFTD          reduce using rule 199 (arit -> arit MODULO arit .)
    XORB            reduce using rule 199 (arit -> arit MODULO arit .)
    ORB             reduce using rule 199 (arit -> arit MODULO arit .)
    AND             reduce using rule 199 (arit -> arit MODULO arit .)
    OR              reduce using rule 199 (arit -> arit MODULO arit .)
    PARC            reduce using rule 199 (arit -> arit MODULO arit .)
    COMA            reduce using rule 199 (arit -> arit MODULO arit .)
    PTCOMA          reduce using rule 199 (arit -> arit MODULO arit .)
    THEN            reduce using rule 199 (arit -> arit MODULO arit .)
    WHEN            reduce using rule 199 (arit -> arit MODULO arit .)
    ELSE            reduce using rule 199 (arit -> arit MODULO arit .)

  ! POR             [ shift and go to state 124 ]
  ! DIVISION        [ shift and go to state 125 ]
  ! MAS             [ shift and go to state 126 ]
  ! MENOS           [ shift and go to state 127 ]
  ! MODULO          [ shift and go to state 128 ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 217

    (200) arit -> arit ANDB arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 200 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 200 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 200 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 200 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 200 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 200 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 200 (arit -> arit ANDB arit .)
    XORB            reduce using rule 200 (arit -> arit ANDB arit .)
    ORB             reduce using rule 200 (arit -> arit ANDB arit .)
    AND             reduce using rule 200 (arit -> arit ANDB arit .)
    OR              reduce using rule 200 (arit -> arit ANDB arit .)
    PARC            reduce using rule 200 (arit -> arit ANDB arit .)
    COMA            reduce using rule 200 (arit -> arit ANDB arit .)
    PTCOMA          reduce using rule 200 (arit -> arit ANDB arit .)
    THEN            reduce using rule 200 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 200 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 200 (arit -> arit ANDB arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! DIVISION        [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! MODULO          [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 200 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 218

    (201) arit -> arit SHIFTI arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 201 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 201 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 201 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 201 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 201 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 201 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 201 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 201 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 201 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 201 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 201 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 201 (arit -> arit SHIFTI arit .)
    OR              reduce using rule 201 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 201 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 201 (arit -> arit SHIFTI arit .)
    PTCOMA          reduce using rule 201 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 201 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 201 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 201 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128

  ! POR             [ reduce using rule 201 (arit -> arit SHIFTI arit .) ]
  ! DIVISION        [ reduce using rule 201 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 201 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 201 (arit -> arit SHIFTI arit .) ]
  ! MODULO          [ reduce using rule 201 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 219

    (202) arit -> arit SHIFTD arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 202 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 202 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 202 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 202 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 202 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 202 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 202 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 202 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 202 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 202 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 202 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 202 (arit -> arit SHIFTD arit .)
    OR              reduce using rule 202 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 202 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 202 (arit -> arit SHIFTD arit .)
    PTCOMA          reduce using rule 202 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 202 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 202 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 202 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128

  ! POR             [ reduce using rule 202 (arit -> arit SHIFTD arit .) ]
  ! DIVISION        [ reduce using rule 202 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 202 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 202 (arit -> arit SHIFTD arit .) ]
  ! MODULO          [ reduce using rule 202 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 129 ]
  ! SHIFTI          [ shift and go to state 130 ]
  ! SHIFTD          [ shift and go to state 131 ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 220

    (203) arit -> arit XORB arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 203 (arit -> arit XORB arit .)
    MENOR           reduce using rule 203 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 203 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 203 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 203 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 203 (arit -> arit XORB arit .)
    XORB            reduce using rule 203 (arit -> arit XORB arit .)
    AND             reduce using rule 203 (arit -> arit XORB arit .)
    OR              reduce using rule 203 (arit -> arit XORB arit .)
    PARC            reduce using rule 203 (arit -> arit XORB arit .)
    COMA            reduce using rule 203 (arit -> arit XORB arit .)
    PTCOMA          reduce using rule 203 (arit -> arit XORB arit .)
    THEN            reduce using rule 203 (arit -> arit XORB arit .)
    WHEN            reduce using rule 203 (arit -> arit XORB arit .)
    ELSE            reduce using rule 203 (arit -> arit XORB arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    ANDB            shift and go to state 129
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131
    ORB             shift and go to state 133

  ! POR             [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! DIVISION        [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! MODULO          [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 203 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 132 ]


state 221

    (204) arit -> arit ORB arit .
    (195) arit -> arit . POR arit
    (196) arit -> arit . DIVISION arit
    (197) arit -> arit . MAS arit
    (198) arit -> arit . MENOS arit
    (199) arit -> arit . MODULO arit
    (200) arit -> arit . ANDB arit
    (201) arit -> arit . SHIFTI arit
    (202) arit -> arit . SHIFTD arit
    (203) arit -> arit . XORB arit
    (204) arit -> arit . ORB arit

    MAYOR           reduce using rule 204 (arit -> arit ORB arit .)
    MENOR           reduce using rule 204 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 204 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 204 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 204 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 204 (arit -> arit ORB arit .)
    XORB            reduce using rule 204 (arit -> arit ORB arit .)
    ORB             reduce using rule 204 (arit -> arit ORB arit .)
    AND             reduce using rule 204 (arit -> arit ORB arit .)
    OR              reduce using rule 204 (arit -> arit ORB arit .)
    PARC            reduce using rule 204 (arit -> arit ORB arit .)
    COMA            reduce using rule 204 (arit -> arit ORB arit .)
    PTCOMA          reduce using rule 204 (arit -> arit ORB arit .)
    THEN            reduce using rule 204 (arit -> arit ORB arit .)
    WHEN            reduce using rule 204 (arit -> arit ORB arit .)
    ELSE            reduce using rule 204 (arit -> arit ORB arit .)
    POR             shift and go to state 124
    DIVISION        shift and go to state 125
    MAS             shift and go to state 126
    MENOS           shift and go to state 127
    MODULO          shift and go to state 128
    ANDB            shift and go to state 129
    SHIFTI          shift and go to state 130
    SHIFTD          shift and go to state 131

  ! POR             [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! DIVISION        [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! MODULO          [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 204 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 132 ]
  ! ORB             [ shift and go to state 133 ]


state 222

    (138) llamada_funcion -> CALL ID PARA params PARC PTCOMA .

    error           reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    USE             reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ALTER           reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    $end            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    END             reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ID              reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    IF              reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 138 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)


state 223

    (51) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    error           reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CREATE          reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SELECT          reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CALL            reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 51 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 224

    (121) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 291


state 225

    (123) usuariosDB -> ID .

    PTCOMA          reduce using rule 123 (usuariosDB -> ID .)


state 226

    (122) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 292


state 227

    (124) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 124 (usuariosDB -> CURRENT_USER .)


state 228

    (125) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 125 (usuariosDB -> SESSION_USER .)


state 229

    (126) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 126 (usuariosDB -> CADENA .)


state 230

    (176) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 293


state 231

    (177) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 294


state 232

    (179) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 295


state 233

    (178) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 296


state 234

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (163) tipo -> . INTEGER
    (164) tipo -> . SMALLINT
    (165) tipo -> . BIGINT
    (166) tipo -> . DECIMAL
    (167) tipo -> . NUMERIC
    (168) tipo -> . REAL
    (169) tipo -> . CHAR
    (170) tipo -> . DOUBLE
    (171) tipo -> . PRECISION
    (172) tipo -> . MONEY
    (173) tipo -> . FLOAT
    (174) tipo -> . BOOLEAN
    (175) tipo -> . VOID
    (176) tipo -> . CHAR PARA ENTERO PARC
    (177) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (178) tipo -> . VARCHAR PARA ENTERO PARC
    (179) tipo -> . CHARACTER PARA ENTERO PARC
    (180) tipo -> . TEXT
    (181) tipo -> . TIME
    (182) tipo -> . TIMESTAMP
    (183) tipo -> . DATE

    INTEGER         shift and go to state 143
    SMALLINT        shift and go to state 144
    BIGINT          shift and go to state 145
    DECIMAL         shift and go to state 146
    NUMERIC         shift and go to state 147
    REAL            shift and go to state 148
    CHAR            shift and go to state 149
    DOUBLE          shift and go to state 150
    PRECISION       shift and go to state 151
    MONEY           shift and go to state 152
    FLOAT           shift and go to state 153
    BOOLEAN         shift and go to state 154
    VOID            shift and go to state 155
    CHARACTER       shift and go to state 156
    VARCHAR         shift and go to state 157
    TEXT            shift and go to state 158
    TIME            shift and go to state 159
    TIMESTAMP       shift and go to state 160
    DATE            shift and go to state 161

    tipo                           shift and go to state 297

state 235

    (142) parametros -> parametros COMA parametro .

    PARC            reduce using rule 142 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 142 (parametros -> parametros COMA parametro .)


state 236

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> parametros . COMA parametro

    PARC            shift and go to state 298
    COMA            shift and go to state 163


state 237

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (142) parametros -> parametros . COMA parametro

    PARC            shift and go to state 299
    COMA            shift and go to state 163


state 238

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 239

    (36) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 240

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 300


state 241

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (163) tipo -> . INTEGER
    (164) tipo -> . SMALLINT
    (165) tipo -> . BIGINT
    (166) tipo -> . DECIMAL
    (167) tipo -> . NUMERIC
    (168) tipo -> . REAL
    (169) tipo -> . CHAR
    (170) tipo -> . DOUBLE
    (171) tipo -> . PRECISION
    (172) tipo -> . MONEY
    (173) tipo -> . FLOAT
    (174) tipo -> . BOOLEAN
    (175) tipo -> . VOID
    (176) tipo -> . CHAR PARA ENTERO PARC
    (177) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (178) tipo -> . VARCHAR PARA ENTERO PARC
    (179) tipo -> . CHARACTER PARA ENTERO PARC
    (180) tipo -> . TEXT
    (181) tipo -> . TIME
    (182) tipo -> . TIMESTAMP
    (183) tipo -> . DATE

    INTEGER         shift and go to state 143
    SMALLINT        shift and go to state 144
    BIGINT          shift and go to state 145
    DECIMAL         shift and go to state 146
    NUMERIC         shift and go to state 147
    REAL            shift and go to state 148
    CHAR            shift and go to state 149
    DOUBLE          shift and go to state 150
    PRECISION       shift and go to state 151
    MONEY           shift and go to state 152
    FLOAT           shift and go to state 153
    BOOLEAN         shift and go to state 154
    VOID            shift and go to state 155
    CHARACTER       shift and go to state 156
    VARCHAR         shift and go to state 157
    TEXT            shift and go to state 158
    TIME            shift and go to state 159
    TIMESTAMP       shift and go to state 160
    DATE            shift and go to state 161

    tipo                           shift and go to state 301

state 242

    (42) createDB_dosParam -> OWNER IGUAL string_type MODE . ENTERO
    (45) createDB_dosParam -> OWNER IGUAL string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 303
    IGUAL           shift and go to state 302


state 243

    (39) createDB_dosParam -> OWNER string_type MODE ENTERO .

    PTCOMA          reduce using rule 39 (createDB_dosParam -> OWNER string_type MODE ENTERO .)


state 244

    (41) createDB_dosParam -> OWNER string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 304


state 245

    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (46) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 306
    IGUAL           shift and go to state 305


state 246

    (40) createDB_dosParam -> MODE ENTERO OWNER string_type .

    PTCOMA          reduce using rule 40 (createDB_dosParam -> MODE ENTERO OWNER string_type .)


state 247

    (43) createDB_dosParam -> MODE ENTERO OWNER IGUAL . string_type
    (127) string_type -> . CADENA
    (128) string_type -> . ID

    CADENA          shift and go to state 101
    ID              shift and go to state 102

    string_type                    shift and go to state 307

state 248

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 249

    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 308


state 250

    (37) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 309


state 251

    (61) cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .
    (71) createTable_options -> createTable_options . cT_options
    (73) cT_options -> . N_null
    (74) cT_options -> . C_unique
    (75) cT_options -> . llave
    (76) cT_options -> . O_DEFAULT
    (77) cT_options -> . C_check
    (78) N_null -> . NOT NULL
    (79) N_null -> . NULL
    (80) C_unique -> . UNIQUE
    (81) C_unique -> . CONSTRAINT ID UNIQUE
    (82) llave -> . PRIMARY KEY
    (83) llave -> . FOREIGN KEY
    (84) O_DEFAULT -> . DEFAULT expresion_dato_default
    (85) C_check -> . CONSTRAINT ID CHECK PARA expresion_logica PARC
    (86) C_check -> . CHECK PARA expresion_logica PARC

    PARC            reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    COMA            reduce using rule 61 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    NOT             shift and go to state 258
    NULL            shift and go to state 259
    UNIQUE          shift and go to state 260
    CONSTRAINT      shift and go to state 261
    PRIMARY         shift and go to state 262
    FOREIGN         shift and go to state 263
    DEFAULT         shift and go to state 264
    CHECK           shift and go to state 265

    cT_options                     shift and go to state 310
    N_null                         shift and go to state 253
    C_unique                       shift and go to state 254
    llave                          shift and go to state 255
    O_DEFAULT                      shift and go to state 256
    C_check                        shift and go to state 257

state 252

    (72) createTable_options -> cT_options .

    NOT             reduce using rule 72 (createTable_options -> cT_options .)
    NULL            reduce using rule 72 (createTable_options -> cT_options .)
    UNIQUE          reduce using rule 72 (createTable_options -> cT_options .)
    CONSTRAINT      reduce using rule 72 (createTable_options -> cT_options .)
    PRIMARY         reduce using rule 72 (createTable_options -> cT_options .)
    FOREIGN         reduce using rule 72 (createTable_options -> cT_options .)
    DEFAULT         reduce using rule 72 (createTable_options -> cT_options .)
    CHECK           reduce using rule 72 (createTable_options -> cT_options .)
    PARC            reduce using rule 72 (createTable_options -> cT_options .)
    COMA            reduce using rule 72 (createTable_options -> cT_options .)


state 253

    (73) cT_options -> N_null .

    NOT             reduce using rule 73 (cT_options -> N_null .)
    NULL            reduce using rule 73 (cT_options -> N_null .)
    UNIQUE          reduce using rule 73 (cT_options -> N_null .)
    CONSTRAINT      reduce using rule 73 (cT_options -> N_null .)
    PRIMARY         reduce using rule 73 (cT_options -> N_null .)
    FOREIGN         reduce using rule 73 (cT_options -> N_null .)
    DEFAULT         reduce using rule 73 (cT_options -> N_null .)
    CHECK           reduce using rule 73 (cT_options -> N_null .)
    PARC            reduce using rule 73 (cT_options -> N_null .)
    COMA            reduce using rule 73 (cT_options -> N_null .)


state 254

    (74) cT_options -> C_unique .

    NOT             reduce using rule 74 (cT_options -> C_unique .)
    NULL            reduce using rule 74 (cT_options -> C_unique .)
    UNIQUE          reduce using rule 74 (cT_options -> C_unique .)
    CONSTRAINT      reduce using rule 74 (cT_options -> C_unique .)
    PRIMARY         reduce using rule 74 (cT_options -> C_unique .)
    FOREIGN         reduce using rule 74 (cT_options -> C_unique .)
    DEFAULT         reduce using rule 74 (cT_options -> C_unique .)
    CHECK           reduce using rule 74 (cT_options -> C_unique .)
    PARC            reduce using rule 74 (cT_options -> C_unique .)
    COMA            reduce using rule 74 (cT_options -> C_unique .)


state 255

    (75) cT_options -> llave .

    NOT             reduce using rule 75 (cT_options -> llave .)
    NULL            reduce using rule 75 (cT_options -> llave .)
    UNIQUE          reduce using rule 75 (cT_options -> llave .)
    CONSTRAINT      reduce using rule 75 (cT_options -> llave .)
    PRIMARY         reduce using rule 75 (cT_options -> llave .)
    FOREIGN         reduce using rule 75 (cT_options -> llave .)
    DEFAULT         reduce using rule 75 (cT_options -> llave .)
    CHECK           reduce using rule 75 (cT_options -> llave .)
    PARC            reduce using rule 75 (cT_options -> llave .)
    COMA            reduce using rule 75 (cT_options -> llave .)


state 256

    (76) cT_options -> O_DEFAULT .

    NOT             reduce using rule 76 (cT_options -> O_DEFAULT .)
    NULL            reduce using rule 76 (cT_options -> O_DEFAULT .)
    UNIQUE          reduce using rule 76 (cT_options -> O_DEFAULT .)
    CONSTRAINT      reduce using rule 76 (cT_options -> O_DEFAULT .)
    PRIMARY         reduce using rule 76 (cT_options -> O_DEFAULT .)
    FOREIGN         reduce using rule 76 (cT_options -> O_DEFAULT .)
    DEFAULT         reduce using rule 76 (cT_options -> O_DEFAULT .)
    CHECK           reduce using rule 76 (cT_options -> O_DEFAULT .)
    PARC            reduce using rule 76 (cT_options -> O_DEFAULT .)
    COMA            reduce using rule 76 (cT_options -> O_DEFAULT .)


state 257

    (77) cT_options -> C_check .

    NOT             reduce using rule 77 (cT_options -> C_check .)
    NULL            reduce using rule 77 (cT_options -> C_check .)
    UNIQUE          reduce using rule 77 (cT_options -> C_check .)
    CONSTRAINT      reduce using rule 77 (cT_options -> C_check .)
    PRIMARY         reduce using rule 77 (cT_options -> C_check .)
    FOREIGN         reduce using rule 77 (cT_options -> C_check .)
    DEFAULT         reduce using rule 77 (cT_options -> C_check .)
    CHECK           reduce using rule 77 (cT_options -> C_check .)
    PARC            reduce using rule 77 (cT_options -> C_check .)
    COMA            reduce using rule 77 (cT_options -> C_check .)


state 258

    (78) N_null -> NOT . NULL

    NULL            shift and go to state 311


state 259

    (79) N_null -> NULL .

    NOT             reduce using rule 79 (N_null -> NULL .)
    NULL            reduce using rule 79 (N_null -> NULL .)
    UNIQUE          reduce using rule 79 (N_null -> NULL .)
    CONSTRAINT      reduce using rule 79 (N_null -> NULL .)
    PRIMARY         reduce using rule 79 (N_null -> NULL .)
    FOREIGN         reduce using rule 79 (N_null -> NULL .)
    DEFAULT         reduce using rule 79 (N_null -> NULL .)
    CHECK           reduce using rule 79 (N_null -> NULL .)
    PARC            reduce using rule 79 (N_null -> NULL .)
    COMA            reduce using rule 79 (N_null -> NULL .)


state 260

    (80) C_unique -> UNIQUE .

    NOT             reduce using rule 80 (C_unique -> UNIQUE .)
    NULL            reduce using rule 80 (C_unique -> UNIQUE .)
    UNIQUE          reduce using rule 80 (C_unique -> UNIQUE .)
    CONSTRAINT      reduce using rule 80 (C_unique -> UNIQUE .)
    PRIMARY         reduce using rule 80 (C_unique -> UNIQUE .)
    FOREIGN         reduce using rule 80 (C_unique -> UNIQUE .)
    DEFAULT         reduce using rule 80 (C_unique -> UNIQUE .)
    CHECK           reduce using rule 80 (C_unique -> UNIQUE .)
    PARC            reduce using rule 80 (C_unique -> UNIQUE .)
    COMA            reduce using rule 80 (C_unique -> UNIQUE .)


state 261

    (81) C_unique -> CONSTRAINT . ID UNIQUE
    (85) C_check -> CONSTRAINT . ID CHECK PARA expresion_logica PARC

    ID              shift and go to state 312


state 262

    (82) llave -> PRIMARY . KEY

    KEY             shift and go to state 313


state 263

    (83) llave -> FOREIGN . KEY

    KEY             shift and go to state 314


state 264

    (84) O_DEFAULT -> DEFAULT . expresion_dato_default
    (87) expresion_dato_default -> . ENTERO
    (88) expresion_dato_default -> . FLOTANTE
    (89) expresion_dato_default -> . CADENA

    ENTERO          shift and go to state 316
    FLOTANTE        shift and go to state 317
    CADENA          shift and go to state 318

    expresion_dato_default         shift and go to state 315

state 265

    (86) C_check -> CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 319


state 266

    (96) TIPO_DATO_DEF -> DECIMAL PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 320


state 267

    (97) TIPO_DATO_DEF -> NUMERIC PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 321


state 268

    (100) TIPO_DATO_DEF -> DOUBLE PRECISION .

    NOT             reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    NULL            reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CHECK           reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PARC            reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    COMA            reduce using rule 100 (TIPO_DATO_DEF -> DOUBLE PRECISION .)


state 269

    (101) TIPO_DATO_DEF -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 322


state 270

    (112) extract_time -> YEAR .

    TO              reduce using rule 112 (extract_time -> YEAR .)
    NOT             reduce using rule 112 (extract_time -> YEAR .)
    NULL            reduce using rule 112 (extract_time -> YEAR .)
    UNIQUE          reduce using rule 112 (extract_time -> YEAR .)
    CONSTRAINT      reduce using rule 112 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 112 (extract_time -> YEAR .)
    FOREIGN         reduce using rule 112 (extract_time -> YEAR .)
    DEFAULT         reduce using rule 112 (extract_time -> YEAR .)
    CHECK           reduce using rule 112 (extract_time -> YEAR .)
    PARC            reduce using rule 112 (extract_time -> YEAR .)
    COMA            reduce using rule 112 (extract_time -> YEAR .)


state 271

    (113) extract_time -> DAY .

    TO              reduce using rule 113 (extract_time -> DAY .)
    NOT             reduce using rule 113 (extract_time -> DAY .)
    NULL            reduce using rule 113 (extract_time -> DAY .)
    UNIQUE          reduce using rule 113 (extract_time -> DAY .)
    CONSTRAINT      reduce using rule 113 (extract_time -> DAY .)
    PRIMARY         reduce using rule 113 (extract_time -> DAY .)
    FOREIGN         reduce using rule 113 (extract_time -> DAY .)
    DEFAULT         reduce using rule 113 (extract_time -> DAY .)
    CHECK           reduce using rule 113 (extract_time -> DAY .)
    PARC            reduce using rule 113 (extract_time -> DAY .)
    COMA            reduce using rule 113 (extract_time -> DAY .)


state 272

    (114) extract_time -> MONTH .

    TO              reduce using rule 114 (extract_time -> MONTH .)
    NOT             reduce using rule 114 (extract_time -> MONTH .)
    NULL            reduce using rule 114 (extract_time -> MONTH .)
    UNIQUE          reduce using rule 114 (extract_time -> MONTH .)
    CONSTRAINT      reduce using rule 114 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 114 (extract_time -> MONTH .)
    FOREIGN         reduce using rule 114 (extract_time -> MONTH .)
    DEFAULT         reduce using rule 114 (extract_time -> MONTH .)
    CHECK           reduce using rule 114 (extract_time -> MONTH .)
    PARC            reduce using rule 114 (extract_time -> MONTH .)
    COMA            reduce using rule 114 (extract_time -> MONTH .)


state 273

    (115) extract_time -> HOUR .

    TO              reduce using rule 115 (extract_time -> HOUR .)
    NOT             reduce using rule 115 (extract_time -> HOUR .)
    NULL            reduce using rule 115 (extract_time -> HOUR .)
    UNIQUE          reduce using rule 115 (extract_time -> HOUR .)
    CONSTRAINT      reduce using rule 115 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 115 (extract_time -> HOUR .)
    FOREIGN         reduce using rule 115 (extract_time -> HOUR .)
    DEFAULT         reduce using rule 115 (extract_time -> HOUR .)
    CHECK           reduce using rule 115 (extract_time -> HOUR .)
    PARC            reduce using rule 115 (extract_time -> HOUR .)
    COMA            reduce using rule 115 (extract_time -> HOUR .)


state 274

    (116) extract_time -> MINUTE .

    TO              reduce using rule 116 (extract_time -> MINUTE .)
    NOT             reduce using rule 116 (extract_time -> MINUTE .)
    NULL            reduce using rule 116 (extract_time -> MINUTE .)
    UNIQUE          reduce using rule 116 (extract_time -> MINUTE .)
    CONSTRAINT      reduce using rule 116 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 116 (extract_time -> MINUTE .)
    FOREIGN         reduce using rule 116 (extract_time -> MINUTE .)
    DEFAULT         reduce using rule 116 (extract_time -> MINUTE .)
    CHECK           reduce using rule 116 (extract_time -> MINUTE .)
    PARC            reduce using rule 116 (extract_time -> MINUTE .)
    COMA            reduce using rule 116 (extract_time -> MINUTE .)


state 275

    (117) extract_time -> SECOND .

    TO              reduce using rule 117 (extract_time -> SECOND .)
    NOT             reduce using rule 117 (extract_time -> SECOND .)
    NULL            reduce using rule 117 (extract_time -> SECOND .)
    UNIQUE          reduce using rule 117 (extract_time -> SECOND .)
    CONSTRAINT      reduce using rule 117 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 117 (extract_time -> SECOND .)
    FOREIGN         reduce using rule 117 (extract_time -> SECOND .)
    DEFAULT         reduce using rule 117 (extract_time -> SECOND .)
    CHECK           reduce using rule 117 (extract_time -> SECOND .)
    PARC            reduce using rule 117 (extract_time -> SECOND .)
    COMA            reduce using rule 117 (extract_time -> SECOND .)


state 276

    (106) TIPO_DATO_DEF -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 323


state 277

    (109) TIPO_DATO_DEF -> CHARACTER PARA . ENTERO PARC
    (111) TIPO_DATO_DEF -> CHARACTER PARA . PARC

    ENTERO          shift and go to state 324
    PARC            shift and go to state 325


state 278

    (107) TIPO_DATO_DEF -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 326


state 279

    (108) TIPO_DATO_DEF -> CHAR PARA . ENTERO PARC
    (110) TIPO_DATO_DEF -> CHAR PARA . PARC

    ENTERO          shift and go to state 327
    PARC            shift and go to state 328


state 280

    (56) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .

    error           reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CREATE          reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SELECT          reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CALL            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SHOW            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    USE             reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    DROP            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    ALTER           reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    $end            reduce using rule 56 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)


state 281

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS . PARA ID PARC PTCOMA

    PARA            shift and go to state 329


state 282

    (58) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PARC            reduce using rule 58 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 58 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 283

    (62) cuerpo_createTable -> PRIMARY KEY PARA . campos_c PARC
    (66) campos_c -> . campos_c COMA ID
    (67) campos_c -> . ID

    ID              shift and go to state 286

    campos_c                       shift and go to state 330

state 284

    (63) cuerpo_createTable -> FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC

    ID              shift and go to state 331


state 285

    (64) cuerpo_createTable -> UNIQUE PARA campos_c . PARC
    (66) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 332
    COMA            shift and go to state 333


state 286

    (67) campos_c -> ID .

    PARC            reduce using rule 67 (campos_c -> ID .)
    COMA            reduce using rule 67 (campos_c -> ID .)


state 287

    (65) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PARC            reduce using rule 65 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 65 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 288

    (68) constraint_esp -> CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 334


state 289

    (69) constraint_esp -> UNIQUE . PARA campos_c PARC

    PARA            shift and go to state 335


state 290

    (70) constraint_esp -> FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC

    KEY             shift and go to state 336


state 291

    (121) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    error           reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CREATE          reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SELECT          reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CALL            reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 121 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 292

    (122) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    error           reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CREATE          reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SELECT          reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CALL            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 122 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 293

    (176) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 337


state 294

    (177) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 338


state 295

    (179) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 339


state 296

    (178) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 340


state 297

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 341


state 298

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 342


state 299

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 343


state 300

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (47) createDB_unParam -> . OWNER IGUAL string_type
    (48) createDB_unParam -> . MODE IGUAL ENTERO
    (49) createDB_unParam -> . OWNER string_type
    (50) createDB_unParam -> . MODE ENTERO
    (39) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (41) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (43) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (44) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (45) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 344
    OWNER           shift and go to state 61
    MODE            shift and go to state 62

    createDB_unParam               shift and go to state 345
    createDB_dosParam              shift and go to state 346

state 301

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 347


state 302

    (45) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 348


state 303

    (42) createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .)


state 304

    (41) createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .)


state 305

    (46) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 349


state 306

    (44) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 307

    (43) createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .)


state 308

    (33) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 309

    (37) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 37 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 310

    (71) createTable_options -> createTable_options cT_options .

    NOT             reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    NULL            reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    UNIQUE          reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    CONSTRAINT      reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    PRIMARY         reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    FOREIGN         reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    DEFAULT         reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    CHECK           reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    PARC            reduce using rule 71 (createTable_options -> createTable_options cT_options .)
    COMA            reduce using rule 71 (createTable_options -> createTable_options cT_options .)


state 311

    (78) N_null -> NOT NULL .

    NOT             reduce using rule 78 (N_null -> NOT NULL .)
    NULL            reduce using rule 78 (N_null -> NOT NULL .)
    UNIQUE          reduce using rule 78 (N_null -> NOT NULL .)
    CONSTRAINT      reduce using rule 78 (N_null -> NOT NULL .)
    PRIMARY         reduce using rule 78 (N_null -> NOT NULL .)
    FOREIGN         reduce using rule 78 (N_null -> NOT NULL .)
    DEFAULT         reduce using rule 78 (N_null -> NOT NULL .)
    CHECK           reduce using rule 78 (N_null -> NOT NULL .)
    PARC            reduce using rule 78 (N_null -> NOT NULL .)
    COMA            reduce using rule 78 (N_null -> NOT NULL .)


state 312

    (81) C_unique -> CONSTRAINT ID . UNIQUE
    (85) C_check -> CONSTRAINT ID . CHECK PARA expresion_logica PARC

    UNIQUE          shift and go to state 350
    CHECK           shift and go to state 351


state 313

    (82) llave -> PRIMARY KEY .

    NOT             reduce using rule 82 (llave -> PRIMARY KEY .)
    NULL            reduce using rule 82 (llave -> PRIMARY KEY .)
    UNIQUE          reduce using rule 82 (llave -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 82 (llave -> PRIMARY KEY .)
    PRIMARY         reduce using rule 82 (llave -> PRIMARY KEY .)
    FOREIGN         reduce using rule 82 (llave -> PRIMARY KEY .)
    DEFAULT         reduce using rule 82 (llave -> PRIMARY KEY .)
    CHECK           reduce using rule 82 (llave -> PRIMARY KEY .)
    PARC            reduce using rule 82 (llave -> PRIMARY KEY .)
    COMA            reduce using rule 82 (llave -> PRIMARY KEY .)


state 314

    (83) llave -> FOREIGN KEY .

    NOT             reduce using rule 83 (llave -> FOREIGN KEY .)
    NULL            reduce using rule 83 (llave -> FOREIGN KEY .)
    UNIQUE          reduce using rule 83 (llave -> FOREIGN KEY .)
    CONSTRAINT      reduce using rule 83 (llave -> FOREIGN KEY .)
    PRIMARY         reduce using rule 83 (llave -> FOREIGN KEY .)
    FOREIGN         reduce using rule 83 (llave -> FOREIGN KEY .)
    DEFAULT         reduce using rule 83 (llave -> FOREIGN KEY .)
    CHECK           reduce using rule 83 (llave -> FOREIGN KEY .)
    PARC            reduce using rule 83 (llave -> FOREIGN KEY .)
    COMA            reduce using rule 83 (llave -> FOREIGN KEY .)


state 315

    (84) O_DEFAULT -> DEFAULT expresion_dato_default .

    NOT             reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    NULL            reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    UNIQUE          reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CONSTRAINT      reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PRIMARY         reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    FOREIGN         reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    DEFAULT         reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CHECK           reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PARC            reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    COMA            reduce using rule 84 (O_DEFAULT -> DEFAULT expresion_dato_default .)


state 316

    (87) expresion_dato_default -> ENTERO .

    NOT             reduce using rule 87 (expresion_dato_default -> ENTERO .)
    NULL            reduce using rule 87 (expresion_dato_default -> ENTERO .)
    UNIQUE          reduce using rule 87 (expresion_dato_default -> ENTERO .)
    CONSTRAINT      reduce using rule 87 (expresion_dato_default -> ENTERO .)
    PRIMARY         reduce using rule 87 (expresion_dato_default -> ENTERO .)
    FOREIGN         reduce using rule 87 (expresion_dato_default -> ENTERO .)
    DEFAULT         reduce using rule 87 (expresion_dato_default -> ENTERO .)
    CHECK           reduce using rule 87 (expresion_dato_default -> ENTERO .)
    PARC            reduce using rule 87 (expresion_dato_default -> ENTERO .)
    COMA            reduce using rule 87 (expresion_dato_default -> ENTERO .)


state 317

    (88) expresion_dato_default -> FLOTANTE .

    NOT             reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    NULL            reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    UNIQUE          reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    CONSTRAINT      reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    PRIMARY         reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    FOREIGN         reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    DEFAULT         reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    CHECK           reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    PARC            reduce using rule 88 (expresion_dato_default -> FLOTANTE .)
    COMA            reduce using rule 88 (expresion_dato_default -> FLOTANTE .)


state 318

    (89) expresion_dato_default -> CADENA .

    NOT             reduce using rule 89 (expresion_dato_default -> CADENA .)
    NULL            reduce using rule 89 (expresion_dato_default -> CADENA .)
    UNIQUE          reduce using rule 89 (expresion_dato_default -> CADENA .)
    CONSTRAINT      reduce using rule 89 (expresion_dato_default -> CADENA .)
    PRIMARY         reduce using rule 89 (expresion_dato_default -> CADENA .)
    FOREIGN         reduce using rule 89 (expresion_dato_default -> CADENA .)
    DEFAULT         reduce using rule 89 (expresion_dato_default -> CADENA .)
    CHECK           reduce using rule 89 (expresion_dato_default -> CADENA .)
    PARC            reduce using rule 89 (expresion_dato_default -> CADENA .)
    COMA            reduce using rule 89 (expresion_dato_default -> CADENA .)


state 319

    (86) C_check -> CHECK PARA . expresion_logica PARC
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_logica               shift and go to state 353
    expresion_relacional           shift and go to state 354
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 320

    (96) TIPO_DATO_DEF -> DECIMAL PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 373


state 321

    (97) TIPO_DATO_DEF -> NUMERIC PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 374


state 322

    (101) TIPO_DATO_DEF -> INTERVAL extract_time TO . extract_time
    (112) extract_time -> . YEAR
    (113) extract_time -> . DAY
    (114) extract_time -> . MONTH
    (115) extract_time -> . HOUR
    (116) extract_time -> . MINUTE
    (117) extract_time -> . SECOND

    YEAR            shift and go to state 270
    DAY             shift and go to state 271
    MONTH           shift and go to state 272
    HOUR            shift and go to state 273
    MINUTE          shift and go to state 274
    SECOND          shift and go to state 275

    extract_time                   shift and go to state 375

state 323

    (106) TIPO_DATO_DEF -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 376


state 324

    (109) TIPO_DATO_DEF -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 377


state 325

    (111) TIPO_DATO_DEF -> CHARACTER PARA PARC .

    NOT             reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    NULL            reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    UNIQUE          reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CONSTRAINT      reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PRIMARY         reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    FOREIGN         reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    DEFAULT         reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CHECK           reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PARC            reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    COMA            reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)


state 326

    (107) TIPO_DATO_DEF -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 378


state 327

    (108) TIPO_DATO_DEF -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 379


state 328

    (110) TIPO_DATO_DEF -> CHAR PARA PARC .

    NOT             reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    NULL            reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    UNIQUE          reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CONSTRAINT      reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PRIMARY         reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    FOREIGN         reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    DEFAULT         reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CHECK           reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PARC            reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    COMA            reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA PARC .)


state 329

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA . ID PARC PTCOMA

    ID              shift and go to state 380


state 330

    (62) cuerpo_createTable -> PRIMARY KEY PARA campos_c . PARC
    (66) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 381
    COMA            shift and go to state 333


state 331

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC

    PARC            shift and go to state 382


state 332

    (64) cuerpo_createTable -> UNIQUE PARA campos_c PARC .

    PARC            reduce using rule 64 (cuerpo_createTable -> UNIQUE PARA campos_c PARC .)
    COMA            reduce using rule 64 (cuerpo_createTable -> UNIQUE PARA campos_c PARC .)


state 333

    (66) campos_c -> campos_c COMA . ID

    ID              shift and go to state 383


state 334

    (68) constraint_esp -> CHECK PARA . expresion_logica PARC
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_logica               shift and go to state 384
    expresion_relacional           shift and go to state 354
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 335

    (69) constraint_esp -> UNIQUE PARA . campos_c PARC
    (66) campos_c -> . campos_c COMA ID
    (67) campos_c -> . ID

    ID              shift and go to state 286

    campos_c                       shift and go to state 385

state 336

    (70) constraint_esp -> FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC

    PARA            shift and go to state 386


state 337

    (176) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 176 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 176 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 176 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 176 (tipo -> CHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 176 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 176 (tipo -> CHAR PARA ENTERO PARC .)


state 338

    (177) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 387


state 339

    (179) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 179 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 179 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 179 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 179 (tipo -> CHARACTER PARA ENTERO PARC .)
    PTCOMA          reduce using rule 179 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 179 (tipo -> CHARACTER PARA ENTERO PARC .)


state 340

    (178) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 178 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 178 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 178 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 178 (tipo -> VARCHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 178 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 178 (tipo -> VARCHAR PARA ENTERO PARC .)


state 341

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 388


state 342

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (163) tipo -> . INTEGER
    (164) tipo -> . SMALLINT
    (165) tipo -> . BIGINT
    (166) tipo -> . DECIMAL
    (167) tipo -> . NUMERIC
    (168) tipo -> . REAL
    (169) tipo -> . CHAR
    (170) tipo -> . DOUBLE
    (171) tipo -> . PRECISION
    (172) tipo -> . MONEY
    (173) tipo -> . FLOAT
    (174) tipo -> . BOOLEAN
    (175) tipo -> . VOID
    (176) tipo -> . CHAR PARA ENTERO PARC
    (177) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (178) tipo -> . VARCHAR PARA ENTERO PARC
    (179) tipo -> . CHARACTER PARA ENTERO PARC
    (180) tipo -> . TEXT
    (181) tipo -> . TIME
    (182) tipo -> . TIMESTAMP
    (183) tipo -> . DATE

    INTEGER         shift and go to state 143
    SMALLINT        shift and go to state 144
    BIGINT          shift and go to state 145
    DECIMAL         shift and go to state 146
    NUMERIC         shift and go to state 147
    REAL            shift and go to state 148
    CHAR            shift and go to state 149
    DOUBLE          shift and go to state 150
    PRECISION       shift and go to state 151
    MONEY           shift and go to state 152
    FLOAT           shift and go to state 153
    BOOLEAN         shift and go to state 154
    VOID            shift and go to state 155
    CHARACTER       shift and go to state 156
    VARCHAR         shift and go to state 157
    TEXT            shift and go to state 158
    TIME            shift and go to state 159
    TIMESTAMP       shift and go to state 160
    DATE            shift and go to state 161

    tipo                           shift and go to state 389

state 343

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (163) tipo -> . INTEGER
    (164) tipo -> . SMALLINT
    (165) tipo -> . BIGINT
    (166) tipo -> . DECIMAL
    (167) tipo -> . NUMERIC
    (168) tipo -> . REAL
    (169) tipo -> . CHAR
    (170) tipo -> . DOUBLE
    (171) tipo -> . PRECISION
    (172) tipo -> . MONEY
    (173) tipo -> . FLOAT
    (174) tipo -> . BOOLEAN
    (175) tipo -> . VOID
    (176) tipo -> . CHAR PARA ENTERO PARC
    (177) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (178) tipo -> . VARCHAR PARA ENTERO PARC
    (179) tipo -> . CHARACTER PARA ENTERO PARC
    (180) tipo -> . TEXT
    (181) tipo -> . TIME
    (182) tipo -> . TIMESTAMP
    (183) tipo -> . DATE

    INTEGER         shift and go to state 143
    SMALLINT        shift and go to state 144
    BIGINT          shift and go to state 145
    DECIMAL         shift and go to state 146
    NUMERIC         shift and go to state 147
    REAL            shift and go to state 148
    CHAR            shift and go to state 149
    DOUBLE          shift and go to state 150
    PRECISION       shift and go to state 151
    MONEY           shift and go to state 152
    FLOAT           shift and go to state 153
    BOOLEAN         shift and go to state 154
    VOID            shift and go to state 155
    CHARACTER       shift and go to state 156
    VARCHAR         shift and go to state 157
    TEXT            shift and go to state 158
    TIME            shift and go to state 159
    TIMESTAMP       shift and go to state 160
    DATE            shift and go to state 161

    tipo                           shift and go to state 390

state 344

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 345

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 391


state 346

    (38) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 392


state 347

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 393


state 348

    (45) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 45 (createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .)


state 349

    (46) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 46 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 350

    (81) C_unique -> CONSTRAINT ID UNIQUE .

    NOT             reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    CHECK           reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    PARC            reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 81 (C_unique -> CONSTRAINT ID UNIQUE .)


state 351

    (85) C_check -> CONSTRAINT ID CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 394


state 352

    (230) expresion -> PARA . expresion_logica PARC
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_logica               shift and go to state 395
    expresion_relacional           shift and go to state 354
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 353

    (86) C_check -> CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 396


state 354

    (242) expresion_logica -> expresion_relacional . AND expresion_logica
    (243) expresion_logica -> expresion_relacional . OR expresion_logica
    (245) expresion_logica -> expresion_relacional .

    AND             shift and go to state 397
    OR              shift and go to state 398
    PARC            reduce using rule 245 (expresion_logica -> expresion_relacional .)


state 355

    (244) expresion_logica -> NOT . expresion_logica
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_logica               shift and go to state 399
    expresion_relacional           shift and go to state 354
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 356

    (233) expresion_relacional -> expresion . MAYOR expresion
    (234) expresion_relacional -> expresion . MENOR expresion
    (235) expresion_relacional -> expresion . MAYORIGUAL expresion
    (236) expresion_relacional -> expresion . MENORIGUAL expresion
    (237) expresion_relacional -> expresion . IGUALIGUAL expresion
    (238) expresion_relacional -> expresion . IGUAL expresion
    (239) expresion_relacional -> expresion . NOIG expresion
    (240) expresion_relacional -> expresion . NOTIGUAL expresion
    (241) expresion_relacional -> expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           shift and go to state 400
    MENOR           shift and go to state 401
    MAYORIGUAL      shift and go to state 402
    MENORIGUAL      shift and go to state 403
    IGUALIGUAL      shift and go to state 404
    IGUAL           shift and go to state 405
    NOIG            shift and go to state 406
    NOTIGUAL        shift and go to state 407
    AND             reduce using rule 241 (expresion_relacional -> expresion .)
    OR              reduce using rule 241 (expresion_relacional -> expresion .)
    PARC            reduce using rule 241 (expresion_relacional -> expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 357

    (250) expresion_dato -> MENOS . ENTERO

    ENTERO          shift and go to state 418


state 358

    (229) expresion -> D_OR . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 419
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 359

    (227) expresion -> NOTB . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 420
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 360

    (228) expresion -> ORB . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 421
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 361

    (231) expresion -> TRUE .

    MAYOR           reduce using rule 231 (expresion -> TRUE .)
    MENOR           reduce using rule 231 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 231 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 231 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 231 (expresion -> TRUE .)
    IGUAL           reduce using rule 231 (expresion -> TRUE .)
    NOIG            reduce using rule 231 (expresion -> TRUE .)
    NOTIGUAL        reduce using rule 231 (expresion -> TRUE .)
    MAS             reduce using rule 231 (expresion -> TRUE .)
    MENOS           reduce using rule 231 (expresion -> TRUE .)
    POR             reduce using rule 231 (expresion -> TRUE .)
    DIV             reduce using rule 231 (expresion -> TRUE .)
    MODULO          reduce using rule 231 (expresion -> TRUE .)
    SHIFTD          reduce using rule 231 (expresion -> TRUE .)
    SHIFTI          reduce using rule 231 (expresion -> TRUE .)
    HASHTAG         reduce using rule 231 (expresion -> TRUE .)
    ANDB            reduce using rule 231 (expresion -> TRUE .)
    D_OR            reduce using rule 231 (expresion -> TRUE .)
    AND             reduce using rule 231 (expresion -> TRUE .)
    OR              reduce using rule 231 (expresion -> TRUE .)
    PARC            reduce using rule 231 (expresion -> TRUE .)


state 362

    (232) expresion -> FALSE .

    MAYOR           reduce using rule 232 (expresion -> FALSE .)
    MENOR           reduce using rule 232 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 232 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 232 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 232 (expresion -> FALSE .)
    IGUAL           reduce using rule 232 (expresion -> FALSE .)
    NOIG            reduce using rule 232 (expresion -> FALSE .)
    NOTIGUAL        reduce using rule 232 (expresion -> FALSE .)
    MAS             reduce using rule 232 (expresion -> FALSE .)
    MENOS           reduce using rule 232 (expresion -> FALSE .)
    POR             reduce using rule 232 (expresion -> FALSE .)
    DIV             reduce using rule 232 (expresion -> FALSE .)
    MODULO          reduce using rule 232 (expresion -> FALSE .)
    SHIFTD          reduce using rule 232 (expresion -> FALSE .)
    SHIFTI          reduce using rule 232 (expresion -> FALSE .)
    HASHTAG         reduce using rule 232 (expresion -> FALSE .)
    ANDB            reduce using rule 232 (expresion -> FALSE .)
    D_OR            reduce using rule 232 (expresion -> FALSE .)
    AND             reduce using rule 232 (expresion -> FALSE .)
    OR              reduce using rule 232 (expresion -> FALSE .)
    PARC            reduce using rule 232 (expresion -> FALSE .)


state 363

    (246) expresion -> expresion_dato .

    MAYOR           reduce using rule 246 (expresion -> expresion_dato .)
    MENOR           reduce using rule 246 (expresion -> expresion_dato .)
    MAYORIGUAL      reduce using rule 246 (expresion -> expresion_dato .)
    MENORIGUAL      reduce using rule 246 (expresion -> expresion_dato .)
    IGUALIGUAL      reduce using rule 246 (expresion -> expresion_dato .)
    IGUAL           reduce using rule 246 (expresion -> expresion_dato .)
    NOIG            reduce using rule 246 (expresion -> expresion_dato .)
    NOTIGUAL        reduce using rule 246 (expresion -> expresion_dato .)
    MAS             reduce using rule 246 (expresion -> expresion_dato .)
    MENOS           reduce using rule 246 (expresion -> expresion_dato .)
    POR             reduce using rule 246 (expresion -> expresion_dato .)
    DIV             reduce using rule 246 (expresion -> expresion_dato .)
    MODULO          reduce using rule 246 (expresion -> expresion_dato .)
    SHIFTD          reduce using rule 246 (expresion -> expresion_dato .)
    SHIFTI          reduce using rule 246 (expresion -> expresion_dato .)
    HASHTAG         reduce using rule 246 (expresion -> expresion_dato .)
    ANDB            reduce using rule 246 (expresion -> expresion_dato .)
    D_OR            reduce using rule 246 (expresion -> expresion_dato .)
    AND             reduce using rule 246 (expresion -> expresion_dato .)
    OR              reduce using rule 246 (expresion -> expresion_dato .)
    PARC            reduce using rule 246 (expresion -> expresion_dato .)


state 364

    (247) expresion -> sum_insrt .

    MAYOR           reduce using rule 247 (expresion -> sum_insrt .)
    MENOR           reduce using rule 247 (expresion -> sum_insrt .)
    MAYORIGUAL      reduce using rule 247 (expresion -> sum_insrt .)
    MENORIGUAL      reduce using rule 247 (expresion -> sum_insrt .)
    IGUALIGUAL      reduce using rule 247 (expresion -> sum_insrt .)
    IGUAL           reduce using rule 247 (expresion -> sum_insrt .)
    NOIG            reduce using rule 247 (expresion -> sum_insrt .)
    NOTIGUAL        reduce using rule 247 (expresion -> sum_insrt .)
    MAS             reduce using rule 247 (expresion -> sum_insrt .)
    MENOS           reduce using rule 247 (expresion -> sum_insrt .)
    POR             reduce using rule 247 (expresion -> sum_insrt .)
    DIV             reduce using rule 247 (expresion -> sum_insrt .)
    MODULO          reduce using rule 247 (expresion -> sum_insrt .)
    SHIFTD          reduce using rule 247 (expresion -> sum_insrt .)
    SHIFTI          reduce using rule 247 (expresion -> sum_insrt .)
    HASHTAG         reduce using rule 247 (expresion -> sum_insrt .)
    ANDB            reduce using rule 247 (expresion -> sum_insrt .)
    D_OR            reduce using rule 247 (expresion -> sum_insrt .)
    AND             reduce using rule 247 (expresion -> sum_insrt .)
    OR              reduce using rule 247 (expresion -> sum_insrt .)
    PARC            reduce using rule 247 (expresion -> sum_insrt .)


state 365

    (248) expresion -> count_insrt .

    MAYOR           reduce using rule 248 (expresion -> count_insrt .)
    MENOR           reduce using rule 248 (expresion -> count_insrt .)
    MAYORIGUAL      reduce using rule 248 (expresion -> count_insrt .)
    MENORIGUAL      reduce using rule 248 (expresion -> count_insrt .)
    IGUALIGUAL      reduce using rule 248 (expresion -> count_insrt .)
    IGUAL           reduce using rule 248 (expresion -> count_insrt .)
    NOIG            reduce using rule 248 (expresion -> count_insrt .)
    NOTIGUAL        reduce using rule 248 (expresion -> count_insrt .)
    MAS             reduce using rule 248 (expresion -> count_insrt .)
    MENOS           reduce using rule 248 (expresion -> count_insrt .)
    POR             reduce using rule 248 (expresion -> count_insrt .)
    DIV             reduce using rule 248 (expresion -> count_insrt .)
    MODULO          reduce using rule 248 (expresion -> count_insrt .)
    SHIFTD          reduce using rule 248 (expresion -> count_insrt .)
    SHIFTI          reduce using rule 248 (expresion -> count_insrt .)
    HASHTAG         reduce using rule 248 (expresion -> count_insrt .)
    ANDB            reduce using rule 248 (expresion -> count_insrt .)
    D_OR            reduce using rule 248 (expresion -> count_insrt .)
    AND             reduce using rule 248 (expresion -> count_insrt .)
    OR              reduce using rule 248 (expresion -> count_insrt .)
    PARC            reduce using rule 248 (expresion -> count_insrt .)


state 366

    (249) expresion_dato -> string_type .

    MAYOR           reduce using rule 249 (expresion_dato -> string_type .)
    MENOR           reduce using rule 249 (expresion_dato -> string_type .)
    MAYORIGUAL      reduce using rule 249 (expresion_dato -> string_type .)
    MENORIGUAL      reduce using rule 249 (expresion_dato -> string_type .)
    IGUALIGUAL      reduce using rule 249 (expresion_dato -> string_type .)
    IGUAL           reduce using rule 249 (expresion_dato -> string_type .)
    NOIG            reduce using rule 249 (expresion_dato -> string_type .)
    NOTIGUAL        reduce using rule 249 (expresion_dato -> string_type .)
    MAS             reduce using rule 249 (expresion_dato -> string_type .)
    MENOS           reduce using rule 249 (expresion_dato -> string_type .)
    POR             reduce using rule 249 (expresion_dato -> string_type .)
    DIV             reduce using rule 249 (expresion_dato -> string_type .)
    MODULO          reduce using rule 249 (expresion_dato -> string_type .)
    SHIFTD          reduce using rule 249 (expresion_dato -> string_type .)
    SHIFTI          reduce using rule 249 (expresion_dato -> string_type .)
    HASHTAG         reduce using rule 249 (expresion_dato -> string_type .)
    ANDB            reduce using rule 249 (expresion_dato -> string_type .)
    D_OR            reduce using rule 249 (expresion_dato -> string_type .)
    AND             reduce using rule 249 (expresion_dato -> string_type .)
    OR              reduce using rule 249 (expresion_dato -> string_type .)
    PARC            reduce using rule 249 (expresion_dato -> string_type .)


state 367

    (253) expresion_numero -> ENTERO .

    MAYOR           reduce using rule 253 (expresion_numero -> ENTERO .)
    MENOR           reduce using rule 253 (expresion_numero -> ENTERO .)
    MAYORIGUAL      reduce using rule 253 (expresion_numero -> ENTERO .)
    MENORIGUAL      reduce using rule 253 (expresion_numero -> ENTERO .)
    IGUALIGUAL      reduce using rule 253 (expresion_numero -> ENTERO .)
    IGUAL           reduce using rule 253 (expresion_numero -> ENTERO .)
    NOIG            reduce using rule 253 (expresion_numero -> ENTERO .)
    NOTIGUAL        reduce using rule 253 (expresion_numero -> ENTERO .)
    MAS             reduce using rule 253 (expresion_numero -> ENTERO .)
    MENOS           reduce using rule 253 (expresion_numero -> ENTERO .)
    POR             reduce using rule 253 (expresion_numero -> ENTERO .)
    DIV             reduce using rule 253 (expresion_numero -> ENTERO .)
    MODULO          reduce using rule 253 (expresion_numero -> ENTERO .)
    SHIFTD          reduce using rule 253 (expresion_numero -> ENTERO .)
    SHIFTI          reduce using rule 253 (expresion_numero -> ENTERO .)
    HASHTAG         reduce using rule 253 (expresion_numero -> ENTERO .)
    ANDB            reduce using rule 253 (expresion_numero -> ENTERO .)
    D_OR            reduce using rule 253 (expresion_numero -> ENTERO .)
    AND             reduce using rule 253 (expresion_numero -> ENTERO .)
    OR              reduce using rule 253 (expresion_numero -> ENTERO .)
    PARC            reduce using rule 253 (expresion_numero -> ENTERO .)


state 368

    (251) expresion_dato -> ID . PUNTO ID
    (128) string_type -> ID .

    PUNTO           shift and go to state 422
    MAYOR           reduce using rule 128 (string_type -> ID .)
    MENOR           reduce using rule 128 (string_type -> ID .)
    MAYORIGUAL      reduce using rule 128 (string_type -> ID .)
    MENORIGUAL      reduce using rule 128 (string_type -> ID .)
    IGUALIGUAL      reduce using rule 128 (string_type -> ID .)
    IGUAL           reduce using rule 128 (string_type -> ID .)
    NOIG            reduce using rule 128 (string_type -> ID .)
    NOTIGUAL        reduce using rule 128 (string_type -> ID .)
    MAS             reduce using rule 128 (string_type -> ID .)
    MENOS           reduce using rule 128 (string_type -> ID .)
    POR             reduce using rule 128 (string_type -> ID .)
    DIV             reduce using rule 128 (string_type -> ID .)
    MODULO          reduce using rule 128 (string_type -> ID .)
    SHIFTD          reduce using rule 128 (string_type -> ID .)
    SHIFTI          reduce using rule 128 (string_type -> ID .)
    HASHTAG         reduce using rule 128 (string_type -> ID .)
    ANDB            reduce using rule 128 (string_type -> ID .)
    D_OR            reduce using rule 128 (string_type -> ID .)
    AND             reduce using rule 128 (string_type -> ID .)
    OR              reduce using rule 128 (string_type -> ID .)
    PARC            reduce using rule 128 (string_type -> ID .)


state 369

    (252) expresion_dato -> expresion_numero .

    MAYOR           reduce using rule 252 (expresion_dato -> expresion_numero .)
    MENOR           reduce using rule 252 (expresion_dato -> expresion_numero .)
    MAYORIGUAL      reduce using rule 252 (expresion_dato -> expresion_numero .)
    MENORIGUAL      reduce using rule 252 (expresion_dato -> expresion_numero .)
    IGUALIGUAL      reduce using rule 252 (expresion_dato -> expresion_numero .)
    IGUAL           reduce using rule 252 (expresion_dato -> expresion_numero .)
    NOIG            reduce using rule 252 (expresion_dato -> expresion_numero .)
    NOTIGUAL        reduce using rule 252 (expresion_dato -> expresion_numero .)
    MAS             reduce using rule 252 (expresion_dato -> expresion_numero .)
    MENOS           reduce using rule 252 (expresion_dato -> expresion_numero .)
    POR             reduce using rule 252 (expresion_dato -> expresion_numero .)
    DIV             reduce using rule 252 (expresion_dato -> expresion_numero .)
    MODULO          reduce using rule 252 (expresion_dato -> expresion_numero .)
    SHIFTD          reduce using rule 252 (expresion_dato -> expresion_numero .)
    SHIFTI          reduce using rule 252 (expresion_dato -> expresion_numero .)
    HASHTAG         reduce using rule 252 (expresion_dato -> expresion_numero .)
    ANDB            reduce using rule 252 (expresion_dato -> expresion_numero .)
    D_OR            reduce using rule 252 (expresion_dato -> expresion_numero .)
    AND             reduce using rule 252 (expresion_dato -> expresion_numero .)
    OR              reduce using rule 252 (expresion_dato -> expresion_numero .)
    PARC            reduce using rule 252 (expresion_dato -> expresion_numero .)


state 370

    (255) sum_insrt -> SUM . agrupacion_expresion
    (216) agrupacion_expresion -> . PARA expresion PARC

    PARA            shift and go to state 424

    agrupacion_expresion           shift and go to state 423

state 371

    (256) count_insrt -> COUNT . agrupacion_expresion
    (216) agrupacion_expresion -> . PARA expresion PARC

    PARA            shift and go to state 424

    agrupacion_expresion           shift and go to state 425

state 372

    (254) expresion_numero -> FLOTANTE .

    MAYOR           reduce using rule 254 (expresion_numero -> FLOTANTE .)
    MENOR           reduce using rule 254 (expresion_numero -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 254 (expresion_numero -> FLOTANTE .)
    MENORIGUAL      reduce using rule 254 (expresion_numero -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 254 (expresion_numero -> FLOTANTE .)
    IGUAL           reduce using rule 254 (expresion_numero -> FLOTANTE .)
    NOIG            reduce using rule 254 (expresion_numero -> FLOTANTE .)
    NOTIGUAL        reduce using rule 254 (expresion_numero -> FLOTANTE .)
    MAS             reduce using rule 254 (expresion_numero -> FLOTANTE .)
    MENOS           reduce using rule 254 (expresion_numero -> FLOTANTE .)
    POR             reduce using rule 254 (expresion_numero -> FLOTANTE .)
    DIV             reduce using rule 254 (expresion_numero -> FLOTANTE .)
    MODULO          reduce using rule 254 (expresion_numero -> FLOTANTE .)
    SHIFTD          reduce using rule 254 (expresion_numero -> FLOTANTE .)
    SHIFTI          reduce using rule 254 (expresion_numero -> FLOTANTE .)
    HASHTAG         reduce using rule 254 (expresion_numero -> FLOTANTE .)
    ANDB            reduce using rule 254 (expresion_numero -> FLOTANTE .)
    D_OR            reduce using rule 254 (expresion_numero -> FLOTANTE .)
    AND             reduce using rule 254 (expresion_numero -> FLOTANTE .)
    OR              reduce using rule 254 (expresion_numero -> FLOTANTE .)
    PARC            reduce using rule 254 (expresion_numero -> FLOTANTE .)


state 373

    (96) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 426


state 374

    (97) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 427


state 375

    (101) TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .

    NOT             reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    UNIQUE          reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CONSTRAINT      reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PRIMARY         reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    FOREIGN         reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    DEFAULT         reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CHECK           reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PARC            reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 101 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)


state 376

    (106) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 428


state 377

    (109) TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .

    NOT             reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    NULL            reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    UNIQUE          reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PRIMARY         reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    FOREIGN         reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CHECK           reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PARC            reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 109 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)


state 378

    (107) TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .

    NOT             reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    NULL            reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CHECK           reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PARC            reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 107 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)


state 379

    (108) TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .

    NOT             reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    NULL            reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CHECK           reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PARC            reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 108 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)


state 380

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID . PARC PTCOMA

    PARC            shift and go to state 429


state 381

    (62) cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .

    PARC            reduce using rule 62 (cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .)
    COMA            reduce using rule 62 (cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .)


state 382

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC

    REFERENCES      shift and go to state 430


state 383

    (66) campos_c -> campos_c COMA ID .

    PARC            reduce using rule 66 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 66 (campos_c -> campos_c COMA ID .)


state 384

    (68) constraint_esp -> CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 431


state 385

    (69) constraint_esp -> UNIQUE PARA campos_c . PARC
    (66) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 432
    COMA            shift and go to state 333


state 386

    (70) constraint_esp -> FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC

    ID              shift and go to state 433


state 387

    (177) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 177 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 177 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 177 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 177 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PTCOMA          reduce using rule 177 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 177 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 388

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 434


state 389

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 435


state 390

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 436


state 391

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 392

    (38) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 393

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 437


state 394

    (85) C_check -> CONSTRAINT ID CHECK PARA . expresion_logica PARC
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_logica               shift and go to state 438
    expresion_relacional           shift and go to state 354
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 395

    (230) expresion -> PARA expresion_logica . PARC

    PARC            shift and go to state 439


state 396

    (86) C_check -> CHECK PARA expresion_logica PARC .

    NOT             reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    NULL            reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    UNIQUE          reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    CONSTRAINT      reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    PRIMARY         reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    FOREIGN         reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    DEFAULT         reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    CHECK           reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    PARC            reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 86 (C_check -> CHECK PARA expresion_logica PARC .)


state 397

    (242) expresion_logica -> expresion_relacional AND . expresion_logica
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_relacional           shift and go to state 354
    expresion_logica               shift and go to state 440
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 398

    (243) expresion_logica -> expresion_relacional OR . expresion_logica
    (242) expresion_logica -> . expresion_relacional AND expresion_logica
    (243) expresion_logica -> . expresion_relacional OR expresion_logica
    (244) expresion_logica -> . NOT expresion_logica
    (245) expresion_logica -> . expresion_relacional
    (233) expresion_relacional -> . expresion MAYOR expresion
    (234) expresion_relacional -> . expresion MENOR expresion
    (235) expresion_relacional -> . expresion MAYORIGUAL expresion
    (236) expresion_relacional -> . expresion MENORIGUAL expresion
    (237) expresion_relacional -> . expresion IGUALIGUAL expresion
    (238) expresion_relacional -> . expresion IGUAL expresion
    (239) expresion_relacional -> . expresion NOIG expresion
    (240) expresion_relacional -> . expresion NOTIGUAL expresion
    (241) expresion_relacional -> . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 355
    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion_relacional           shift and go to state 354
    expresion_logica               shift and go to state 441
    expresion                      shift and go to state 356
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 399

    (244) expresion_logica -> NOT expresion_logica .

    PARC            reduce using rule 244 (expresion_logica -> NOT expresion_logica .)


state 400

    (233) expresion_relacional -> expresion MAYOR . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 442
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 401

    (234) expresion_relacional -> expresion MENOR . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 443
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 402

    (235) expresion_relacional -> expresion MAYORIGUAL . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 444
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 403

    (236) expresion_relacional -> expresion MENORIGUAL . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 445
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 404

    (237) expresion_relacional -> expresion IGUALIGUAL . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 446
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 405

    (238) expresion_relacional -> expresion IGUAL . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 447
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 406

    (239) expresion_relacional -> expresion NOIG . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 448
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 407

    (240) expresion_relacional -> expresion NOTIGUAL . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 449
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 408

    (217) expresion -> expresion MAS . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 450
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 409

    (218) expresion -> expresion MENOS . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 451
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 410

    (219) expresion -> expresion POR . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 452
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 411

    (220) expresion -> expresion DIV . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 453
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 412

    (221) expresion -> expresion MODULO . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 454
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 413

    (222) expresion -> expresion SHIFTD . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 455
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 414

    (223) expresion -> expresion SHIFTI . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 456
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 415

    (224) expresion -> expresion HASHTAG . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 457
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 416

    (225) expresion -> expresion ANDB . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 458
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 417

    (226) expresion -> expresion D_OR . expresion
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 459
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 418

    (250) expresion_dato -> MENOS ENTERO .

    MAYOR           reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    MENOR           reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    MAYORIGUAL      reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    MENORIGUAL      reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    IGUALIGUAL      reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    IGUAL           reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    NOIG            reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    NOTIGUAL        reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    MAS             reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    MENOS           reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    POR             reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    DIV             reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    MODULO          reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    SHIFTD          reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    SHIFTI          reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    HASHTAG         reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    ANDB            reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    D_OR            reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    AND             reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    OR              reduce using rule 250 (expresion_dato -> MENOS ENTERO .)
    PARC            reduce using rule 250 (expresion_dato -> MENOS ENTERO .)


state 419

    (229) expresion -> D_OR expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 229 (expresion -> D_OR expresion .)
    MENOR           reduce using rule 229 (expresion -> D_OR expresion .)
    MAYORIGUAL      reduce using rule 229 (expresion -> D_OR expresion .)
    MENORIGUAL      reduce using rule 229 (expresion -> D_OR expresion .)
    IGUALIGUAL      reduce using rule 229 (expresion -> D_OR expresion .)
    IGUAL           reduce using rule 229 (expresion -> D_OR expresion .)
    NOIG            reduce using rule 229 (expresion -> D_OR expresion .)
    NOTIGUAL        reduce using rule 229 (expresion -> D_OR expresion .)
    AND             reduce using rule 229 (expresion -> D_OR expresion .)
    OR              reduce using rule 229 (expresion -> D_OR expresion .)
    PARC            reduce using rule 229 (expresion -> D_OR expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417

  ! MAS             [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! MENOS           [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! POR             [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! DIV             [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! MODULO          [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! SHIFTD          [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! SHIFTI          [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! HASHTAG         [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! ANDB            [ reduce using rule 229 (expresion -> D_OR expresion .) ]
  ! D_OR            [ reduce using rule 229 (expresion -> D_OR expresion .) ]


state 420

    (227) expresion -> NOTB expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 227 (expresion -> NOTB expresion .)
    MENOR           reduce using rule 227 (expresion -> NOTB expresion .)
    MAYORIGUAL      reduce using rule 227 (expresion -> NOTB expresion .)
    MENORIGUAL      reduce using rule 227 (expresion -> NOTB expresion .)
    IGUALIGUAL      reduce using rule 227 (expresion -> NOTB expresion .)
    IGUAL           reduce using rule 227 (expresion -> NOTB expresion .)
    NOIG            reduce using rule 227 (expresion -> NOTB expresion .)
    NOTIGUAL        reduce using rule 227 (expresion -> NOTB expresion .)
    MAS             reduce using rule 227 (expresion -> NOTB expresion .)
    MENOS           reduce using rule 227 (expresion -> NOTB expresion .)
    POR             reduce using rule 227 (expresion -> NOTB expresion .)
    DIV             reduce using rule 227 (expresion -> NOTB expresion .)
    MODULO          reduce using rule 227 (expresion -> NOTB expresion .)
    SHIFTD          reduce using rule 227 (expresion -> NOTB expresion .)
    SHIFTI          reduce using rule 227 (expresion -> NOTB expresion .)
    HASHTAG         reduce using rule 227 (expresion -> NOTB expresion .)
    ANDB            reduce using rule 227 (expresion -> NOTB expresion .)
    D_OR            reduce using rule 227 (expresion -> NOTB expresion .)
    AND             reduce using rule 227 (expresion -> NOTB expresion .)
    OR              reduce using rule 227 (expresion -> NOTB expresion .)
    PARC            reduce using rule 227 (expresion -> NOTB expresion .)

  ! MAS             [ shift and go to state 408 ]
  ! MENOS           [ shift and go to state 409 ]
  ! POR             [ shift and go to state 410 ]
  ! DIV             [ shift and go to state 411 ]
  ! MODULO          [ shift and go to state 412 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 421

    (228) expresion -> ORB expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 228 (expresion -> ORB expresion .)
    MENOR           reduce using rule 228 (expresion -> ORB expresion .)
    MAYORIGUAL      reduce using rule 228 (expresion -> ORB expresion .)
    MENORIGUAL      reduce using rule 228 (expresion -> ORB expresion .)
    IGUALIGUAL      reduce using rule 228 (expresion -> ORB expresion .)
    IGUAL           reduce using rule 228 (expresion -> ORB expresion .)
    NOIG            reduce using rule 228 (expresion -> ORB expresion .)
    NOTIGUAL        reduce using rule 228 (expresion -> ORB expresion .)
    DIV             reduce using rule 228 (expresion -> ORB expresion .)
    HASHTAG         reduce using rule 228 (expresion -> ORB expresion .)
    D_OR            reduce using rule 228 (expresion -> ORB expresion .)
    AND             reduce using rule 228 (expresion -> ORB expresion .)
    OR              reduce using rule 228 (expresion -> ORB expresion .)
    PARC            reduce using rule 228 (expresion -> ORB expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    ANDB            shift and go to state 416

  ! MAS             [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! MENOS           [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! POR             [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! MODULO          [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! SHIFTD          [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! SHIFTI          [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! ANDB            [ reduce using rule 228 (expresion -> ORB expresion .) ]
  ! DIV             [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! D_OR            [ shift and go to state 417 ]


state 422

    (251) expresion_dato -> ID PUNTO . ID

    ID              shift and go to state 460


state 423

    (255) sum_insrt -> SUM agrupacion_expresion .

    MAYOR           reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    MENOR           reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    MAYORIGUAL      reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    MENORIGUAL      reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    IGUALIGUAL      reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    IGUAL           reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    NOIG            reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    NOTIGUAL        reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    MAS             reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    MENOS           reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    POR             reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    DIV             reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    MODULO          reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    SHIFTD          reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    SHIFTI          reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    HASHTAG         reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    ANDB            reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    D_OR            reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    AND             reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    OR              reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)
    PARC            reduce using rule 255 (sum_insrt -> SUM agrupacion_expresion .)


state 424

    (216) agrupacion_expresion -> PARA . expresion PARC
    (217) expresion -> . expresion MAS expresion
    (218) expresion -> . expresion MENOS expresion
    (219) expresion -> . expresion POR expresion
    (220) expresion -> . expresion DIV expresion
    (221) expresion -> . expresion MODULO expresion
    (222) expresion -> . expresion SHIFTD expresion
    (223) expresion -> . expresion SHIFTI expresion
    (224) expresion -> . expresion HASHTAG expresion
    (225) expresion -> . expresion ANDB expresion
    (226) expresion -> . expresion D_OR expresion
    (227) expresion -> . NOTB expresion
    (228) expresion -> . ORB expresion
    (229) expresion -> . D_OR expresion
    (230) expresion -> . PARA expresion_logica PARC
    (231) expresion -> . TRUE
    (232) expresion -> . FALSE
    (246) expresion -> . expresion_dato
    (247) expresion -> . sum_insrt
    (248) expresion -> . count_insrt
    (249) expresion_dato -> . string_type
    (250) expresion_dato -> . MENOS ENTERO
    (251) expresion_dato -> . ID PUNTO ID
    (252) expresion_dato -> . expresion_numero
    (255) sum_insrt -> . SUM agrupacion_expresion
    (256) count_insrt -> . COUNT agrupacion_expresion
    (127) string_type -> . CADENA
    (128) string_type -> . ID
    (253) expresion_numero -> . ENTERO
    (254) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 359
    ORB             shift and go to state 360
    D_OR            shift and go to state 358
    PARA            shift and go to state 352
    TRUE            shift and go to state 361
    FALSE           shift and go to state 362
    MENOS           shift and go to state 357
    ID              shift and go to state 368
    SUM             shift and go to state 370
    COUNT           shift and go to state 371
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 367
    FLOTANTE        shift and go to state 372

    expresion                      shift and go to state 461
    expresion_dato                 shift and go to state 363
    sum_insrt                      shift and go to state 364
    count_insrt                    shift and go to state 365
    string_type                    shift and go to state 366
    expresion_numero               shift and go to state 369

state 425

    (256) count_insrt -> COUNT agrupacion_expresion .

    MAYOR           reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    MENOR           reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    MAYORIGUAL      reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    MENORIGUAL      reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    IGUALIGUAL      reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    IGUAL           reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    NOIG            reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    NOTIGUAL        reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    MAS             reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    MENOS           reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    POR             reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    DIV             reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    MODULO          reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    SHIFTD          reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    SHIFTI          reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    HASHTAG         reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    ANDB            reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    D_OR            reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    AND             reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    OR              reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)
    PARC            reduce using rule 256 (count_insrt -> COUNT agrupacion_expresion .)


state 426

    (96) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 462


state 427

    (97) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 463


state 428

    (106) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .

    NOT             reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    NULL            reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    UNIQUE          reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PRIMARY         reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    FOREIGN         reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CHECK           reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PARC            reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 106 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)


state 429

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 464


state 430

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC

    ID              shift and go to state 465


state 431

    (68) constraint_esp -> CHECK PARA expresion_logica PARC .

    PARC            reduce using rule 68 (constraint_esp -> CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 68 (constraint_esp -> CHECK PARA expresion_logica PARC .)


state 432

    (69) constraint_esp -> UNIQUE PARA campos_c PARC .

    PARC            reduce using rule 69 (constraint_esp -> UNIQUE PARA campos_c PARC .)
    COMA            reduce using rule 69 (constraint_esp -> UNIQUE PARA campos_c PARC .)


state 433

    (70) constraint_esp -> FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC

    PARC            shift and go to state 466


state 434

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 467
    DECLARE         shift and go to state 468


state 435

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 469


state 436

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 470


state 437

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 471
    DECLARE         shift and go to state 472


state 438

    (85) C_check -> CONSTRAINT ID CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 473


state 439

    (230) expresion -> PARA expresion_logica PARC .

    MAYOR           reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    MENOR           reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    MAYORIGUAL      reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    MENORIGUAL      reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    IGUALIGUAL      reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    IGUAL           reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    NOIG            reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    NOTIGUAL        reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    MAS             reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    MENOS           reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    POR             reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    DIV             reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    MODULO          reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    SHIFTD          reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    SHIFTI          reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    HASHTAG         reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    ANDB            reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    D_OR            reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    AND             reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    OR              reduce using rule 230 (expresion -> PARA expresion_logica PARC .)
    PARC            reduce using rule 230 (expresion -> PARA expresion_logica PARC .)


state 440

    (242) expresion_logica -> expresion_relacional AND expresion_logica .

    PARC            reduce using rule 242 (expresion_logica -> expresion_relacional AND expresion_logica .)


state 441

    (243) expresion_logica -> expresion_relacional OR expresion_logica .

    PARC            reduce using rule 243 (expresion_logica -> expresion_relacional OR expresion_logica .)


state 442

    (233) expresion_relacional -> expresion MAYOR expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 233 (expresion_relacional -> expresion MAYOR expresion .)
    OR              reduce using rule 233 (expresion_relacional -> expresion MAYOR expresion .)
    PARC            reduce using rule 233 (expresion_relacional -> expresion MAYOR expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 443

    (234) expresion_relacional -> expresion MENOR expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 234 (expresion_relacional -> expresion MENOR expresion .)
    OR              reduce using rule 234 (expresion_relacional -> expresion MENOR expresion .)
    PARC            reduce using rule 234 (expresion_relacional -> expresion MENOR expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 444

    (235) expresion_relacional -> expresion MAYORIGUAL expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 235 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 235 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    PARC            reduce using rule 235 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 445

    (236) expresion_relacional -> expresion MENORIGUAL expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 236 (expresion_relacional -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 236 (expresion_relacional -> expresion MENORIGUAL expresion .)
    PARC            reduce using rule 236 (expresion_relacional -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 446

    (237) expresion_relacional -> expresion IGUALIGUAL expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 237 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 237 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    PARC            reduce using rule 237 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 447

    (238) expresion_relacional -> expresion IGUAL expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 238 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 238 (expresion_relacional -> expresion IGUAL expresion .)
    PARC            reduce using rule 238 (expresion_relacional -> expresion IGUAL expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 448

    (239) expresion_relacional -> expresion NOIG expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 239 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 239 (expresion_relacional -> expresion NOIG expresion .)
    PARC            reduce using rule 239 (expresion_relacional -> expresion NOIG expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 449

    (240) expresion_relacional -> expresion NOTIGUAL expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    AND             reduce using rule 240 (expresion_relacional -> expresion NOTIGUAL expresion .)
    OR              reduce using rule 240 (expresion_relacional -> expresion NOTIGUAL expresion .)
    PARC            reduce using rule 240 (expresion_relacional -> expresion NOTIGUAL expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 450

    (217) expresion -> expresion MAS expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 217 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 217 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 217 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 217 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 217 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 217 (expresion -> expresion MAS expresion .)
    NOIG            reduce using rule 217 (expresion -> expresion MAS expresion .)
    NOTIGUAL        reduce using rule 217 (expresion -> expresion MAS expresion .)
    MAS             reduce using rule 217 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 217 (expresion -> expresion MAS expresion .)
    DIV             reduce using rule 217 (expresion -> expresion MAS expresion .)
    SHIFTD          reduce using rule 217 (expresion -> expresion MAS expresion .)
    SHIFTI          reduce using rule 217 (expresion -> expresion MAS expresion .)
    HASHTAG         reduce using rule 217 (expresion -> expresion MAS expresion .)
    ANDB            reduce using rule 217 (expresion -> expresion MAS expresion .)
    D_OR            reduce using rule 217 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 217 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 217 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 217 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 410
    MODULO          shift and go to state 412

  ! POR             [ reduce using rule 217 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 217 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 408 ]
  ! MENOS           [ shift and go to state 409 ]
  ! DIV             [ shift and go to state 411 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 451

    (218) expresion -> expresion MENOS expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 218 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 218 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 218 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 218 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 218 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 218 (expresion -> expresion MENOS expresion .)
    NOIG            reduce using rule 218 (expresion -> expresion MENOS expresion .)
    NOTIGUAL        reduce using rule 218 (expresion -> expresion MENOS expresion .)
    MAS             reduce using rule 218 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 218 (expresion -> expresion MENOS expresion .)
    DIV             reduce using rule 218 (expresion -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 218 (expresion -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 218 (expresion -> expresion MENOS expresion .)
    HASHTAG         reduce using rule 218 (expresion -> expresion MENOS expresion .)
    ANDB            reduce using rule 218 (expresion -> expresion MENOS expresion .)
    D_OR            reduce using rule 218 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 218 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 218 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 218 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 410
    MODULO          shift and go to state 412

  ! POR             [ reduce using rule 218 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 218 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 408 ]
  ! MENOS           [ shift and go to state 409 ]
  ! DIV             [ shift and go to state 411 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 452

    (219) expresion -> expresion POR expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 219 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 219 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 219 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 219 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 219 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 219 (expresion -> expresion POR expresion .)
    NOIG            reduce using rule 219 (expresion -> expresion POR expresion .)
    NOTIGUAL        reduce using rule 219 (expresion -> expresion POR expresion .)
    MAS             reduce using rule 219 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 219 (expresion -> expresion POR expresion .)
    POR             reduce using rule 219 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 219 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 219 (expresion -> expresion POR expresion .)
    SHIFTD          reduce using rule 219 (expresion -> expresion POR expresion .)
    SHIFTI          reduce using rule 219 (expresion -> expresion POR expresion .)
    HASHTAG         reduce using rule 219 (expresion -> expresion POR expresion .)
    ANDB            reduce using rule 219 (expresion -> expresion POR expresion .)
    D_OR            reduce using rule 219 (expresion -> expresion POR expresion .)
    AND             reduce using rule 219 (expresion -> expresion POR expresion .)
    OR              reduce using rule 219 (expresion -> expresion POR expresion .)
    PARC            reduce using rule 219 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 408 ]
  ! MENOS           [ shift and go to state 409 ]
  ! POR             [ shift and go to state 410 ]
  ! DIV             [ shift and go to state 411 ]
  ! MODULO          [ shift and go to state 412 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 453

    (220) expresion -> expresion DIV expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 220 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 220 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 220 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 220 (expresion -> expresion DIV expresion .)
    IGUALIGUAL      reduce using rule 220 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 220 (expresion -> expresion DIV expresion .)
    NOIG            reduce using rule 220 (expresion -> expresion DIV expresion .)
    NOTIGUAL        reduce using rule 220 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 220 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 220 (expresion -> expresion DIV expresion .)
    PARC            reduce using rule 220 (expresion -> expresion DIV expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417

  ! MAS             [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! MENOS           [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! POR             [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! DIV             [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! MODULO          [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! SHIFTD          [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! SHIFTI          [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! HASHTAG         [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! ANDB            [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]
  ! D_OR            [ reduce using rule 220 (expresion -> expresion DIV expresion .) ]


state 454

    (221) expresion -> expresion MODULO expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 221 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 221 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 221 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 221 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 221 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 221 (expresion -> expresion MODULO expresion .)
    NOIG            reduce using rule 221 (expresion -> expresion MODULO expresion .)
    NOTIGUAL        reduce using rule 221 (expresion -> expresion MODULO expresion .)
    MAS             reduce using rule 221 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 221 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 221 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 221 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 221 (expresion -> expresion MODULO expresion .)
    SHIFTD          reduce using rule 221 (expresion -> expresion MODULO expresion .)
    SHIFTI          reduce using rule 221 (expresion -> expresion MODULO expresion .)
    HASHTAG         reduce using rule 221 (expresion -> expresion MODULO expresion .)
    ANDB            reduce using rule 221 (expresion -> expresion MODULO expresion .)
    D_OR            reduce using rule 221 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 221 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 221 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 221 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 408 ]
  ! MENOS           [ shift and go to state 409 ]
  ! POR             [ shift and go to state 410 ]
  ! DIV             [ shift and go to state 411 ]
  ! MODULO          [ shift and go to state 412 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 455

    (222) expresion -> expresion SHIFTD expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    MENOR           reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    MAYORIGUAL      reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    MENORIGUAL      reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    IGUALIGUAL      reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    IGUAL           reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    NOIG            reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    NOTIGUAL        reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    DIV             reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    HASHTAG         reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    ANDB            reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    D_OR            reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    AND             reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    OR              reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    PARC            reduce using rule 222 (expresion -> expresion SHIFTD expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    MODULO          shift and go to state 412

  ! MAS             [ reduce using rule 222 (expresion -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 222 (expresion -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 222 (expresion -> expresion SHIFTD expresion .) ]
  ! MODULO          [ reduce using rule 222 (expresion -> expresion SHIFTD expresion .) ]
  ! DIV             [ shift and go to state 411 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 456

    (223) expresion -> expresion SHIFTI expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    MENOR           reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    MAYORIGUAL      reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    MENORIGUAL      reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    IGUALIGUAL      reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    IGUAL           reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    NOIG            reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    NOTIGUAL        reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    DIV             reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    HASHTAG         reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    ANDB            reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    D_OR            reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    AND             reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    OR              reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    PARC            reduce using rule 223 (expresion -> expresion SHIFTI expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    MODULO          shift and go to state 412

  ! MAS             [ reduce using rule 223 (expresion -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 223 (expresion -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 223 (expresion -> expresion SHIFTI expresion .) ]
  ! MODULO          [ reduce using rule 223 (expresion -> expresion SHIFTI expresion .) ]
  ! DIV             [ shift and go to state 411 ]
  ! SHIFTD          [ shift and go to state 413 ]
  ! SHIFTI          [ shift and go to state 414 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 457

    (224) expresion -> expresion HASHTAG expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    MENOR           reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    MAYORIGUAL      reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    MENORIGUAL      reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    IGUALIGUAL      reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    IGUAL           reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    NOIG            reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    NOTIGUAL        reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    AND             reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    OR              reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    PARC            reduce using rule 224 (expresion -> expresion HASHTAG expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417

  ! MAS             [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! MENOS           [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! POR             [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! DIV             [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! MODULO          [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! SHIFTD          [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! SHIFTI          [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! HASHTAG         [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! ANDB            [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]
  ! D_OR            [ reduce using rule 224 (expresion -> expresion HASHTAG expresion .) ]


state 458

    (225) expresion -> expresion ANDB expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    MAYOR           reduce using rule 225 (expresion -> expresion ANDB expresion .)
    MENOR           reduce using rule 225 (expresion -> expresion ANDB expresion .)
    MAYORIGUAL      reduce using rule 225 (expresion -> expresion ANDB expresion .)
    MENORIGUAL      reduce using rule 225 (expresion -> expresion ANDB expresion .)
    IGUALIGUAL      reduce using rule 225 (expresion -> expresion ANDB expresion .)
    IGUAL           reduce using rule 225 (expresion -> expresion ANDB expresion .)
    NOIG            reduce using rule 225 (expresion -> expresion ANDB expresion .)
    NOTIGUAL        reduce using rule 225 (expresion -> expresion ANDB expresion .)
    DIV             reduce using rule 225 (expresion -> expresion ANDB expresion .)
    HASHTAG         reduce using rule 225 (expresion -> expresion ANDB expresion .)
    ANDB            reduce using rule 225 (expresion -> expresion ANDB expresion .)
    D_OR            reduce using rule 225 (expresion -> expresion ANDB expresion .)
    AND             reduce using rule 225 (expresion -> expresion ANDB expresion .)
    OR              reduce using rule 225 (expresion -> expresion ANDB expresion .)
    PARC            reduce using rule 225 (expresion -> expresion ANDB expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414

  ! MAS             [ reduce using rule 225 (expresion -> expresion ANDB expresion .) ]
  ! MENOS           [ reduce using rule 225 (expresion -> expresion ANDB expresion .) ]
  ! POR             [ reduce using rule 225 (expresion -> expresion ANDB expresion .) ]
  ! MODULO          [ reduce using rule 225 (expresion -> expresion ANDB expresion .) ]
  ! SHIFTD          [ reduce using rule 225 (expresion -> expresion ANDB expresion .) ]
  ! SHIFTI          [ reduce using rule 225 (expresion -> expresion ANDB expresion .) ]
  ! DIV             [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 415 ]
  ! ANDB            [ shift and go to state 416 ]
  ! D_OR            [ shift and go to state 417 ]


state 459

    (226) expresion -> expresion D_OR expresion .
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    MAYOR           reduce using rule 226 (expresion -> expresion D_OR expresion .)
    MENOR           reduce using rule 226 (expresion -> expresion D_OR expresion .)
    MAYORIGUAL      reduce using rule 226 (expresion -> expresion D_OR expresion .)
    MENORIGUAL      reduce using rule 226 (expresion -> expresion D_OR expresion .)
    IGUALIGUAL      reduce using rule 226 (expresion -> expresion D_OR expresion .)
    IGUAL           reduce using rule 226 (expresion -> expresion D_OR expresion .)
    NOIG            reduce using rule 226 (expresion -> expresion D_OR expresion .)
    NOTIGUAL        reduce using rule 226 (expresion -> expresion D_OR expresion .)
    AND             reduce using rule 226 (expresion -> expresion D_OR expresion .)
    OR              reduce using rule 226 (expresion -> expresion D_OR expresion .)
    PARC            reduce using rule 226 (expresion -> expresion D_OR expresion .)
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417

  ! MAS             [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! MENOS           [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! POR             [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! DIV             [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! MODULO          [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! SHIFTD          [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! SHIFTI          [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! HASHTAG         [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! ANDB            [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]
  ! D_OR            [ reduce using rule 226 (expresion -> expresion D_OR expresion .) ]


state 460

    (251) expresion_dato -> ID PUNTO ID .

    MAYOR           reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    MENOR           reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    IGUALIGUAL      reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    IGUAL           reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    NOIG            reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    NOTIGUAL        reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    MAS             reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    MENOS           reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    POR             reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    DIV             reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    MODULO          reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    SHIFTD          reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    SHIFTI          reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    HASHTAG         reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    ANDB            reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    D_OR            reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    AND             reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    OR              reduce using rule 251 (expresion_dato -> ID PUNTO ID .)
    PARC            reduce using rule 251 (expresion_dato -> ID PUNTO ID .)


state 461

    (216) agrupacion_expresion -> PARA expresion . PARC
    (217) expresion -> expresion . MAS expresion
    (218) expresion -> expresion . MENOS expresion
    (219) expresion -> expresion . POR expresion
    (220) expresion -> expresion . DIV expresion
    (221) expresion -> expresion . MODULO expresion
    (222) expresion -> expresion . SHIFTD expresion
    (223) expresion -> expresion . SHIFTI expresion
    (224) expresion -> expresion . HASHTAG expresion
    (225) expresion -> expresion . ANDB expresion
    (226) expresion -> expresion . D_OR expresion

    PARC            shift and go to state 474
    MAS             shift and go to state 408
    MENOS           shift and go to state 409
    POR             shift and go to state 410
    DIV             shift and go to state 411
    MODULO          shift and go to state 412
    SHIFTD          shift and go to state 413
    SHIFTI          shift and go to state 414
    HASHTAG         shift and go to state 415
    ANDB            shift and go to state 416
    D_OR            shift and go to state 417


state 462

    (96) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CHECK           reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 96 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)


state 463

    (97) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CHECK           reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 97 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)


state 464

    (57) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .

    error           reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CALL            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    USE             reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    DROP            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    $end            reduce using rule 57 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)


state 465

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC

    PARA            shift and go to state 475


state 466

    (70) constraint_esp -> FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC

    REFERENCES      shift and go to state 476


state 467

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 478
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 468

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    BEGIN           reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 492
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 469

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 493


state 470

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 494


state 471

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 495
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 472

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    BEGIN           reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 496
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 473

    (85) C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .

    NOT             reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    NULL            reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    UNIQUE          reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    CONSTRAINT      reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    PRIMARY         reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    FOREIGN         reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    DEFAULT         reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    CHECK           reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    PARC            reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 85 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)


state 474

    (216) agrupacion_expresion -> PARA expresion PARC .

    MAYOR           reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    IGUAL           reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    NOIG            reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    NOTIGUAL        reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    MAS             reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    POR             reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    DIV             reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    SHIFTD          reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    SHIFTI          reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    HASHTAG         reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    ANDB            reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    D_OR            reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    AND             reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    OR              reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)
    PARC            reduce using rule 216 (agrupacion_expresion -> PARA expresion PARC .)


state 475

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC

    ID              shift and go to state 497


state 476

    (70) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC

    ID              shift and go to state 498


state 477

    (159) asignacion -> ID . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> ID . tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> ID . tipo PTCOMA
    (162) declaracion -> ID . tipo DEFAULT expresionPLSQL PTCOMA
    (163) tipo -> . INTEGER
    (164) tipo -> . SMALLINT
    (165) tipo -> . BIGINT
    (166) tipo -> . DECIMAL
    (167) tipo -> . NUMERIC
    (168) tipo -> . REAL
    (169) tipo -> . CHAR
    (170) tipo -> . DOUBLE
    (171) tipo -> . PRECISION
    (172) tipo -> . MONEY
    (173) tipo -> . FLOAT
    (174) tipo -> . BOOLEAN
    (175) tipo -> . VOID
    (176) tipo -> . CHAR PARA ENTERO PARC
    (177) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (178) tipo -> . VARCHAR PARA ENTERO PARC
    (179) tipo -> . CHARACTER PARA ENTERO PARC
    (180) tipo -> . TEXT
    (181) tipo -> . TIME
    (182) tipo -> . TIMESTAMP
    (183) tipo -> . DATE

    DOSPUNTOS       shift and go to state 499
    INTEGER         shift and go to state 143
    SMALLINT        shift and go to state 144
    BIGINT          shift and go to state 145
    DECIMAL         shift and go to state 146
    NUMERIC         shift and go to state 147
    REAL            shift and go to state 148
    CHAR            shift and go to state 149
    DOUBLE          shift and go to state 150
    PRECISION       shift and go to state 151
    MONEY           shift and go to state 152
    FLOAT           shift and go to state 153
    BOOLEAN         shift and go to state 154
    VOID            shift and go to state 155
    CHARACTER       shift and go to state 156
    VARCHAR         shift and go to state 157
    TEXT            shift and go to state 158
    TIME            shift and go to state 159
    TIMESTAMP       shift and go to state 160
    DATE            shift and go to state 161

    tipo                           shift and go to state 500

state 478

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 501
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 479

    (23) instrucciones_funct_sent -> PTCOMA .

    END             reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    PTCOMA          reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    error           reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    ID              reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    RAISE           reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    IF              reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    CASE            reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    SELECT          reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    CALL            reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    BEGIN           reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    ELSE            reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    ELSEIF          reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)
    WHEN            reduce using rule 23 (instrucciones_funct_sent -> PTCOMA .)


state 480

    (17) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PTCOMA          reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CALL            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 17 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 481

    (18) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    PTCOMA          reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    CALL            reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 18 (instrucciones_funct_sent -> asignacion .)


state 482

    (19) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    PTCOMA          reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    CALL            reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 19 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 19 (instrucciones_funct_sent -> declaracion .)


state 483

    (20) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    PTCOMA          reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    CALL            reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 20 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 20 (instrucciones_funct_sent -> imprimir .)


state 484

    (21) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    PTCOMA          reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    CALL            reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 21 (instrucciones_funct_sent -> sentencia_if .)


state 485

    (22) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    PTCOMA          reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    CALL            reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 22 (instrucciones_funct_sent -> sentencia_switch .)


state 486

    (24) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    PTCOMA          reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    CALL            reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 24 (instrucciones_funct_sent -> llamada_funcion .)


state 487

    (25) instrucciones_funct_sent -> empty .

    END             reduce using rule 25 (instrucciones_funct_sent -> empty .)
    PTCOMA          reduce using rule 25 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 25 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 25 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 25 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 25 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 25 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 25 (instrucciones_funct_sent -> empty .)
    CALL            reduce using rule 25 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 25 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 25 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 25 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 25 (instrucciones_funct_sent -> empty .)


state 488

    (26) instrucciones_funct_sent -> error .

    END             reduce using rule 26 (instrucciones_funct_sent -> error .)
    PTCOMA          reduce using rule 26 (instrucciones_funct_sent -> error .)
    error           reduce using rule 26 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 26 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 26 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 26 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 26 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 26 (instrucciones_funct_sent -> error .)
    CALL            reduce using rule 26 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 26 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 26 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 26 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 26 (instrucciones_funct_sent -> error .)


state 489

    (155) imprimir -> RAISE . lista_imprimir PTCOMA
    (156) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (157) lista_imprimir -> . sent_imprimir
    (158) sent_imprimir -> . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    lista_imprimir                 shift and go to state 503
    sent_imprimir                  shift and go to state 504
    expresionPLSQL                 shift and go to state 505
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 490

    (151) sentencia_if -> IF . expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 506
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 491

    (146) sentencia_switch -> CASE . expresionPLSQL case_list END CASE PTCOMA
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 507
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 492

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 508
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! BEGIN           [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 493

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 509
    DECLARE         shift and go to state 510


state 494

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 511
    DECLARE         shift and go to state 512


state 495

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 513
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 496

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 514
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! BEGIN           [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 497

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC

    PARC            shift and go to state 515


state 498

    (70) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC

    PARA            shift and go to state 516


state 499

    (159) asignacion -> ID DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 517


state 500

    (160) declaracion -> ID tipo . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> ID tipo . PTCOMA
    (162) declaracion -> ID tipo . DEFAULT expresionPLSQL PTCOMA

    DOSPUNTOS       shift and go to state 518
    PTCOMA          shift and go to state 519
    DEFAULT         shift and go to state 520


state 501

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 521


state 502

    (16) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PTCOMA          reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CALL            reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 16 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 503

    (155) imprimir -> RAISE lista_imprimir . PTCOMA
    (156) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PTCOMA          shift and go to state 522
    COMA            shift and go to state 523


state 504

    (157) lista_imprimir -> sent_imprimir .

    PTCOMA          reduce using rule 157 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 157 (lista_imprimir -> sent_imprimir .)


state 505

    (158) sent_imprimir -> expresionPLSQL .
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          reduce using rule 158 (sent_imprimir -> expresionPLSQL .)
    COMA            reduce using rule 158 (sent_imprimir -> expresionPLSQL .)
    AND             shift and go to state 116
    OR              shift and go to state 117


state 506

    (151) sentencia_if -> IF expresionPLSQL . THEN instrucciones_funct_list else END IF PTCOMA
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 524
    AND             shift and go to state 116
    OR              shift and go to state 117


state 507

    (146) sentencia_switch -> CASE expresionPLSQL . case_list END CASE PTCOMA
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL
    (147) case_list -> . case_list case
    (148) case_list -> . case
    (149) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (150) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 116
    OR              shift and go to state 117
    WHEN            shift and go to state 527
    ELSE            shift and go to state 528

    case_list                      shift and go to state 525
    case                           shift and go to state 526

state 508

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 529
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 509

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 530
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 510

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    BEGIN           reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 531
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 511

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 532
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 512

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    BEGIN           reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 533
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 513

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 534


state 514

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 535
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 515

    (63) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .

    PARC            reduce using rule 63 (cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)
    COMA            reduce using rule 63 (cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)


state 516

    (70) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC

    ID              shift and go to state 536


state 517

    (159) asignacion -> ID DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 537
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 518

    (160) declaracion -> ID tipo DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 538


state 519

    (161) declaracion -> ID tipo PTCOMA .

    END             reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    PTCOMA          reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    error           reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    ID              reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    RAISE           reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    IF              reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    CASE            reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    SELECT          reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    CALL            reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    BEGIN           reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    ELSE            reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    ELSEIF          reduce using rule 161 (declaracion -> ID tipo PTCOMA .)
    WHEN            reduce using rule 161 (declaracion -> ID tipo PTCOMA .)


state 520

    (162) declaracion -> ID tipo DEFAULT . expresionPLSQL PTCOMA
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 539
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 521

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 540


state 522

    (155) imprimir -> RAISE lista_imprimir PTCOMA .

    END             reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    PTCOMA          reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    error           reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ID              reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    RAISE           reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    IF              reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CASE            reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    SELECT          reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CALL            reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    BEGIN           reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSE            reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSEIF          reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)
    WHEN            reduce using rule 155 (imprimir -> RAISE lista_imprimir PTCOMA .)


state 523

    (156) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (158) sent_imprimir -> . expresionPLSQL
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    sent_imprimir                  shift and go to state 541
    expresionPLSQL                 shift and go to state 505
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 524

    (151) sentencia_if -> IF expresionPLSQL THEN . instrucciones_funct_list else END IF PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    ELSE            reduce using rule 215 (empty -> .)
    ELSEIF          reduce using rule 215 (empty -> .)
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 542
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 525

    (146) sentencia_switch -> CASE expresionPLSQL case_list . END CASE PTCOMA
    (147) case_list -> case_list . case
    (149) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (150) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 543
    WHEN            shift and go to state 527
    ELSE            shift and go to state 528

    case                           shift and go to state 544

state 526

    (148) case_list -> case .

    END             reduce using rule 148 (case_list -> case .)
    WHEN            reduce using rule 148 (case_list -> case .)
    ELSE            reduce using rule 148 (case_list -> case .)


state 527

    (149) case -> WHEN . expresionPLSQL THEN instrucciones_funct_list
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 545
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 528

    (150) case -> ELSE . instrucciones_funct_list
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)
    WHEN            reduce using rule 215 (empty -> .)
    ELSE            reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 546
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 529

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 547
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 530

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 548
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 531

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 549
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! BEGIN           [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 532

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 550
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 533

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 551
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! BEGIN           [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 534

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 552


state 535

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 553
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 536

    (70) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC

    PARC            shift and go to state 554


state 537

    (159) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 555
    AND             shift and go to state 116
    OR              shift and go to state 117


state 538

    (160) declaracion -> ID tipo DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 556
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 539

    (162) declaracion -> ID tipo DEFAULT expresionPLSQL . PTCOMA
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 557
    AND             shift and go to state 116
    OR              shift and go to state 117


state 540

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 558


state 541

    (156) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PTCOMA          reduce using rule 156 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 156 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 542

    (151) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list . else END IF PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (152) else -> . ELSE instrucciones_funct_list
    (153) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (154) else -> .
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 154 (else -> .)
    ELSE            shift and go to state 560
    ELSEIF          shift and go to state 561
    END             reduce using rule 154 (else -> .)
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! ELSE            [ reduce using rule 215 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]
  ! END             [ reduce using rule 215 (empty -> .) ]

    else                           shift and go to state 559
    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 543

    (146) sentencia_switch -> CASE expresionPLSQL case_list END . CASE PTCOMA

    CASE            shift and go to state 562


state 544

    (147) case_list -> case_list case .

    END             reduce using rule 147 (case_list -> case_list case .)
    WHEN            reduce using rule 147 (case_list -> case_list case .)
    ELSE            reduce using rule 147 (case_list -> case_list case .)


state 545

    (149) case -> WHEN expresionPLSQL . THEN instrucciones_funct_list
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 563
    AND             shift and go to state 116
    OR              shift and go to state 117


state 546

    (150) case -> ELSE instrucciones_funct_list .
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 150 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 150 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 150 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 150 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 150 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 150 (case -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]
  ! END             [ reduce using rule 215 (empty -> .) ]
  ! WHEN            [ reduce using rule 215 (empty -> .) ]
  ! ELSE            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 547

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 564


state 548

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 565


state 549

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 566
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 550

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 567


state 551

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 568
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 552

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 569


state 553

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 570


state 554

    (70) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .

    PARC            reduce using rule 70 (constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)
    COMA            reduce using rule 70 (constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)


state 555

    (159) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 159 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 556

    (160) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 571
    AND             shift and go to state 116
    OR              shift and go to state 117


state 557

    (162) declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .

    END             reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    error           reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ID              reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    IF              reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CASE            reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CALL            reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 162 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)


state 558

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 572


state 559

    (151) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else . END IF PTCOMA

    END             shift and go to state 573


state 560

    (152) else -> ELSE . instrucciones_funct_list
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 574
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 561

    (153) else -> ELSEIF . expresionPLSQL THEN instrucciones_funct_list else
    (184) expresionPLSQL -> . log
    (185) log -> . expresionPLSQL AND expresionPLSQL
    (186) log -> . expresionPLSQL OR expresionPLSQL
    (187) log -> . rel
    (188) rel -> . arit MAYOR arit
    (189) rel -> . arit MENOR arit
    (190) rel -> . arit MAYORIGUAL arit
    (191) rel -> . arit MENORIGUAL arit
    (192) rel -> . arit IGUALIGUAL arit
    (193) rel -> . arit NOTIGUAL arit
    (194) rel -> . arit
    (195) arit -> . arit POR arit
    (196) arit -> . arit DIVISION arit
    (197) arit -> . arit MAS arit
    (198) arit -> . arit MENOS arit
    (199) arit -> . arit MODULO arit
    (200) arit -> . arit ANDB arit
    (201) arit -> . arit SHIFTI arit
    (202) arit -> . arit SHIFTD arit
    (203) arit -> . arit XORB arit
    (204) arit -> . arit ORB arit
    (205) arit -> . PARA expresionPLSQL PARC
    (206) arit -> . ID
    (207) arit -> . CADENA
    (208) arit -> . ENTERO
    (209) arit -> . FLOTANTE
    (210) arit -> . MENOS expresionPLSQL
    (211) arit -> . NOTB expresionPLSQL
    (212) arit -> . NOT expresionPLSQL
    (213) arit -> . TRUE
    (214) arit -> . FALSE

    PARA            shift and go to state 66
    ID              shift and go to state 65
    CADENA          shift and go to state 74
    ENTERO          shift and go to state 75
    FLOTANTE        shift and go to state 76
    MENOS           shift and go to state 73
    NOTB            shift and go to state 77
    NOT             shift and go to state 78
    TRUE            shift and go to state 79
    FALSE           shift and go to state 80

    expresionPLSQL                 shift and go to state 575
    log                            shift and go to state 70
    rel                            shift and go to state 71
    arit                           shift and go to state 72

state 562

    (146) sentencia_switch -> CASE expresionPLSQL case_list END CASE . PTCOMA

    PTCOMA          shift and go to state 576


state 563

    (149) case -> WHEN expresionPLSQL THEN . instrucciones_funct_list
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    END             reduce using rule 215 (empty -> .)
    WHEN            reduce using rule 215 (empty -> .)
    ELSE            reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 577
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 564

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 578


state 565

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 579


state 566

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 580
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 567

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 581


state 568

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 582
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! END             [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 569

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 583


state 570

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 584


state 571

    (160) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 160 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 572

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 585


state 573

    (151) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END . IF PTCOMA

    IF              shift and go to state 586


state 574

    (152) else -> ELSE instrucciones_funct_list .
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 152 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 152 (else -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]
  ! END             [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 575

    (153) else -> ELSEIF expresionPLSQL . THEN instrucciones_funct_list else
    (185) log -> expresionPLSQL . AND expresionPLSQL
    (186) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 587
    AND             shift and go to state 116
    OR              shift and go to state 117


state 576

    (146) sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .

    END             reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    PTCOMA          reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    error           reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ID              reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    RAISE           reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    IF              reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CASE            reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    SELECT          reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CALL            reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    BEGIN           reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSE            reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSEIF          reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    WHEN            reduce using rule 146 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)


state 577

    (149) case -> WHEN expresionPLSQL THEN instrucciones_funct_list .
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 149 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 149 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 149 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    END             reduce using rule 149 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    WHEN            reduce using rule 149 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    ELSE            reduce using rule 149 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]
  ! END             [ reduce using rule 215 (empty -> .) ]
  ! WHEN            [ reduce using rule 215 (empty -> .) ]
  ! ELSE            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 578

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 588


state 579

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 589


state 580

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 590


state 581

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 591


state 582

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 592


state 583

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 593


state 584

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 594


state 585

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 595


state 586

    (151) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF . PTCOMA

    PTCOMA          shift and go to state 596


state 587

    (153) else -> ELSEIF expresionPLSQL THEN . instrucciones_funct_list else
    (16) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (17) instrucciones_funct_list -> . instrucciones_funct_sent
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18
    ELSE            reduce using rule 215 (empty -> .)
    ELSEIF          reduce using rule 215 (empty -> .)
    END             reduce using rule 215 (empty -> .)

  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 597
    instrucciones_funct_sent       shift and go to state 480
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 588

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 598


state 589

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 599


state 590

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 600


state 591

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 601


state 592

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 602


state 593

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 603


state 594

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 604


state 595

    (129) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 129 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 596

    (151) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .

    END             reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    PTCOMA          reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    error           reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ID              reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    RAISE           reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    IF              reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CASE            reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    SELECT          reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CALL            reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    BEGIN           reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSE            reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSEIF          reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    WHEN            reduce using rule 151 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)


state 597

    (153) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list . else
    (16) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (152) else -> . ELSE instrucciones_funct_list
    (153) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (154) else -> .
    (18) instrucciones_funct_sent -> . asignacion
    (19) instrucciones_funct_sent -> . declaracion
    (20) instrucciones_funct_sent -> . imprimir
    (21) instrucciones_funct_sent -> . sentencia_if
    (22) instrucciones_funct_sent -> . sentencia_switch
    (23) instrucciones_funct_sent -> . PTCOMA
    (24) instrucciones_funct_sent -> . llamada_funcion
    (25) instrucciones_funct_sent -> . empty
    (26) instrucciones_funct_sent -> . error
    (159) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (160) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (161) declaracion -> . ID tipo PTCOMA
    (162) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (155) imprimir -> . RAISE lista_imprimir PTCOMA
    (151) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (146) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (137) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (138) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (215) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 154 (else -> .)
    ELSE            shift and go to state 560
    ELSEIF          shift and go to state 561
    END             reduce using rule 154 (else -> .)
    PTCOMA          shift and go to state 479
    error           shift and go to state 488
    ID              shift and go to state 477
    RAISE           shift and go to state 489
    IF              shift and go to state 490
    CASE            shift and go to state 491
    SELECT          shift and go to state 17
    CALL            shift and go to state 18

  ! ELSE            [ reduce using rule 215 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 215 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 215 (empty -> .) ]
  ! error           [ reduce using rule 215 (empty -> .) ]
  ! ID              [ reduce using rule 215 (empty -> .) ]
  ! RAISE           [ reduce using rule 215 (empty -> .) ]
  ! IF              [ reduce using rule 215 (empty -> .) ]
  ! CASE            [ reduce using rule 215 (empty -> .) ]
  ! SELECT          [ reduce using rule 215 (empty -> .) ]
  ! CALL            [ reduce using rule 215 (empty -> .) ]
  ! END             [ reduce using rule 215 (empty -> .) ]

    else                           shift and go to state 605
    instrucciones_funct_sent       shift and go to state 502
    asignacion                     shift and go to state 481
    declaracion                    shift and go to state 482
    imprimir                       shift and go to state 483
    sentencia_if                   shift and go to state 484
    sentencia_switch               shift and go to state 485
    llamada_funcion                shift and go to state 486
    empty                          shift and go to state 487

state 598

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 606


state 599

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 607


state 600

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 608


state 601

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 609


state 602

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 610


state 603

    (133) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 133 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 604

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 611


state 605

    (153) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .

    END             reduce using rule 153 (else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .)


state 606

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 612


state 607

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 613


state 608

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 614


state 609

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 615


state 610

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 616


state 611

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 617


state 612

    (130) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 130 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 613

    (131) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 131 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 614

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 618


state 615

    (135) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 135 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 616

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 619


state 617

    (134) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 134 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 618

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 620


state 619

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 621


state 620

    (132) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 132 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 621

    (136) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 136 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 72 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for POR in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 72 resolved as shift
WARNING: shift/reduce conflict for MAS in state 72 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 72 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 72 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 72 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 72 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 72 resolved as shift
WARNING: shift/reduce conflict for XORB in state 72 resolved as shift
WARNING: shift/reduce conflict for ORB in state 72 resolved as shift
WARNING: shift/reduce conflict for MAS in state 419 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 419 resolved as shift
WARNING: shift/reduce conflict for POR in state 419 resolved as shift
WARNING: shift/reduce conflict for DIV in state 419 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 419 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 419 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 419 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 419 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 419 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 419 resolved as shift
WARNING: shift/reduce conflict for MAS in state 453 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 453 resolved as shift
WARNING: shift/reduce conflict for POR in state 453 resolved as shift
WARNING: shift/reduce conflict for DIV in state 453 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 453 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 453 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 453 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 453 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 453 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 453 resolved as shift
WARNING: shift/reduce conflict for MAS in state 457 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 457 resolved as shift
WARNING: shift/reduce conflict for POR in state 457 resolved as shift
WARNING: shift/reduce conflict for DIV in state 457 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 457 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 457 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 457 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 457 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 457 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 457 resolved as shift
WARNING: shift/reduce conflict for MAS in state 459 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 459 resolved as shift
WARNING: shift/reduce conflict for POR in state 459 resolved as shift
WARNING: shift/reduce conflict for DIV in state 459 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 459 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 459 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 459 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 459 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 459 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 459 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 467 resolved as shift
WARNING: shift/reduce conflict for error in state 467 resolved as shift
WARNING: shift/reduce conflict for ID in state 467 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 467 resolved as shift
WARNING: shift/reduce conflict for IF in state 467 resolved as shift
WARNING: shift/reduce conflict for CASE in state 467 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 467 resolved as shift
WARNING: shift/reduce conflict for CALL in state 467 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 468 resolved as shift
WARNING: shift/reduce conflict for error in state 468 resolved as shift
WARNING: shift/reduce conflict for ID in state 468 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 468 resolved as shift
WARNING: shift/reduce conflict for IF in state 468 resolved as shift
WARNING: shift/reduce conflict for CASE in state 468 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 468 resolved as shift
WARNING: shift/reduce conflict for CALL in state 468 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 471 resolved as shift
WARNING: shift/reduce conflict for error in state 471 resolved as shift
WARNING: shift/reduce conflict for ID in state 471 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 471 resolved as shift
WARNING: shift/reduce conflict for IF in state 471 resolved as shift
WARNING: shift/reduce conflict for CASE in state 471 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 471 resolved as shift
WARNING: shift/reduce conflict for CALL in state 471 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 472 resolved as shift
WARNING: shift/reduce conflict for error in state 472 resolved as shift
WARNING: shift/reduce conflict for ID in state 472 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 472 resolved as shift
WARNING: shift/reduce conflict for IF in state 472 resolved as shift
WARNING: shift/reduce conflict for CASE in state 472 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 472 resolved as shift
WARNING: shift/reduce conflict for CALL in state 472 resolved as shift
WARNING: shift/reduce conflict for END in state 478 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 478 resolved as shift
WARNING: shift/reduce conflict for error in state 478 resolved as shift
WARNING: shift/reduce conflict for ID in state 478 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 478 resolved as shift
WARNING: shift/reduce conflict for IF in state 478 resolved as shift
WARNING: shift/reduce conflict for CASE in state 478 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 478 resolved as shift
WARNING: shift/reduce conflict for CALL in state 478 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 492 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 492 resolved as shift
WARNING: shift/reduce conflict for error in state 492 resolved as shift
WARNING: shift/reduce conflict for ID in state 492 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 492 resolved as shift
WARNING: shift/reduce conflict for IF in state 492 resolved as shift
WARNING: shift/reduce conflict for CASE in state 492 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 492 resolved as shift
WARNING: shift/reduce conflict for CALL in state 492 resolved as shift
WARNING: shift/reduce conflict for END in state 495 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 495 resolved as shift
WARNING: shift/reduce conflict for error in state 495 resolved as shift
WARNING: shift/reduce conflict for ID in state 495 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 495 resolved as shift
WARNING: shift/reduce conflict for IF in state 495 resolved as shift
WARNING: shift/reduce conflict for CASE in state 495 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 495 resolved as shift
WARNING: shift/reduce conflict for CALL in state 495 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 496 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 496 resolved as shift
WARNING: shift/reduce conflict for error in state 496 resolved as shift
WARNING: shift/reduce conflict for ID in state 496 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 496 resolved as shift
WARNING: shift/reduce conflict for IF in state 496 resolved as shift
WARNING: shift/reduce conflict for CASE in state 496 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 496 resolved as shift
WARNING: shift/reduce conflict for CALL in state 496 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 508 resolved as shift
WARNING: shift/reduce conflict for error in state 508 resolved as shift
WARNING: shift/reduce conflict for ID in state 508 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 508 resolved as shift
WARNING: shift/reduce conflict for IF in state 508 resolved as shift
WARNING: shift/reduce conflict for CASE in state 508 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 508 resolved as shift
WARNING: shift/reduce conflict for CALL in state 508 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 509 resolved as shift
WARNING: shift/reduce conflict for error in state 509 resolved as shift
WARNING: shift/reduce conflict for ID in state 509 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 509 resolved as shift
WARNING: shift/reduce conflict for IF in state 509 resolved as shift
WARNING: shift/reduce conflict for CASE in state 509 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 509 resolved as shift
WARNING: shift/reduce conflict for CALL in state 509 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 510 resolved as shift
WARNING: shift/reduce conflict for error in state 510 resolved as shift
WARNING: shift/reduce conflict for ID in state 510 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 510 resolved as shift
WARNING: shift/reduce conflict for IF in state 510 resolved as shift
WARNING: shift/reduce conflict for CASE in state 510 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 510 resolved as shift
WARNING: shift/reduce conflict for CALL in state 510 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 511 resolved as shift
WARNING: shift/reduce conflict for error in state 511 resolved as shift
WARNING: shift/reduce conflict for ID in state 511 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 511 resolved as shift
WARNING: shift/reduce conflict for IF in state 511 resolved as shift
WARNING: shift/reduce conflict for CASE in state 511 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 511 resolved as shift
WARNING: shift/reduce conflict for CALL in state 511 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 512 resolved as shift
WARNING: shift/reduce conflict for error in state 512 resolved as shift
WARNING: shift/reduce conflict for ID in state 512 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 512 resolved as shift
WARNING: shift/reduce conflict for IF in state 512 resolved as shift
WARNING: shift/reduce conflict for CASE in state 512 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 512 resolved as shift
WARNING: shift/reduce conflict for CALL in state 512 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 514 resolved as shift
WARNING: shift/reduce conflict for error in state 514 resolved as shift
WARNING: shift/reduce conflict for ID in state 514 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 514 resolved as shift
WARNING: shift/reduce conflict for IF in state 514 resolved as shift
WARNING: shift/reduce conflict for CASE in state 514 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 514 resolved as shift
WARNING: shift/reduce conflict for CALL in state 514 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 524 resolved as shift
WARNING: shift/reduce conflict for error in state 524 resolved as shift
WARNING: shift/reduce conflict for ID in state 524 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 524 resolved as shift
WARNING: shift/reduce conflict for IF in state 524 resolved as shift
WARNING: shift/reduce conflict for CASE in state 524 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 524 resolved as shift
WARNING: shift/reduce conflict for CALL in state 524 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 528 resolved as shift
WARNING: shift/reduce conflict for error in state 528 resolved as shift
WARNING: shift/reduce conflict for ID in state 528 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 528 resolved as shift
WARNING: shift/reduce conflict for IF in state 528 resolved as shift
WARNING: shift/reduce conflict for CASE in state 528 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 528 resolved as shift
WARNING: shift/reduce conflict for CALL in state 528 resolved as shift
WARNING: shift/reduce conflict for END in state 529 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 529 resolved as shift
WARNING: shift/reduce conflict for error in state 529 resolved as shift
WARNING: shift/reduce conflict for ID in state 529 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 529 resolved as shift
WARNING: shift/reduce conflict for IF in state 529 resolved as shift
WARNING: shift/reduce conflict for CASE in state 529 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 529 resolved as shift
WARNING: shift/reduce conflict for CALL in state 529 resolved as shift
WARNING: shift/reduce conflict for END in state 530 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 530 resolved as shift
WARNING: shift/reduce conflict for error in state 530 resolved as shift
WARNING: shift/reduce conflict for ID in state 530 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 530 resolved as shift
WARNING: shift/reduce conflict for IF in state 530 resolved as shift
WARNING: shift/reduce conflict for CASE in state 530 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 530 resolved as shift
WARNING: shift/reduce conflict for CALL in state 530 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 531 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 531 resolved as shift
WARNING: shift/reduce conflict for error in state 531 resolved as shift
WARNING: shift/reduce conflict for ID in state 531 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 531 resolved as shift
WARNING: shift/reduce conflict for IF in state 531 resolved as shift
WARNING: shift/reduce conflict for CASE in state 531 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 531 resolved as shift
WARNING: shift/reduce conflict for CALL in state 531 resolved as shift
WARNING: shift/reduce conflict for END in state 532 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 532 resolved as shift
WARNING: shift/reduce conflict for error in state 532 resolved as shift
WARNING: shift/reduce conflict for ID in state 532 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 532 resolved as shift
WARNING: shift/reduce conflict for IF in state 532 resolved as shift
WARNING: shift/reduce conflict for CASE in state 532 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 532 resolved as shift
WARNING: shift/reduce conflict for CALL in state 532 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 533 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 533 resolved as shift
WARNING: shift/reduce conflict for error in state 533 resolved as shift
WARNING: shift/reduce conflict for ID in state 533 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 533 resolved as shift
WARNING: shift/reduce conflict for IF in state 533 resolved as shift
WARNING: shift/reduce conflict for CASE in state 533 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 533 resolved as shift
WARNING: shift/reduce conflict for CALL in state 533 resolved as shift
WARNING: shift/reduce conflict for END in state 535 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 535 resolved as shift
WARNING: shift/reduce conflict for error in state 535 resolved as shift
WARNING: shift/reduce conflict for ID in state 535 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 535 resolved as shift
WARNING: shift/reduce conflict for IF in state 535 resolved as shift
WARNING: shift/reduce conflict for CASE in state 535 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 535 resolved as shift
WARNING: shift/reduce conflict for CALL in state 535 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 542 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 542 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 542 resolved as shift
WARNING: shift/reduce conflict for error in state 542 resolved as shift
WARNING: shift/reduce conflict for ID in state 542 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 542 resolved as shift
WARNING: shift/reduce conflict for IF in state 542 resolved as shift
WARNING: shift/reduce conflict for CASE in state 542 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 542 resolved as shift
WARNING: shift/reduce conflict for CALL in state 542 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 546 resolved as shift
WARNING: shift/reduce conflict for error in state 546 resolved as shift
WARNING: shift/reduce conflict for ID in state 546 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 546 resolved as shift
WARNING: shift/reduce conflict for IF in state 546 resolved as shift
WARNING: shift/reduce conflict for CASE in state 546 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 546 resolved as shift
WARNING: shift/reduce conflict for CALL in state 546 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 549 resolved as shift
WARNING: shift/reduce conflict for error in state 549 resolved as shift
WARNING: shift/reduce conflict for ID in state 549 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 549 resolved as shift
WARNING: shift/reduce conflict for IF in state 549 resolved as shift
WARNING: shift/reduce conflict for CASE in state 549 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 549 resolved as shift
WARNING: shift/reduce conflict for CALL in state 549 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 551 resolved as shift
WARNING: shift/reduce conflict for error in state 551 resolved as shift
WARNING: shift/reduce conflict for ID in state 551 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 551 resolved as shift
WARNING: shift/reduce conflict for IF in state 551 resolved as shift
WARNING: shift/reduce conflict for CASE in state 551 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 551 resolved as shift
WARNING: shift/reduce conflict for CALL in state 551 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 560 resolved as shift
WARNING: shift/reduce conflict for error in state 560 resolved as shift
WARNING: shift/reduce conflict for ID in state 560 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 560 resolved as shift
WARNING: shift/reduce conflict for IF in state 560 resolved as shift
WARNING: shift/reduce conflict for CASE in state 560 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 560 resolved as shift
WARNING: shift/reduce conflict for CALL in state 560 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 563 resolved as shift
WARNING: shift/reduce conflict for error in state 563 resolved as shift
WARNING: shift/reduce conflict for ID in state 563 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 563 resolved as shift
WARNING: shift/reduce conflict for IF in state 563 resolved as shift
WARNING: shift/reduce conflict for CASE in state 563 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 563 resolved as shift
WARNING: shift/reduce conflict for CALL in state 563 resolved as shift
WARNING: shift/reduce conflict for END in state 566 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 566 resolved as shift
WARNING: shift/reduce conflict for error in state 566 resolved as shift
WARNING: shift/reduce conflict for ID in state 566 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 566 resolved as shift
WARNING: shift/reduce conflict for IF in state 566 resolved as shift
WARNING: shift/reduce conflict for CASE in state 566 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 566 resolved as shift
WARNING: shift/reduce conflict for CALL in state 566 resolved as shift
WARNING: shift/reduce conflict for END in state 568 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 568 resolved as shift
WARNING: shift/reduce conflict for error in state 568 resolved as shift
WARNING: shift/reduce conflict for ID in state 568 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 568 resolved as shift
WARNING: shift/reduce conflict for IF in state 568 resolved as shift
WARNING: shift/reduce conflict for CASE in state 568 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 568 resolved as shift
WARNING: shift/reduce conflict for CALL in state 568 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 574 resolved as shift
WARNING: shift/reduce conflict for error in state 574 resolved as shift
WARNING: shift/reduce conflict for ID in state 574 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 574 resolved as shift
WARNING: shift/reduce conflict for IF in state 574 resolved as shift
WARNING: shift/reduce conflict for CASE in state 574 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 574 resolved as shift
WARNING: shift/reduce conflict for CALL in state 574 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 577 resolved as shift
WARNING: shift/reduce conflict for error in state 577 resolved as shift
WARNING: shift/reduce conflict for ID in state 577 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 577 resolved as shift
WARNING: shift/reduce conflict for IF in state 577 resolved as shift
WARNING: shift/reduce conflict for CASE in state 577 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 577 resolved as shift
WARNING: shift/reduce conflict for CALL in state 577 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 587 resolved as shift
WARNING: shift/reduce conflict for error in state 587 resolved as shift
WARNING: shift/reduce conflict for ID in state 587 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 587 resolved as shift
WARNING: shift/reduce conflict for IF in state 587 resolved as shift
WARNING: shift/reduce conflict for CASE in state 587 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 587 resolved as shift
WARNING: shift/reduce conflict for CALL in state 587 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 597 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 597 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 597 resolved as shift
WARNING: shift/reduce conflict for error in state 597 resolved as shift
WARNING: shift/reduce conflict for ID in state 597 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 597 resolved as shift
WARNING: shift/reduce conflict for IF in state 597 resolved as shift
WARNING: shift/reduce conflict for CASE in state 597 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 597 resolved as shift
WARNING: shift/reduce conflict for CALL in state 597 resolved as shift
WARNING: reduce/reduce conflict in state 542 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 542
WARNING: reduce/reduce conflict in state 546 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 546
WARNING: reduce/reduce conflict in state 574 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 574
WARNING: reduce/reduce conflict in state 577 resolved using rule (case -> WHEN expresionPLSQL THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 577
WARNING: reduce/reduce conflict in state 597 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 597
