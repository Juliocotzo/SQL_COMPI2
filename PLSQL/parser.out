Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ALIAS
    ALL
    AMPERMAY
    AMPERMEN
    AMPERSON_D
    AMPMENOR
    ANY
    ARROBAMAY
    ASC
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    BASE64
    BETWEEN
    BPCHAR_PATTERN_OPS
    BY
    BYTEA
    CBRT
    CEIL
    CEILING
    CEJILLAIGUAL
    COLLATE
    CONSTANT
    CONVERT
    CORCHETEA
    CORCHETEC
    COS
    COSD
    COSH
    COT
    COTD
    CURRENT_DATE
    CURRENT_TIME
    DATE_PART
    DECODE
    DEGREES
    DELETE
    DESC
    DISTINCT
    D_DOSPTS
    ENCODE
    ENUM
    ESCAPE
    EXCEPT
    EXCEPTION
    EXECUTE
    EXIT
    EXP
    EXTRACT
    FACTORIAL
    FIRST
    FLOOR
    FOR
    FROM
    GCD
    GET_BYTE
    GREATEST
    GROUP
    HASH
    HAVING
    HEX
    IN
    INCLUDE
    INDEX
    INNER
    INTERSECT
    IS
    ISNULL
    JOIN
    LAST
    LCM
    LEAST
    LENGTH
    LIKE
    LIMIT
    LLAVEA
    LLAVEC
    LN
    LOG
    LOG10
    LOOP
    LOWER
    MAX
    MAYPOT
    MENARROBA
    MENMENOR
    MENPOT
    MIN
    MIN_SCALE
    MOD
    NEXT
    NOTICE
    NOTNULL
    NULLS
    OFFSET
    ON
    ONLY
    ORAMPMAY
    ORDER
    ORMAYMAY
    PERFORM
    PI
    POWER
    PREPARE
    QUERY
    RADIANS
    RANDOM
    RECORD
    RETURN
    RETURNING
    ROUND
    SCALE
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SYMMETRIC
    TAN
    TAND
    TANH
    TEXT_PATTERN_OPS
    TRIM_SCALE
    TRUC
    TRUNC
    UNION
    UNKNOWN
    UPDATE
    USING
    VARCHAR_PATTERN_OPS
    WHERE
    WIDTH_BUCKET

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> createDB_insrt
Rule 8     instrucciones_global_sent -> show_databases_instr
Rule 9     instrucciones_global_sent -> show_tables_instr
Rule 10    instrucciones_global_sent -> use_database_instr
Rule 11    instrucciones_global_sent -> drop_database_instr
Rule 12    instrucciones_global_sent -> create_Table_isnrt
Rule 13    instrucciones_global_sent -> drop_insrt
Rule 14    instrucciones_global_sent -> alterDB_insrt
Rule 15    instrucciones_global_sent -> alterTable_insrt
Rule 16    instrucciones_global_sent -> insert_insrt
Rule 17    instrucciones_global_sent -> error
Rule 18    instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 19    instrucciones_funct_list -> instrucciones_funct_sent
Rule 20    instrucciones_funct_sent -> asignacion
Rule 21    instrucciones_funct_sent -> declaracion
Rule 22    instrucciones_funct_sent -> imprimir
Rule 23    instrucciones_funct_sent -> sentencia_if
Rule 24    instrucciones_funct_sent -> sentencia_switch
Rule 25    instrucciones_funct_sent -> PTCOMA
Rule 26    instrucciones_funct_sent -> llamada_funcion
Rule 27    instrucciones_funct_sent -> empty
Rule 28    instrucciones_funct_sent -> error
Rule 29    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 30    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 31    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 32    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 33    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 34    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 35    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 36    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 37    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 38    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 39    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 40    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 41    createDB_dosParam -> OWNER string_type MODE ENTERO
Rule 42    createDB_dosParam -> MODE ENTERO OWNER string_type
Rule 43    createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO
Rule 44    createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO
Rule 45    createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type
Rule 46    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 47    createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO
Rule 48    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 49    createDB_unParam -> OWNER IGUAL string_type
Rule 50    createDB_unParam -> MODE IGUAL ENTERO
Rule 51    createDB_unParam -> OWNER string_type
Rule 52    createDB_unParam -> MODE ENTERO
Rule 53    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 54    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 55    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 56    show_tables_instr -> SHOW TABLES PTCOMA
Rule 57    use_database_instr -> USE ID PTCOMA
Rule 58    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
Rule 59    create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
Rule 60    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 61    cuerpo_createTable_lista -> cuerpo_createTable
Rule 62    cuerpo_createTable -> ID TIPO_DATO_DEF
Rule 63    cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options
Rule 64    cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC
Rule 65    cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
Rule 66    cuerpo_createTable -> UNIQUE PARA campos_c PARC
Rule 67    cuerpo_createTable -> CONSTRAINT ID constraint_esp
Rule 68    campos_c -> campos_c COMA ID
Rule 69    campos_c -> ID
Rule 70    constraint_esp -> CHECK PARA expresion_logica PARC
Rule 71    constraint_esp -> UNIQUE PARA campos_c PARC
Rule 72    constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
Rule 73    createTable_options -> createTable_options cT_options
Rule 74    createTable_options -> cT_options
Rule 75    cT_options -> N_null
Rule 76    cT_options -> C_unique
Rule 77    cT_options -> llave
Rule 78    cT_options -> O_DEFAULT
Rule 79    cT_options -> C_check
Rule 80    N_null -> NOT NULL
Rule 81    N_null -> NULL
Rule 82    C_unique -> UNIQUE
Rule 83    C_unique -> CONSTRAINT ID UNIQUE
Rule 84    llave -> PRIMARY KEY
Rule 85    llave -> FOREIGN KEY
Rule 86    O_DEFAULT -> DEFAULT expresion_dato_default
Rule 87    C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC
Rule 88    C_check -> CHECK PARA expresion_logica PARC
Rule 89    expresion_dato_default -> ENTERO
Rule 90    expresion_dato_default -> FLOTANTE
Rule 91    expresion_dato_default -> CADENA
Rule 92    TIPO_DATO_DEF -> TEXT
Rule 93    TIPO_DATO_DEF -> FLOAT
Rule 94    TIPO_DATO_DEF -> INTEGER
Rule 95    TIPO_DATO_DEF -> BOOLEAN
Rule 96    TIPO_DATO_DEF -> SMALLINT
Rule 97    TIPO_DATO_DEF -> MONEY
Rule 98    TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC
Rule 99    TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC
Rule 100   TIPO_DATO_DEF -> BIGINT
Rule 101   TIPO_DATO_DEF -> REAL
Rule 102   TIPO_DATO_DEF -> DOUBLE PRECISION
Rule 103   TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time
Rule 104   TIPO_DATO_DEF -> INTERVAL
Rule 105   TIPO_DATO_DEF -> TIME
Rule 106   TIPO_DATO_DEF -> TIMESTAMP
Rule 107   TIPO_DATO_DEF -> DATE
Rule 108   TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC
Rule 109   TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC
Rule 110   TIPO_DATO_DEF -> CHAR PARA ENTERO PARC
Rule 111   TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC
Rule 112   TIPO_DATO_DEF -> CHAR PARA PARC
Rule 113   TIPO_DATO_DEF -> CHARACTER PARA PARC
Rule 114   extract_time -> YEAR
Rule 115   extract_time -> DAY
Rule 116   extract_time -> MONTH
Rule 117   extract_time -> HOUR
Rule 118   extract_time -> MINUTE
Rule 119   extract_time -> SECOND
Rule 120   drop_insrt -> DROP TABLE lista_drop_id PTCOMA
Rule 121   lista_drop_id -> lista_drop_id COMA ID
Rule 122   lista_drop_id -> ID
Rule 123   alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 124   alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 125   usuariosDB -> ID
Rule 126   usuariosDB -> CURRENT_USER
Rule 127   usuariosDB -> SESSION_USER
Rule 128   usuariosDB -> CADENA
Rule 129   alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
Rule 130   alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA
Rule 131   alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
Rule 132   alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
Rule 133   alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
Rule 134   alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
Rule 135   alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
Rule 136   alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
Rule 137   alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
Rule 138   alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA
Rule 139   alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
Rule 140   alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA
Rule 141   alterTable_alter -> alterTable_alter COMA Table_alter
Rule 142   alterTable_alter -> Table_alter
Rule 143   Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO
Rule 144   campos_add_Column -> campos_add_Column COMA tipos_datos_columnas
Rule 145   campos_add_Column -> tipos_datos_columnas
Rule 146   tipos_datos_columnas -> ID TIPO_DATO
Rule 147   insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
Rule 148   insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA
Rule 149   insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA
Rule 150   lista_parametros_lista -> lista_parametros_lista COMA ID
Rule 151   lista_parametros_lista -> ID
Rule 152   lista_datos -> lista_datos COMA exclusiva_insert
Rule 153   lista_datos -> exclusiva_insert
Rule 154   exclusiva_insert -> expresion
Rule 155   exclusiva_insert -> SUBSTRING PARA string_type COMA expresion COMA expresion PARC
Rule 156   exclusiva_insert -> SUBSTR PARA string_type COMA expresion COMA expresion PARC
Rule 157   exclusiva_insert -> MD5 PARA string_type PARC
Rule 158   exclusiva_insert -> TRIM PARA string_type PARC
Rule 159   exclusiva_insert -> NOW PARA PARC
Rule 160   TIPO_DATO -> TEXT
Rule 161   TIPO_DATO -> FLOAT
Rule 162   TIPO_DATO -> INTEGER
Rule 163   TIPO_DATO -> BOOLEAN
Rule 164   TIPO_DATO -> SMALLINT
Rule 165   TIPO_DATO -> MONEY
Rule 166   TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC
Rule 167   TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC
Rule 168   TIPO_DATO -> BIGINT
Rule 169   TIPO_DATO -> REAL
Rule 170   TIPO_DATO -> DOUBLE PRECISION
Rule 171   TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 172   TIPO_DATO -> INTERVAL
Rule 173   TIPO_DATO -> TIME
Rule 174   TIPO_DATO -> TIMESTAMP
Rule 175   TIPO_DATO -> DATE
Rule 176   TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC
Rule 177   TIPO_DATO -> VARCHAR PARA ENTERO PARC
Rule 178   TIPO_DATO -> CHAR PARA ENTERO PARC
Rule 179   TIPO_DATO -> CHARACTER PARA ENTERO PARC
Rule 180   TIPO_DATO -> CHAR PARA PARC
Rule 181   TIPO_DATO -> CHARACTER PARA PARC
Rule 182   string_type -> CADENA
Rule 183   string_type -> ID
Rule 184   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 185   funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 186   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 187   funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 188   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 189   funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 190   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 191   funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 192   llamada_funcion -> SELECT ID PARA params PARC PTCOMA
Rule 193   llamada_funcion -> CALL ID PARA params PARC PTCOMA
Rule 194   params -> params COMA expresionPLSQL
Rule 195   params -> expresionPLSQL
Rule 196   params -> empty
Rule 197   parametros -> parametros COMA parametro
Rule 198   parametros -> parametro
Rule 199   parametro -> ID tipo
Rule 200   parametro -> empty
Rule 201   sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA
Rule 202   case_list -> case_list case
Rule 203   case_list -> case
Rule 204   case -> WHEN expresionPLSQL THEN instrucciones_funct_list
Rule 205   case -> ELSE instrucciones_funct_list
Rule 206   sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
Rule 207   else -> ELSE instrucciones_funct_list
Rule 208   else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else
Rule 209   else -> <empty>
Rule 210   imprimir -> RAISE lista_imprimir PTCOMA
Rule 211   lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 212   lista_imprimir -> sent_imprimir
Rule 213   sent_imprimir -> expresionPLSQL
Rule 214   asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 215   declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
Rule 216   declaracion -> ID tipo PTCOMA
Rule 217   declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA
Rule 218   tipo -> INTEGER
Rule 219   tipo -> SMALLINT
Rule 220   tipo -> BIGINT
Rule 221   tipo -> DECIMAL
Rule 222   tipo -> NUMERIC
Rule 223   tipo -> REAL
Rule 224   tipo -> CHAR
Rule 225   tipo -> DOUBLE
Rule 226   tipo -> PRECISION
Rule 227   tipo -> MONEY
Rule 228   tipo -> FLOAT
Rule 229   tipo -> BOOLEAN
Rule 230   tipo -> VOID
Rule 231   tipo -> CHAR PARA ENTERO PARC
Rule 232   tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 233   tipo -> VARCHAR PARA ENTERO PARC
Rule 234   tipo -> CHARACTER PARA ENTERO PARC
Rule 235   tipo -> TEXT
Rule 236   tipo -> TIME
Rule 237   tipo -> TIMESTAMP
Rule 238   tipo -> DATE
Rule 239   expresionPLSQL -> log
Rule 240   log -> expresionPLSQL AND expresionPLSQL
Rule 241   log -> expresionPLSQL OR expresionPLSQL
Rule 242   log -> rel
Rule 243   rel -> arit MAYOR arit
Rule 244   rel -> arit MENOR arit
Rule 245   rel -> arit MAYORIGUAL arit
Rule 246   rel -> arit MENORIGUAL arit
Rule 247   rel -> arit IGUALIGUAL arit
Rule 248   rel -> arit NOTIGUAL arit
Rule 249   rel -> arit
Rule 250   arit -> arit POR arit
Rule 251   arit -> arit DIVISION arit
Rule 252   arit -> arit MAS arit
Rule 253   arit -> arit MENOS arit
Rule 254   arit -> arit MODULO arit
Rule 255   arit -> arit ANDB arit
Rule 256   arit -> arit SHIFTI arit
Rule 257   arit -> arit SHIFTD arit
Rule 258   arit -> arit XORB arit
Rule 259   arit -> arit ORB arit
Rule 260   arit -> PARA expresionPLSQL PARC
Rule 261   arit -> ID
Rule 262   arit -> CADENA
Rule 263   arit -> ENTERO
Rule 264   arit -> FLOTANTE
Rule 265   arit -> MENOS expresionPLSQL
Rule 266   arit -> NOTB expresionPLSQL
Rule 267   arit -> NOT expresionPLSQL
Rule 268   arit -> TRUE
Rule 269   arit -> FALSE
Rule 270   empty -> <empty>
Rule 271   agrupacion_expresion -> PARA expresion PARC
Rule 272   expresion -> expresion MAS expresion
Rule 273   expresion -> expresion MENOS expresion
Rule 274   expresion -> expresion POR expresion
Rule 275   expresion -> expresion DIV expresion
Rule 276   expresion -> expresion MODULO expresion
Rule 277   expresion -> expresion SHIFTD expresion
Rule 278   expresion -> expresion SHIFTI expresion
Rule 279   expresion -> expresion HASHTAG expresion
Rule 280   expresion -> expresion ANDB expresion
Rule 281   expresion -> expresion D_OR expresion
Rule 282   expresion -> NOTB expresion
Rule 283   expresion -> ORB expresion
Rule 284   expresion -> D_OR expresion
Rule 285   expresion -> PARA expresion_logica PARC
Rule 286   expresion -> TRUE
Rule 287   expresion -> FALSE
Rule 288   expresion_relacional -> expresion MAYOR expresion
Rule 289   expresion_relacional -> expresion MENOR expresion
Rule 290   expresion_relacional -> expresion MAYORIGUAL expresion
Rule 291   expresion_relacional -> expresion MENORIGUAL expresion
Rule 292   expresion_relacional -> expresion IGUALIGUAL expresion
Rule 293   expresion_relacional -> expresion IGUAL expresion
Rule 294   expresion_relacional -> expresion NOIG expresion
Rule 295   expresion_relacional -> expresion NOTIGUAL expresion
Rule 296   expresion_relacional -> expresion
Rule 297   expresion_logica -> expresion_relacional AND expresion_logica
Rule 298   expresion_logica -> expresion_relacional OR expresion_logica
Rule 299   expresion_logica -> NOT expresion_logica
Rule 300   expresion_logica -> expresion_relacional
Rule 301   expresion -> expresion_dato
Rule 302   expresion -> sum_insrt
Rule 303   expresion -> count_insrt
Rule 304   expresion_dato -> string_type
Rule 305   expresion_dato -> MENOS ENTERO
Rule 306   expresion_dato -> ID PUNTO ID
Rule 307   expresion_dato -> expresion_numero
Rule 308   expresion_numero -> ENTERO
Rule 309   expresion_numero -> FLOTANTE
Rule 310   sum_insrt -> SUM agrupacion_expresion
Rule 311   count_insrt -> COUNT agrupacion_expresion

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 132 133 134 135 136 137
ALIAS                : 
ALL                  : 
ALTER                : 123 124 129 130 131 132 133 134 135 136 137 138 138 139 139 140 143
AMPERMAY             : 
AMPERMEN             : 
AMPERSON_D           : 
AMPMENOR             : 
AND                  : 240 297
ANDB                 : 255 280
ANY                  : 
ARROBAMAY            : 
AS                   : 184 185 186 187 188 189 190 191
ASC                  : 
ASIN                 : 
ASIND                : 
ASINH                : 
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BASE64               : 
BEGIN                : 184 185 186 187 188 189 190 191
BETWEEN              : 
BIGINT               : 100 168 220
BOOLEAN              : 95 163 229
BPCHAR_PATTERN_OPS   : 
BY                   : 
BYTEA                : 
CADENA               : 91 128 182 262
CALL                 : 193
CASE                 : 201 201
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLAIGUAL         : 
CHAR                 : 110 112 178 180 224 231
CHARACTER            : 108 111 113 176 179 181 232 234
CHECK                : 70 87 88 133 135
COLLATE              : 
COLUMN               : 130 131 132 138 139 143
COMA                 : 60 68 98 99 121 141 144 150 152 155 155 156 156 166 167 194 197 211
CONSTANT             : 
CONSTRAINT           : 67 83 87 129 135 136 137
CONVERT              : 
CORCHETEA            : 
CORCHETEC            : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 311
CREATE               : 29 30 31 32 33 34 35 36 37 38 39 40 58 59 184 185 186 187 188 189 190 191
CURRENT_DATE         : 
CURRENT_TIME         : 
CURRENT_USER         : 126
DATABASE             : 29 30 31 32 33 34 35 36 37 38 39 40 53 54 123 124
DATABASES            : 55
DATE                 : 107 175 238
DATE_PART            : 
DAY                  : 115
DECIMAL              : 98 166 221
DECLARE              : 185 187 189 191
DECODE               : 
DEFAULT              : 86 217
DEGREES              : 
DELETE               : 
DESC                 : 
DISTINCT             : 
DIV                  : 275
DIVISION             : 251
DOLAR                : 184 184 184 184 185 185 185 185 186 186 186 186 187 187 187 187 188 188 188 188 189 189 189 189 190 190 190 190 191 191 191 191
DOSPUNTOS            : 214 215
DOUBLE               : 102 170 225
DROP                 : 53 54 120 129 130
D_DOSPTS             : 
D_OR                 : 281 284
ELSE                 : 205 207
ELSEIF               : 208
ENCODE               : 
END                  : 184 185 186 187 188 189 190 191 201 206
ENTERO               : 41 42 43 44 45 46 47 48 50 52 89 98 98 99 99 108 109 110 111 166 166 167 167 176 177 178 179 231 232 233 234 263 305 308
ENUM                 : 
ESCAPE               : 
EXCEPT               : 
EXCEPTION            : 
EXECUTE              : 
EXISTS               : 31 32 35 36 39 40 53
EXIT                 : 
EXP                  : 
EXTRACT              : 
FACTORIAL            : 
FALSE                : 269 287
FIRST                : 
FLOAT                : 93 161 228
FLOOR                : 
FLOTANTE             : 90 264 309
FOR                  : 
FOREIGN              : 65 72 85 134 137
FROM                 : 
FUNCTION             : 184 185 186 187
GCD                  : 
GET_BYTE             : 
GREATEST             : 
GROUP                : 
HASH                 : 
HASHTAG              : 279
HAVING               : 
HEX                  : 
HOUR                 : 117
ID                   : 29 30 31 32 33 34 35 36 37 38 39 40 46 48 53 54 57 58 59 59 62 63 65 65 65 67 68 69 72 72 72 83 87 121 122 123 123 124 125 129 130 131 131 131 132 133 134 134 134 134 135 135 136 136 137 137 137 137 137 138 138 139 139 140 143 146 147 148 149 150 151 183 184 185 186 187 188 189 190 191 192 193 199 214 215 216 217 261 306 306
IF                   : 31 32 35 36 39 40 53 206 206
IGUAL                : 43 44 45 46 47 47 48 48 49 50 214 215 293
IGUALIGUAL           : 247 292
IN                   : 
INCLUDE              : 
INDEX                : 
INHERITS             : 59
INNER                : 
INSERT               : 147 148 149
INTEGER              : 94 162 218
INTERSECT            : 
INTERVAL             : 103 104 171 172
INTO                 : 147 148 149
IS                   : 
ISNULL               : 
JOIN                 : 
KEY                  : 64 65 72 84 85 134 137
LANGUAGE             : 184 185 186 187 188 189 190 191
LAST                 : 
LCM                  : 
LEAST                : 
LENGTH               : 
LIKE                 : 
LIMIT                : 
LLAVEA               : 
LLAVEC               : 
LN                   : 
LOG                  : 
LOG10                : 
LOOP                 : 
LOWER                : 
MAS                  : 252 272
MAX                  : 
MAYOR                : 243 288
MAYORIGUAL           : 245 290
MAYPOT               : 
MD5                  : 157
MENARROBA            : 
MENMENOR             : 
MENOR                : 244 289
MENORIGUAL           : 246 291
MENOS                : 253 265 273 305
MENPOT               : 
MIN                  : 
MINUTE               : 118
MIN_SCALE            : 
MOD                  : 
MODE                 : 41 42 43 44 45 46 47 48 50 52
MODULO               : 254 276
MONEY                : 97 165 227
MONTH                : 116
NEXT                 : 
NOIG                 : 294
NOT                  : 31 32 35 36 39 40 80 139 267 299
NOTB                 : 266 282
NOTICE               : 
NOTIGUAL             : 248 295
NOTNULL              : 
NOW                  : 159
NULL                 : 80 81 138 139
NULLS                : 
NUMERIC              : 99 167 222
OFFSET               : 
ON                   : 
ONLY                 : 
OR                   : 30 32 34 36 38 40 186 187 190 191 241 298
ORAMPMAY             : 
ORB                  : 259 283
ORDER                : 
ORMAYMAY             : 
OWNER                : 41 42 43 44 45 46 47 48 49 51 124
PARA                 : 58 59 59 64 65 65 66 70 71 72 72 87 88 98 99 108 109 110 111 112 113 133 134 134 135 136 137 137 147 147 148 148 149 155 156 157 158 159 166 167 176 177 178 179 180 181 184 185 186 187 188 189 190 191 192 193 231 232 233 234 260 271 285
PARC                 : 58 59 59 64 65 65 66 70 71 72 72 87 88 98 99 108 109 110 111 112 113 133 134 134 135 136 137 137 147 147 148 148 149 155 156 157 158 159 166 167 176 177 178 179 180 181 184 185 186 187 188 189 190 191 192 193 231 232 233 234 260 271 285
PERFORM              : 
PI                   : 
PLPGSQL              : 184 185 186 187 188 189 190 191
POR                  : 250 274
POWER                : 
PRECISION            : 102 170 226
PREPARE              : 
PRIMARY              : 64 84
PROCEDURE            : 188 189 190 191
PTCOMA               : 25 29 30 31 32 33 34 35 36 37 38 39 40 53 54 55 56 57 58 59 120 123 124 129 130 131 132 133 134 135 136 137 138 139 140 147 148 149 184 184 185 185 186 186 187 187 188 188 189 189 190 190 191 191 192 193 201 206 210 214 215 216 217
PUNTO                : 306
QUERY                : 
RADIANS              : 
RAISE                : 210
RANDOM               : 
REAL                 : 101 169 223
RECORD               : 
REFERENCES           : 65 72 134 137
RENAME               : 123 131
REPLACE              : 30 32 34 36 38 40 186 187 190 191
RETURN               : 
RETURNING            : 
RETURNS              : 184 185 186 187 188 189 190 191
ROUND                : 
SCALE                : 
SECOND               : 119
SELECT               : 192
SESSION_USER         : 127
SET                  : 138 139
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SHIFTD               : 257 277
SHIFTI               : 256 278
SHOW                 : 55 56
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 96 164 219
SOME                 : 
SQRT                 : 
SUBSTR               : 156
SUBSTRING            : 155
SUM                  : 310
SYMMETRIC            : 
TABLE                : 58 59 120 129 130 131 132 133 134 135 136 137 138 139 140
TABLES               : 56
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 92 160 235
TEXT_PATTERN_OPS     : 
THEN                 : 204 206 208
TIME                 : 105 173 236
TIMESTAMP            : 106 174 237
TO                   : 103 123 124 131 171
TRIM                 : 158
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 268 286
TRUNC                : 
TYPE                 : 143
UNION                : 
UNIQUE               : 66 71 82 83 136
UNKNOWN              : 
UPDATE               : 
USE                  : 57
USING                : 
VALUES               : 147 148 149
VARCHAR              : 109 177 233
VARCHAR_PATTERN_OPS  : 
VARYING              : 108 176 232
VOID                 : 230
WHEN                 : 204
WHERE                : 
WIDTH_BUCKET         : 
XORB                 : 258
YEAR                 : 114
error                : 17 28

Nonterminals, with rules where they appear

C_check              : 79
C_unique             : 76
N_null               : 75
O_DEFAULT            : 78
TIPO_DATO            : 143 146
TIPO_DATO_DEF        : 62 63
Table_alter          : 141 142
agrupacion_expresion : 310 311
alterDB_insrt        : 14
alterTable_alter     : 140 141
alterTable_insrt     : 15
arit                 : 243 243 244 244 245 245 246 246 247 247 248 248 249 250 250 251 251 252 252 253 253 254 254 255 255 256 256 257 257 258 258 259 259
asignacion           : 20
cT_options           : 73 74
campos_add_Column    : 132 144
campos_c             : 64 66 68 71 129 130 136
case                 : 202 203
case_list            : 201 202
codigo               : 1
constraint_esp       : 67
count_insrt          : 303
createDB_dosParam    : 37 38 39 40
createDB_insrt       : 7
createDB_unParam     : 33 34 35 36
createTable_options  : 63 73
create_Table_isnrt   : 12
cuerpo_createTable   : 60 61
cuerpo_createTable_lista : 58 59 60
declaracion          : 21
drop_database_instr  : 11
drop_insrt           : 13
else                 : 206 208
empty                : 27 196 200
exclusiva_insert     : 152 153
expresion            : 154 155 155 156 156 271 272 272 273 273 274 274 275 275 276 276 277 277 278 278 279 279 280 280 281 281 282 283 284 288 288 289 289 290 290 291 291 292 292 293 293 294 294 295 295 296
expresionPLSQL       : 194 195 201 204 206 208 213 214 215 217 240 240 241 241 260 265 266 267
expresion_dato       : 301
expresion_dato_default : 86
expresion_logica     : 70 87 88 133 135 285 297 298 299
expresion_numero     : 307
expresion_relacional : 297 298 300
extract_time         : 103 103 171 171
funcion              : 5
imprimir             : 22
inicio               : 0
insert_insrt         : 16
instrucciones_funct_list : 18 184 185 185 186 187 187 188 189 189 190 191 191 204 205 206 207 208
instrucciones_funct_sent : 18 19
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_datos          : 147 148 149 152
lista_drop_id        : 120 121
lista_imprimir       : 210 211
lista_parametros_lista : 147 150
llamada_funcion      : 6 26
llave                : 77
log                  : 239
parametro            : 197 198
parametros           : 184 185 186 187 188 189 190 191 197
params               : 192 193 194
rel                  : 242
sent_imprimir        : 211 212
sentencia_if         : 23
sentencia_switch     : 24
show_databases_instr : 8
show_tables_instr    : 9
string_type          : 41 42 43 44 45 47 49 51 155 156 157 158 304
sum_insrt            : 302
tipo                 : 184 185 186 187 188 189 190 191 199 215 216 217
tipos_datos_columnas : 144 145
use_database_instr   : 10
usuariosDB           : 124

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . drop_insrt
    (14) instrucciones_global_sent -> . alterDB_insrt
    (15) instrucciones_global_sent -> . alterTable_insrt
    (16) instrucciones_global_sent -> . insert_insrt
    (17) instrucciones_global_sent -> . error
    (184) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (186) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (188) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (190) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (35) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (55) show_databases_instr -> . SHOW DATABASES PTCOMA
    (56) show_tables_instr -> . SHOW TABLES PTCOMA
    (57) use_database_instr -> . USE ID PTCOMA
    (53) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (54) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (58) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (59) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (120) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (123) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (124) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (129) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (130) alterTable_insrt -> . ALTER TABLE ID DROP COLUMN campos_c PTCOMA
    (131) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (132) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (133) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (134) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (135) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (138) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA
    (139) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (140) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA
    (147) insert_insrt -> . INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
    (148) insert_insrt -> . INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA
    (149) insert_insrt -> . INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA

    error           shift and go to state 17
    CREATE          shift and go to state 18
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    SHOW            shift and go to state 21
    USE             shift and go to state 22
    DROP            shift and go to state 23
    ALTER           shift and go to state 24
    INSERT          shift and go to state 25

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12
    drop_insrt                     shift and go to state 13
    alterDB_insrt                  shift and go to state 14
    alterTable_insrt               shift and go to state 15
    insert_insrt                   shift and go to state 16

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . create_Table_isnrt
    (13) instrucciones_global_sent -> . drop_insrt
    (14) instrucciones_global_sent -> . alterDB_insrt
    (15) instrucciones_global_sent -> . alterTable_insrt
    (16) instrucciones_global_sent -> . insert_insrt
    (17) instrucciones_global_sent -> . error
    (184) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (186) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (188) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (190) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (31) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (35) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (55) show_databases_instr -> . SHOW DATABASES PTCOMA
    (56) show_tables_instr -> . SHOW TABLES PTCOMA
    (57) use_database_instr -> . USE ID PTCOMA
    (53) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (54) drop_database_instr -> . DROP DATABASE ID PTCOMA
    (58) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (59) create_Table_isnrt -> . CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (120) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (123) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (124) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (129) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (130) alterTable_insrt -> . ALTER TABLE ID DROP COLUMN campos_c PTCOMA
    (131) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (132) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (133) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (134) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (135) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (138) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA
    (139) alterTable_insrt -> . ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (140) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA
    (147) insert_insrt -> . INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
    (148) insert_insrt -> . INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA
    (149) insert_insrt -> . INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 17
    CREATE          shift and go to state 18
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    SHOW            shift and go to state 21
    USE             shift and go to state 22
    DROP            shift and go to state 23
    ALTER           shift and go to state 24
    INSERT          shift and go to state 25

    instrucciones_global_sent      shift and go to state 26
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11
    create_Table_isnrt             shift and go to state 12
    drop_insrt                     shift and go to state 13
    alterDB_insrt                  shift and go to state 14
    alterTable_insrt               shift and go to state 15
    insert_insrt                   shift and go to state 16

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CALL            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SHOW            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    USE             reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    DROP            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    ALTER           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    INSERT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CALL            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SHOW            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    USE             reduce using rule 5 (instrucciones_global_sent -> funcion .)
    DROP            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    ALTER           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    INSERT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CALL            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SHOW            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    USE             reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    DROP            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    ALTER           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    INSERT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> createDB_insrt .

    error           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CALL            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SHOW            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    USE             reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    DROP            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    ALTER           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    INSERT          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    $end            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)


state 8

    (8) instrucciones_global_sent -> show_databases_instr .

    error           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CREATE          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SELECT          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CALL            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SHOW            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    USE             reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    DROP            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    ALTER           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    INSERT          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    $end            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)


state 9

    (9) instrucciones_global_sent -> show_tables_instr .

    error           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CREATE          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SELECT          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CALL            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SHOW            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    USE             reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    DROP            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    ALTER           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    INSERT          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    $end            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)


state 10

    (10) instrucciones_global_sent -> use_database_instr .

    error           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CREATE          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SELECT          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CALL            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SHOW            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    USE             reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    DROP            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    ALTER           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    INSERT          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    $end            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)


state 11

    (11) instrucciones_global_sent -> drop_database_instr .

    error           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CREATE          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SELECT          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CALL            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SHOW            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    USE             reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    DROP            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    ALTER           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    INSERT          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    $end            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)


state 12

    (12) instrucciones_global_sent -> create_Table_isnrt .

    error           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CREATE          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SELECT          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    CALL            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    SHOW            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    USE             reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    DROP            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    ALTER           reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    INSERT          reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)
    $end            reduce using rule 12 (instrucciones_global_sent -> create_Table_isnrt .)


state 13

    (13) instrucciones_global_sent -> drop_insrt .

    error           reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    CREATE          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    SELECT          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    CALL            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    SHOW            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    USE             reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    DROP            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    ALTER           reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    INSERT          reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)
    $end            reduce using rule 13 (instrucciones_global_sent -> drop_insrt .)


state 14

    (14) instrucciones_global_sent -> alterDB_insrt .

    error           reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    CREATE          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    SELECT          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    CALL            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    SHOW            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    USE             reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    DROP            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    ALTER           reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    INSERT          reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)
    $end            reduce using rule 14 (instrucciones_global_sent -> alterDB_insrt .)


state 15

    (15) instrucciones_global_sent -> alterTable_insrt .

    error           reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    CREATE          reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    SELECT          reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    CALL            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    SHOW            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    USE             reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    DROP            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    ALTER           reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    INSERT          reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)
    $end            reduce using rule 15 (instrucciones_global_sent -> alterTable_insrt .)


state 16

    (16) instrucciones_global_sent -> insert_insrt .

    error           reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    CREATE          reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    SELECT          reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    CALL            reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    SHOW            reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    USE             reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    DROP            reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    ALTER           reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    INSERT          reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)
    $end            reduce using rule 16 (instrucciones_global_sent -> insert_insrt .)


state 17

    (17) instrucciones_global_sent -> error .

    error           reduce using rule 17 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 17 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 17 (instrucciones_global_sent -> error .)
    CALL            reduce using rule 17 (instrucciones_global_sent -> error .)
    SHOW            reduce using rule 17 (instrucciones_global_sent -> error .)
    USE             reduce using rule 17 (instrucciones_global_sent -> error .)
    DROP            reduce using rule 17 (instrucciones_global_sent -> error .)
    ALTER           reduce using rule 17 (instrucciones_global_sent -> error .)
    INSERT          reduce using rule 17 (instrucciones_global_sent -> error .)
    $end            reduce using rule 17 (instrucciones_global_sent -> error .)


state 18

    (184) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (186) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (188) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (190) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (29) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (30) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (31) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (32) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (38) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (58) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA
    (59) create_Table_isnrt -> CREATE . TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    FUNCTION        shift and go to state 27
    OR              shift and go to state 28
    PROCEDURE       shift and go to state 29
    DATABASE        shift and go to state 30
    TABLE           shift and go to state 31


state 19

    (192) llamada_funcion -> SELECT . ID PARA params PARC PTCOMA

    ID              shift and go to state 32


state 20

    (193) llamada_funcion -> CALL . ID PARA params PARC PTCOMA

    ID              shift and go to state 33


state 21

    (55) show_databases_instr -> SHOW . DATABASES PTCOMA
    (56) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 34
    TABLES          shift and go to state 35


state 22

    (57) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 36


state 23

    (53) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (54) drop_database_instr -> DROP . DATABASE ID PTCOMA
    (120) drop_insrt -> DROP . TABLE lista_drop_id PTCOMA

    DATABASE        shift and go to state 37
    TABLE           shift and go to state 38


state 24

    (123) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (124) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA
    (129) alterTable_insrt -> ALTER . TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (130) alterTable_insrt -> ALTER . TABLE ID DROP COLUMN campos_c PTCOMA
    (131) alterTable_insrt -> ALTER . TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (132) alterTable_insrt -> ALTER . TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (133) alterTable_insrt -> ALTER . TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (134) alterTable_insrt -> ALTER . TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (135) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (138) alterTable_insrt -> ALTER . TABLE ID ALTER COLUMN ID SET NULL PTCOMA
    (139) alterTable_insrt -> ALTER . TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (140) alterTable_insrt -> ALTER . TABLE ID alterTable_alter PTCOMA

    DATABASE        shift and go to state 39
    TABLE           shift and go to state 40


state 25

    (147) insert_insrt -> INSERT . INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
    (148) insert_insrt -> INSERT . INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA
    (149) insert_insrt -> INSERT . INTO ID VALUES PARA lista_datos PARC PTCOMA

    INTO            shift and go to state 41


state 26

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CALL            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SHOW            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    USE             reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    DROP            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    ALTER           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    INSERT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 27

    (184) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 42


state 28

    (186) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (190) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (30) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (32) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 43


state 29

    (188) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 44


state 30

    (29) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (31) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (33) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 45
    IF              shift and go to state 46


state 31

    (58) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC PTCOMA
    (59) create_Table_isnrt -> CREATE TABLE . ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    ID              shift and go to state 47


state 32

    (192) llamada_funcion -> SELECT ID . PARA params PARC PTCOMA

    PARA            shift and go to state 48


state 33

    (193) llamada_funcion -> CALL ID . PARA params PARC PTCOMA

    PARA            shift and go to state 49


state 34

    (55) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 50


state 35

    (56) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 51


state 36

    (57) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 52


state 37

    (53) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA
    (54) drop_database_instr -> DROP DATABASE . ID PTCOMA

    IF              shift and go to state 53
    ID              shift and go to state 54


state 38

    (120) drop_insrt -> DROP TABLE . lista_drop_id PTCOMA
    (121) lista_drop_id -> . lista_drop_id COMA ID
    (122) lista_drop_id -> . ID

    ID              shift and go to state 56

    lista_drop_id                  shift and go to state 55

state 39

    (123) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (124) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 57


state 40

    (129) alterTable_insrt -> ALTER TABLE . ID DROP CONSTRAINT campos_c PTCOMA
    (130) alterTable_insrt -> ALTER TABLE . ID DROP COLUMN campos_c PTCOMA
    (131) alterTable_insrt -> ALTER TABLE . ID RENAME COLUMN ID TO ID PTCOMA
    (132) alterTable_insrt -> ALTER TABLE . ID ADD COLUMN campos_add_Column PTCOMA
    (133) alterTable_insrt -> ALTER TABLE . ID ADD CHECK PARA expresion_logica PARC PTCOMA
    (134) alterTable_insrt -> ALTER TABLE . ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (138) alterTable_insrt -> ALTER TABLE . ID ALTER COLUMN ID SET NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE . ID ALTER COLUMN ID SET NOT NULL PTCOMA
    (140) alterTable_insrt -> ALTER TABLE . ID alterTable_alter PTCOMA

    ID              shift and go to state 58


state 41

    (147) insert_insrt -> INSERT INTO . ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
    (148) insert_insrt -> INSERT INTO . ID PARA PARC VALUES PARA lista_datos PARC PTCOMA
    (149) insert_insrt -> INSERT INTO . ID VALUES PARA lista_datos PARC PTCOMA

    ID              shift and go to state 59


state 42

    (184) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 60


state 43

    (186) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (190) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    FUNCTION        shift and go to state 61
    PROCEDURE       shift and go to state 62
    DATABASE        shift and go to state 63


state 44

    (188) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 64


state 45

    (29) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (33) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (37) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (49) createDB_unParam -> . OWNER IGUAL string_type
    (50) createDB_unParam -> . MODE IGUAL ENTERO
    (51) createDB_unParam -> . OWNER string_type
    (52) createDB_unParam -> . MODE ENTERO
    (41) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (43) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (45) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (47) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 65
    OWNER           shift and go to state 68
    MODE            shift and go to state 69

    createDB_unParam               shift and go to state 66
    createDB_dosParam              shift and go to state 67

state 46

    (31) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 70


state 47

    (58) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC PTCOMA
    (59) create_Table_isnrt -> CREATE TABLE ID . PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA

    PARA            shift and go to state 71


state 48

    (192) llamada_funcion -> SELECT ID PARA . params PARC PTCOMA
    (194) params -> . params COMA expresionPLSQL
    (195) params -> . expresionPLSQL
    (196) params -> . empty
    (239) expresionPLSQL -> . log
    (270) empty -> .
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)
    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    params                         shift and go to state 74
    expresionPLSQL                 shift and go to state 75
    empty                          shift and go to state 76
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 49

    (193) llamada_funcion -> CALL ID PARA . params PARC PTCOMA
    (194) params -> . params COMA expresionPLSQL
    (195) params -> . expresionPLSQL
    (196) params -> . empty
    (239) expresionPLSQL -> . log
    (270) empty -> .
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)
    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    params                         shift and go to state 88
    expresionPLSQL                 shift and go to state 75
    empty                          shift and go to state 76
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 50

    (55) show_databases_instr -> SHOW DATABASES PTCOMA .

    error           reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CREATE          reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SELECT          reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CALL            reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    ALTER           reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    INSERT          reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 55 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 51

    (56) show_tables_instr -> SHOW TABLES PTCOMA .

    error           reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CREATE          reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SELECT          reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CALL            reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    ALTER           reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    INSERT          reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 56 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 52

    (57) use_database_instr -> USE ID PTCOMA .

    error           reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    CREATE          reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    SELECT          reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    CALL            reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    ALTER           reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    INSERT          reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 57 (use_database_instr -> USE ID PTCOMA .)


state 53

    (53) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 89


state 54

    (54) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 90


state 55

    (120) drop_insrt -> DROP TABLE lista_drop_id . PTCOMA
    (121) lista_drop_id -> lista_drop_id . COMA ID

    PTCOMA          shift and go to state 91
    COMA            shift and go to state 92


state 56

    (122) lista_drop_id -> ID .

    PTCOMA          reduce using rule 122 (lista_drop_id -> ID .)
    COMA            reduce using rule 122 (lista_drop_id -> ID .)


state 57

    (123) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (124) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 93
    OWNER           shift and go to state 94


state 58

    (129) alterTable_insrt -> ALTER TABLE ID . DROP CONSTRAINT campos_c PTCOMA
    (130) alterTable_insrt -> ALTER TABLE ID . DROP COLUMN campos_c PTCOMA
    (131) alterTable_insrt -> ALTER TABLE ID . RENAME COLUMN ID TO ID PTCOMA
    (132) alterTable_insrt -> ALTER TABLE ID . ADD COLUMN campos_add_Column PTCOMA
    (133) alterTable_insrt -> ALTER TABLE ID . ADD CHECK PARA expresion_logica PARC PTCOMA
    (134) alterTable_insrt -> ALTER TABLE ID . ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (138) alterTable_insrt -> ALTER TABLE ID . ALTER COLUMN ID SET NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE ID . ALTER COLUMN ID SET NOT NULL PTCOMA
    (140) alterTable_insrt -> ALTER TABLE ID . alterTable_alter PTCOMA
    (141) alterTable_alter -> . alterTable_alter COMA Table_alter
    (142) alterTable_alter -> . Table_alter
    (143) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO

    DROP            shift and go to state 96
    RENAME          shift and go to state 97
    ADD             shift and go to state 98
    ALTER           shift and go to state 95

    alterTable_alter               shift and go to state 99
    Table_alter                    shift and go to state 100

state 59

    (147) insert_insrt -> INSERT INTO ID . PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
    (148) insert_insrt -> INSERT INTO ID . PARA PARC VALUES PARA lista_datos PARC PTCOMA
    (149) insert_insrt -> INSERT INTO ID . VALUES PARA lista_datos PARC PTCOMA

    PARA            shift and go to state 101
    VALUES          shift and go to state 102


state 60

    (184) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> . parametros COMA parametro
    (198) parametros -> . parametro
    (199) parametro -> . ID tipo
    (200) parametro -> . empty
    (270) empty -> .

    ID              shift and go to state 103
    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)

    parametros                     shift and go to state 104
    parametro                      shift and go to state 105
    empty                          shift and go to state 106

state 61

    (186) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 107


state 62

    (190) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 108


state 63

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (32) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 109
    IF              shift and go to state 110


state 64

    (188) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> . parametros COMA parametro
    (198) parametros -> . parametro
    (199) parametro -> . ID tipo
    (200) parametro -> . empty
    (270) empty -> .

    ID              shift and go to state 103
    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)

    parametros                     shift and go to state 111
    parametro                      shift and go to state 105
    empty                          shift and go to state 106

state 65

    (29) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    error           reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CALL            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    INSERT          reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 66

    (33) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 112


state 67

    (37) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 113


state 68

    (49) createDB_unParam -> OWNER . IGUAL string_type
    (51) createDB_unParam -> OWNER . string_type
    (41) createDB_dosParam -> OWNER . string_type MODE ENTERO
    (43) createDB_dosParam -> OWNER . string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> OWNER . IGUAL string_type MODE ENTERO
    (47) createDB_dosParam -> OWNER . IGUAL string_type MODE IGUAL ENTERO
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    IGUAL           shift and go to state 114
    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 115

state 69

    (50) createDB_unParam -> MODE . IGUAL ENTERO
    (52) createDB_unParam -> MODE . ENTERO
    (42) createDB_dosParam -> MODE . ENTERO OWNER string_type
    (45) createDB_dosParam -> MODE . ENTERO OWNER IGUAL string_type
    (46) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (48) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    IGUAL           shift and go to state 118
    ENTERO          shift and go to state 119


state 70

    (31) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 120


state 71

    (58) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC PTCOMA
    (59) create_Table_isnrt -> CREATE TABLE ID PARA . cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA
    (60) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (61) cuerpo_createTable_lista -> . cuerpo_createTable
    (62) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (63) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (64) cuerpo_createTable -> . PRIMARY KEY PARA campos_c PARC
    (65) cuerpo_createTable -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
    (66) cuerpo_createTable -> . UNIQUE PARA campos_c PARC
    (67) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 121
    PRIMARY         shift and go to state 124
    FOREIGN         shift and go to state 125
    UNIQUE          shift and go to state 126
    CONSTRAINT      shift and go to state 127

    cuerpo_createTable_lista       shift and go to state 122
    cuerpo_createTable             shift and go to state 123

state 72

    (261) arit -> ID .

    MAYOR           reduce using rule 261 (arit -> ID .)
    MENOR           reduce using rule 261 (arit -> ID .)
    MAYORIGUAL      reduce using rule 261 (arit -> ID .)
    MENORIGUAL      reduce using rule 261 (arit -> ID .)
    IGUALIGUAL      reduce using rule 261 (arit -> ID .)
    NOTIGUAL        reduce using rule 261 (arit -> ID .)
    POR             reduce using rule 261 (arit -> ID .)
    DIVISION        reduce using rule 261 (arit -> ID .)
    MAS             reduce using rule 261 (arit -> ID .)
    MENOS           reduce using rule 261 (arit -> ID .)
    MODULO          reduce using rule 261 (arit -> ID .)
    ANDB            reduce using rule 261 (arit -> ID .)
    SHIFTI          reduce using rule 261 (arit -> ID .)
    SHIFTD          reduce using rule 261 (arit -> ID .)
    XORB            reduce using rule 261 (arit -> ID .)
    ORB             reduce using rule 261 (arit -> ID .)
    AND             reduce using rule 261 (arit -> ID .)
    OR              reduce using rule 261 (arit -> ID .)
    PARC            reduce using rule 261 (arit -> ID .)
    COMA            reduce using rule 261 (arit -> ID .)
    PTCOMA          reduce using rule 261 (arit -> ID .)
    THEN            reduce using rule 261 (arit -> ID .)
    WHEN            reduce using rule 261 (arit -> ID .)
    ELSE            reduce using rule 261 (arit -> ID .)


state 73

    (260) arit -> PARA . expresionPLSQL PARC
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 128
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 74

    (192) llamada_funcion -> SELECT ID PARA params . PARC PTCOMA
    (194) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 129
    COMA            shift and go to state 130


state 75

    (195) params -> expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 195 (params -> expresionPLSQL .)
    COMA            reduce using rule 195 (params -> expresionPLSQL .)
    AND             shift and go to state 131
    OR              shift and go to state 132


state 76

    (196) params -> empty .

    PARC            reduce using rule 196 (params -> empty .)
    COMA            reduce using rule 196 (params -> empty .)


state 77

    (239) expresionPLSQL -> log .

    AND             reduce using rule 239 (expresionPLSQL -> log .)
    OR              reduce using rule 239 (expresionPLSQL -> log .)
    PARC            reduce using rule 239 (expresionPLSQL -> log .)
    COMA            reduce using rule 239 (expresionPLSQL -> log .)
    MAYOR           reduce using rule 239 (expresionPLSQL -> log .)
    MENOR           reduce using rule 239 (expresionPLSQL -> log .)
    MAYORIGUAL      reduce using rule 239 (expresionPLSQL -> log .)
    MENORIGUAL      reduce using rule 239 (expresionPLSQL -> log .)
    IGUALIGUAL      reduce using rule 239 (expresionPLSQL -> log .)
    NOTIGUAL        reduce using rule 239 (expresionPLSQL -> log .)
    POR             reduce using rule 239 (expresionPLSQL -> log .)
    DIVISION        reduce using rule 239 (expresionPLSQL -> log .)
    MAS             reduce using rule 239 (expresionPLSQL -> log .)
    MENOS           reduce using rule 239 (expresionPLSQL -> log .)
    MODULO          reduce using rule 239 (expresionPLSQL -> log .)
    ANDB            reduce using rule 239 (expresionPLSQL -> log .)
    SHIFTI          reduce using rule 239 (expresionPLSQL -> log .)
    SHIFTD          reduce using rule 239 (expresionPLSQL -> log .)
    XORB            reduce using rule 239 (expresionPLSQL -> log .)
    ORB             reduce using rule 239 (expresionPLSQL -> log .)
    PTCOMA          reduce using rule 239 (expresionPLSQL -> log .)
    THEN            reduce using rule 239 (expresionPLSQL -> log .)
    WHEN            reduce using rule 239 (expresionPLSQL -> log .)
    ELSE            reduce using rule 239 (expresionPLSQL -> log .)


state 78

    (242) log -> rel .

    AND             reduce using rule 242 (log -> rel .)
    OR              reduce using rule 242 (log -> rel .)
    PARC            reduce using rule 242 (log -> rel .)
    COMA            reduce using rule 242 (log -> rel .)
    MAYOR           reduce using rule 242 (log -> rel .)
    MENOR           reduce using rule 242 (log -> rel .)
    MAYORIGUAL      reduce using rule 242 (log -> rel .)
    MENORIGUAL      reduce using rule 242 (log -> rel .)
    IGUALIGUAL      reduce using rule 242 (log -> rel .)
    NOTIGUAL        reduce using rule 242 (log -> rel .)
    POR             reduce using rule 242 (log -> rel .)
    DIVISION        reduce using rule 242 (log -> rel .)
    MAS             reduce using rule 242 (log -> rel .)
    MENOS           reduce using rule 242 (log -> rel .)
    MODULO          reduce using rule 242 (log -> rel .)
    ANDB            reduce using rule 242 (log -> rel .)
    SHIFTI          reduce using rule 242 (log -> rel .)
    SHIFTD          reduce using rule 242 (log -> rel .)
    XORB            reduce using rule 242 (log -> rel .)
    ORB             reduce using rule 242 (log -> rel .)
    PTCOMA          reduce using rule 242 (log -> rel .)
    THEN            reduce using rule 242 (log -> rel .)
    WHEN            reduce using rule 242 (log -> rel .)
    ELSE            reduce using rule 242 (log -> rel .)


state 79

    (243) rel -> arit . MAYOR arit
    (244) rel -> arit . MENOR arit
    (245) rel -> arit . MAYORIGUAL arit
    (246) rel -> arit . MENORIGUAL arit
    (247) rel -> arit . IGUALIGUAL arit
    (248) rel -> arit . NOTIGUAL arit
    (249) rel -> arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 133
    MENOR           shift and go to state 134
    MAYORIGUAL      shift and go to state 135
    MENORIGUAL      shift and go to state 136
    IGUALIGUAL      shift and go to state 137
    NOTIGUAL        shift and go to state 138
    AND             reduce using rule 249 (rel -> arit .)
    OR              reduce using rule 249 (rel -> arit .)
    PARC            reduce using rule 249 (rel -> arit .)
    COMA            reduce using rule 249 (rel -> arit .)
    PTCOMA          reduce using rule 249 (rel -> arit .)
    THEN            reduce using rule 249 (rel -> arit .)
    WHEN            reduce using rule 249 (rel -> arit .)
    ELSE            reduce using rule 249 (rel -> arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    ANDB            shift and go to state 144
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146
    XORB            shift and go to state 147
    ORB             shift and go to state 148

  ! MAYOR           [ reduce using rule 249 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 249 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 249 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 249 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 249 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 249 (rel -> arit .) ]
  ! POR             [ reduce using rule 249 (rel -> arit .) ]
  ! DIVISION        [ reduce using rule 249 (rel -> arit .) ]
  ! MAS             [ reduce using rule 249 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 249 (rel -> arit .) ]
  ! MODULO          [ reduce using rule 249 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 249 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 249 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 249 (rel -> arit .) ]
  ! XORB            [ reduce using rule 249 (rel -> arit .) ]
  ! ORB             [ reduce using rule 249 (rel -> arit .) ]


state 80

    (265) arit -> MENOS . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 149
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 81

    (262) arit -> CADENA .

    MAYOR           reduce using rule 262 (arit -> CADENA .)
    MENOR           reduce using rule 262 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 262 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 262 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 262 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 262 (arit -> CADENA .)
    POR             reduce using rule 262 (arit -> CADENA .)
    DIVISION        reduce using rule 262 (arit -> CADENA .)
    MAS             reduce using rule 262 (arit -> CADENA .)
    MENOS           reduce using rule 262 (arit -> CADENA .)
    MODULO          reduce using rule 262 (arit -> CADENA .)
    ANDB            reduce using rule 262 (arit -> CADENA .)
    SHIFTI          reduce using rule 262 (arit -> CADENA .)
    SHIFTD          reduce using rule 262 (arit -> CADENA .)
    XORB            reduce using rule 262 (arit -> CADENA .)
    ORB             reduce using rule 262 (arit -> CADENA .)
    AND             reduce using rule 262 (arit -> CADENA .)
    OR              reduce using rule 262 (arit -> CADENA .)
    PARC            reduce using rule 262 (arit -> CADENA .)
    COMA            reduce using rule 262 (arit -> CADENA .)
    PTCOMA          reduce using rule 262 (arit -> CADENA .)
    THEN            reduce using rule 262 (arit -> CADENA .)
    WHEN            reduce using rule 262 (arit -> CADENA .)
    ELSE            reduce using rule 262 (arit -> CADENA .)


state 82

    (263) arit -> ENTERO .

    MAYOR           reduce using rule 263 (arit -> ENTERO .)
    MENOR           reduce using rule 263 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 263 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 263 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 263 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 263 (arit -> ENTERO .)
    POR             reduce using rule 263 (arit -> ENTERO .)
    DIVISION        reduce using rule 263 (arit -> ENTERO .)
    MAS             reduce using rule 263 (arit -> ENTERO .)
    MENOS           reduce using rule 263 (arit -> ENTERO .)
    MODULO          reduce using rule 263 (arit -> ENTERO .)
    ANDB            reduce using rule 263 (arit -> ENTERO .)
    SHIFTI          reduce using rule 263 (arit -> ENTERO .)
    SHIFTD          reduce using rule 263 (arit -> ENTERO .)
    XORB            reduce using rule 263 (arit -> ENTERO .)
    ORB             reduce using rule 263 (arit -> ENTERO .)
    AND             reduce using rule 263 (arit -> ENTERO .)
    OR              reduce using rule 263 (arit -> ENTERO .)
    PARC            reduce using rule 263 (arit -> ENTERO .)
    COMA            reduce using rule 263 (arit -> ENTERO .)
    PTCOMA          reduce using rule 263 (arit -> ENTERO .)
    THEN            reduce using rule 263 (arit -> ENTERO .)
    WHEN            reduce using rule 263 (arit -> ENTERO .)
    ELSE            reduce using rule 263 (arit -> ENTERO .)


state 83

    (264) arit -> FLOTANTE .

    MAYOR           reduce using rule 264 (arit -> FLOTANTE .)
    MENOR           reduce using rule 264 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 264 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 264 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 264 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 264 (arit -> FLOTANTE .)
    POR             reduce using rule 264 (arit -> FLOTANTE .)
    DIVISION        reduce using rule 264 (arit -> FLOTANTE .)
    MAS             reduce using rule 264 (arit -> FLOTANTE .)
    MENOS           reduce using rule 264 (arit -> FLOTANTE .)
    MODULO          reduce using rule 264 (arit -> FLOTANTE .)
    ANDB            reduce using rule 264 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 264 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 264 (arit -> FLOTANTE .)
    XORB            reduce using rule 264 (arit -> FLOTANTE .)
    ORB             reduce using rule 264 (arit -> FLOTANTE .)
    AND             reduce using rule 264 (arit -> FLOTANTE .)
    OR              reduce using rule 264 (arit -> FLOTANTE .)
    PARC            reduce using rule 264 (arit -> FLOTANTE .)
    COMA            reduce using rule 264 (arit -> FLOTANTE .)
    PTCOMA          reduce using rule 264 (arit -> FLOTANTE .)
    THEN            reduce using rule 264 (arit -> FLOTANTE .)
    WHEN            reduce using rule 264 (arit -> FLOTANTE .)
    ELSE            reduce using rule 264 (arit -> FLOTANTE .)


state 84

    (266) arit -> NOTB . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 150
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 85

    (267) arit -> NOT . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 151
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 86

    (268) arit -> TRUE .

    MAYOR           reduce using rule 268 (arit -> TRUE .)
    MENOR           reduce using rule 268 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 268 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 268 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 268 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 268 (arit -> TRUE .)
    POR             reduce using rule 268 (arit -> TRUE .)
    DIVISION        reduce using rule 268 (arit -> TRUE .)
    MAS             reduce using rule 268 (arit -> TRUE .)
    MENOS           reduce using rule 268 (arit -> TRUE .)
    MODULO          reduce using rule 268 (arit -> TRUE .)
    ANDB            reduce using rule 268 (arit -> TRUE .)
    SHIFTI          reduce using rule 268 (arit -> TRUE .)
    SHIFTD          reduce using rule 268 (arit -> TRUE .)
    XORB            reduce using rule 268 (arit -> TRUE .)
    ORB             reduce using rule 268 (arit -> TRUE .)
    AND             reduce using rule 268 (arit -> TRUE .)
    OR              reduce using rule 268 (arit -> TRUE .)
    PARC            reduce using rule 268 (arit -> TRUE .)
    COMA            reduce using rule 268 (arit -> TRUE .)
    PTCOMA          reduce using rule 268 (arit -> TRUE .)
    THEN            reduce using rule 268 (arit -> TRUE .)
    WHEN            reduce using rule 268 (arit -> TRUE .)
    ELSE            reduce using rule 268 (arit -> TRUE .)


state 87

    (269) arit -> FALSE .

    MAYOR           reduce using rule 269 (arit -> FALSE .)
    MENOR           reduce using rule 269 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 269 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 269 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 269 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 269 (arit -> FALSE .)
    POR             reduce using rule 269 (arit -> FALSE .)
    DIVISION        reduce using rule 269 (arit -> FALSE .)
    MAS             reduce using rule 269 (arit -> FALSE .)
    MENOS           reduce using rule 269 (arit -> FALSE .)
    MODULO          reduce using rule 269 (arit -> FALSE .)
    ANDB            reduce using rule 269 (arit -> FALSE .)
    SHIFTI          reduce using rule 269 (arit -> FALSE .)
    SHIFTD          reduce using rule 269 (arit -> FALSE .)
    XORB            reduce using rule 269 (arit -> FALSE .)
    ORB             reduce using rule 269 (arit -> FALSE .)
    AND             reduce using rule 269 (arit -> FALSE .)
    OR              reduce using rule 269 (arit -> FALSE .)
    PARC            reduce using rule 269 (arit -> FALSE .)
    COMA            reduce using rule 269 (arit -> FALSE .)
    PTCOMA          reduce using rule 269 (arit -> FALSE .)
    THEN            reduce using rule 269 (arit -> FALSE .)
    WHEN            reduce using rule 269 (arit -> FALSE .)
    ELSE            reduce using rule 269 (arit -> FALSE .)


state 88

    (193) llamada_funcion -> CALL ID PARA params . PARC PTCOMA
    (194) params -> params . COMA expresionPLSQL

    PARC            shift and go to state 152
    COMA            shift and go to state 130


state 89

    (53) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 153


state 90

    (54) drop_database_instr -> DROP DATABASE ID PTCOMA .

    error           reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CREATE          reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SELECT          reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CALL            reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    ALTER           reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    INSERT          reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 54 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 91

    (120) drop_insrt -> DROP TABLE lista_drop_id PTCOMA .

    error           reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CREATE          reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SELECT          reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CALL            reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SHOW            reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    USE             reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DROP            reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    ALTER           reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    INSERT          reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    $end            reduce using rule 120 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)


state 92

    (121) lista_drop_id -> lista_drop_id COMA . ID

    ID              shift and go to state 154


state 93

    (123) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 155


state 94

    (124) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 156


state 95

    (138) alterTable_insrt -> ALTER TABLE ID ALTER . COLUMN ID SET NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE ID ALTER . COLUMN ID SET NOT NULL PTCOMA
    (143) Table_alter -> ALTER . COLUMN ID TYPE TIPO_DATO

    COLUMN          shift and go to state 157


state 96

    (129) alterTable_insrt -> ALTER TABLE ID DROP . CONSTRAINT campos_c PTCOMA
    (130) alterTable_insrt -> ALTER TABLE ID DROP . COLUMN campos_c PTCOMA

    CONSTRAINT      shift and go to state 158
    COLUMN          shift and go to state 159


state 97

    (131) alterTable_insrt -> ALTER TABLE ID RENAME . COLUMN ID TO ID PTCOMA

    COLUMN          shift and go to state 160


state 98

    (132) alterTable_insrt -> ALTER TABLE ID ADD . COLUMN campos_add_Column PTCOMA
    (133) alterTable_insrt -> ALTER TABLE ID ADD . CHECK PARA expresion_logica PARC PTCOMA
    (134) alterTable_insrt -> ALTER TABLE ID ADD . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA
    (135) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    COLUMN          shift and go to state 161
    CHECK           shift and go to state 162
    FOREIGN         shift and go to state 163
    CONSTRAINT      shift and go to state 164


state 99

    (140) alterTable_insrt -> ALTER TABLE ID alterTable_alter . PTCOMA
    (141) alterTable_alter -> alterTable_alter . COMA Table_alter

    PTCOMA          shift and go to state 165
    COMA            shift and go to state 166


state 100

    (142) alterTable_alter -> Table_alter .

    PTCOMA          reduce using rule 142 (alterTable_alter -> Table_alter .)
    COMA            reduce using rule 142 (alterTable_alter -> Table_alter .)


state 101

    (147) insert_insrt -> INSERT INTO ID PARA . lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA
    (148) insert_insrt -> INSERT INTO ID PARA . PARC VALUES PARA lista_datos PARC PTCOMA
    (150) lista_parametros_lista -> . lista_parametros_lista COMA ID
    (151) lista_parametros_lista -> . ID

    PARC            shift and go to state 169
    ID              shift and go to state 167

    lista_parametros_lista         shift and go to state 168

state 102

    (149) insert_insrt -> INSERT INTO ID VALUES . PARA lista_datos PARC PTCOMA

    PARA            shift and go to state 170


state 103

    (199) parametro -> ID . tipo
    (218) tipo -> . INTEGER
    (219) tipo -> . SMALLINT
    (220) tipo -> . BIGINT
    (221) tipo -> . DECIMAL
    (222) tipo -> . NUMERIC
    (223) tipo -> . REAL
    (224) tipo -> . CHAR
    (225) tipo -> . DOUBLE
    (226) tipo -> . PRECISION
    (227) tipo -> . MONEY
    (228) tipo -> . FLOAT
    (229) tipo -> . BOOLEAN
    (230) tipo -> . VOID
    (231) tipo -> . CHAR PARA ENTERO PARC
    (232) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (233) tipo -> . VARCHAR PARA ENTERO PARC
    (234) tipo -> . CHARACTER PARA ENTERO PARC
    (235) tipo -> . TEXT
    (236) tipo -> . TIME
    (237) tipo -> . TIMESTAMP
    (238) tipo -> . DATE

    INTEGER         shift and go to state 172
    SMALLINT        shift and go to state 173
    BIGINT          shift and go to state 174
    DECIMAL         shift and go to state 175
    NUMERIC         shift and go to state 176
    REAL            shift and go to state 177
    CHAR            shift and go to state 178
    DOUBLE          shift and go to state 179
    PRECISION       shift and go to state 180
    MONEY           shift and go to state 181
    FLOAT           shift and go to state 182
    BOOLEAN         shift and go to state 183
    VOID            shift and go to state 184
    CHARACTER       shift and go to state 185
    VARCHAR         shift and go to state 186
    TEXT            shift and go to state 187
    TIME            shift and go to state 188
    TIMESTAMP       shift and go to state 189
    DATE            shift and go to state 190

    tipo                           shift and go to state 171

state 104

    (184) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> parametros . COMA parametro

    PARC            shift and go to state 191
    COMA            shift and go to state 192


state 105

    (198) parametros -> parametro .

    PARC            reduce using rule 198 (parametros -> parametro .)
    COMA            reduce using rule 198 (parametros -> parametro .)


state 106

    (200) parametro -> empty .

    PARC            reduce using rule 200 (parametro -> empty .)
    COMA            reduce using rule 200 (parametro -> empty .)


state 107

    (186) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 193


state 108

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 194


state 109

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (34) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (38) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (49) createDB_unParam -> . OWNER IGUAL string_type
    (50) createDB_unParam -> . MODE IGUAL ENTERO
    (51) createDB_unParam -> . OWNER string_type
    (52) createDB_unParam -> . MODE ENTERO
    (41) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (43) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (45) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (47) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 195
    OWNER           shift and go to state 68
    MODE            shift and go to state 69

    createDB_unParam               shift and go to state 196
    createDB_dosParam              shift and go to state 197

state 110

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 198


state 111

    (188) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> parametros . COMA parametro

    PARC            shift and go to state 199
    COMA            shift and go to state 192


state 112

    (33) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 113

    (37) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 37 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 114

    (49) createDB_unParam -> OWNER IGUAL . string_type
    (44) createDB_dosParam -> OWNER IGUAL . string_type MODE ENTERO
    (47) createDB_dosParam -> OWNER IGUAL . string_type MODE IGUAL ENTERO
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 200

state 115

    (51) createDB_unParam -> OWNER string_type .
    (41) createDB_dosParam -> OWNER string_type . MODE ENTERO
    (43) createDB_dosParam -> OWNER string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 51 (createDB_unParam -> OWNER string_type .)
    MODE            shift and go to state 201


state 116

    (182) string_type -> CADENA .

    MODE            reduce using rule 182 (string_type -> CADENA .)
    PTCOMA          reduce using rule 182 (string_type -> CADENA .)
    MAS             reduce using rule 182 (string_type -> CADENA .)
    MENOS           reduce using rule 182 (string_type -> CADENA .)
    POR             reduce using rule 182 (string_type -> CADENA .)
    DIV             reduce using rule 182 (string_type -> CADENA .)
    MODULO          reduce using rule 182 (string_type -> CADENA .)
    SHIFTD          reduce using rule 182 (string_type -> CADENA .)
    SHIFTI          reduce using rule 182 (string_type -> CADENA .)
    HASHTAG         reduce using rule 182 (string_type -> CADENA .)
    ANDB            reduce using rule 182 (string_type -> CADENA .)
    D_OR            reduce using rule 182 (string_type -> CADENA .)
    PARC            reduce using rule 182 (string_type -> CADENA .)
    COMA            reduce using rule 182 (string_type -> CADENA .)
    MAYOR           reduce using rule 182 (string_type -> CADENA .)
    MENOR           reduce using rule 182 (string_type -> CADENA .)
    MAYORIGUAL      reduce using rule 182 (string_type -> CADENA .)
    MENORIGUAL      reduce using rule 182 (string_type -> CADENA .)
    IGUALIGUAL      reduce using rule 182 (string_type -> CADENA .)
    IGUAL           reduce using rule 182 (string_type -> CADENA .)
    NOIG            reduce using rule 182 (string_type -> CADENA .)
    NOTIGUAL        reduce using rule 182 (string_type -> CADENA .)
    AND             reduce using rule 182 (string_type -> CADENA .)
    OR              reduce using rule 182 (string_type -> CADENA .)


state 117

    (183) string_type -> ID .

    MODE            reduce using rule 183 (string_type -> ID .)
    PTCOMA          reduce using rule 183 (string_type -> ID .)
    COMA            reduce using rule 183 (string_type -> ID .)
    PARC            reduce using rule 183 (string_type -> ID .)


state 118

    (50) createDB_unParam -> MODE IGUAL . ENTERO
    (46) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (48) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 202


state 119

    (52) createDB_unParam -> MODE ENTERO .
    (42) createDB_dosParam -> MODE ENTERO . OWNER string_type
    (45) createDB_dosParam -> MODE ENTERO . OWNER IGUAL string_type

    PTCOMA          reduce using rule 52 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 203


state 120

    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 204


state 121

    (62) cuerpo_createTable -> ID . TIPO_DATO_DEF
    (63) cuerpo_createTable -> ID . TIPO_DATO_DEF createTable_options
    (92) TIPO_DATO_DEF -> . TEXT
    (93) TIPO_DATO_DEF -> . FLOAT
    (94) TIPO_DATO_DEF -> . INTEGER
    (95) TIPO_DATO_DEF -> . BOOLEAN
    (96) TIPO_DATO_DEF -> . SMALLINT
    (97) TIPO_DATO_DEF -> . MONEY
    (98) TIPO_DATO_DEF -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (99) TIPO_DATO_DEF -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (100) TIPO_DATO_DEF -> . BIGINT
    (101) TIPO_DATO_DEF -> . REAL
    (102) TIPO_DATO_DEF -> . DOUBLE PRECISION
    (103) TIPO_DATO_DEF -> . INTERVAL extract_time TO extract_time
    (104) TIPO_DATO_DEF -> . INTERVAL
    (105) TIPO_DATO_DEF -> . TIME
    (106) TIPO_DATO_DEF -> . TIMESTAMP
    (107) TIPO_DATO_DEF -> . DATE
    (108) TIPO_DATO_DEF -> . CHARACTER VARYING PARA ENTERO PARC
    (109) TIPO_DATO_DEF -> . VARCHAR PARA ENTERO PARC
    (110) TIPO_DATO_DEF -> . CHAR PARA ENTERO PARC
    (111) TIPO_DATO_DEF -> . CHARACTER PARA ENTERO PARC
    (112) TIPO_DATO_DEF -> . CHAR PARA PARC
    (113) TIPO_DATO_DEF -> . CHARACTER PARA PARC

    TEXT            shift and go to state 206
    FLOAT           shift and go to state 207
    INTEGER         shift and go to state 208
    BOOLEAN         shift and go to state 209
    SMALLINT        shift and go to state 210
    MONEY           shift and go to state 211
    DECIMAL         shift and go to state 212
    NUMERIC         shift and go to state 213
    BIGINT          shift and go to state 214
    REAL            shift and go to state 215
    DOUBLE          shift and go to state 216
    INTERVAL        shift and go to state 217
    TIME            shift and go to state 218
    TIMESTAMP       shift and go to state 219
    DATE            shift and go to state 220
    CHARACTER       shift and go to state 221
    VARCHAR         shift and go to state 222
    CHAR            shift and go to state 223

    TIPO_DATO_DEF                  shift and go to state 205

state 122

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC PTCOMA
    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista . PARC INHERITS PARA ID PARC PTCOMA
    (60) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PARC            shift and go to state 224
    COMA            shift and go to state 225


state 123

    (61) cuerpo_createTable_lista -> cuerpo_createTable .

    PARC            reduce using rule 61 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 61 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 124

    (64) cuerpo_createTable -> PRIMARY . KEY PARA campos_c PARC

    KEY             shift and go to state 226


state 125

    (65) cuerpo_createTable -> FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC

    KEY             shift and go to state 227


state 126

    (66) cuerpo_createTable -> UNIQUE . PARA campos_c PARC

    PARA            shift and go to state 228


state 127

    (67) cuerpo_createTable -> CONSTRAINT . ID constraint_esp

    ID              shift and go to state 229


state 128

    (260) arit -> PARA expresionPLSQL . PARC
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PARC            shift and go to state 230
    AND             shift and go to state 131
    OR              shift and go to state 132


state 129

    (192) llamada_funcion -> SELECT ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 231


state 130

    (194) params -> params COMA . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 232
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 131

    (240) log -> expresionPLSQL AND . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 233
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 132

    (241) log -> expresionPLSQL OR . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 234
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 133

    (243) rel -> arit MAYOR . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 235

state 134

    (244) rel -> arit MENOR . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 236

state 135

    (245) rel -> arit MAYORIGUAL . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 237

state 136

    (246) rel -> arit MENORIGUAL . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 238

state 137

    (247) rel -> arit IGUALIGUAL . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 239

state 138

    (248) rel -> arit NOTIGUAL . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 240

state 139

    (250) arit -> arit POR . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 241

state 140

    (251) arit -> arit DIVISION . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 242

state 141

    (252) arit -> arit MAS . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 243

state 142

    (253) arit -> arit MENOS . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 244

state 143

    (254) arit -> arit MODULO . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 245

state 144

    (255) arit -> arit ANDB . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 246

state 145

    (256) arit -> arit SHIFTI . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 247

state 146

    (257) arit -> arit SHIFTD . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 248

state 147

    (258) arit -> arit XORB . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 249

state 148

    (259) arit -> arit ORB . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    arit                           shift and go to state 250

state 149

    (265) arit -> MENOS expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    MENOR           reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    MAYORIGUAL      reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    MENORIGUAL      reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    IGUALIGUAL      reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    NOTIGUAL        reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    POR             reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    DIVISION        reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    MAS             reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    MENOS           reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    MODULO          reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    ANDB            reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    SHIFTI          reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    SHIFTD          reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    XORB            reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    ORB             reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    AND             reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    OR              reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    PARC            reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    COMA            reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    PTCOMA          reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    THEN            reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    WHEN            reduce using rule 265 (arit -> MENOS expresionPLSQL .)
    ELSE            reduce using rule 265 (arit -> MENOS expresionPLSQL .)

  ! AND             [ shift and go to state 131 ]
  ! OR              [ shift and go to state 132 ]


state 150

    (266) arit -> NOTB expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    MENOR           reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    MAYORIGUAL      reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    MENORIGUAL      reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    IGUALIGUAL      reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    NOTIGUAL        reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    POR             reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    DIVISION        reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    MAS             reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    MENOS           reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    MODULO          reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    ANDB            reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    SHIFTI          reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    SHIFTD          reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    XORB            reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    ORB             reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    AND             reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    OR              reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    PARC            reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    COMA            reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    PTCOMA          reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    THEN            reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    WHEN            reduce using rule 266 (arit -> NOTB expresionPLSQL .)
    ELSE            reduce using rule 266 (arit -> NOTB expresionPLSQL .)

  ! AND             [ shift and go to state 131 ]
  ! OR              [ shift and go to state 132 ]


state 151

    (267) arit -> NOT expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    MAYOR           reduce using rule 267 (arit -> NOT expresionPLSQL .)
    MENOR           reduce using rule 267 (arit -> NOT expresionPLSQL .)
    MAYORIGUAL      reduce using rule 267 (arit -> NOT expresionPLSQL .)
    MENORIGUAL      reduce using rule 267 (arit -> NOT expresionPLSQL .)
    IGUALIGUAL      reduce using rule 267 (arit -> NOT expresionPLSQL .)
    NOTIGUAL        reduce using rule 267 (arit -> NOT expresionPLSQL .)
    POR             reduce using rule 267 (arit -> NOT expresionPLSQL .)
    DIVISION        reduce using rule 267 (arit -> NOT expresionPLSQL .)
    MAS             reduce using rule 267 (arit -> NOT expresionPLSQL .)
    MENOS           reduce using rule 267 (arit -> NOT expresionPLSQL .)
    MODULO          reduce using rule 267 (arit -> NOT expresionPLSQL .)
    ANDB            reduce using rule 267 (arit -> NOT expresionPLSQL .)
    SHIFTI          reduce using rule 267 (arit -> NOT expresionPLSQL .)
    SHIFTD          reduce using rule 267 (arit -> NOT expresionPLSQL .)
    XORB            reduce using rule 267 (arit -> NOT expresionPLSQL .)
    ORB             reduce using rule 267 (arit -> NOT expresionPLSQL .)
    AND             reduce using rule 267 (arit -> NOT expresionPLSQL .)
    OR              reduce using rule 267 (arit -> NOT expresionPLSQL .)
    PARC            reduce using rule 267 (arit -> NOT expresionPLSQL .)
    COMA            reduce using rule 267 (arit -> NOT expresionPLSQL .)
    PTCOMA          reduce using rule 267 (arit -> NOT expresionPLSQL .)
    THEN            reduce using rule 267 (arit -> NOT expresionPLSQL .)
    WHEN            reduce using rule 267 (arit -> NOT expresionPLSQL .)
    ELSE            reduce using rule 267 (arit -> NOT expresionPLSQL .)

  ! AND             [ shift and go to state 131 ]
  ! OR              [ shift and go to state 132 ]


state 152

    (193) llamada_funcion -> CALL ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 251


state 153

    (53) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 252


state 154

    (121) lista_drop_id -> lista_drop_id COMA ID .

    PTCOMA          reduce using rule 121 (lista_drop_id -> lista_drop_id COMA ID .)
    COMA            reduce using rule 121 (lista_drop_id -> lista_drop_id COMA ID .)


state 155

    (123) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 253


state 156

    (124) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (125) usuariosDB -> . ID
    (126) usuariosDB -> . CURRENT_USER
    (127) usuariosDB -> . SESSION_USER
    (128) usuariosDB -> . CADENA

    ID              shift and go to state 254
    CURRENT_USER    shift and go to state 256
    SESSION_USER    shift and go to state 257
    CADENA          shift and go to state 258

    usuariosDB                     shift and go to state 255

state 157

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN . ID SET NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN . ID SET NOT NULL PTCOMA
    (143) Table_alter -> ALTER COLUMN . ID TYPE TIPO_DATO

    ID              shift and go to state 259


state 158

    (129) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT . campos_c PTCOMA
    (68) campos_c -> . campos_c COMA ID
    (69) campos_c -> . ID

    ID              shift and go to state 260

    campos_c                       shift and go to state 261

state 159

    (130) alterTable_insrt -> ALTER TABLE ID DROP COLUMN . campos_c PTCOMA
    (68) campos_c -> . campos_c COMA ID
    (69) campos_c -> . ID

    ID              shift and go to state 260

    campos_c                       shift and go to state 262

state 160

    (131) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN . ID TO ID PTCOMA

    ID              shift and go to state 263


state 161

    (132) alterTable_insrt -> ALTER TABLE ID ADD COLUMN . campos_add_Column PTCOMA
    (144) campos_add_Column -> . campos_add_Column COMA tipos_datos_columnas
    (145) campos_add_Column -> . tipos_datos_columnas
    (146) tipos_datos_columnas -> . ID TIPO_DATO

    ID              shift and go to state 264

    campos_add_Column              shift and go to state 265
    tipos_datos_columnas           shift and go to state 266

state 162

    (133) alterTable_insrt -> ALTER TABLE ID ADD CHECK . PARA expresion_logica PARC PTCOMA

    PARA            shift and go to state 267


state 163

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    KEY             shift and go to state 268


state 164

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    ID              shift and go to state 269


state 165

    (140) alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .

    error           reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    CREATE          reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    SELECT          reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    CALL            reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    SHOW            reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    USE             reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    DROP            reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    ALTER           reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    INSERT          reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    $end            reduce using rule 140 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)


state 166

    (141) alterTable_alter -> alterTable_alter COMA . Table_alter
    (143) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO

    ALTER           shift and go to state 271

    Table_alter                    shift and go to state 270

state 167

    (151) lista_parametros_lista -> ID .

    PARC            reduce using rule 151 (lista_parametros_lista -> ID .)
    COMA            reduce using rule 151 (lista_parametros_lista -> ID .)


state 168

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista . PARC VALUES PARA lista_datos PARC PTCOMA
    (150) lista_parametros_lista -> lista_parametros_lista . COMA ID

    PARC            shift and go to state 272
    COMA            shift and go to state 273


state 169

    (148) insert_insrt -> INSERT INTO ID PARA PARC . VALUES PARA lista_datos PARC PTCOMA

    VALUES          shift and go to state 274


state 170

    (149) insert_insrt -> INSERT INTO ID VALUES PARA . lista_datos PARC PTCOMA
    (152) lista_datos -> . lista_datos COMA exclusiva_insert
    (153) lista_datos -> . exclusiva_insert
    (154) exclusiva_insert -> . expresion
    (155) exclusiva_insert -> . SUBSTRING PARA string_type COMA expresion COMA expresion PARC
    (156) exclusiva_insert -> . SUBSTR PARA string_type COMA expresion COMA expresion PARC
    (157) exclusiva_insert -> . MD5 PARA string_type PARC
    (158) exclusiva_insert -> . TRIM PARA string_type PARC
    (159) exclusiva_insert -> . NOW PARA PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    SUBSTRING       shift and go to state 280
    SUBSTR          shift and go to state 282
    MD5             shift and go to state 283
    TRIM            shift and go to state 284
    NOW             shift and go to state 285
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    lista_datos                    shift and go to state 277
    exclusiva_insert               shift and go to state 278
    expresion                      shift and go to state 279
    string_type                    shift and go to state 281
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 171

    (199) parametro -> ID tipo .

    PARC            reduce using rule 199 (parametro -> ID tipo .)
    COMA            reduce using rule 199 (parametro -> ID tipo .)


state 172

    (218) tipo -> INTEGER .

    PARC            reduce using rule 218 (tipo -> INTEGER .)
    COMA            reduce using rule 218 (tipo -> INTEGER .)
    AS              reduce using rule 218 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 218 (tipo -> INTEGER .)
    PTCOMA          reduce using rule 218 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 218 (tipo -> INTEGER .)


state 173

    (219) tipo -> SMALLINT .

    PARC            reduce using rule 219 (tipo -> SMALLINT .)
    COMA            reduce using rule 219 (tipo -> SMALLINT .)
    AS              reduce using rule 219 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 219 (tipo -> SMALLINT .)
    PTCOMA          reduce using rule 219 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 219 (tipo -> SMALLINT .)


state 174

    (220) tipo -> BIGINT .

    PARC            reduce using rule 220 (tipo -> BIGINT .)
    COMA            reduce using rule 220 (tipo -> BIGINT .)
    AS              reduce using rule 220 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 220 (tipo -> BIGINT .)
    PTCOMA          reduce using rule 220 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 220 (tipo -> BIGINT .)


state 175

    (221) tipo -> DECIMAL .

    PARC            reduce using rule 221 (tipo -> DECIMAL .)
    COMA            reduce using rule 221 (tipo -> DECIMAL .)
    AS              reduce using rule 221 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 221 (tipo -> DECIMAL .)
    PTCOMA          reduce using rule 221 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 221 (tipo -> DECIMAL .)


state 176

    (222) tipo -> NUMERIC .

    PARC            reduce using rule 222 (tipo -> NUMERIC .)
    COMA            reduce using rule 222 (tipo -> NUMERIC .)
    AS              reduce using rule 222 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 222 (tipo -> NUMERIC .)
    PTCOMA          reduce using rule 222 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 222 (tipo -> NUMERIC .)


state 177

    (223) tipo -> REAL .

    PARC            reduce using rule 223 (tipo -> REAL .)
    COMA            reduce using rule 223 (tipo -> REAL .)
    AS              reduce using rule 223 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 223 (tipo -> REAL .)
    PTCOMA          reduce using rule 223 (tipo -> REAL .)
    DEFAULT         reduce using rule 223 (tipo -> REAL .)


state 178

    (224) tipo -> CHAR .
    (231) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 224 (tipo -> CHAR .)
    COMA            reduce using rule 224 (tipo -> CHAR .)
    AS              reduce using rule 224 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 224 (tipo -> CHAR .)
    PTCOMA          reduce using rule 224 (tipo -> CHAR .)
    DEFAULT         reduce using rule 224 (tipo -> CHAR .)
    PARA            shift and go to state 300


state 179

    (225) tipo -> DOUBLE .

    PARC            reduce using rule 225 (tipo -> DOUBLE .)
    COMA            reduce using rule 225 (tipo -> DOUBLE .)
    AS              reduce using rule 225 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 225 (tipo -> DOUBLE .)
    PTCOMA          reduce using rule 225 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 225 (tipo -> DOUBLE .)


state 180

    (226) tipo -> PRECISION .

    PARC            reduce using rule 226 (tipo -> PRECISION .)
    COMA            reduce using rule 226 (tipo -> PRECISION .)
    AS              reduce using rule 226 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 226 (tipo -> PRECISION .)
    PTCOMA          reduce using rule 226 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 226 (tipo -> PRECISION .)


state 181

    (227) tipo -> MONEY .

    PARC            reduce using rule 227 (tipo -> MONEY .)
    COMA            reduce using rule 227 (tipo -> MONEY .)
    AS              reduce using rule 227 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 227 (tipo -> MONEY .)
    PTCOMA          reduce using rule 227 (tipo -> MONEY .)
    DEFAULT         reduce using rule 227 (tipo -> MONEY .)


state 182

    (228) tipo -> FLOAT .

    PARC            reduce using rule 228 (tipo -> FLOAT .)
    COMA            reduce using rule 228 (tipo -> FLOAT .)
    AS              reduce using rule 228 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 228 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 228 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 228 (tipo -> FLOAT .)


state 183

    (229) tipo -> BOOLEAN .

    PARC            reduce using rule 229 (tipo -> BOOLEAN .)
    COMA            reduce using rule 229 (tipo -> BOOLEAN .)
    AS              reduce using rule 229 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 229 (tipo -> BOOLEAN .)
    PTCOMA          reduce using rule 229 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 229 (tipo -> BOOLEAN .)


state 184

    (230) tipo -> VOID .

    PARC            reduce using rule 230 (tipo -> VOID .)
    COMA            reduce using rule 230 (tipo -> VOID .)
    AS              reduce using rule 230 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 230 (tipo -> VOID .)
    PTCOMA          reduce using rule 230 (tipo -> VOID .)
    DEFAULT         reduce using rule 230 (tipo -> VOID .)


state 185

    (232) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (234) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 301
    PARA            shift and go to state 302


state 186

    (233) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 303


state 187

    (235) tipo -> TEXT .

    PARC            reduce using rule 235 (tipo -> TEXT .)
    COMA            reduce using rule 235 (tipo -> TEXT .)
    AS              reduce using rule 235 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 235 (tipo -> TEXT .)
    PTCOMA          reduce using rule 235 (tipo -> TEXT .)
    DEFAULT         reduce using rule 235 (tipo -> TEXT .)


state 188

    (236) tipo -> TIME .

    PARC            reduce using rule 236 (tipo -> TIME .)
    COMA            reduce using rule 236 (tipo -> TIME .)
    AS              reduce using rule 236 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 236 (tipo -> TIME .)
    PTCOMA          reduce using rule 236 (tipo -> TIME .)
    DEFAULT         reduce using rule 236 (tipo -> TIME .)


state 189

    (237) tipo -> TIMESTAMP .

    PARC            reduce using rule 237 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 237 (tipo -> TIMESTAMP .)
    AS              reduce using rule 237 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 237 (tipo -> TIMESTAMP .)
    PTCOMA          reduce using rule 237 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 237 (tipo -> TIMESTAMP .)


state 190

    (238) tipo -> DATE .

    PARC            reduce using rule 238 (tipo -> DATE .)
    COMA            reduce using rule 238 (tipo -> DATE .)
    AS              reduce using rule 238 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 238 (tipo -> DATE .)
    PTCOMA          reduce using rule 238 (tipo -> DATE .)
    DEFAULT         reduce using rule 238 (tipo -> DATE .)


state 191

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 304


state 192

    (197) parametros -> parametros COMA . parametro
    (199) parametro -> . ID tipo
    (200) parametro -> . empty
    (270) empty -> .

    ID              shift and go to state 103
    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)

    parametro                      shift and go to state 305
    empty                          shift and go to state 106

state 193

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> . parametros COMA parametro
    (198) parametros -> . parametro
    (199) parametro -> . ID tipo
    (200) parametro -> . empty
    (270) empty -> .

    ID              shift and go to state 103
    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)

    parametros                     shift and go to state 306
    parametro                      shift and go to state 105
    empty                          shift and go to state 106

state 194

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> . parametros COMA parametro
    (198) parametros -> . parametro
    (199) parametro -> . ID tipo
    (200) parametro -> . empty
    (270) empty -> .

    ID              shift and go to state 103
    PARC            reduce using rule 270 (empty -> .)
    COMA            reduce using rule 270 (empty -> .)

    parametros                     shift and go to state 307
    parametro                      shift and go to state 105
    empty                          shift and go to state 106

state 195

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    error           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CALL            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    INSERT          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 196

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 308


state 197

    (38) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 309


state 198

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 310


state 199

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 311


state 200

    (49) createDB_unParam -> OWNER IGUAL string_type .
    (44) createDB_dosParam -> OWNER IGUAL string_type . MODE ENTERO
    (47) createDB_dosParam -> OWNER IGUAL string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 49 (createDB_unParam -> OWNER IGUAL string_type .)
    MODE            shift and go to state 312


state 201

    (41) createDB_dosParam -> OWNER string_type MODE . ENTERO
    (43) createDB_dosParam -> OWNER string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 313
    IGUAL           shift and go to state 314


state 202

    (50) createDB_unParam -> MODE IGUAL ENTERO .
    (46) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (48) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 50 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 315


state 203

    (42) createDB_dosParam -> MODE ENTERO OWNER . string_type
    (45) createDB_dosParam -> MODE ENTERO OWNER . IGUAL string_type
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    IGUAL           shift and go to state 317
    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 316

state 204

    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (39) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (49) createDB_unParam -> . OWNER IGUAL string_type
    (50) createDB_unParam -> . MODE IGUAL ENTERO
    (51) createDB_unParam -> . OWNER string_type
    (52) createDB_unParam -> . MODE ENTERO
    (41) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (43) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (45) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (47) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 318
    OWNER           shift and go to state 68
    MODE            shift and go to state 69

    createDB_unParam               shift and go to state 319
    createDB_dosParam              shift and go to state 320

state 205

    (62) cuerpo_createTable -> ID TIPO_DATO_DEF .
    (63) cuerpo_createTable -> ID TIPO_DATO_DEF . createTable_options
    (73) createTable_options -> . createTable_options cT_options
    (74) createTable_options -> . cT_options
    (75) cT_options -> . N_null
    (76) cT_options -> . C_unique
    (77) cT_options -> . llave
    (78) cT_options -> . O_DEFAULT
    (79) cT_options -> . C_check
    (80) N_null -> . NOT NULL
    (81) N_null -> . NULL
    (82) C_unique -> . UNIQUE
    (83) C_unique -> . CONSTRAINT ID UNIQUE
    (84) llave -> . PRIMARY KEY
    (85) llave -> . FOREIGN KEY
    (86) O_DEFAULT -> . DEFAULT expresion_dato_default
    (87) C_check -> . CONSTRAINT ID CHECK PARA expresion_logica PARC
    (88) C_check -> . CHECK PARA expresion_logica PARC

    PARC            reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    COMA            reduce using rule 62 (cuerpo_createTable -> ID TIPO_DATO_DEF .)
    NOT             shift and go to state 328
    NULL            shift and go to state 329
    UNIQUE          shift and go to state 330
    CONSTRAINT      shift and go to state 331
    PRIMARY         shift and go to state 332
    FOREIGN         shift and go to state 333
    DEFAULT         shift and go to state 334
    CHECK           shift and go to state 335

    createTable_options            shift and go to state 321
    cT_options                     shift and go to state 322
    N_null                         shift and go to state 323
    C_unique                       shift and go to state 324
    llave                          shift and go to state 325
    O_DEFAULT                      shift and go to state 326
    C_check                        shift and go to state 327

state 206

    (92) TIPO_DATO_DEF -> TEXT .

    NOT             reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    NULL            reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    UNIQUE          reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    CONSTRAINT      reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    PRIMARY         reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    FOREIGN         reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    DEFAULT         reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    CHECK           reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    PARC            reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)
    COMA            reduce using rule 92 (TIPO_DATO_DEF -> TEXT .)


state 207

    (93) TIPO_DATO_DEF -> FLOAT .

    NOT             reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    NULL            reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    UNIQUE          reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    CONSTRAINT      reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    PRIMARY         reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    FOREIGN         reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    DEFAULT         reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    CHECK           reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    PARC            reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)
    COMA            reduce using rule 93 (TIPO_DATO_DEF -> FLOAT .)


state 208

    (94) TIPO_DATO_DEF -> INTEGER .

    NOT             reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    NULL            reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    UNIQUE          reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    CONSTRAINT      reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    PRIMARY         reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    FOREIGN         reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    DEFAULT         reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    CHECK           reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    PARC            reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)
    COMA            reduce using rule 94 (TIPO_DATO_DEF -> INTEGER .)


state 209

    (95) TIPO_DATO_DEF -> BOOLEAN .

    NOT             reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    NULL            reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    UNIQUE          reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    CONSTRAINT      reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    PRIMARY         reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    FOREIGN         reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    DEFAULT         reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    CHECK           reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    PARC            reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)
    COMA            reduce using rule 95 (TIPO_DATO_DEF -> BOOLEAN .)


state 210

    (96) TIPO_DATO_DEF -> SMALLINT .

    NOT             reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    NULL            reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    UNIQUE          reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    CONSTRAINT      reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    PRIMARY         reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    FOREIGN         reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    DEFAULT         reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    CHECK           reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    PARC            reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)
    COMA            reduce using rule 96 (TIPO_DATO_DEF -> SMALLINT .)


state 211

    (97) TIPO_DATO_DEF -> MONEY .

    NOT             reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    NULL            reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    UNIQUE          reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    CONSTRAINT      reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    PRIMARY         reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    FOREIGN         reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    DEFAULT         reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    CHECK           reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    PARC            reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)
    COMA            reduce using rule 97 (TIPO_DATO_DEF -> MONEY .)


state 212

    (98) TIPO_DATO_DEF -> DECIMAL . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 336


state 213

    (99) TIPO_DATO_DEF -> NUMERIC . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 337


state 214

    (100) TIPO_DATO_DEF -> BIGINT .

    NOT             reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    NULL            reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    UNIQUE          reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    CONSTRAINT      reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    PRIMARY         reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    FOREIGN         reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    DEFAULT         reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    CHECK           reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    PARC            reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)
    COMA            reduce using rule 100 (TIPO_DATO_DEF -> BIGINT .)


state 215

    (101) TIPO_DATO_DEF -> REAL .

    NOT             reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    NULL            reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    UNIQUE          reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    CONSTRAINT      reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    PRIMARY         reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    FOREIGN         reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    DEFAULT         reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    CHECK           reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    PARC            reduce using rule 101 (TIPO_DATO_DEF -> REAL .)
    COMA            reduce using rule 101 (TIPO_DATO_DEF -> REAL .)


state 216

    (102) TIPO_DATO_DEF -> DOUBLE . PRECISION

    PRECISION       shift and go to state 338


state 217

    (103) TIPO_DATO_DEF -> INTERVAL . extract_time TO extract_time
    (104) TIPO_DATO_DEF -> INTERVAL .
    (114) extract_time -> . YEAR
    (115) extract_time -> . DAY
    (116) extract_time -> . MONTH
    (117) extract_time -> . HOUR
    (118) extract_time -> . MINUTE
    (119) extract_time -> . SECOND

    NOT             reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    NULL            reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    UNIQUE          reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    CONSTRAINT      reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    PRIMARY         reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    FOREIGN         reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    DEFAULT         reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    CHECK           reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    PARC            reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    COMA            reduce using rule 104 (TIPO_DATO_DEF -> INTERVAL .)
    YEAR            shift and go to state 340
    DAY             shift and go to state 341
    MONTH           shift and go to state 342
    HOUR            shift and go to state 343
    MINUTE          shift and go to state 344
    SECOND          shift and go to state 345

    extract_time                   shift and go to state 339

state 218

    (105) TIPO_DATO_DEF -> TIME .

    NOT             reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    NULL            reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    UNIQUE          reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    CONSTRAINT      reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    PRIMARY         reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    FOREIGN         reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    DEFAULT         reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    CHECK           reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    PARC            reduce using rule 105 (TIPO_DATO_DEF -> TIME .)
    COMA            reduce using rule 105 (TIPO_DATO_DEF -> TIME .)


state 219

    (106) TIPO_DATO_DEF -> TIMESTAMP .

    NOT             reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    NULL            reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    UNIQUE          reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    CONSTRAINT      reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    PRIMARY         reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    FOREIGN         reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    DEFAULT         reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    CHECK           reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    PARC            reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)
    COMA            reduce using rule 106 (TIPO_DATO_DEF -> TIMESTAMP .)


state 220

    (107) TIPO_DATO_DEF -> DATE .

    NOT             reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    NULL            reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    UNIQUE          reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    CONSTRAINT      reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    PRIMARY         reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    FOREIGN         reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    DEFAULT         reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    CHECK           reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    PARC            reduce using rule 107 (TIPO_DATO_DEF -> DATE .)
    COMA            reduce using rule 107 (TIPO_DATO_DEF -> DATE .)


state 221

    (108) TIPO_DATO_DEF -> CHARACTER . VARYING PARA ENTERO PARC
    (111) TIPO_DATO_DEF -> CHARACTER . PARA ENTERO PARC
    (113) TIPO_DATO_DEF -> CHARACTER . PARA PARC

    VARYING         shift and go to state 346
    PARA            shift and go to state 347


state 222

    (109) TIPO_DATO_DEF -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 348


state 223

    (110) TIPO_DATO_DEF -> CHAR . PARA ENTERO PARC
    (112) TIPO_DATO_DEF -> CHAR . PARA PARC

    PARA            shift and go to state 349


state 224

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . PTCOMA
    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC . INHERITS PARA ID PARC PTCOMA

    PTCOMA          shift and go to state 350
    INHERITS        shift and go to state 351


state 225

    (60) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (62) cuerpo_createTable -> . ID TIPO_DATO_DEF
    (63) cuerpo_createTable -> . ID TIPO_DATO_DEF createTable_options
    (64) cuerpo_createTable -> . PRIMARY KEY PARA campos_c PARC
    (65) cuerpo_createTable -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC
    (66) cuerpo_createTable -> . UNIQUE PARA campos_c PARC
    (67) cuerpo_createTable -> . CONSTRAINT ID constraint_esp

    ID              shift and go to state 121
    PRIMARY         shift and go to state 124
    FOREIGN         shift and go to state 125
    UNIQUE          shift and go to state 126
    CONSTRAINT      shift and go to state 127

    cuerpo_createTable             shift and go to state 352

state 226

    (64) cuerpo_createTable -> PRIMARY KEY . PARA campos_c PARC

    PARA            shift and go to state 353


state 227

    (65) cuerpo_createTable -> FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC

    PARA            shift and go to state 354


state 228

    (66) cuerpo_createTable -> UNIQUE PARA . campos_c PARC
    (68) campos_c -> . campos_c COMA ID
    (69) campos_c -> . ID

    ID              shift and go to state 260

    campos_c                       shift and go to state 355

state 229

    (67) cuerpo_createTable -> CONSTRAINT ID . constraint_esp
    (70) constraint_esp -> . CHECK PARA expresion_logica PARC
    (71) constraint_esp -> . UNIQUE PARA campos_c PARC
    (72) constraint_esp -> . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC

    CHECK           shift and go to state 357
    UNIQUE          shift and go to state 358
    FOREIGN         shift and go to state 359

    constraint_esp                 shift and go to state 356

state 230

    (260) arit -> PARA expresionPLSQL PARC .

    MAYOR           reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    MENOR           reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    MAYORIGUAL      reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    MENORIGUAL      reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    IGUALIGUAL      reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    NOTIGUAL        reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    POR             reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    DIVISION        reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    MAS             reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    MENOS           reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    MODULO          reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    ANDB            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    SHIFTI          reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    SHIFTD          reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    XORB            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    ORB             reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    AND             reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    OR              reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    PARC            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    COMA            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    PTCOMA          reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    THEN            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    WHEN            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)
    ELSE            reduce using rule 260 (arit -> PARA expresionPLSQL PARC .)


state 231

    (192) llamada_funcion -> SELECT ID PARA params PARC PTCOMA .

    error           reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    USE             reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ALTER           reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    INSERT          reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    $end            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    END             reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ID              reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    IF              reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 192 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)


state 232

    (194) params -> params COMA expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PARC            reduce using rule 194 (params -> params COMA expresionPLSQL .)
    COMA            reduce using rule 194 (params -> params COMA expresionPLSQL .)
    AND             shift and go to state 131
    OR              shift and go to state 132


state 233

    (240) log -> expresionPLSQL AND expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    AND             reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    OR              reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    PARC            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    COMA            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYOR           reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOR           reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MAYORIGUAL      reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MENORIGUAL      reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    IGUALIGUAL      reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    NOTIGUAL        reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    POR             reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    DIVISION        reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MAS             reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MENOS           reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    MODULO          reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    ANDB            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTI          reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    SHIFTD          reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    XORB            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    ORB             reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    PTCOMA          reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    THEN            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    WHEN            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)
    ELSE            reduce using rule 240 (log -> expresionPLSQL AND expresionPLSQL .)

  ! AND             [ shift and go to state 131 ]
  ! OR              [ shift and go to state 132 ]


state 234

    (241) log -> expresionPLSQL OR expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    OR              reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    PARC            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    COMA            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYOR           reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOR           reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MAYORIGUAL      reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MENORIGUAL      reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    IGUALIGUAL      reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    NOTIGUAL        reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    POR             reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    DIVISION        reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MAS             reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MENOS           reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    MODULO          reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    ANDB            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTI          reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    SHIFTD          reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    XORB            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    ORB             reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    PTCOMA          reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    THEN            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    WHEN            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    ELSE            reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .)
    AND             shift and go to state 131

  ! AND             [ reduce using rule 241 (log -> expresionPLSQL OR expresionPLSQL .) ]
  ! OR              [ shift and go to state 132 ]


state 235

    (243) rel -> arit MAYOR arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    AND             reduce using rule 243 (rel -> arit MAYOR arit .)
    OR              reduce using rule 243 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 243 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 243 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 243 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 243 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 243 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 243 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 243 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 243 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 243 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 243 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 243 (rel -> arit MAYOR arit .)
    PTCOMA          reduce using rule 243 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 243 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 243 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 243 (rel -> arit MAYOR arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! DIVISION        [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! MODULO          [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 243 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 236

    (244) rel -> arit MENOR arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    AND             reduce using rule 244 (rel -> arit MENOR arit .)
    OR              reduce using rule 244 (rel -> arit MENOR arit .)
    PARC            reduce using rule 244 (rel -> arit MENOR arit .)
    COMA            reduce using rule 244 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 244 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 244 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 244 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 244 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 244 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 244 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 244 (rel -> arit MENOR arit .)
    XORB            reduce using rule 244 (rel -> arit MENOR arit .)
    ORB             reduce using rule 244 (rel -> arit MENOR arit .)
    PTCOMA          reduce using rule 244 (rel -> arit MENOR arit .)
    THEN            reduce using rule 244 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 244 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 244 (rel -> arit MENOR arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! DIVISION        [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! MODULO          [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 244 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 237

    (245) rel -> arit MAYORIGUAL arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    AND             reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    OR              reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    PTCOMA          reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 245 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! MODULO          [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 245 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 238

    (246) rel -> arit MENORIGUAL arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    AND             reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    OR              reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    PTCOMA          reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 246 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! MODULO          [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 246 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 239

    (247) rel -> arit IGUALIGUAL arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    AND             reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    OR              reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    PTCOMA          reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 247 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! MODULO          [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 247 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 240

    (248) rel -> arit NOTIGUAL arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    AND             reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    OR              reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    PTCOMA          reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 248 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! DIVISION        [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! MODULO          [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 248 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 241

    (250) arit -> arit POR arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 250 (arit -> arit POR arit .)
    MENOR           reduce using rule 250 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 250 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 250 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 250 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 250 (arit -> arit POR arit .)
    POR             reduce using rule 250 (arit -> arit POR arit .)
    DIVISION        reduce using rule 250 (arit -> arit POR arit .)
    MAS             reduce using rule 250 (arit -> arit POR arit .)
    MENOS           reduce using rule 250 (arit -> arit POR arit .)
    MODULO          reduce using rule 250 (arit -> arit POR arit .)
    ANDB            reduce using rule 250 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 250 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 250 (arit -> arit POR arit .)
    XORB            reduce using rule 250 (arit -> arit POR arit .)
    ORB             reduce using rule 250 (arit -> arit POR arit .)
    AND             reduce using rule 250 (arit -> arit POR arit .)
    OR              reduce using rule 250 (arit -> arit POR arit .)
    PARC            reduce using rule 250 (arit -> arit POR arit .)
    COMA            reduce using rule 250 (arit -> arit POR arit .)
    PTCOMA          reduce using rule 250 (arit -> arit POR arit .)
    THEN            reduce using rule 250 (arit -> arit POR arit .)
    WHEN            reduce using rule 250 (arit -> arit POR arit .)
    ELSE            reduce using rule 250 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 139 ]
  ! DIVISION        [ shift and go to state 140 ]
  ! MAS             [ shift and go to state 141 ]
  ! MENOS           [ shift and go to state 142 ]
  ! MODULO          [ shift and go to state 143 ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 242

    (251) arit -> arit DIVISION arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 251 (arit -> arit DIVISION arit .)
    MENOR           reduce using rule 251 (arit -> arit DIVISION arit .)
    MAYORIGUAL      reduce using rule 251 (arit -> arit DIVISION arit .)
    MENORIGUAL      reduce using rule 251 (arit -> arit DIVISION arit .)
    IGUALIGUAL      reduce using rule 251 (arit -> arit DIVISION arit .)
    NOTIGUAL        reduce using rule 251 (arit -> arit DIVISION arit .)
    POR             reduce using rule 251 (arit -> arit DIVISION arit .)
    DIVISION        reduce using rule 251 (arit -> arit DIVISION arit .)
    MAS             reduce using rule 251 (arit -> arit DIVISION arit .)
    MENOS           reduce using rule 251 (arit -> arit DIVISION arit .)
    MODULO          reduce using rule 251 (arit -> arit DIVISION arit .)
    ANDB            reduce using rule 251 (arit -> arit DIVISION arit .)
    SHIFTI          reduce using rule 251 (arit -> arit DIVISION arit .)
    SHIFTD          reduce using rule 251 (arit -> arit DIVISION arit .)
    XORB            reduce using rule 251 (arit -> arit DIVISION arit .)
    ORB             reduce using rule 251 (arit -> arit DIVISION arit .)
    AND             reduce using rule 251 (arit -> arit DIVISION arit .)
    OR              reduce using rule 251 (arit -> arit DIVISION arit .)
    PARC            reduce using rule 251 (arit -> arit DIVISION arit .)
    COMA            reduce using rule 251 (arit -> arit DIVISION arit .)
    PTCOMA          reduce using rule 251 (arit -> arit DIVISION arit .)
    THEN            reduce using rule 251 (arit -> arit DIVISION arit .)
    WHEN            reduce using rule 251 (arit -> arit DIVISION arit .)
    ELSE            reduce using rule 251 (arit -> arit DIVISION arit .)

  ! POR             [ shift and go to state 139 ]
  ! DIVISION        [ shift and go to state 140 ]
  ! MAS             [ shift and go to state 141 ]
  ! MENOS           [ shift and go to state 142 ]
  ! MODULO          [ shift and go to state 143 ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 243

    (252) arit -> arit MAS arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 252 (arit -> arit MAS arit .)
    MENOR           reduce using rule 252 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 252 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 252 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 252 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 252 (arit -> arit MAS arit .)
    MAS             reduce using rule 252 (arit -> arit MAS arit .)
    MENOS           reduce using rule 252 (arit -> arit MAS arit .)
    ANDB            reduce using rule 252 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 252 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 252 (arit -> arit MAS arit .)
    XORB            reduce using rule 252 (arit -> arit MAS arit .)
    ORB             reduce using rule 252 (arit -> arit MAS arit .)
    AND             reduce using rule 252 (arit -> arit MAS arit .)
    OR              reduce using rule 252 (arit -> arit MAS arit .)
    PARC            reduce using rule 252 (arit -> arit MAS arit .)
    COMA            reduce using rule 252 (arit -> arit MAS arit .)
    PTCOMA          reduce using rule 252 (arit -> arit MAS arit .)
    THEN            reduce using rule 252 (arit -> arit MAS arit .)
    WHEN            reduce using rule 252 (arit -> arit MAS arit .)
    ELSE            reduce using rule 252 (arit -> arit MAS arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MODULO          shift and go to state 143

  ! POR             [ reduce using rule 252 (arit -> arit MAS arit .) ]
  ! DIVISION        [ reduce using rule 252 (arit -> arit MAS arit .) ]
  ! MODULO          [ reduce using rule 252 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 141 ]
  ! MENOS           [ shift and go to state 142 ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 244

    (253) arit -> arit MENOS arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 253 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 253 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 253 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 253 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 253 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 253 (arit -> arit MENOS arit .)
    MAS             reduce using rule 253 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 253 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 253 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 253 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 253 (arit -> arit MENOS arit .)
    XORB            reduce using rule 253 (arit -> arit MENOS arit .)
    ORB             reduce using rule 253 (arit -> arit MENOS arit .)
    AND             reduce using rule 253 (arit -> arit MENOS arit .)
    OR              reduce using rule 253 (arit -> arit MENOS arit .)
    PARC            reduce using rule 253 (arit -> arit MENOS arit .)
    COMA            reduce using rule 253 (arit -> arit MENOS arit .)
    PTCOMA          reduce using rule 253 (arit -> arit MENOS arit .)
    THEN            reduce using rule 253 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 253 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 253 (arit -> arit MENOS arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MODULO          shift and go to state 143

  ! POR             [ reduce using rule 253 (arit -> arit MENOS arit .) ]
  ! DIVISION        [ reduce using rule 253 (arit -> arit MENOS arit .) ]
  ! MODULO          [ reduce using rule 253 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 141 ]
  ! MENOS           [ shift and go to state 142 ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 245

    (254) arit -> arit MODULO arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 254 (arit -> arit MODULO arit .)
    MENOR           reduce using rule 254 (arit -> arit MODULO arit .)
    MAYORIGUAL      reduce using rule 254 (arit -> arit MODULO arit .)
    MENORIGUAL      reduce using rule 254 (arit -> arit MODULO arit .)
    IGUALIGUAL      reduce using rule 254 (arit -> arit MODULO arit .)
    NOTIGUAL        reduce using rule 254 (arit -> arit MODULO arit .)
    POR             reduce using rule 254 (arit -> arit MODULO arit .)
    DIVISION        reduce using rule 254 (arit -> arit MODULO arit .)
    MAS             reduce using rule 254 (arit -> arit MODULO arit .)
    MENOS           reduce using rule 254 (arit -> arit MODULO arit .)
    MODULO          reduce using rule 254 (arit -> arit MODULO arit .)
    ANDB            reduce using rule 254 (arit -> arit MODULO arit .)
    SHIFTI          reduce using rule 254 (arit -> arit MODULO arit .)
    SHIFTD          reduce using rule 254 (arit -> arit MODULO arit .)
    XORB            reduce using rule 254 (arit -> arit MODULO arit .)
    ORB             reduce using rule 254 (arit -> arit MODULO arit .)
    AND             reduce using rule 254 (arit -> arit MODULO arit .)
    OR              reduce using rule 254 (arit -> arit MODULO arit .)
    PARC            reduce using rule 254 (arit -> arit MODULO arit .)
    COMA            reduce using rule 254 (arit -> arit MODULO arit .)
    PTCOMA          reduce using rule 254 (arit -> arit MODULO arit .)
    THEN            reduce using rule 254 (arit -> arit MODULO arit .)
    WHEN            reduce using rule 254 (arit -> arit MODULO arit .)
    ELSE            reduce using rule 254 (arit -> arit MODULO arit .)

  ! POR             [ shift and go to state 139 ]
  ! DIVISION        [ shift and go to state 140 ]
  ! MAS             [ shift and go to state 141 ]
  ! MENOS           [ shift and go to state 142 ]
  ! MODULO          [ shift and go to state 143 ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 246

    (255) arit -> arit ANDB arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 255 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 255 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 255 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 255 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 255 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 255 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 255 (arit -> arit ANDB arit .)
    XORB            reduce using rule 255 (arit -> arit ANDB arit .)
    ORB             reduce using rule 255 (arit -> arit ANDB arit .)
    AND             reduce using rule 255 (arit -> arit ANDB arit .)
    OR              reduce using rule 255 (arit -> arit ANDB arit .)
    PARC            reduce using rule 255 (arit -> arit ANDB arit .)
    COMA            reduce using rule 255 (arit -> arit ANDB arit .)
    PTCOMA          reduce using rule 255 (arit -> arit ANDB arit .)
    THEN            reduce using rule 255 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 255 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 255 (arit -> arit ANDB arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! DIVISION        [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! MODULO          [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 255 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 247

    (256) arit -> arit SHIFTI arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 256 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 256 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 256 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 256 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 256 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 256 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 256 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 256 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 256 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 256 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 256 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 256 (arit -> arit SHIFTI arit .)
    OR              reduce using rule 256 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 256 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 256 (arit -> arit SHIFTI arit .)
    PTCOMA          reduce using rule 256 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 256 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 256 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 256 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143

  ! POR             [ reduce using rule 256 (arit -> arit SHIFTI arit .) ]
  ! DIVISION        [ reduce using rule 256 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 256 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 256 (arit -> arit SHIFTI arit .) ]
  ! MODULO          [ reduce using rule 256 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 248

    (257) arit -> arit SHIFTD arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 257 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 257 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 257 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 257 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 257 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 257 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 257 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 257 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 257 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 257 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 257 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 257 (arit -> arit SHIFTD arit .)
    OR              reduce using rule 257 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 257 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 257 (arit -> arit SHIFTD arit .)
    PTCOMA          reduce using rule 257 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 257 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 257 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 257 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143

  ! POR             [ reduce using rule 257 (arit -> arit SHIFTD arit .) ]
  ! DIVISION        [ reduce using rule 257 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 257 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 257 (arit -> arit SHIFTD arit .) ]
  ! MODULO          [ reduce using rule 257 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 144 ]
  ! SHIFTI          [ shift and go to state 145 ]
  ! SHIFTD          [ shift and go to state 146 ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 249

    (258) arit -> arit XORB arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 258 (arit -> arit XORB arit .)
    MENOR           reduce using rule 258 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 258 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 258 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 258 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 258 (arit -> arit XORB arit .)
    XORB            reduce using rule 258 (arit -> arit XORB arit .)
    AND             reduce using rule 258 (arit -> arit XORB arit .)
    OR              reduce using rule 258 (arit -> arit XORB arit .)
    PARC            reduce using rule 258 (arit -> arit XORB arit .)
    COMA            reduce using rule 258 (arit -> arit XORB arit .)
    PTCOMA          reduce using rule 258 (arit -> arit XORB arit .)
    THEN            reduce using rule 258 (arit -> arit XORB arit .)
    WHEN            reduce using rule 258 (arit -> arit XORB arit .)
    ELSE            reduce using rule 258 (arit -> arit XORB arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    ANDB            shift and go to state 144
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146
    ORB             shift and go to state 148

  ! POR             [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! DIVISION        [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! MODULO          [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 258 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 147 ]


state 250

    (259) arit -> arit ORB arit .
    (250) arit -> arit . POR arit
    (251) arit -> arit . DIVISION arit
    (252) arit -> arit . MAS arit
    (253) arit -> arit . MENOS arit
    (254) arit -> arit . MODULO arit
    (255) arit -> arit . ANDB arit
    (256) arit -> arit . SHIFTI arit
    (257) arit -> arit . SHIFTD arit
    (258) arit -> arit . XORB arit
    (259) arit -> arit . ORB arit

    MAYOR           reduce using rule 259 (arit -> arit ORB arit .)
    MENOR           reduce using rule 259 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 259 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 259 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 259 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 259 (arit -> arit ORB arit .)
    XORB            reduce using rule 259 (arit -> arit ORB arit .)
    ORB             reduce using rule 259 (arit -> arit ORB arit .)
    AND             reduce using rule 259 (arit -> arit ORB arit .)
    OR              reduce using rule 259 (arit -> arit ORB arit .)
    PARC            reduce using rule 259 (arit -> arit ORB arit .)
    COMA            reduce using rule 259 (arit -> arit ORB arit .)
    PTCOMA          reduce using rule 259 (arit -> arit ORB arit .)
    THEN            reduce using rule 259 (arit -> arit ORB arit .)
    WHEN            reduce using rule 259 (arit -> arit ORB arit .)
    ELSE            reduce using rule 259 (arit -> arit ORB arit .)
    POR             shift and go to state 139
    DIVISION        shift and go to state 140
    MAS             shift and go to state 141
    MENOS           shift and go to state 142
    MODULO          shift and go to state 143
    ANDB            shift and go to state 144
    SHIFTI          shift and go to state 145
    SHIFTD          shift and go to state 146

  ! POR             [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! DIVISION        [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! MODULO          [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 259 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 147 ]
  ! ORB             [ shift and go to state 148 ]


state 251

    (193) llamada_funcion -> CALL ID PARA params PARC PTCOMA .

    error           reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    USE             reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ALTER           reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    INSERT          reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    $end            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    END             reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ID              reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    IF              reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 193 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)


state 252

    (53) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    error           reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CREATE          reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SELECT          reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CALL            reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    ALTER           reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    INSERT          reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 53 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 253

    (123) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 360


state 254

    (125) usuariosDB -> ID .

    PTCOMA          reduce using rule 125 (usuariosDB -> ID .)


state 255

    (124) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 361


state 256

    (126) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 126 (usuariosDB -> CURRENT_USER .)


state 257

    (127) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 127 (usuariosDB -> SESSION_USER .)


state 258

    (128) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 128 (usuariosDB -> CADENA .)


state 259

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID . SET NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID . SET NOT NULL PTCOMA
    (143) Table_alter -> ALTER COLUMN ID . TYPE TIPO_DATO

    SET             shift and go to state 362
    TYPE            shift and go to state 363


state 260

    (69) campos_c -> ID .

    PTCOMA          reduce using rule 69 (campos_c -> ID .)
    COMA            reduce using rule 69 (campos_c -> ID .)
    PARC            reduce using rule 69 (campos_c -> ID .)


state 261

    (129) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c . PTCOMA
    (68) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 364
    COMA            shift and go to state 365


state 262

    (130) alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c . PTCOMA
    (68) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 366
    COMA            shift and go to state 365


state 263

    (131) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID . TO ID PTCOMA

    TO              shift and go to state 367


state 264

    (146) tipos_datos_columnas -> ID . TIPO_DATO
    (160) TIPO_DATO -> . TEXT
    (161) TIPO_DATO -> . FLOAT
    (162) TIPO_DATO -> . INTEGER
    (163) TIPO_DATO -> . BOOLEAN
    (164) TIPO_DATO -> . SMALLINT
    (165) TIPO_DATO -> . MONEY
    (166) TIPO_DATO -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (167) TIPO_DATO -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (168) TIPO_DATO -> . BIGINT
    (169) TIPO_DATO -> . REAL
    (170) TIPO_DATO -> . DOUBLE PRECISION
    (171) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (172) TIPO_DATO -> . INTERVAL
    (173) TIPO_DATO -> . TIME
    (174) TIPO_DATO -> . TIMESTAMP
    (175) TIPO_DATO -> . DATE
    (176) TIPO_DATO -> . CHARACTER VARYING PARA ENTERO PARC
    (177) TIPO_DATO -> . VARCHAR PARA ENTERO PARC
    (178) TIPO_DATO -> . CHAR PARA ENTERO PARC
    (179) TIPO_DATO -> . CHARACTER PARA ENTERO PARC
    (180) TIPO_DATO -> . CHAR PARA PARC
    (181) TIPO_DATO -> . CHARACTER PARA PARC

    TEXT            shift and go to state 369
    FLOAT           shift and go to state 370
    INTEGER         shift and go to state 371
    BOOLEAN         shift and go to state 372
    SMALLINT        shift and go to state 373
    MONEY           shift and go to state 374
    DECIMAL         shift and go to state 375
    NUMERIC         shift and go to state 376
    BIGINT          shift and go to state 377
    REAL            shift and go to state 378
    DOUBLE          shift and go to state 379
    INTERVAL        shift and go to state 380
    TIME            shift and go to state 381
    TIMESTAMP       shift and go to state 382
    DATE            shift and go to state 383
    CHARACTER       shift and go to state 384
    VARCHAR         shift and go to state 385
    CHAR            shift and go to state 386

    TIPO_DATO                      shift and go to state 368

state 265

    (132) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column . PTCOMA
    (144) campos_add_Column -> campos_add_Column . COMA tipos_datos_columnas

    PTCOMA          shift and go to state 387
    COMA            shift and go to state 388


state 266

    (145) campos_add_Column -> tipos_datos_columnas .

    PTCOMA          reduce using rule 145 (campos_add_Column -> tipos_datos_columnas .)
    COMA            reduce using rule 145 (campos_add_Column -> tipos_datos_columnas .)


state 267

    (133) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA . expresion_logica PARC PTCOMA
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 389
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 268

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    PARA            shift and go to state 393


state 269

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . CHECK PARA expresion_logica PARC PTCOMA
    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PARA campos_c PARC PTCOMA
    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    CHECK           shift and go to state 394
    UNIQUE          shift and go to state 395
    FOREIGN         shift and go to state 396


state 270

    (141) alterTable_alter -> alterTable_alter COMA Table_alter .

    PTCOMA          reduce using rule 141 (alterTable_alter -> alterTable_alter COMA Table_alter .)
    COMA            reduce using rule 141 (alterTable_alter -> alterTable_alter COMA Table_alter .)


state 271

    (143) Table_alter -> ALTER . COLUMN ID TYPE TIPO_DATO

    COLUMN          shift and go to state 397


state 272

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC . VALUES PARA lista_datos PARC PTCOMA

    VALUES          shift and go to state 398


state 273

    (150) lista_parametros_lista -> lista_parametros_lista COMA . ID

    ID              shift and go to state 399


state 274

    (148) insert_insrt -> INSERT INTO ID PARA PARC VALUES . PARA lista_datos PARC PTCOMA

    PARA            shift and go to state 400


state 275

    (306) expresion_dato -> ID . PUNTO ID
    (183) string_type -> ID .

    PUNTO           shift and go to state 401
    MAS             reduce using rule 183 (string_type -> ID .)
    MENOS           reduce using rule 183 (string_type -> ID .)
    POR             reduce using rule 183 (string_type -> ID .)
    DIV             reduce using rule 183 (string_type -> ID .)
    MODULO          reduce using rule 183 (string_type -> ID .)
    SHIFTD          reduce using rule 183 (string_type -> ID .)
    SHIFTI          reduce using rule 183 (string_type -> ID .)
    HASHTAG         reduce using rule 183 (string_type -> ID .)
    ANDB            reduce using rule 183 (string_type -> ID .)
    D_OR            reduce using rule 183 (string_type -> ID .)
    PARC            reduce using rule 183 (string_type -> ID .)
    COMA            reduce using rule 183 (string_type -> ID .)
    MAYOR           reduce using rule 183 (string_type -> ID .)
    MENOR           reduce using rule 183 (string_type -> ID .)
    MAYORIGUAL      reduce using rule 183 (string_type -> ID .)
    MENORIGUAL      reduce using rule 183 (string_type -> ID .)
    IGUALIGUAL      reduce using rule 183 (string_type -> ID .)
    IGUAL           reduce using rule 183 (string_type -> ID .)
    NOIG            reduce using rule 183 (string_type -> ID .)
    NOTIGUAL        reduce using rule 183 (string_type -> ID .)
    AND             reduce using rule 183 (string_type -> ID .)
    OR              reduce using rule 183 (string_type -> ID .)


state 276

    (285) expresion -> PARA . expresion_logica PARC
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 402
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 277

    (149) insert_insrt -> INSERT INTO ID VALUES PARA lista_datos . PARC PTCOMA
    (152) lista_datos -> lista_datos . COMA exclusiva_insert

    PARC            shift and go to state 403
    COMA            shift and go to state 404


state 278

    (153) lista_datos -> exclusiva_insert .

    PARC            reduce using rule 153 (lista_datos -> exclusiva_insert .)
    COMA            reduce using rule 153 (lista_datos -> exclusiva_insert .)


state 279

    (154) exclusiva_insert -> expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    PARC            reduce using rule 154 (exclusiva_insert -> expresion .)
    COMA            reduce using rule 154 (exclusiva_insert -> expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 280

    (155) exclusiva_insert -> SUBSTRING . PARA string_type COMA expresion COMA expresion PARC

    PARA            shift and go to state 415


state 281

    (304) expresion_dato -> string_type .

    MAS             reduce using rule 304 (expresion_dato -> string_type .)
    MENOS           reduce using rule 304 (expresion_dato -> string_type .)
    POR             reduce using rule 304 (expresion_dato -> string_type .)
    DIV             reduce using rule 304 (expresion_dato -> string_type .)
    MODULO          reduce using rule 304 (expresion_dato -> string_type .)
    SHIFTD          reduce using rule 304 (expresion_dato -> string_type .)
    SHIFTI          reduce using rule 304 (expresion_dato -> string_type .)
    HASHTAG         reduce using rule 304 (expresion_dato -> string_type .)
    ANDB            reduce using rule 304 (expresion_dato -> string_type .)
    D_OR            reduce using rule 304 (expresion_dato -> string_type .)
    PARC            reduce using rule 304 (expresion_dato -> string_type .)
    COMA            reduce using rule 304 (expresion_dato -> string_type .)
    MAYOR           reduce using rule 304 (expresion_dato -> string_type .)
    MENOR           reduce using rule 304 (expresion_dato -> string_type .)
    MAYORIGUAL      reduce using rule 304 (expresion_dato -> string_type .)
    MENORIGUAL      reduce using rule 304 (expresion_dato -> string_type .)
    IGUALIGUAL      reduce using rule 304 (expresion_dato -> string_type .)
    IGUAL           reduce using rule 304 (expresion_dato -> string_type .)
    NOIG            reduce using rule 304 (expresion_dato -> string_type .)
    NOTIGUAL        reduce using rule 304 (expresion_dato -> string_type .)
    AND             reduce using rule 304 (expresion_dato -> string_type .)
    OR              reduce using rule 304 (expresion_dato -> string_type .)


state 282

    (156) exclusiva_insert -> SUBSTR . PARA string_type COMA expresion COMA expresion PARC

    PARA            shift and go to state 416


state 283

    (157) exclusiva_insert -> MD5 . PARA string_type PARC

    PARA            shift and go to state 417


state 284

    (158) exclusiva_insert -> TRIM . PARA string_type PARC

    PARA            shift and go to state 418


state 285

    (159) exclusiva_insert -> NOW . PARA PARC

    PARA            shift and go to state 419


state 286

    (305) expresion_dato -> MENOS . ENTERO

    ENTERO          shift and go to state 420


state 287

    (284) expresion -> D_OR . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 421
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 288

    (282) expresion -> NOTB . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 422
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 289

    (283) expresion -> ORB . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 423
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 290

    (286) expresion -> TRUE .

    MAS             reduce using rule 286 (expresion -> TRUE .)
    MENOS           reduce using rule 286 (expresion -> TRUE .)
    POR             reduce using rule 286 (expresion -> TRUE .)
    DIV             reduce using rule 286 (expresion -> TRUE .)
    MODULO          reduce using rule 286 (expresion -> TRUE .)
    SHIFTD          reduce using rule 286 (expresion -> TRUE .)
    SHIFTI          reduce using rule 286 (expresion -> TRUE .)
    HASHTAG         reduce using rule 286 (expresion -> TRUE .)
    ANDB            reduce using rule 286 (expresion -> TRUE .)
    D_OR            reduce using rule 286 (expresion -> TRUE .)
    PARC            reduce using rule 286 (expresion -> TRUE .)
    COMA            reduce using rule 286 (expresion -> TRUE .)
    MAYOR           reduce using rule 286 (expresion -> TRUE .)
    MENOR           reduce using rule 286 (expresion -> TRUE .)
    MAYORIGUAL      reduce using rule 286 (expresion -> TRUE .)
    MENORIGUAL      reduce using rule 286 (expresion -> TRUE .)
    IGUALIGUAL      reduce using rule 286 (expresion -> TRUE .)
    IGUAL           reduce using rule 286 (expresion -> TRUE .)
    NOIG            reduce using rule 286 (expresion -> TRUE .)
    NOTIGUAL        reduce using rule 286 (expresion -> TRUE .)
    AND             reduce using rule 286 (expresion -> TRUE .)
    OR              reduce using rule 286 (expresion -> TRUE .)


state 291

    (287) expresion -> FALSE .

    MAS             reduce using rule 287 (expresion -> FALSE .)
    MENOS           reduce using rule 287 (expresion -> FALSE .)
    POR             reduce using rule 287 (expresion -> FALSE .)
    DIV             reduce using rule 287 (expresion -> FALSE .)
    MODULO          reduce using rule 287 (expresion -> FALSE .)
    SHIFTD          reduce using rule 287 (expresion -> FALSE .)
    SHIFTI          reduce using rule 287 (expresion -> FALSE .)
    HASHTAG         reduce using rule 287 (expresion -> FALSE .)
    ANDB            reduce using rule 287 (expresion -> FALSE .)
    D_OR            reduce using rule 287 (expresion -> FALSE .)
    PARC            reduce using rule 287 (expresion -> FALSE .)
    COMA            reduce using rule 287 (expresion -> FALSE .)
    MAYOR           reduce using rule 287 (expresion -> FALSE .)
    MENOR           reduce using rule 287 (expresion -> FALSE .)
    MAYORIGUAL      reduce using rule 287 (expresion -> FALSE .)
    MENORIGUAL      reduce using rule 287 (expresion -> FALSE .)
    IGUALIGUAL      reduce using rule 287 (expresion -> FALSE .)
    IGUAL           reduce using rule 287 (expresion -> FALSE .)
    NOIG            reduce using rule 287 (expresion -> FALSE .)
    NOTIGUAL        reduce using rule 287 (expresion -> FALSE .)
    AND             reduce using rule 287 (expresion -> FALSE .)
    OR              reduce using rule 287 (expresion -> FALSE .)


state 292

    (301) expresion -> expresion_dato .

    MAS             reduce using rule 301 (expresion -> expresion_dato .)
    MENOS           reduce using rule 301 (expresion -> expresion_dato .)
    POR             reduce using rule 301 (expresion -> expresion_dato .)
    DIV             reduce using rule 301 (expresion -> expresion_dato .)
    MODULO          reduce using rule 301 (expresion -> expresion_dato .)
    SHIFTD          reduce using rule 301 (expresion -> expresion_dato .)
    SHIFTI          reduce using rule 301 (expresion -> expresion_dato .)
    HASHTAG         reduce using rule 301 (expresion -> expresion_dato .)
    ANDB            reduce using rule 301 (expresion -> expresion_dato .)
    D_OR            reduce using rule 301 (expresion -> expresion_dato .)
    PARC            reduce using rule 301 (expresion -> expresion_dato .)
    COMA            reduce using rule 301 (expresion -> expresion_dato .)
    MAYOR           reduce using rule 301 (expresion -> expresion_dato .)
    MENOR           reduce using rule 301 (expresion -> expresion_dato .)
    MAYORIGUAL      reduce using rule 301 (expresion -> expresion_dato .)
    MENORIGUAL      reduce using rule 301 (expresion -> expresion_dato .)
    IGUALIGUAL      reduce using rule 301 (expresion -> expresion_dato .)
    IGUAL           reduce using rule 301 (expresion -> expresion_dato .)
    NOIG            reduce using rule 301 (expresion -> expresion_dato .)
    NOTIGUAL        reduce using rule 301 (expresion -> expresion_dato .)
    AND             reduce using rule 301 (expresion -> expresion_dato .)
    OR              reduce using rule 301 (expresion -> expresion_dato .)


state 293

    (302) expresion -> sum_insrt .

    MAS             reduce using rule 302 (expresion -> sum_insrt .)
    MENOS           reduce using rule 302 (expresion -> sum_insrt .)
    POR             reduce using rule 302 (expresion -> sum_insrt .)
    DIV             reduce using rule 302 (expresion -> sum_insrt .)
    MODULO          reduce using rule 302 (expresion -> sum_insrt .)
    SHIFTD          reduce using rule 302 (expresion -> sum_insrt .)
    SHIFTI          reduce using rule 302 (expresion -> sum_insrt .)
    HASHTAG         reduce using rule 302 (expresion -> sum_insrt .)
    ANDB            reduce using rule 302 (expresion -> sum_insrt .)
    D_OR            reduce using rule 302 (expresion -> sum_insrt .)
    PARC            reduce using rule 302 (expresion -> sum_insrt .)
    COMA            reduce using rule 302 (expresion -> sum_insrt .)
    MAYOR           reduce using rule 302 (expresion -> sum_insrt .)
    MENOR           reduce using rule 302 (expresion -> sum_insrt .)
    MAYORIGUAL      reduce using rule 302 (expresion -> sum_insrt .)
    MENORIGUAL      reduce using rule 302 (expresion -> sum_insrt .)
    IGUALIGUAL      reduce using rule 302 (expresion -> sum_insrt .)
    IGUAL           reduce using rule 302 (expresion -> sum_insrt .)
    NOIG            reduce using rule 302 (expresion -> sum_insrt .)
    NOTIGUAL        reduce using rule 302 (expresion -> sum_insrt .)
    AND             reduce using rule 302 (expresion -> sum_insrt .)
    OR              reduce using rule 302 (expresion -> sum_insrt .)


state 294

    (303) expresion -> count_insrt .

    MAS             reduce using rule 303 (expresion -> count_insrt .)
    MENOS           reduce using rule 303 (expresion -> count_insrt .)
    POR             reduce using rule 303 (expresion -> count_insrt .)
    DIV             reduce using rule 303 (expresion -> count_insrt .)
    MODULO          reduce using rule 303 (expresion -> count_insrt .)
    SHIFTD          reduce using rule 303 (expresion -> count_insrt .)
    SHIFTI          reduce using rule 303 (expresion -> count_insrt .)
    HASHTAG         reduce using rule 303 (expresion -> count_insrt .)
    ANDB            reduce using rule 303 (expresion -> count_insrt .)
    D_OR            reduce using rule 303 (expresion -> count_insrt .)
    PARC            reduce using rule 303 (expresion -> count_insrt .)
    COMA            reduce using rule 303 (expresion -> count_insrt .)
    MAYOR           reduce using rule 303 (expresion -> count_insrt .)
    MENOR           reduce using rule 303 (expresion -> count_insrt .)
    MAYORIGUAL      reduce using rule 303 (expresion -> count_insrt .)
    MENORIGUAL      reduce using rule 303 (expresion -> count_insrt .)
    IGUALIGUAL      reduce using rule 303 (expresion -> count_insrt .)
    IGUAL           reduce using rule 303 (expresion -> count_insrt .)
    NOIG            reduce using rule 303 (expresion -> count_insrt .)
    NOTIGUAL        reduce using rule 303 (expresion -> count_insrt .)
    AND             reduce using rule 303 (expresion -> count_insrt .)
    OR              reduce using rule 303 (expresion -> count_insrt .)


state 295

    (308) expresion_numero -> ENTERO .

    MAS             reduce using rule 308 (expresion_numero -> ENTERO .)
    MENOS           reduce using rule 308 (expresion_numero -> ENTERO .)
    POR             reduce using rule 308 (expresion_numero -> ENTERO .)
    DIV             reduce using rule 308 (expresion_numero -> ENTERO .)
    MODULO          reduce using rule 308 (expresion_numero -> ENTERO .)
    SHIFTD          reduce using rule 308 (expresion_numero -> ENTERO .)
    SHIFTI          reduce using rule 308 (expresion_numero -> ENTERO .)
    HASHTAG         reduce using rule 308 (expresion_numero -> ENTERO .)
    ANDB            reduce using rule 308 (expresion_numero -> ENTERO .)
    D_OR            reduce using rule 308 (expresion_numero -> ENTERO .)
    PARC            reduce using rule 308 (expresion_numero -> ENTERO .)
    COMA            reduce using rule 308 (expresion_numero -> ENTERO .)
    MAYOR           reduce using rule 308 (expresion_numero -> ENTERO .)
    MENOR           reduce using rule 308 (expresion_numero -> ENTERO .)
    MAYORIGUAL      reduce using rule 308 (expresion_numero -> ENTERO .)
    MENORIGUAL      reduce using rule 308 (expresion_numero -> ENTERO .)
    IGUALIGUAL      reduce using rule 308 (expresion_numero -> ENTERO .)
    IGUAL           reduce using rule 308 (expresion_numero -> ENTERO .)
    NOIG            reduce using rule 308 (expresion_numero -> ENTERO .)
    NOTIGUAL        reduce using rule 308 (expresion_numero -> ENTERO .)
    AND             reduce using rule 308 (expresion_numero -> ENTERO .)
    OR              reduce using rule 308 (expresion_numero -> ENTERO .)


state 296

    (307) expresion_dato -> expresion_numero .

    MAS             reduce using rule 307 (expresion_dato -> expresion_numero .)
    MENOS           reduce using rule 307 (expresion_dato -> expresion_numero .)
    POR             reduce using rule 307 (expresion_dato -> expresion_numero .)
    DIV             reduce using rule 307 (expresion_dato -> expresion_numero .)
    MODULO          reduce using rule 307 (expresion_dato -> expresion_numero .)
    SHIFTD          reduce using rule 307 (expresion_dato -> expresion_numero .)
    SHIFTI          reduce using rule 307 (expresion_dato -> expresion_numero .)
    HASHTAG         reduce using rule 307 (expresion_dato -> expresion_numero .)
    ANDB            reduce using rule 307 (expresion_dato -> expresion_numero .)
    D_OR            reduce using rule 307 (expresion_dato -> expresion_numero .)
    PARC            reduce using rule 307 (expresion_dato -> expresion_numero .)
    COMA            reduce using rule 307 (expresion_dato -> expresion_numero .)
    MAYOR           reduce using rule 307 (expresion_dato -> expresion_numero .)
    MENOR           reduce using rule 307 (expresion_dato -> expresion_numero .)
    MAYORIGUAL      reduce using rule 307 (expresion_dato -> expresion_numero .)
    MENORIGUAL      reduce using rule 307 (expresion_dato -> expresion_numero .)
    IGUALIGUAL      reduce using rule 307 (expresion_dato -> expresion_numero .)
    IGUAL           reduce using rule 307 (expresion_dato -> expresion_numero .)
    NOIG            reduce using rule 307 (expresion_dato -> expresion_numero .)
    NOTIGUAL        reduce using rule 307 (expresion_dato -> expresion_numero .)
    AND             reduce using rule 307 (expresion_dato -> expresion_numero .)
    OR              reduce using rule 307 (expresion_dato -> expresion_numero .)


state 297

    (310) sum_insrt -> SUM . agrupacion_expresion
    (271) agrupacion_expresion -> . PARA expresion PARC

    PARA            shift and go to state 425

    agrupacion_expresion           shift and go to state 424

state 298

    (311) count_insrt -> COUNT . agrupacion_expresion
    (271) agrupacion_expresion -> . PARA expresion PARC

    PARA            shift and go to state 425

    agrupacion_expresion           shift and go to state 426

state 299

    (309) expresion_numero -> FLOTANTE .

    MAS             reduce using rule 309 (expresion_numero -> FLOTANTE .)
    MENOS           reduce using rule 309 (expresion_numero -> FLOTANTE .)
    POR             reduce using rule 309 (expresion_numero -> FLOTANTE .)
    DIV             reduce using rule 309 (expresion_numero -> FLOTANTE .)
    MODULO          reduce using rule 309 (expresion_numero -> FLOTANTE .)
    SHIFTD          reduce using rule 309 (expresion_numero -> FLOTANTE .)
    SHIFTI          reduce using rule 309 (expresion_numero -> FLOTANTE .)
    HASHTAG         reduce using rule 309 (expresion_numero -> FLOTANTE .)
    ANDB            reduce using rule 309 (expresion_numero -> FLOTANTE .)
    D_OR            reduce using rule 309 (expresion_numero -> FLOTANTE .)
    PARC            reduce using rule 309 (expresion_numero -> FLOTANTE .)
    COMA            reduce using rule 309 (expresion_numero -> FLOTANTE .)
    MAYOR           reduce using rule 309 (expresion_numero -> FLOTANTE .)
    MENOR           reduce using rule 309 (expresion_numero -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 309 (expresion_numero -> FLOTANTE .)
    MENORIGUAL      reduce using rule 309 (expresion_numero -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 309 (expresion_numero -> FLOTANTE .)
    IGUAL           reduce using rule 309 (expresion_numero -> FLOTANTE .)
    NOIG            reduce using rule 309 (expresion_numero -> FLOTANTE .)
    NOTIGUAL        reduce using rule 309 (expresion_numero -> FLOTANTE .)
    AND             reduce using rule 309 (expresion_numero -> FLOTANTE .)
    OR              reduce using rule 309 (expresion_numero -> FLOTANTE .)


state 300

    (231) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 427


state 301

    (232) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 428


state 302

    (234) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 429


state 303

    (233) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 430


state 304

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (218) tipo -> . INTEGER
    (219) tipo -> . SMALLINT
    (220) tipo -> . BIGINT
    (221) tipo -> . DECIMAL
    (222) tipo -> . NUMERIC
    (223) tipo -> . REAL
    (224) tipo -> . CHAR
    (225) tipo -> . DOUBLE
    (226) tipo -> . PRECISION
    (227) tipo -> . MONEY
    (228) tipo -> . FLOAT
    (229) tipo -> . BOOLEAN
    (230) tipo -> . VOID
    (231) tipo -> . CHAR PARA ENTERO PARC
    (232) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (233) tipo -> . VARCHAR PARA ENTERO PARC
    (234) tipo -> . CHARACTER PARA ENTERO PARC
    (235) tipo -> . TEXT
    (236) tipo -> . TIME
    (237) tipo -> . TIMESTAMP
    (238) tipo -> . DATE

    INTEGER         shift and go to state 172
    SMALLINT        shift and go to state 173
    BIGINT          shift and go to state 174
    DECIMAL         shift and go to state 175
    NUMERIC         shift and go to state 176
    REAL            shift and go to state 177
    CHAR            shift and go to state 178
    DOUBLE          shift and go to state 179
    PRECISION       shift and go to state 180
    MONEY           shift and go to state 181
    FLOAT           shift and go to state 182
    BOOLEAN         shift and go to state 183
    VOID            shift and go to state 184
    CHARACTER       shift and go to state 185
    VARCHAR         shift and go to state 186
    TEXT            shift and go to state 187
    TIME            shift and go to state 188
    TIMESTAMP       shift and go to state 189
    DATE            shift and go to state 190

    tipo                           shift and go to state 431

state 305

    (197) parametros -> parametros COMA parametro .

    PARC            reduce using rule 197 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 197 (parametros -> parametros COMA parametro .)


state 306

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> parametros . COMA parametro

    PARC            shift and go to state 432
    COMA            shift and go to state 192


state 307

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (197) parametros -> parametros . COMA parametro

    PARC            shift and go to state 433
    COMA            shift and go to state 192


state 308

    (34) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 309

    (38) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 38 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 310

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 434


state 311

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (218) tipo -> . INTEGER
    (219) tipo -> . SMALLINT
    (220) tipo -> . BIGINT
    (221) tipo -> . DECIMAL
    (222) tipo -> . NUMERIC
    (223) tipo -> . REAL
    (224) tipo -> . CHAR
    (225) tipo -> . DOUBLE
    (226) tipo -> . PRECISION
    (227) tipo -> . MONEY
    (228) tipo -> . FLOAT
    (229) tipo -> . BOOLEAN
    (230) tipo -> . VOID
    (231) tipo -> . CHAR PARA ENTERO PARC
    (232) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (233) tipo -> . VARCHAR PARA ENTERO PARC
    (234) tipo -> . CHARACTER PARA ENTERO PARC
    (235) tipo -> . TEXT
    (236) tipo -> . TIME
    (237) tipo -> . TIMESTAMP
    (238) tipo -> . DATE

    INTEGER         shift and go to state 172
    SMALLINT        shift and go to state 173
    BIGINT          shift and go to state 174
    DECIMAL         shift and go to state 175
    NUMERIC         shift and go to state 176
    REAL            shift and go to state 177
    CHAR            shift and go to state 178
    DOUBLE          shift and go to state 179
    PRECISION       shift and go to state 180
    MONEY           shift and go to state 181
    FLOAT           shift and go to state 182
    BOOLEAN         shift and go to state 183
    VOID            shift and go to state 184
    CHARACTER       shift and go to state 185
    VARCHAR         shift and go to state 186
    TEXT            shift and go to state 187
    TIME            shift and go to state 188
    TIMESTAMP       shift and go to state 189
    DATE            shift and go to state 190

    tipo                           shift and go to state 435

state 312

    (44) createDB_dosParam -> OWNER IGUAL string_type MODE . ENTERO
    (47) createDB_dosParam -> OWNER IGUAL string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 437
    IGUAL           shift and go to state 436


state 313

    (41) createDB_dosParam -> OWNER string_type MODE ENTERO .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> OWNER string_type MODE ENTERO .)


state 314

    (43) createDB_dosParam -> OWNER string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 438


state 315

    (46) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (48) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 440
    IGUAL           shift and go to state 439


state 316

    (42) createDB_dosParam -> MODE ENTERO OWNER string_type .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> MODE ENTERO OWNER string_type .)


state 317

    (45) createDB_dosParam -> MODE ENTERO OWNER IGUAL . string_type
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 441

state 318

    (31) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    INSERT          reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 319

    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 442


state 320

    (39) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 443


state 321

    (63) cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .
    (73) createTable_options -> createTable_options . cT_options
    (75) cT_options -> . N_null
    (76) cT_options -> . C_unique
    (77) cT_options -> . llave
    (78) cT_options -> . O_DEFAULT
    (79) cT_options -> . C_check
    (80) N_null -> . NOT NULL
    (81) N_null -> . NULL
    (82) C_unique -> . UNIQUE
    (83) C_unique -> . CONSTRAINT ID UNIQUE
    (84) llave -> . PRIMARY KEY
    (85) llave -> . FOREIGN KEY
    (86) O_DEFAULT -> . DEFAULT expresion_dato_default
    (87) C_check -> . CONSTRAINT ID CHECK PARA expresion_logica PARC
    (88) C_check -> . CHECK PARA expresion_logica PARC

    PARC            reduce using rule 63 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    COMA            reduce using rule 63 (cuerpo_createTable -> ID TIPO_DATO_DEF createTable_options .)
    NOT             shift and go to state 328
    NULL            shift and go to state 329
    UNIQUE          shift and go to state 330
    CONSTRAINT      shift and go to state 331
    PRIMARY         shift and go to state 332
    FOREIGN         shift and go to state 333
    DEFAULT         shift and go to state 334
    CHECK           shift and go to state 335

    cT_options                     shift and go to state 444
    N_null                         shift and go to state 323
    C_unique                       shift and go to state 324
    llave                          shift and go to state 325
    O_DEFAULT                      shift and go to state 326
    C_check                        shift and go to state 327

state 322

    (74) createTable_options -> cT_options .

    NOT             reduce using rule 74 (createTable_options -> cT_options .)
    NULL            reduce using rule 74 (createTable_options -> cT_options .)
    UNIQUE          reduce using rule 74 (createTable_options -> cT_options .)
    CONSTRAINT      reduce using rule 74 (createTable_options -> cT_options .)
    PRIMARY         reduce using rule 74 (createTable_options -> cT_options .)
    FOREIGN         reduce using rule 74 (createTable_options -> cT_options .)
    DEFAULT         reduce using rule 74 (createTable_options -> cT_options .)
    CHECK           reduce using rule 74 (createTable_options -> cT_options .)
    PARC            reduce using rule 74 (createTable_options -> cT_options .)
    COMA            reduce using rule 74 (createTable_options -> cT_options .)


state 323

    (75) cT_options -> N_null .

    NOT             reduce using rule 75 (cT_options -> N_null .)
    NULL            reduce using rule 75 (cT_options -> N_null .)
    UNIQUE          reduce using rule 75 (cT_options -> N_null .)
    CONSTRAINT      reduce using rule 75 (cT_options -> N_null .)
    PRIMARY         reduce using rule 75 (cT_options -> N_null .)
    FOREIGN         reduce using rule 75 (cT_options -> N_null .)
    DEFAULT         reduce using rule 75 (cT_options -> N_null .)
    CHECK           reduce using rule 75 (cT_options -> N_null .)
    PARC            reduce using rule 75 (cT_options -> N_null .)
    COMA            reduce using rule 75 (cT_options -> N_null .)


state 324

    (76) cT_options -> C_unique .

    NOT             reduce using rule 76 (cT_options -> C_unique .)
    NULL            reduce using rule 76 (cT_options -> C_unique .)
    UNIQUE          reduce using rule 76 (cT_options -> C_unique .)
    CONSTRAINT      reduce using rule 76 (cT_options -> C_unique .)
    PRIMARY         reduce using rule 76 (cT_options -> C_unique .)
    FOREIGN         reduce using rule 76 (cT_options -> C_unique .)
    DEFAULT         reduce using rule 76 (cT_options -> C_unique .)
    CHECK           reduce using rule 76 (cT_options -> C_unique .)
    PARC            reduce using rule 76 (cT_options -> C_unique .)
    COMA            reduce using rule 76 (cT_options -> C_unique .)


state 325

    (77) cT_options -> llave .

    NOT             reduce using rule 77 (cT_options -> llave .)
    NULL            reduce using rule 77 (cT_options -> llave .)
    UNIQUE          reduce using rule 77 (cT_options -> llave .)
    CONSTRAINT      reduce using rule 77 (cT_options -> llave .)
    PRIMARY         reduce using rule 77 (cT_options -> llave .)
    FOREIGN         reduce using rule 77 (cT_options -> llave .)
    DEFAULT         reduce using rule 77 (cT_options -> llave .)
    CHECK           reduce using rule 77 (cT_options -> llave .)
    PARC            reduce using rule 77 (cT_options -> llave .)
    COMA            reduce using rule 77 (cT_options -> llave .)


state 326

    (78) cT_options -> O_DEFAULT .

    NOT             reduce using rule 78 (cT_options -> O_DEFAULT .)
    NULL            reduce using rule 78 (cT_options -> O_DEFAULT .)
    UNIQUE          reduce using rule 78 (cT_options -> O_DEFAULT .)
    CONSTRAINT      reduce using rule 78 (cT_options -> O_DEFAULT .)
    PRIMARY         reduce using rule 78 (cT_options -> O_DEFAULT .)
    FOREIGN         reduce using rule 78 (cT_options -> O_DEFAULT .)
    DEFAULT         reduce using rule 78 (cT_options -> O_DEFAULT .)
    CHECK           reduce using rule 78 (cT_options -> O_DEFAULT .)
    PARC            reduce using rule 78 (cT_options -> O_DEFAULT .)
    COMA            reduce using rule 78 (cT_options -> O_DEFAULT .)


state 327

    (79) cT_options -> C_check .

    NOT             reduce using rule 79 (cT_options -> C_check .)
    NULL            reduce using rule 79 (cT_options -> C_check .)
    UNIQUE          reduce using rule 79 (cT_options -> C_check .)
    CONSTRAINT      reduce using rule 79 (cT_options -> C_check .)
    PRIMARY         reduce using rule 79 (cT_options -> C_check .)
    FOREIGN         reduce using rule 79 (cT_options -> C_check .)
    DEFAULT         reduce using rule 79 (cT_options -> C_check .)
    CHECK           reduce using rule 79 (cT_options -> C_check .)
    PARC            reduce using rule 79 (cT_options -> C_check .)
    COMA            reduce using rule 79 (cT_options -> C_check .)


state 328

    (80) N_null -> NOT . NULL

    NULL            shift and go to state 445


state 329

    (81) N_null -> NULL .

    NOT             reduce using rule 81 (N_null -> NULL .)
    NULL            reduce using rule 81 (N_null -> NULL .)
    UNIQUE          reduce using rule 81 (N_null -> NULL .)
    CONSTRAINT      reduce using rule 81 (N_null -> NULL .)
    PRIMARY         reduce using rule 81 (N_null -> NULL .)
    FOREIGN         reduce using rule 81 (N_null -> NULL .)
    DEFAULT         reduce using rule 81 (N_null -> NULL .)
    CHECK           reduce using rule 81 (N_null -> NULL .)
    PARC            reduce using rule 81 (N_null -> NULL .)
    COMA            reduce using rule 81 (N_null -> NULL .)


state 330

    (82) C_unique -> UNIQUE .

    NOT             reduce using rule 82 (C_unique -> UNIQUE .)
    NULL            reduce using rule 82 (C_unique -> UNIQUE .)
    UNIQUE          reduce using rule 82 (C_unique -> UNIQUE .)
    CONSTRAINT      reduce using rule 82 (C_unique -> UNIQUE .)
    PRIMARY         reduce using rule 82 (C_unique -> UNIQUE .)
    FOREIGN         reduce using rule 82 (C_unique -> UNIQUE .)
    DEFAULT         reduce using rule 82 (C_unique -> UNIQUE .)
    CHECK           reduce using rule 82 (C_unique -> UNIQUE .)
    PARC            reduce using rule 82 (C_unique -> UNIQUE .)
    COMA            reduce using rule 82 (C_unique -> UNIQUE .)


state 331

    (83) C_unique -> CONSTRAINT . ID UNIQUE
    (87) C_check -> CONSTRAINT . ID CHECK PARA expresion_logica PARC

    ID              shift and go to state 446


state 332

    (84) llave -> PRIMARY . KEY

    KEY             shift and go to state 447


state 333

    (85) llave -> FOREIGN . KEY

    KEY             shift and go to state 448


state 334

    (86) O_DEFAULT -> DEFAULT . expresion_dato_default
    (89) expresion_dato_default -> . ENTERO
    (90) expresion_dato_default -> . FLOTANTE
    (91) expresion_dato_default -> . CADENA

    ENTERO          shift and go to state 450
    FLOTANTE        shift and go to state 451
    CADENA          shift and go to state 452

    expresion_dato_default         shift and go to state 449

state 335

    (88) C_check -> CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 453


state 336

    (98) TIPO_DATO_DEF -> DECIMAL PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 454


state 337

    (99) TIPO_DATO_DEF -> NUMERIC PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 455


state 338

    (102) TIPO_DATO_DEF -> DOUBLE PRECISION .

    NOT             reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    NULL            reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    UNIQUE          reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CONSTRAINT      reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PRIMARY         reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    FOREIGN         reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    DEFAULT         reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    CHECK           reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    PARC            reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)
    COMA            reduce using rule 102 (TIPO_DATO_DEF -> DOUBLE PRECISION .)


state 339

    (103) TIPO_DATO_DEF -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 456


state 340

    (114) extract_time -> YEAR .

    TO              reduce using rule 114 (extract_time -> YEAR .)
    NOT             reduce using rule 114 (extract_time -> YEAR .)
    NULL            reduce using rule 114 (extract_time -> YEAR .)
    UNIQUE          reduce using rule 114 (extract_time -> YEAR .)
    CONSTRAINT      reduce using rule 114 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 114 (extract_time -> YEAR .)
    FOREIGN         reduce using rule 114 (extract_time -> YEAR .)
    DEFAULT         reduce using rule 114 (extract_time -> YEAR .)
    CHECK           reduce using rule 114 (extract_time -> YEAR .)
    PARC            reduce using rule 114 (extract_time -> YEAR .)
    COMA            reduce using rule 114 (extract_time -> YEAR .)
    PTCOMA          reduce using rule 114 (extract_time -> YEAR .)


state 341

    (115) extract_time -> DAY .

    TO              reduce using rule 115 (extract_time -> DAY .)
    NOT             reduce using rule 115 (extract_time -> DAY .)
    NULL            reduce using rule 115 (extract_time -> DAY .)
    UNIQUE          reduce using rule 115 (extract_time -> DAY .)
    CONSTRAINT      reduce using rule 115 (extract_time -> DAY .)
    PRIMARY         reduce using rule 115 (extract_time -> DAY .)
    FOREIGN         reduce using rule 115 (extract_time -> DAY .)
    DEFAULT         reduce using rule 115 (extract_time -> DAY .)
    CHECK           reduce using rule 115 (extract_time -> DAY .)
    PARC            reduce using rule 115 (extract_time -> DAY .)
    COMA            reduce using rule 115 (extract_time -> DAY .)
    PTCOMA          reduce using rule 115 (extract_time -> DAY .)


state 342

    (116) extract_time -> MONTH .

    TO              reduce using rule 116 (extract_time -> MONTH .)
    NOT             reduce using rule 116 (extract_time -> MONTH .)
    NULL            reduce using rule 116 (extract_time -> MONTH .)
    UNIQUE          reduce using rule 116 (extract_time -> MONTH .)
    CONSTRAINT      reduce using rule 116 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 116 (extract_time -> MONTH .)
    FOREIGN         reduce using rule 116 (extract_time -> MONTH .)
    DEFAULT         reduce using rule 116 (extract_time -> MONTH .)
    CHECK           reduce using rule 116 (extract_time -> MONTH .)
    PARC            reduce using rule 116 (extract_time -> MONTH .)
    COMA            reduce using rule 116 (extract_time -> MONTH .)
    PTCOMA          reduce using rule 116 (extract_time -> MONTH .)


state 343

    (117) extract_time -> HOUR .

    TO              reduce using rule 117 (extract_time -> HOUR .)
    NOT             reduce using rule 117 (extract_time -> HOUR .)
    NULL            reduce using rule 117 (extract_time -> HOUR .)
    UNIQUE          reduce using rule 117 (extract_time -> HOUR .)
    CONSTRAINT      reduce using rule 117 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 117 (extract_time -> HOUR .)
    FOREIGN         reduce using rule 117 (extract_time -> HOUR .)
    DEFAULT         reduce using rule 117 (extract_time -> HOUR .)
    CHECK           reduce using rule 117 (extract_time -> HOUR .)
    PARC            reduce using rule 117 (extract_time -> HOUR .)
    COMA            reduce using rule 117 (extract_time -> HOUR .)
    PTCOMA          reduce using rule 117 (extract_time -> HOUR .)


state 344

    (118) extract_time -> MINUTE .

    TO              reduce using rule 118 (extract_time -> MINUTE .)
    NOT             reduce using rule 118 (extract_time -> MINUTE .)
    NULL            reduce using rule 118 (extract_time -> MINUTE .)
    UNIQUE          reduce using rule 118 (extract_time -> MINUTE .)
    CONSTRAINT      reduce using rule 118 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 118 (extract_time -> MINUTE .)
    FOREIGN         reduce using rule 118 (extract_time -> MINUTE .)
    DEFAULT         reduce using rule 118 (extract_time -> MINUTE .)
    CHECK           reduce using rule 118 (extract_time -> MINUTE .)
    PARC            reduce using rule 118 (extract_time -> MINUTE .)
    COMA            reduce using rule 118 (extract_time -> MINUTE .)
    PTCOMA          reduce using rule 118 (extract_time -> MINUTE .)


state 345

    (119) extract_time -> SECOND .

    TO              reduce using rule 119 (extract_time -> SECOND .)
    NOT             reduce using rule 119 (extract_time -> SECOND .)
    NULL            reduce using rule 119 (extract_time -> SECOND .)
    UNIQUE          reduce using rule 119 (extract_time -> SECOND .)
    CONSTRAINT      reduce using rule 119 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 119 (extract_time -> SECOND .)
    FOREIGN         reduce using rule 119 (extract_time -> SECOND .)
    DEFAULT         reduce using rule 119 (extract_time -> SECOND .)
    CHECK           reduce using rule 119 (extract_time -> SECOND .)
    PARC            reduce using rule 119 (extract_time -> SECOND .)
    COMA            reduce using rule 119 (extract_time -> SECOND .)
    PTCOMA          reduce using rule 119 (extract_time -> SECOND .)


state 346

    (108) TIPO_DATO_DEF -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 457


state 347

    (111) TIPO_DATO_DEF -> CHARACTER PARA . ENTERO PARC
    (113) TIPO_DATO_DEF -> CHARACTER PARA . PARC

    ENTERO          shift and go to state 458
    PARC            shift and go to state 459


state 348

    (109) TIPO_DATO_DEF -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 460


state 349

    (110) TIPO_DATO_DEF -> CHAR PARA . ENTERO PARC
    (112) TIPO_DATO_DEF -> CHAR PARA . PARC

    ENTERO          shift and go to state 461
    PARC            shift and go to state 462


state 350

    (58) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .

    error           reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CREATE          reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SELECT          reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    CALL            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    SHOW            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    USE             reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    DROP            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    ALTER           reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    INSERT          reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)
    $end            reduce using rule 58 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC PTCOMA .)


state 351

    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS . PARA ID PARC PTCOMA

    PARA            shift and go to state 463


state 352

    (60) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PARC            reduce using rule 60 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 60 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 353

    (64) cuerpo_createTable -> PRIMARY KEY PARA . campos_c PARC
    (68) campos_c -> . campos_c COMA ID
    (69) campos_c -> . ID

    ID              shift and go to state 260

    campos_c                       shift and go to state 464

state 354

    (65) cuerpo_createTable -> FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC

    ID              shift and go to state 465


state 355

    (66) cuerpo_createTable -> UNIQUE PARA campos_c . PARC
    (68) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 466
    COMA            shift and go to state 365


state 356

    (67) cuerpo_createTable -> CONSTRAINT ID constraint_esp .

    PARC            reduce using rule 67 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)
    COMA            reduce using rule 67 (cuerpo_createTable -> CONSTRAINT ID constraint_esp .)


state 357

    (70) constraint_esp -> CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 467


state 358

    (71) constraint_esp -> UNIQUE . PARA campos_c PARC

    PARA            shift and go to state 468


state 359

    (72) constraint_esp -> FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC

    KEY             shift and go to state 469


state 360

    (123) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    error           reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CREATE          reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SELECT          reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CALL            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SHOW            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    USE             reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    INSERT          reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 123 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 361

    (124) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    error           reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CREATE          reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SELECT          reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CALL            reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SHOW            reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    USE             reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    INSERT          reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 124 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 362

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET . NULL PTCOMA
    (139) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET . NOT NULL PTCOMA

    NULL            shift and go to state 470
    NOT             shift and go to state 471


state 363

    (143) Table_alter -> ALTER COLUMN ID TYPE . TIPO_DATO
    (160) TIPO_DATO -> . TEXT
    (161) TIPO_DATO -> . FLOAT
    (162) TIPO_DATO -> . INTEGER
    (163) TIPO_DATO -> . BOOLEAN
    (164) TIPO_DATO -> . SMALLINT
    (165) TIPO_DATO -> . MONEY
    (166) TIPO_DATO -> . DECIMAL PARA ENTERO COMA ENTERO PARC
    (167) TIPO_DATO -> . NUMERIC PARA ENTERO COMA ENTERO PARC
    (168) TIPO_DATO -> . BIGINT
    (169) TIPO_DATO -> . REAL
    (170) TIPO_DATO -> . DOUBLE PRECISION
    (171) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (172) TIPO_DATO -> . INTERVAL
    (173) TIPO_DATO -> . TIME
    (174) TIPO_DATO -> . TIMESTAMP
    (175) TIPO_DATO -> . DATE
    (176) TIPO_DATO -> . CHARACTER VARYING PARA ENTERO PARC
    (177) TIPO_DATO -> . VARCHAR PARA ENTERO PARC
    (178) TIPO_DATO -> . CHAR PARA ENTERO PARC
    (179) TIPO_DATO -> . CHARACTER PARA ENTERO PARC
    (180) TIPO_DATO -> . CHAR PARA PARC
    (181) TIPO_DATO -> . CHARACTER PARA PARC

    TEXT            shift and go to state 369
    FLOAT           shift and go to state 370
    INTEGER         shift and go to state 371
    BOOLEAN         shift and go to state 372
    SMALLINT        shift and go to state 373
    MONEY           shift and go to state 374
    DECIMAL         shift and go to state 375
    NUMERIC         shift and go to state 376
    BIGINT          shift and go to state 377
    REAL            shift and go to state 378
    DOUBLE          shift and go to state 379
    INTERVAL        shift and go to state 380
    TIME            shift and go to state 381
    TIMESTAMP       shift and go to state 382
    DATE            shift and go to state 383
    CHARACTER       shift and go to state 384
    VARCHAR         shift and go to state 385
    CHAR            shift and go to state 386

    TIPO_DATO                      shift and go to state 472

state 364

    (129) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .

    error           reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    CREATE          reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    SELECT          reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    CALL            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    SHOW            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    USE             reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    DROP            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    ALTER           reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    INSERT          reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    $end            reduce using rule 129 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)


state 365

    (68) campos_c -> campos_c COMA . ID

    ID              shift and go to state 473


state 366

    (130) alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .

    error           reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    CREATE          reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    SELECT          reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    CALL            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    SHOW            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    USE             reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    DROP            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    ALTER           reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    INSERT          reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)
    $end            reduce using rule 130 (alterTable_insrt -> ALTER TABLE ID DROP COLUMN campos_c PTCOMA .)


state 367

    (131) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO . ID PTCOMA

    ID              shift and go to state 474


state 368

    (146) tipos_datos_columnas -> ID TIPO_DATO .

    PTCOMA          reduce using rule 146 (tipos_datos_columnas -> ID TIPO_DATO .)
    COMA            reduce using rule 146 (tipos_datos_columnas -> ID TIPO_DATO .)


state 369

    (160) TIPO_DATO -> TEXT .

    PTCOMA          reduce using rule 160 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 160 (TIPO_DATO -> TEXT .)


state 370

    (161) TIPO_DATO -> FLOAT .

    PTCOMA          reduce using rule 161 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 161 (TIPO_DATO -> FLOAT .)


state 371

    (162) TIPO_DATO -> INTEGER .

    PTCOMA          reduce using rule 162 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 162 (TIPO_DATO -> INTEGER .)


state 372

    (163) TIPO_DATO -> BOOLEAN .

    PTCOMA          reduce using rule 163 (TIPO_DATO -> BOOLEAN .)
    COMA            reduce using rule 163 (TIPO_DATO -> BOOLEAN .)


state 373

    (164) TIPO_DATO -> SMALLINT .

    PTCOMA          reduce using rule 164 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 164 (TIPO_DATO -> SMALLINT .)


state 374

    (165) TIPO_DATO -> MONEY .

    PTCOMA          reduce using rule 165 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 165 (TIPO_DATO -> MONEY .)


state 375

    (166) TIPO_DATO -> DECIMAL . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 475


state 376

    (167) TIPO_DATO -> NUMERIC . PARA ENTERO COMA ENTERO PARC

    PARA            shift and go to state 476


state 377

    (168) TIPO_DATO -> BIGINT .

    PTCOMA          reduce using rule 168 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 168 (TIPO_DATO -> BIGINT .)


state 378

    (169) TIPO_DATO -> REAL .

    PTCOMA          reduce using rule 169 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 169 (TIPO_DATO -> REAL .)


state 379

    (170) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 477


state 380

    (171) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (172) TIPO_DATO -> INTERVAL .
    (114) extract_time -> . YEAR
    (115) extract_time -> . DAY
    (116) extract_time -> . MONTH
    (117) extract_time -> . HOUR
    (118) extract_time -> . MINUTE
    (119) extract_time -> . SECOND

    PTCOMA          reduce using rule 172 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 172 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 340
    DAY             shift and go to state 341
    MONTH           shift and go to state 342
    HOUR            shift and go to state 343
    MINUTE          shift and go to state 344
    SECOND          shift and go to state 345

    extract_time                   shift and go to state 478

state 381

    (173) TIPO_DATO -> TIME .

    PTCOMA          reduce using rule 173 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 173 (TIPO_DATO -> TIME .)


state 382

    (174) TIPO_DATO -> TIMESTAMP .

    PTCOMA          reduce using rule 174 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 174 (TIPO_DATO -> TIMESTAMP .)


state 383

    (175) TIPO_DATO -> DATE .

    PTCOMA          reduce using rule 175 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 175 (TIPO_DATO -> DATE .)


state 384

    (176) TIPO_DATO -> CHARACTER . VARYING PARA ENTERO PARC
    (179) TIPO_DATO -> CHARACTER . PARA ENTERO PARC
    (181) TIPO_DATO -> CHARACTER . PARA PARC

    VARYING         shift and go to state 479
    PARA            shift and go to state 480


state 385

    (177) TIPO_DATO -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 481


state 386

    (178) TIPO_DATO -> CHAR . PARA ENTERO PARC
    (180) TIPO_DATO -> CHAR . PARA PARC

    PARA            shift and go to state 482


state 387

    (132) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .

    error           reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    CREATE          reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    SELECT          reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    CALL            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    SHOW            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    USE             reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    DROP            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    ALTER           reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    INSERT          reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    $end            reduce using rule 132 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)


state 388

    (144) campos_add_Column -> campos_add_Column COMA . tipos_datos_columnas
    (146) tipos_datos_columnas -> . ID TIPO_DATO

    ID              shift and go to state 264

    tipos_datos_columnas           shift and go to state 483

state 389

    (133) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica . PARC PTCOMA

    PARC            shift and go to state 484


state 390

    (297) expresion_logica -> expresion_relacional . AND expresion_logica
    (298) expresion_logica -> expresion_relacional . OR expresion_logica
    (300) expresion_logica -> expresion_relacional .

    AND             shift and go to state 485
    OR              shift and go to state 486
    PARC            reduce using rule 300 (expresion_logica -> expresion_relacional .)


state 391

    (299) expresion_logica -> NOT . expresion_logica
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 487
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 392

    (288) expresion_relacional -> expresion . MAYOR expresion
    (289) expresion_relacional -> expresion . MENOR expresion
    (290) expresion_relacional -> expresion . MAYORIGUAL expresion
    (291) expresion_relacional -> expresion . MENORIGUAL expresion
    (292) expresion_relacional -> expresion . IGUALIGUAL expresion
    (293) expresion_relacional -> expresion . IGUAL expresion
    (294) expresion_relacional -> expresion . NOIG expresion
    (295) expresion_relacional -> expresion . NOTIGUAL expresion
    (296) expresion_relacional -> expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    MAYOR           shift and go to state 488
    MENOR           shift and go to state 489
    MAYORIGUAL      shift and go to state 490
    MENORIGUAL      shift and go to state 491
    IGUALIGUAL      shift and go to state 492
    IGUAL           shift and go to state 493
    NOIG            shift and go to state 494
    NOTIGUAL        shift and go to state 495
    AND             reduce using rule 296 (expresion_relacional -> expresion .)
    OR              reduce using rule 296 (expresion_relacional -> expresion .)
    PARC            reduce using rule 296 (expresion_relacional -> expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 393

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC PTCOMA

    ID              shift and go to state 496


state 394

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK . PARA expresion_logica PARC PTCOMA

    PARA            shift and go to state 497


state 395

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PARA campos_c PARC PTCOMA

    PARA            shift and go to state 498


state 396

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN . KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    KEY             shift and go to state 499


state 397

    (143) Table_alter -> ALTER COLUMN . ID TYPE TIPO_DATO

    ID              shift and go to state 500


state 398

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES . PARA lista_datos PARC PTCOMA

    PARA            shift and go to state 501


state 399

    (150) lista_parametros_lista -> lista_parametros_lista COMA ID .

    PARC            reduce using rule 150 (lista_parametros_lista -> lista_parametros_lista COMA ID .)
    COMA            reduce using rule 150 (lista_parametros_lista -> lista_parametros_lista COMA ID .)


state 400

    (148) insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA . lista_datos PARC PTCOMA
    (152) lista_datos -> . lista_datos COMA exclusiva_insert
    (153) lista_datos -> . exclusiva_insert
    (154) exclusiva_insert -> . expresion
    (155) exclusiva_insert -> . SUBSTRING PARA string_type COMA expresion COMA expresion PARC
    (156) exclusiva_insert -> . SUBSTR PARA string_type COMA expresion COMA expresion PARC
    (157) exclusiva_insert -> . MD5 PARA string_type PARC
    (158) exclusiva_insert -> . TRIM PARA string_type PARC
    (159) exclusiva_insert -> . NOW PARA PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    SUBSTRING       shift and go to state 280
    SUBSTR          shift and go to state 282
    MD5             shift and go to state 283
    TRIM            shift and go to state 284
    NOW             shift and go to state 285
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    lista_datos                    shift and go to state 502
    exclusiva_insert               shift and go to state 278
    expresion                      shift and go to state 279
    string_type                    shift and go to state 281
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 401

    (306) expresion_dato -> ID PUNTO . ID

    ID              shift and go to state 503


state 402

    (285) expresion -> PARA expresion_logica . PARC

    PARC            shift and go to state 504


state 403

    (149) insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC . PTCOMA

    PTCOMA          shift and go to state 505


state 404

    (152) lista_datos -> lista_datos COMA . exclusiva_insert
    (154) exclusiva_insert -> . expresion
    (155) exclusiva_insert -> . SUBSTRING PARA string_type COMA expresion COMA expresion PARC
    (156) exclusiva_insert -> . SUBSTR PARA string_type COMA expresion COMA expresion PARC
    (157) exclusiva_insert -> . MD5 PARA string_type PARC
    (158) exclusiva_insert -> . TRIM PARA string_type PARC
    (159) exclusiva_insert -> . NOW PARA PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    SUBSTRING       shift and go to state 280
    SUBSTR          shift and go to state 282
    MD5             shift and go to state 283
    TRIM            shift and go to state 284
    NOW             shift and go to state 285
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    exclusiva_insert               shift and go to state 506
    expresion                      shift and go to state 279
    string_type                    shift and go to state 281
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 405

    (272) expresion -> expresion MAS . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 507
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 406

    (273) expresion -> expresion MENOS . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 508
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 407

    (274) expresion -> expresion POR . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 509
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 408

    (275) expresion -> expresion DIV . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 510
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 409

    (276) expresion -> expresion MODULO . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 511
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 410

    (277) expresion -> expresion SHIFTD . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 512
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 411

    (278) expresion -> expresion SHIFTI . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 513
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 412

    (279) expresion -> expresion HASHTAG . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 514
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 413

    (280) expresion -> expresion ANDB . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 515
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 414

    (281) expresion -> expresion D_OR . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 516
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 415

    (155) exclusiva_insert -> SUBSTRING PARA . string_type COMA expresion COMA expresion PARC
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 517

state 416

    (156) exclusiva_insert -> SUBSTR PARA . string_type COMA expresion COMA expresion PARC
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 518

state 417

    (157) exclusiva_insert -> MD5 PARA . string_type PARC
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 519

state 418

    (158) exclusiva_insert -> TRIM PARA . string_type PARC
    (182) string_type -> . CADENA
    (183) string_type -> . ID

    CADENA          shift and go to state 116
    ID              shift and go to state 117

    string_type                    shift and go to state 520

state 419

    (159) exclusiva_insert -> NOW PARA . PARC

    PARC            shift and go to state 521


state 420

    (305) expresion_dato -> MENOS ENTERO .

    MAS             reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    MENOS           reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    POR             reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    DIV             reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    MODULO          reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    SHIFTD          reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    SHIFTI          reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    HASHTAG         reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    ANDB            reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    D_OR            reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    PARC            reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    COMA            reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    MAYOR           reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    MENOR           reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    MAYORIGUAL      reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    MENORIGUAL      reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    IGUALIGUAL      reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    IGUAL           reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    NOIG            reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    NOTIGUAL        reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    AND             reduce using rule 305 (expresion_dato -> MENOS ENTERO .)
    OR              reduce using rule 305 (expresion_dato -> MENOS ENTERO .)


state 421

    (284) expresion -> D_OR expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    PARC            reduce using rule 284 (expresion -> D_OR expresion .)
    COMA            reduce using rule 284 (expresion -> D_OR expresion .)
    MAYOR           reduce using rule 284 (expresion -> D_OR expresion .)
    MENOR           reduce using rule 284 (expresion -> D_OR expresion .)
    MAYORIGUAL      reduce using rule 284 (expresion -> D_OR expresion .)
    MENORIGUAL      reduce using rule 284 (expresion -> D_OR expresion .)
    IGUALIGUAL      reduce using rule 284 (expresion -> D_OR expresion .)
    IGUAL           reduce using rule 284 (expresion -> D_OR expresion .)
    NOIG            reduce using rule 284 (expresion -> D_OR expresion .)
    NOTIGUAL        reduce using rule 284 (expresion -> D_OR expresion .)
    AND             reduce using rule 284 (expresion -> D_OR expresion .)
    OR              reduce using rule 284 (expresion -> D_OR expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414

  ! MAS             [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! MENOS           [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! POR             [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! DIV             [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! MODULO          [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! SHIFTD          [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! SHIFTI          [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! HASHTAG         [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! ANDB            [ reduce using rule 284 (expresion -> D_OR expresion .) ]
  ! D_OR            [ reduce using rule 284 (expresion -> D_OR expresion .) ]


state 422

    (282) expresion -> NOTB expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    MAS             reduce using rule 282 (expresion -> NOTB expresion .)
    MENOS           reduce using rule 282 (expresion -> NOTB expresion .)
    POR             reduce using rule 282 (expresion -> NOTB expresion .)
    DIV             reduce using rule 282 (expresion -> NOTB expresion .)
    MODULO          reduce using rule 282 (expresion -> NOTB expresion .)
    SHIFTD          reduce using rule 282 (expresion -> NOTB expresion .)
    SHIFTI          reduce using rule 282 (expresion -> NOTB expresion .)
    HASHTAG         reduce using rule 282 (expresion -> NOTB expresion .)
    ANDB            reduce using rule 282 (expresion -> NOTB expresion .)
    D_OR            reduce using rule 282 (expresion -> NOTB expresion .)
    PARC            reduce using rule 282 (expresion -> NOTB expresion .)
    COMA            reduce using rule 282 (expresion -> NOTB expresion .)
    MAYOR           reduce using rule 282 (expresion -> NOTB expresion .)
    MENOR           reduce using rule 282 (expresion -> NOTB expresion .)
    MAYORIGUAL      reduce using rule 282 (expresion -> NOTB expresion .)
    MENORIGUAL      reduce using rule 282 (expresion -> NOTB expresion .)
    IGUALIGUAL      reduce using rule 282 (expresion -> NOTB expresion .)
    IGUAL           reduce using rule 282 (expresion -> NOTB expresion .)
    NOIG            reduce using rule 282 (expresion -> NOTB expresion .)
    NOTIGUAL        reduce using rule 282 (expresion -> NOTB expresion .)
    AND             reduce using rule 282 (expresion -> NOTB expresion .)
    OR              reduce using rule 282 (expresion -> NOTB expresion .)

  ! MAS             [ shift and go to state 405 ]
  ! MENOS           [ shift and go to state 406 ]
  ! POR             [ shift and go to state 407 ]
  ! DIV             [ shift and go to state 408 ]
  ! MODULO          [ shift and go to state 409 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 423

    (283) expresion -> ORB expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    DIV             reduce using rule 283 (expresion -> ORB expresion .)
    HASHTAG         reduce using rule 283 (expresion -> ORB expresion .)
    D_OR            reduce using rule 283 (expresion -> ORB expresion .)
    PARC            reduce using rule 283 (expresion -> ORB expresion .)
    COMA            reduce using rule 283 (expresion -> ORB expresion .)
    MAYOR           reduce using rule 283 (expresion -> ORB expresion .)
    MENOR           reduce using rule 283 (expresion -> ORB expresion .)
    MAYORIGUAL      reduce using rule 283 (expresion -> ORB expresion .)
    MENORIGUAL      reduce using rule 283 (expresion -> ORB expresion .)
    IGUALIGUAL      reduce using rule 283 (expresion -> ORB expresion .)
    IGUAL           reduce using rule 283 (expresion -> ORB expresion .)
    NOIG            reduce using rule 283 (expresion -> ORB expresion .)
    NOTIGUAL        reduce using rule 283 (expresion -> ORB expresion .)
    AND             reduce using rule 283 (expresion -> ORB expresion .)
    OR              reduce using rule 283 (expresion -> ORB expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    ANDB            shift and go to state 413

  ! MAS             [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! MENOS           [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! POR             [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! MODULO          [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! SHIFTD          [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! SHIFTI          [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! ANDB            [ reduce using rule 283 (expresion -> ORB expresion .) ]
  ! DIV             [ shift and go to state 408 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! D_OR            [ shift and go to state 414 ]


state 424

    (310) sum_insrt -> SUM agrupacion_expresion .

    MAS             reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    MENOS           reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    POR             reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    DIV             reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    MODULO          reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    SHIFTD          reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    SHIFTI          reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    HASHTAG         reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    ANDB            reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    D_OR            reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    PARC            reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    COMA            reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    MAYOR           reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    MENOR           reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    MAYORIGUAL      reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    MENORIGUAL      reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    IGUALIGUAL      reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    IGUAL           reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    NOIG            reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    NOTIGUAL        reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    AND             reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)
    OR              reduce using rule 310 (sum_insrt -> SUM agrupacion_expresion .)


state 425

    (271) agrupacion_expresion -> PARA . expresion PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 522
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 426

    (311) count_insrt -> COUNT agrupacion_expresion .

    MAS             reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    MENOS           reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    POR             reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    DIV             reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    MODULO          reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    SHIFTD          reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    SHIFTI          reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    HASHTAG         reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    ANDB            reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    D_OR            reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    PARC            reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    COMA            reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    MAYOR           reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    MENOR           reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    MAYORIGUAL      reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    MENORIGUAL      reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    IGUALIGUAL      reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    IGUAL           reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    NOIG            reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    NOTIGUAL        reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    AND             reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)
    OR              reduce using rule 311 (count_insrt -> COUNT agrupacion_expresion .)


state 427

    (231) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 523


state 428

    (232) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 524


state 429

    (234) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 525


state 430

    (233) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 526


state 431

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 527


state 432

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 528


state 433

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 529


state 434

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (40) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (49) createDB_unParam -> . OWNER IGUAL string_type
    (50) createDB_unParam -> . MODE IGUAL ENTERO
    (51) createDB_unParam -> . OWNER string_type
    (52) createDB_unParam -> . MODE ENTERO
    (41) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (42) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (43) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (44) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (45) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (46) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (47) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (48) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 530
    OWNER           shift and go to state 68
    MODE            shift and go to state 69

    createDB_unParam               shift and go to state 531
    createDB_dosParam              shift and go to state 532

state 435

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 533


state 436

    (47) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 534


state 437

    (44) createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .

    PTCOMA          reduce using rule 44 (createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .)


state 438

    (43) createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .)


state 439

    (48) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 535


state 440

    (46) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 46 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 441

    (45) createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .

    PTCOMA          reduce using rule 45 (createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .)


state 442

    (35) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 443

    (39) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 39 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 444

    (73) createTable_options -> createTable_options cT_options .

    NOT             reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    NULL            reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    UNIQUE          reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    CONSTRAINT      reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    PRIMARY         reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    FOREIGN         reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    DEFAULT         reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    CHECK           reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    PARC            reduce using rule 73 (createTable_options -> createTable_options cT_options .)
    COMA            reduce using rule 73 (createTable_options -> createTable_options cT_options .)


state 445

    (80) N_null -> NOT NULL .

    NOT             reduce using rule 80 (N_null -> NOT NULL .)
    NULL            reduce using rule 80 (N_null -> NOT NULL .)
    UNIQUE          reduce using rule 80 (N_null -> NOT NULL .)
    CONSTRAINT      reduce using rule 80 (N_null -> NOT NULL .)
    PRIMARY         reduce using rule 80 (N_null -> NOT NULL .)
    FOREIGN         reduce using rule 80 (N_null -> NOT NULL .)
    DEFAULT         reduce using rule 80 (N_null -> NOT NULL .)
    CHECK           reduce using rule 80 (N_null -> NOT NULL .)
    PARC            reduce using rule 80 (N_null -> NOT NULL .)
    COMA            reduce using rule 80 (N_null -> NOT NULL .)


state 446

    (83) C_unique -> CONSTRAINT ID . UNIQUE
    (87) C_check -> CONSTRAINT ID . CHECK PARA expresion_logica PARC

    UNIQUE          shift and go to state 536
    CHECK           shift and go to state 537


state 447

    (84) llave -> PRIMARY KEY .

    NOT             reduce using rule 84 (llave -> PRIMARY KEY .)
    NULL            reduce using rule 84 (llave -> PRIMARY KEY .)
    UNIQUE          reduce using rule 84 (llave -> PRIMARY KEY .)
    CONSTRAINT      reduce using rule 84 (llave -> PRIMARY KEY .)
    PRIMARY         reduce using rule 84 (llave -> PRIMARY KEY .)
    FOREIGN         reduce using rule 84 (llave -> PRIMARY KEY .)
    DEFAULT         reduce using rule 84 (llave -> PRIMARY KEY .)
    CHECK           reduce using rule 84 (llave -> PRIMARY KEY .)
    PARC            reduce using rule 84 (llave -> PRIMARY KEY .)
    COMA            reduce using rule 84 (llave -> PRIMARY KEY .)


state 448

    (85) llave -> FOREIGN KEY .

    NOT             reduce using rule 85 (llave -> FOREIGN KEY .)
    NULL            reduce using rule 85 (llave -> FOREIGN KEY .)
    UNIQUE          reduce using rule 85 (llave -> FOREIGN KEY .)
    CONSTRAINT      reduce using rule 85 (llave -> FOREIGN KEY .)
    PRIMARY         reduce using rule 85 (llave -> FOREIGN KEY .)
    FOREIGN         reduce using rule 85 (llave -> FOREIGN KEY .)
    DEFAULT         reduce using rule 85 (llave -> FOREIGN KEY .)
    CHECK           reduce using rule 85 (llave -> FOREIGN KEY .)
    PARC            reduce using rule 85 (llave -> FOREIGN KEY .)
    COMA            reduce using rule 85 (llave -> FOREIGN KEY .)


state 449

    (86) O_DEFAULT -> DEFAULT expresion_dato_default .

    NOT             reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    NULL            reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    UNIQUE          reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CONSTRAINT      reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PRIMARY         reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    FOREIGN         reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    DEFAULT         reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    CHECK           reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    PARC            reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)
    COMA            reduce using rule 86 (O_DEFAULT -> DEFAULT expresion_dato_default .)


state 450

    (89) expresion_dato_default -> ENTERO .

    NOT             reduce using rule 89 (expresion_dato_default -> ENTERO .)
    NULL            reduce using rule 89 (expresion_dato_default -> ENTERO .)
    UNIQUE          reduce using rule 89 (expresion_dato_default -> ENTERO .)
    CONSTRAINT      reduce using rule 89 (expresion_dato_default -> ENTERO .)
    PRIMARY         reduce using rule 89 (expresion_dato_default -> ENTERO .)
    FOREIGN         reduce using rule 89 (expresion_dato_default -> ENTERO .)
    DEFAULT         reduce using rule 89 (expresion_dato_default -> ENTERO .)
    CHECK           reduce using rule 89 (expresion_dato_default -> ENTERO .)
    PARC            reduce using rule 89 (expresion_dato_default -> ENTERO .)
    COMA            reduce using rule 89 (expresion_dato_default -> ENTERO .)


state 451

    (90) expresion_dato_default -> FLOTANTE .

    NOT             reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    NULL            reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    UNIQUE          reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    CONSTRAINT      reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    PRIMARY         reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    FOREIGN         reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    DEFAULT         reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    CHECK           reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    PARC            reduce using rule 90 (expresion_dato_default -> FLOTANTE .)
    COMA            reduce using rule 90 (expresion_dato_default -> FLOTANTE .)


state 452

    (91) expresion_dato_default -> CADENA .

    NOT             reduce using rule 91 (expresion_dato_default -> CADENA .)
    NULL            reduce using rule 91 (expresion_dato_default -> CADENA .)
    UNIQUE          reduce using rule 91 (expresion_dato_default -> CADENA .)
    CONSTRAINT      reduce using rule 91 (expresion_dato_default -> CADENA .)
    PRIMARY         reduce using rule 91 (expresion_dato_default -> CADENA .)
    FOREIGN         reduce using rule 91 (expresion_dato_default -> CADENA .)
    DEFAULT         reduce using rule 91 (expresion_dato_default -> CADENA .)
    CHECK           reduce using rule 91 (expresion_dato_default -> CADENA .)
    PARC            reduce using rule 91 (expresion_dato_default -> CADENA .)
    COMA            reduce using rule 91 (expresion_dato_default -> CADENA .)


state 453

    (88) C_check -> CHECK PARA . expresion_logica PARC
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 538
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 454

    (98) TIPO_DATO_DEF -> DECIMAL PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 539


state 455

    (99) TIPO_DATO_DEF -> NUMERIC PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 540


state 456

    (103) TIPO_DATO_DEF -> INTERVAL extract_time TO . extract_time
    (114) extract_time -> . YEAR
    (115) extract_time -> . DAY
    (116) extract_time -> . MONTH
    (117) extract_time -> . HOUR
    (118) extract_time -> . MINUTE
    (119) extract_time -> . SECOND

    YEAR            shift and go to state 340
    DAY             shift and go to state 341
    MONTH           shift and go to state 342
    HOUR            shift and go to state 343
    MINUTE          shift and go to state 344
    SECOND          shift and go to state 345

    extract_time                   shift and go to state 541

state 457

    (108) TIPO_DATO_DEF -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 542


state 458

    (111) TIPO_DATO_DEF -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 543


state 459

    (113) TIPO_DATO_DEF -> CHARACTER PARA PARC .

    NOT             reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    NULL            reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    UNIQUE          reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CONSTRAINT      reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PRIMARY         reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    FOREIGN         reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    DEFAULT         reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    CHECK           reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    PARC            reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)
    COMA            reduce using rule 113 (TIPO_DATO_DEF -> CHARACTER PARA PARC .)


state 460

    (109) TIPO_DATO_DEF -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 544


state 461

    (110) TIPO_DATO_DEF -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 545


state 462

    (112) TIPO_DATO_DEF -> CHAR PARA PARC .

    NOT             reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    NULL            reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    UNIQUE          reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CONSTRAINT      reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PRIMARY         reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    FOREIGN         reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    DEFAULT         reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    CHECK           reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    PARC            reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)
    COMA            reduce using rule 112 (TIPO_DATO_DEF -> CHAR PARA PARC .)


state 463

    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA . ID PARC PTCOMA

    ID              shift and go to state 546


state 464

    (64) cuerpo_createTable -> PRIMARY KEY PARA campos_c . PARC
    (68) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 547
    COMA            shift and go to state 365


state 465

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC

    PARC            shift and go to state 548


state 466

    (66) cuerpo_createTable -> UNIQUE PARA campos_c PARC .

    PARC            reduce using rule 66 (cuerpo_createTable -> UNIQUE PARA campos_c PARC .)
    COMA            reduce using rule 66 (cuerpo_createTable -> UNIQUE PARA campos_c PARC .)


state 467

    (70) constraint_esp -> CHECK PARA . expresion_logica PARC
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 549
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 468

    (71) constraint_esp -> UNIQUE PARA . campos_c PARC
    (68) campos_c -> . campos_c COMA ID
    (69) campos_c -> . ID

    ID              shift and go to state 260

    campos_c                       shift and go to state 550

state 469

    (72) constraint_esp -> FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC

    PARA            shift and go to state 551


state 470

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL . PTCOMA

    PTCOMA          shift and go to state 552


state 471

    (139) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT . NULL PTCOMA

    NULL            shift and go to state 553


state 472

    (143) Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .

    PTCOMA          reduce using rule 143 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)
    COMA            reduce using rule 143 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)


state 473

    (68) campos_c -> campos_c COMA ID .

    PTCOMA          reduce using rule 68 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 68 (campos_c -> campos_c COMA ID .)
    PARC            reduce using rule 68 (campos_c -> campos_c COMA ID .)


state 474

    (131) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID . PTCOMA

    PTCOMA          shift and go to state 554


state 475

    (166) TIPO_DATO -> DECIMAL PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 555


state 476

    (167) TIPO_DATO -> NUMERIC PARA . ENTERO COMA ENTERO PARC

    ENTERO          shift and go to state 556


state 477

    (170) TIPO_DATO -> DOUBLE PRECISION .

    PTCOMA          reduce using rule 170 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 170 (TIPO_DATO -> DOUBLE PRECISION .)


state 478

    (171) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 557


state 479

    (176) TIPO_DATO -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 558


state 480

    (179) TIPO_DATO -> CHARACTER PARA . ENTERO PARC
    (181) TIPO_DATO -> CHARACTER PARA . PARC

    ENTERO          shift and go to state 559
    PARC            shift and go to state 560


state 481

    (177) TIPO_DATO -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 561


state 482

    (178) TIPO_DATO -> CHAR PARA . ENTERO PARC
    (180) TIPO_DATO -> CHAR PARA . PARC

    ENTERO          shift and go to state 562
    PARC            shift and go to state 563


state 483

    (144) campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .

    PTCOMA          reduce using rule 144 (campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .)
    COMA            reduce using rule 144 (campos_add_Column -> campos_add_Column COMA tipos_datos_columnas .)


state 484

    (133) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC . PTCOMA

    PTCOMA          shift and go to state 564


state 485

    (297) expresion_logica -> expresion_relacional AND . expresion_logica
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_relacional           shift and go to state 390
    expresion_logica               shift and go to state 565
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 486

    (298) expresion_logica -> expresion_relacional OR . expresion_logica
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_relacional           shift and go to state 390
    expresion_logica               shift and go to state 566
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 487

    (299) expresion_logica -> NOT expresion_logica .

    PARC            reduce using rule 299 (expresion_logica -> NOT expresion_logica .)


state 488

    (288) expresion_relacional -> expresion MAYOR . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 567
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 489

    (289) expresion_relacional -> expresion MENOR . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 568
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 490

    (290) expresion_relacional -> expresion MAYORIGUAL . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 569
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 491

    (291) expresion_relacional -> expresion MENORIGUAL . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 570
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 492

    (292) expresion_relacional -> expresion IGUALIGUAL . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 571
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 493

    (293) expresion_relacional -> expresion IGUAL . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 572
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 494

    (294) expresion_relacional -> expresion NOIG . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 573
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 495

    (295) expresion_relacional -> expresion NOTIGUAL . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion                      shift and go to state 574
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 496

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC PTCOMA

    PARC            shift and go to state 575


state 497

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA . expresion_logica PARC PTCOMA
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 576
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 498

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA . campos_c PARC PTCOMA
    (68) campos_c -> . campos_c COMA ID
    (69) campos_c -> . ID

    ID              shift and go to state 260

    campos_c                       shift and go to state 577

state 499

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY . PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA

    PARA            shift and go to state 578


state 500

    (143) Table_alter -> ALTER COLUMN ID . TYPE TIPO_DATO

    TYPE            shift and go to state 363


state 501

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA . lista_datos PARC PTCOMA
    (152) lista_datos -> . lista_datos COMA exclusiva_insert
    (153) lista_datos -> . exclusiva_insert
    (154) exclusiva_insert -> . expresion
    (155) exclusiva_insert -> . SUBSTRING PARA string_type COMA expresion COMA expresion PARC
    (156) exclusiva_insert -> . SUBSTR PARA string_type COMA expresion COMA expresion PARC
    (157) exclusiva_insert -> . MD5 PARA string_type PARC
    (158) exclusiva_insert -> . TRIM PARA string_type PARC
    (159) exclusiva_insert -> . NOW PARA PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    SUBSTRING       shift and go to state 280
    SUBSTR          shift and go to state 282
    MD5             shift and go to state 283
    TRIM            shift and go to state 284
    NOW             shift and go to state 285
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    lista_datos                    shift and go to state 579
    exclusiva_insert               shift and go to state 278
    expresion                      shift and go to state 279
    string_type                    shift and go to state 281
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 502

    (148) insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos . PARC PTCOMA
    (152) lista_datos -> lista_datos . COMA exclusiva_insert

    PARC            shift and go to state 580
    COMA            shift and go to state 404


state 503

    (306) expresion_dato -> ID PUNTO ID .

    MAS             reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    MENOS           reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    POR             reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    DIV             reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    MODULO          reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    SHIFTD          reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    SHIFTI          reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    HASHTAG         reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    ANDB            reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    D_OR            reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    PARC            reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    COMA            reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    MAYOR           reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    MENOR           reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    MAYORIGUAL      reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    MENORIGUAL      reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    IGUALIGUAL      reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    IGUAL           reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    NOIG            reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    NOTIGUAL        reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    AND             reduce using rule 306 (expresion_dato -> ID PUNTO ID .)
    OR              reduce using rule 306 (expresion_dato -> ID PUNTO ID .)


state 504

    (285) expresion -> PARA expresion_logica PARC .

    MAS             reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    MENOS           reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    POR             reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    DIV             reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    MODULO          reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    SHIFTD          reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    SHIFTI          reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    HASHTAG         reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    ANDB            reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    D_OR            reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    PARC            reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    COMA            reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    MAYOR           reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    MENOR           reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    MAYORIGUAL      reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    MENORIGUAL      reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    IGUALIGUAL      reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    IGUAL           reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    NOIG            reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    NOTIGUAL        reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    AND             reduce using rule 285 (expresion -> PARA expresion_logica PARC .)
    OR              reduce using rule 285 (expresion -> PARA expresion_logica PARC .)


state 505

    (149) insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .

    error           reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    CREATE          reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    SELECT          reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    CALL            reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    SHOW            reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    USE             reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    DROP            reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    ALTER           reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    INSERT          reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)
    $end            reduce using rule 149 (insert_insrt -> INSERT INTO ID VALUES PARA lista_datos PARC PTCOMA .)


state 506

    (152) lista_datos -> lista_datos COMA exclusiva_insert .

    PARC            reduce using rule 152 (lista_datos -> lista_datos COMA exclusiva_insert .)
    COMA            reduce using rule 152 (lista_datos -> lista_datos COMA exclusiva_insert .)


state 507

    (272) expresion -> expresion MAS expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    MAS             reduce using rule 272 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 272 (expresion -> expresion MAS expresion .)
    DIV             reduce using rule 272 (expresion -> expresion MAS expresion .)
    SHIFTD          reduce using rule 272 (expresion -> expresion MAS expresion .)
    SHIFTI          reduce using rule 272 (expresion -> expresion MAS expresion .)
    HASHTAG         reduce using rule 272 (expresion -> expresion MAS expresion .)
    ANDB            reduce using rule 272 (expresion -> expresion MAS expresion .)
    D_OR            reduce using rule 272 (expresion -> expresion MAS expresion .)
    PARC            reduce using rule 272 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 272 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 272 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 272 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 272 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 272 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 272 (expresion -> expresion MAS expresion .)
    IGUAL           reduce using rule 272 (expresion -> expresion MAS expresion .)
    NOIG            reduce using rule 272 (expresion -> expresion MAS expresion .)
    NOTIGUAL        reduce using rule 272 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 272 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 272 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 407
    MODULO          shift and go to state 409

  ! POR             [ reduce using rule 272 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 272 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 405 ]
  ! MENOS           [ shift and go to state 406 ]
  ! DIV             [ shift and go to state 408 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 508

    (273) expresion -> expresion MENOS expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    MAS             reduce using rule 273 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 273 (expresion -> expresion MENOS expresion .)
    DIV             reduce using rule 273 (expresion -> expresion MENOS expresion .)
    SHIFTD          reduce using rule 273 (expresion -> expresion MENOS expresion .)
    SHIFTI          reduce using rule 273 (expresion -> expresion MENOS expresion .)
    HASHTAG         reduce using rule 273 (expresion -> expresion MENOS expresion .)
    ANDB            reduce using rule 273 (expresion -> expresion MENOS expresion .)
    D_OR            reduce using rule 273 (expresion -> expresion MENOS expresion .)
    PARC            reduce using rule 273 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 273 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 273 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 273 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 273 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 273 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 273 (expresion -> expresion MENOS expresion .)
    IGUAL           reduce using rule 273 (expresion -> expresion MENOS expresion .)
    NOIG            reduce using rule 273 (expresion -> expresion MENOS expresion .)
    NOTIGUAL        reduce using rule 273 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 273 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 273 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 407
    MODULO          shift and go to state 409

  ! POR             [ reduce using rule 273 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 273 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 405 ]
  ! MENOS           [ shift and go to state 406 ]
  ! DIV             [ shift and go to state 408 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 509

    (274) expresion -> expresion POR expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    MAS             reduce using rule 274 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 274 (expresion -> expresion POR expresion .)
    POR             reduce using rule 274 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 274 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 274 (expresion -> expresion POR expresion .)
    SHIFTD          reduce using rule 274 (expresion -> expresion POR expresion .)
    SHIFTI          reduce using rule 274 (expresion -> expresion POR expresion .)
    HASHTAG         reduce using rule 274 (expresion -> expresion POR expresion .)
    ANDB            reduce using rule 274 (expresion -> expresion POR expresion .)
    D_OR            reduce using rule 274 (expresion -> expresion POR expresion .)
    PARC            reduce using rule 274 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 274 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 274 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 274 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 274 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 274 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 274 (expresion -> expresion POR expresion .)
    IGUAL           reduce using rule 274 (expresion -> expresion POR expresion .)
    NOIG            reduce using rule 274 (expresion -> expresion POR expresion .)
    NOTIGUAL        reduce using rule 274 (expresion -> expresion POR expresion .)
    AND             reduce using rule 274 (expresion -> expresion POR expresion .)
    OR              reduce using rule 274 (expresion -> expresion POR expresion .)

  ! MAS             [ shift and go to state 405 ]
  ! MENOS           [ shift and go to state 406 ]
  ! POR             [ shift and go to state 407 ]
  ! DIV             [ shift and go to state 408 ]
  ! MODULO          [ shift and go to state 409 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 510

    (275) expresion -> expresion DIV expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    PARC            reduce using rule 275 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 275 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 275 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 275 (expresion -> expresion DIV expresion .)
    MAYORIGUAL      reduce using rule 275 (expresion -> expresion DIV expresion .)
    MENORIGUAL      reduce using rule 275 (expresion -> expresion DIV expresion .)
    IGUALIGUAL      reduce using rule 275 (expresion -> expresion DIV expresion .)
    IGUAL           reduce using rule 275 (expresion -> expresion DIV expresion .)
    NOIG            reduce using rule 275 (expresion -> expresion DIV expresion .)
    NOTIGUAL        reduce using rule 275 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 275 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 275 (expresion -> expresion DIV expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414

  ! MAS             [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! MENOS           [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! POR             [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! DIV             [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! MODULO          [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! SHIFTD          [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! SHIFTI          [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! HASHTAG         [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! ANDB            [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]
  ! D_OR            [ reduce using rule 275 (expresion -> expresion DIV expresion .) ]


state 511

    (276) expresion -> expresion MODULO expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    MAS             reduce using rule 276 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 276 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 276 (expresion -> expresion MODULO expresion .)
    DIV             reduce using rule 276 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 276 (expresion -> expresion MODULO expresion .)
    SHIFTD          reduce using rule 276 (expresion -> expresion MODULO expresion .)
    SHIFTI          reduce using rule 276 (expresion -> expresion MODULO expresion .)
    HASHTAG         reduce using rule 276 (expresion -> expresion MODULO expresion .)
    ANDB            reduce using rule 276 (expresion -> expresion MODULO expresion .)
    D_OR            reduce using rule 276 (expresion -> expresion MODULO expresion .)
    PARC            reduce using rule 276 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 276 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 276 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 276 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 276 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 276 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 276 (expresion -> expresion MODULO expresion .)
    IGUAL           reduce using rule 276 (expresion -> expresion MODULO expresion .)
    NOIG            reduce using rule 276 (expresion -> expresion MODULO expresion .)
    NOTIGUAL        reduce using rule 276 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 276 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 276 (expresion -> expresion MODULO expresion .)

  ! MAS             [ shift and go to state 405 ]
  ! MENOS           [ shift and go to state 406 ]
  ! POR             [ shift and go to state 407 ]
  ! DIV             [ shift and go to state 408 ]
  ! MODULO          [ shift and go to state 409 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 512

    (277) expresion -> expresion SHIFTD expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    DIV             reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    SHIFTD          reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    SHIFTI          reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    HASHTAG         reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    ANDB            reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    D_OR            reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    PARC            reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    COMA            reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    MAYOR           reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    MENOR           reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    MAYORIGUAL      reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    MENORIGUAL      reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    IGUALIGUAL      reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    IGUAL           reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    NOIG            reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    NOTIGUAL        reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    AND             reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    OR              reduce using rule 277 (expresion -> expresion SHIFTD expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    MODULO          shift and go to state 409

  ! MAS             [ reduce using rule 277 (expresion -> expresion SHIFTD expresion .) ]
  ! MENOS           [ reduce using rule 277 (expresion -> expresion SHIFTD expresion .) ]
  ! POR             [ reduce using rule 277 (expresion -> expresion SHIFTD expresion .) ]
  ! MODULO          [ reduce using rule 277 (expresion -> expresion SHIFTD expresion .) ]
  ! DIV             [ shift and go to state 408 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 513

    (278) expresion -> expresion SHIFTI expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    DIV             reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    SHIFTD          reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    SHIFTI          reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    HASHTAG         reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    ANDB            reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    D_OR            reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    PARC            reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    COMA            reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    MAYOR           reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    MENOR           reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    MAYORIGUAL      reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    MENORIGUAL      reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    IGUALIGUAL      reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    IGUAL           reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    NOIG            reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    NOTIGUAL        reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    AND             reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    OR              reduce using rule 278 (expresion -> expresion SHIFTI expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    MODULO          shift and go to state 409

  ! MAS             [ reduce using rule 278 (expresion -> expresion SHIFTI expresion .) ]
  ! MENOS           [ reduce using rule 278 (expresion -> expresion SHIFTI expresion .) ]
  ! POR             [ reduce using rule 278 (expresion -> expresion SHIFTI expresion .) ]
  ! MODULO          [ reduce using rule 278 (expresion -> expresion SHIFTI expresion .) ]
  ! DIV             [ shift and go to state 408 ]
  ! SHIFTD          [ shift and go to state 410 ]
  ! SHIFTI          [ shift and go to state 411 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 514

    (279) expresion -> expresion HASHTAG expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    PARC            reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    COMA            reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    MAYOR           reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    MENOR           reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    MAYORIGUAL      reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    MENORIGUAL      reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    IGUALIGUAL      reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    IGUAL           reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    NOIG            reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    NOTIGUAL        reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    AND             reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    OR              reduce using rule 279 (expresion -> expresion HASHTAG expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414

  ! MAS             [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! MENOS           [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! POR             [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! DIV             [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! MODULO          [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! SHIFTD          [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! SHIFTI          [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! HASHTAG         [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! ANDB            [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]
  ! D_OR            [ reduce using rule 279 (expresion -> expresion HASHTAG expresion .) ]


state 515

    (280) expresion -> expresion ANDB expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    DIV             reduce using rule 280 (expresion -> expresion ANDB expresion .)
    HASHTAG         reduce using rule 280 (expresion -> expresion ANDB expresion .)
    ANDB            reduce using rule 280 (expresion -> expresion ANDB expresion .)
    D_OR            reduce using rule 280 (expresion -> expresion ANDB expresion .)
    PARC            reduce using rule 280 (expresion -> expresion ANDB expresion .)
    COMA            reduce using rule 280 (expresion -> expresion ANDB expresion .)
    MAYOR           reduce using rule 280 (expresion -> expresion ANDB expresion .)
    MENOR           reduce using rule 280 (expresion -> expresion ANDB expresion .)
    MAYORIGUAL      reduce using rule 280 (expresion -> expresion ANDB expresion .)
    MENORIGUAL      reduce using rule 280 (expresion -> expresion ANDB expresion .)
    IGUALIGUAL      reduce using rule 280 (expresion -> expresion ANDB expresion .)
    IGUAL           reduce using rule 280 (expresion -> expresion ANDB expresion .)
    NOIG            reduce using rule 280 (expresion -> expresion ANDB expresion .)
    NOTIGUAL        reduce using rule 280 (expresion -> expresion ANDB expresion .)
    AND             reduce using rule 280 (expresion -> expresion ANDB expresion .)
    OR              reduce using rule 280 (expresion -> expresion ANDB expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411

  ! MAS             [ reduce using rule 280 (expresion -> expresion ANDB expresion .) ]
  ! MENOS           [ reduce using rule 280 (expresion -> expresion ANDB expresion .) ]
  ! POR             [ reduce using rule 280 (expresion -> expresion ANDB expresion .) ]
  ! MODULO          [ reduce using rule 280 (expresion -> expresion ANDB expresion .) ]
  ! SHIFTD          [ reduce using rule 280 (expresion -> expresion ANDB expresion .) ]
  ! SHIFTI          [ reduce using rule 280 (expresion -> expresion ANDB expresion .) ]
  ! DIV             [ shift and go to state 408 ]
  ! HASHTAG         [ shift and go to state 412 ]
  ! ANDB            [ shift and go to state 413 ]
  ! D_OR            [ shift and go to state 414 ]


state 516

    (281) expresion -> expresion D_OR expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for HASHTAG resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for D_OR resolved as shift
    PARC            reduce using rule 281 (expresion -> expresion D_OR expresion .)
    COMA            reduce using rule 281 (expresion -> expresion D_OR expresion .)
    MAYOR           reduce using rule 281 (expresion -> expresion D_OR expresion .)
    MENOR           reduce using rule 281 (expresion -> expresion D_OR expresion .)
    MAYORIGUAL      reduce using rule 281 (expresion -> expresion D_OR expresion .)
    MENORIGUAL      reduce using rule 281 (expresion -> expresion D_OR expresion .)
    IGUALIGUAL      reduce using rule 281 (expresion -> expresion D_OR expresion .)
    IGUAL           reduce using rule 281 (expresion -> expresion D_OR expresion .)
    NOIG            reduce using rule 281 (expresion -> expresion D_OR expresion .)
    NOTIGUAL        reduce using rule 281 (expresion -> expresion D_OR expresion .)
    AND             reduce using rule 281 (expresion -> expresion D_OR expresion .)
    OR              reduce using rule 281 (expresion -> expresion D_OR expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414

  ! MAS             [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! MENOS           [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! POR             [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! DIV             [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! MODULO          [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! SHIFTD          [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! SHIFTI          [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! HASHTAG         [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! ANDB            [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]
  ! D_OR            [ reduce using rule 281 (expresion -> expresion D_OR expresion .) ]


state 517

    (155) exclusiva_insert -> SUBSTRING PARA string_type . COMA expresion COMA expresion PARC

    COMA            shift and go to state 581


state 518

    (156) exclusiva_insert -> SUBSTR PARA string_type . COMA expresion COMA expresion PARC

    COMA            shift and go to state 582


state 519

    (157) exclusiva_insert -> MD5 PARA string_type . PARC

    PARC            shift and go to state 583


state 520

    (158) exclusiva_insert -> TRIM PARA string_type . PARC

    PARC            shift and go to state 584


state 521

    (159) exclusiva_insert -> NOW PARA PARC .

    PARC            reduce using rule 159 (exclusiva_insert -> NOW PARA PARC .)
    COMA            reduce using rule 159 (exclusiva_insert -> NOW PARA PARC .)


state 522

    (271) agrupacion_expresion -> PARA expresion . PARC
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    PARC            shift and go to state 585
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 523

    (231) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 231 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 231 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 231 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 231 (tipo -> CHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 231 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 231 (tipo -> CHAR PARA ENTERO PARC .)


state 524

    (232) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 586


state 525

    (234) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 234 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 234 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 234 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 234 (tipo -> CHARACTER PARA ENTERO PARC .)
    PTCOMA          reduce using rule 234 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 234 (tipo -> CHARACTER PARA ENTERO PARC .)


state 526

    (233) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 233 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 233 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 233 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 233 (tipo -> VARCHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 233 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 233 (tipo -> VARCHAR PARA ENTERO PARC .)


state 527

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 587


state 528

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (218) tipo -> . INTEGER
    (219) tipo -> . SMALLINT
    (220) tipo -> . BIGINT
    (221) tipo -> . DECIMAL
    (222) tipo -> . NUMERIC
    (223) tipo -> . REAL
    (224) tipo -> . CHAR
    (225) tipo -> . DOUBLE
    (226) tipo -> . PRECISION
    (227) tipo -> . MONEY
    (228) tipo -> . FLOAT
    (229) tipo -> . BOOLEAN
    (230) tipo -> . VOID
    (231) tipo -> . CHAR PARA ENTERO PARC
    (232) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (233) tipo -> . VARCHAR PARA ENTERO PARC
    (234) tipo -> . CHARACTER PARA ENTERO PARC
    (235) tipo -> . TEXT
    (236) tipo -> . TIME
    (237) tipo -> . TIMESTAMP
    (238) tipo -> . DATE

    INTEGER         shift and go to state 172
    SMALLINT        shift and go to state 173
    BIGINT          shift and go to state 174
    DECIMAL         shift and go to state 175
    NUMERIC         shift and go to state 176
    REAL            shift and go to state 177
    CHAR            shift and go to state 178
    DOUBLE          shift and go to state 179
    PRECISION       shift and go to state 180
    MONEY           shift and go to state 181
    FLOAT           shift and go to state 182
    BOOLEAN         shift and go to state 183
    VOID            shift and go to state 184
    CHARACTER       shift and go to state 185
    VARCHAR         shift and go to state 186
    TEXT            shift and go to state 187
    TIME            shift and go to state 188
    TIMESTAMP       shift and go to state 189
    DATE            shift and go to state 190

    tipo                           shift and go to state 588

state 529

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (218) tipo -> . INTEGER
    (219) tipo -> . SMALLINT
    (220) tipo -> . BIGINT
    (221) tipo -> . DECIMAL
    (222) tipo -> . NUMERIC
    (223) tipo -> . REAL
    (224) tipo -> . CHAR
    (225) tipo -> . DOUBLE
    (226) tipo -> . PRECISION
    (227) tipo -> . MONEY
    (228) tipo -> . FLOAT
    (229) tipo -> . BOOLEAN
    (230) tipo -> . VOID
    (231) tipo -> . CHAR PARA ENTERO PARC
    (232) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (233) tipo -> . VARCHAR PARA ENTERO PARC
    (234) tipo -> . CHARACTER PARA ENTERO PARC
    (235) tipo -> . TEXT
    (236) tipo -> . TIME
    (237) tipo -> . TIMESTAMP
    (238) tipo -> . DATE

    INTEGER         shift and go to state 172
    SMALLINT        shift and go to state 173
    BIGINT          shift and go to state 174
    DECIMAL         shift and go to state 175
    NUMERIC         shift and go to state 176
    REAL            shift and go to state 177
    CHAR            shift and go to state 178
    DOUBLE          shift and go to state 179
    PRECISION       shift and go to state 180
    MONEY           shift and go to state 181
    FLOAT           shift and go to state 182
    BOOLEAN         shift and go to state 183
    VOID            shift and go to state 184
    CHARACTER       shift and go to state 185
    VARCHAR         shift and go to state 186
    TEXT            shift and go to state 187
    TIME            shift and go to state 188
    TIMESTAMP       shift and go to state 189
    DATE            shift and go to state 190

    tipo                           shift and go to state 589

state 530

    (32) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    INSERT          reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 531

    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 590


state 532

    (40) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 591


state 533

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 592


state 534

    (47) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 47 (createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .)


state 535

    (48) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 48 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 536

    (83) C_unique -> CONSTRAINT ID UNIQUE .

    NOT             reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    NULL            reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    UNIQUE          reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    CONSTRAINT      reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    PRIMARY         reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    FOREIGN         reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    DEFAULT         reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    CHECK           reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    PARC            reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)
    COMA            reduce using rule 83 (C_unique -> CONSTRAINT ID UNIQUE .)


state 537

    (87) C_check -> CONSTRAINT ID CHECK . PARA expresion_logica PARC

    PARA            shift and go to state 593


state 538

    (88) C_check -> CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 594


state 539

    (98) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 595


state 540

    (99) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 596


state 541

    (103) TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .

    NOT             reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    UNIQUE          reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CONSTRAINT      reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PRIMARY         reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    FOREIGN         reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    DEFAULT         reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    CHECK           reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    PARC            reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 103 (TIPO_DATO_DEF -> INTERVAL extract_time TO extract_time .)


state 542

    (108) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 597


state 543

    (111) TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .

    NOT             reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    NULL            reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    UNIQUE          reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PRIMARY         reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    FOREIGN         reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    CHECK           reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    PARC            reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 111 (TIPO_DATO_DEF -> CHARACTER PARA ENTERO PARC .)


state 544

    (109) TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .

    NOT             reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    NULL            reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    CHECK           reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    PARC            reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 109 (TIPO_DATO_DEF -> VARCHAR PARA ENTERO PARC .)


state 545

    (110) TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .

    NOT             reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    NULL            reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    UNIQUE          reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PRIMARY         reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    FOREIGN         reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    CHECK           reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    PARC            reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 110 (TIPO_DATO_DEF -> CHAR PARA ENTERO PARC .)


state 546

    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID . PARC PTCOMA

    PARC            shift and go to state 598


state 547

    (64) cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .

    PARC            reduce using rule 64 (cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .)
    COMA            reduce using rule 64 (cuerpo_createTable -> PRIMARY KEY PARA campos_c PARC .)


state 548

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC

    REFERENCES      shift and go to state 599


state 549

    (70) constraint_esp -> CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 600


state 550

    (71) constraint_esp -> UNIQUE PARA campos_c . PARC
    (68) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 601
    COMA            shift and go to state 365


state 551

    (72) constraint_esp -> FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC

    ID              shift and go to state 602


state 552

    (138) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .

    error           reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    CREATE          reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    SELECT          reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    CALL            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    SHOW            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    USE             reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    DROP            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    ALTER           reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    INSERT          reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)
    $end            reduce using rule 138 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NULL PTCOMA .)


state 553

    (139) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL . PTCOMA

    PTCOMA          shift and go to state 603


state 554

    (131) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .

    error           reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    CREATE          reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    SELECT          reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    CALL            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    SHOW            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    USE             reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    DROP            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    ALTER           reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    INSERT          reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    $end            reduce using rule 131 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)


state 555

    (166) TIPO_DATO -> DECIMAL PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 604


state 556

    (167) TIPO_DATO -> NUMERIC PARA ENTERO . COMA ENTERO PARC

    COMA            shift and go to state 605


state 557

    (171) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (114) extract_time -> . YEAR
    (115) extract_time -> . DAY
    (116) extract_time -> . MONTH
    (117) extract_time -> . HOUR
    (118) extract_time -> . MINUTE
    (119) extract_time -> . SECOND

    YEAR            shift and go to state 340
    DAY             shift and go to state 341
    MONTH           shift and go to state 342
    HOUR            shift and go to state 343
    MINUTE          shift and go to state 344
    SECOND          shift and go to state 345

    extract_time                   shift and go to state 606

state 558

    (176) TIPO_DATO -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 607


state 559

    (179) TIPO_DATO -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 608


state 560

    (181) TIPO_DATO -> CHARACTER PARA PARC .

    PTCOMA          reduce using rule 181 (TIPO_DATO -> CHARACTER PARA PARC .)
    COMA            reduce using rule 181 (TIPO_DATO -> CHARACTER PARA PARC .)


state 561

    (177) TIPO_DATO -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 609


state 562

    (178) TIPO_DATO -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 610


state 563

    (180) TIPO_DATO -> CHAR PARA PARC .

    PTCOMA          reduce using rule 180 (TIPO_DATO -> CHAR PARA PARC .)
    COMA            reduce using rule 180 (TIPO_DATO -> CHAR PARA PARC .)


state 564

    (133) alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .

    error           reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    CREATE          reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    SELECT          reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    CALL            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    SHOW            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    USE             reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    DROP            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    ALTER           reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    INSERT          reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)
    $end            reduce using rule 133 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PARA expresion_logica PARC PTCOMA .)


state 565

    (297) expresion_logica -> expresion_relacional AND expresion_logica .

    PARC            reduce using rule 297 (expresion_logica -> expresion_relacional AND expresion_logica .)


state 566

    (298) expresion_logica -> expresion_relacional OR expresion_logica .

    PARC            reduce using rule 298 (expresion_logica -> expresion_relacional OR expresion_logica .)


state 567

    (288) expresion_relacional -> expresion MAYOR expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 288 (expresion_relacional -> expresion MAYOR expresion .)
    OR              reduce using rule 288 (expresion_relacional -> expresion MAYOR expresion .)
    PARC            reduce using rule 288 (expresion_relacional -> expresion MAYOR expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 568

    (289) expresion_relacional -> expresion MENOR expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 289 (expresion_relacional -> expresion MENOR expresion .)
    OR              reduce using rule 289 (expresion_relacional -> expresion MENOR expresion .)
    PARC            reduce using rule 289 (expresion_relacional -> expresion MENOR expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 569

    (290) expresion_relacional -> expresion MAYORIGUAL expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 290 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 290 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    PARC            reduce using rule 290 (expresion_relacional -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 570

    (291) expresion_relacional -> expresion MENORIGUAL expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 291 (expresion_relacional -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 291 (expresion_relacional -> expresion MENORIGUAL expresion .)
    PARC            reduce using rule 291 (expresion_relacional -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 571

    (292) expresion_relacional -> expresion IGUALIGUAL expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 292 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 292 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    PARC            reduce using rule 292 (expresion_relacional -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 572

    (293) expresion_relacional -> expresion IGUAL expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 293 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 293 (expresion_relacional -> expresion IGUAL expresion .)
    PARC            reduce using rule 293 (expresion_relacional -> expresion IGUAL expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 573

    (294) expresion_relacional -> expresion NOIG expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 294 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 294 (expresion_relacional -> expresion NOIG expresion .)
    PARC            reduce using rule 294 (expresion_relacional -> expresion NOIG expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 574

    (295) expresion_relacional -> expresion NOTIGUAL expresion .
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    AND             reduce using rule 295 (expresion_relacional -> expresion NOTIGUAL expresion .)
    OR              reduce using rule 295 (expresion_relacional -> expresion NOTIGUAL expresion .)
    PARC            reduce using rule 295 (expresion_relacional -> expresion NOTIGUAL expresion .)
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 575

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC PTCOMA

    REFERENCES      shift and go to state 611


state 576

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica . PARC PTCOMA

    PARC            shift and go to state 612


state 577

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c . PARC PTCOMA
    (68) campos_c -> campos_c . COMA ID

    PARC            shift and go to state 613
    COMA            shift and go to state 365


state 578

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA . ID PARC REFERENCES ID PARA ID PARC PTCOMA

    ID              shift and go to state 614


state 579

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos . PARC PTCOMA
    (152) lista_datos -> lista_datos . COMA exclusiva_insert

    PARC            shift and go to state 615
    COMA            shift and go to state 404


state 580

    (148) insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC . PTCOMA

    PTCOMA          shift and go to state 616


state 581

    (155) exclusiva_insert -> SUBSTRING PARA string_type COMA . expresion COMA expresion PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    string_type                    shift and go to state 281
    expresion                      shift and go to state 617
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 582

    (156) exclusiva_insert -> SUBSTR PARA string_type COMA . expresion COMA expresion PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    string_type                    shift and go to state 281
    expresion                      shift and go to state 618
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 583

    (157) exclusiva_insert -> MD5 PARA string_type PARC .

    PARC            reduce using rule 157 (exclusiva_insert -> MD5 PARA string_type PARC .)
    COMA            reduce using rule 157 (exclusiva_insert -> MD5 PARA string_type PARC .)


state 584

    (158) exclusiva_insert -> TRIM PARA string_type PARC .

    PARC            reduce using rule 158 (exclusiva_insert -> TRIM PARA string_type PARC .)
    COMA            reduce using rule 158 (exclusiva_insert -> TRIM PARA string_type PARC .)


state 585

    (271) agrupacion_expresion -> PARA expresion PARC .

    MAS             reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    MENOS           reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    POR             reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    DIV             reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    MODULO          reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    SHIFTD          reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    SHIFTI          reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    HASHTAG         reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    ANDB            reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    D_OR            reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    PARC            reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    COMA            reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    MAYOR           reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    MENOR           reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    IGUAL           reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    NOIG            reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    NOTIGUAL        reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    AND             reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)
    OR              reduce using rule 271 (agrupacion_expresion -> PARA expresion PARC .)


state 586

    (232) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 232 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 232 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 232 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 232 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PTCOMA          reduce using rule 232 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 232 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 587

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 619


state 588

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 620


state 589

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 621


state 590

    (36) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 36 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 591

    (40) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 40 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 592

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 622


state 593

    (87) C_check -> CONSTRAINT ID CHECK PARA . expresion_logica PARC
    (297) expresion_logica -> . expresion_relacional AND expresion_logica
    (298) expresion_logica -> . expresion_relacional OR expresion_logica
    (299) expresion_logica -> . NOT expresion_logica
    (300) expresion_logica -> . expresion_relacional
    (288) expresion_relacional -> . expresion MAYOR expresion
    (289) expresion_relacional -> . expresion MENOR expresion
    (290) expresion_relacional -> . expresion MAYORIGUAL expresion
    (291) expresion_relacional -> . expresion MENORIGUAL expresion
    (292) expresion_relacional -> . expresion IGUALIGUAL expresion
    (293) expresion_relacional -> . expresion IGUAL expresion
    (294) expresion_relacional -> . expresion NOIG expresion
    (295) expresion_relacional -> . expresion NOTIGUAL expresion
    (296) expresion_relacional -> . expresion
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOT             shift and go to state 391
    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    expresion_logica               shift and go to state 623
    expresion_relacional           shift and go to state 390
    expresion                      shift and go to state 392
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    string_type                    shift and go to state 281
    expresion_numero               shift and go to state 296

state 594

    (88) C_check -> CHECK PARA expresion_logica PARC .

    NOT             reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    NULL            reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    UNIQUE          reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    CONSTRAINT      reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    PRIMARY         reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    FOREIGN         reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    DEFAULT         reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    CHECK           reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    PARC            reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 88 (C_check -> CHECK PARA expresion_logica PARC .)


state 595

    (98) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 624


state 596

    (99) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 625


state 597

    (108) TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .

    NOT             reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    NULL            reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    UNIQUE          reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CONSTRAINT      reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PRIMARY         reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    FOREIGN         reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    CHECK           reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    PARC            reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 108 (TIPO_DATO_DEF -> CHARACTER VARYING PARA ENTERO PARC .)


state 598

    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 626


state 599

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC

    ID              shift and go to state 627


state 600

    (70) constraint_esp -> CHECK PARA expresion_logica PARC .

    PARC            reduce using rule 70 (constraint_esp -> CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 70 (constraint_esp -> CHECK PARA expresion_logica PARC .)


state 601

    (71) constraint_esp -> UNIQUE PARA campos_c PARC .

    PARC            reduce using rule 71 (constraint_esp -> UNIQUE PARA campos_c PARC .)
    COMA            reduce using rule 71 (constraint_esp -> UNIQUE PARA campos_c PARC .)


state 602

    (72) constraint_esp -> FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC

    PARC            shift and go to state 628


state 603

    (139) alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .

    error           reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    CREATE          reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    SELECT          reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    CALL            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    SHOW            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    USE             reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    DROP            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    ALTER           reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    INSERT          reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)
    $end            reduce using rule 139 (alterTable_insrt -> ALTER TABLE ID ALTER COLUMN ID SET NOT NULL PTCOMA .)


state 604

    (166) TIPO_DATO -> DECIMAL PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 629


state 605

    (167) TIPO_DATO -> NUMERIC PARA ENTERO COMA . ENTERO PARC

    ENTERO          shift and go to state 630


state 606

    (171) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PTCOMA          reduce using rule 171 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 171 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 607

    (176) TIPO_DATO -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 631


state 608

    (179) TIPO_DATO -> CHARACTER PARA ENTERO PARC .

    PTCOMA          reduce using rule 179 (TIPO_DATO -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 179 (TIPO_DATO -> CHARACTER PARA ENTERO PARC .)


state 609

    (177) TIPO_DATO -> VARCHAR PARA ENTERO PARC .

    PTCOMA          reduce using rule 177 (TIPO_DATO -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 177 (TIPO_DATO -> VARCHAR PARA ENTERO PARC .)


state 610

    (178) TIPO_DATO -> CHAR PARA ENTERO PARC .

    PTCOMA          reduce using rule 178 (TIPO_DATO -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 178 (TIPO_DATO -> CHAR PARA ENTERO PARC .)


state 611

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC PTCOMA

    ID              shift and go to state 632


state 612

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC . PTCOMA

    PTCOMA          shift and go to state 633


state 613

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC . PTCOMA

    PTCOMA          shift and go to state 634


state 614

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID . PARC REFERENCES ID PARA ID PARC PTCOMA

    PARC            shift and go to state 635


state 615

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC . PTCOMA

    PTCOMA          shift and go to state 636


state 616

    (148) insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .

    error           reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    CREATE          reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    SELECT          reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    CALL            reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    SHOW            reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    USE             reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    DROP            reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    ALTER           reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    INSERT          reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)
    $end            reduce using rule 148 (insert_insrt -> INSERT INTO ID PARA PARC VALUES PARA lista_datos PARC PTCOMA .)


state 617

    (155) exclusiva_insert -> SUBSTRING PARA string_type COMA expresion . COMA expresion PARC
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    COMA            shift and go to state 637
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 618

    (156) exclusiva_insert -> SUBSTR PARA string_type COMA expresion . COMA expresion PARC
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    COMA            shift and go to state 638
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 619

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 639
    DECLARE         shift and go to state 640


state 620

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 641


state 621

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 642


state 622

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 643
    DECLARE         shift and go to state 644


state 623

    (87) C_check -> CONSTRAINT ID CHECK PARA expresion_logica . PARC

    PARC            shift and go to state 645


state 624

    (98) TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    CHECK           reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 98 (TIPO_DATO_DEF -> DECIMAL PARA ENTERO COMA ENTERO PARC .)


state 625

    (99) TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .

    NOT             reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    NULL            reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    UNIQUE          reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CONSTRAINT      reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PRIMARY         reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    FOREIGN         reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    DEFAULT         reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    CHECK           reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    PARC            reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 99 (TIPO_DATO_DEF -> NUMERIC PARA ENTERO COMA ENTERO PARC .)


state 626

    (59) create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .

    error           reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    CALL            reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    USE             reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    DROP            reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    INSERT          reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)
    $end            reduce using rule 59 (create_Table_isnrt -> CREATE TABLE ID PARA cuerpo_createTable_lista PARC INHERITS PARA ID PARC PTCOMA .)


state 627

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC

    PARA            shift and go to state 646


state 628

    (72) constraint_esp -> FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC

    REFERENCES      shift and go to state 647


state 629

    (166) TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 648


state 630

    (167) TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO . PARC

    PARC            shift and go to state 649


state 631

    (176) TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC .

    PTCOMA          reduce using rule 176 (TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 176 (TIPO_DATO -> CHARACTER VARYING PARA ENTERO PARC .)


state 632

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC PTCOMA

    PARA            shift and go to state 650


state 633

    (135) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .

    error           reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    CREATE          reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    SELECT          reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    CALL            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    SHOW            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    USE             reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    DROP            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    ALTER           reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    INSERT          reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)
    $end            reduce using rule 135 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PARA expresion_logica PARC PTCOMA .)


state 634

    (136) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .

    error           reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    CREATE          reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    SELECT          reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    CALL            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    SHOW            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    USE             reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    DROP            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    ALTER           reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    INSERT          reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)
    $end            reduce using rule 136 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PARA campos_c PARC PTCOMA .)


state 635

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC . REFERENCES ID PARA ID PARC PTCOMA

    REFERENCES      shift and go to state 651


state 636

    (147) insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .

    error           reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    CREATE          reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    SELECT          reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    CALL            reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    SHOW            reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    USE             reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    DROP            reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    ALTER           reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    INSERT          reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)
    $end            reduce using rule 147 (insert_insrt -> INSERT INTO ID PARA lista_parametros_lista PARC VALUES PARA lista_datos PARC PTCOMA .)


state 637

    (155) exclusiva_insert -> SUBSTRING PARA string_type COMA expresion COMA . expresion PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    string_type                    shift and go to state 281
    expresion                      shift and go to state 652
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 638

    (156) exclusiva_insert -> SUBSTR PARA string_type COMA expresion COMA . expresion PARC
    (272) expresion -> . expresion MAS expresion
    (273) expresion -> . expresion MENOS expresion
    (274) expresion -> . expresion POR expresion
    (275) expresion -> . expresion DIV expresion
    (276) expresion -> . expresion MODULO expresion
    (277) expresion -> . expresion SHIFTD expresion
    (278) expresion -> . expresion SHIFTI expresion
    (279) expresion -> . expresion HASHTAG expresion
    (280) expresion -> . expresion ANDB expresion
    (281) expresion -> . expresion D_OR expresion
    (282) expresion -> . NOTB expresion
    (283) expresion -> . ORB expresion
    (284) expresion -> . D_OR expresion
    (285) expresion -> . PARA expresion_logica PARC
    (286) expresion -> . TRUE
    (287) expresion -> . FALSE
    (301) expresion -> . expresion_dato
    (302) expresion -> . sum_insrt
    (303) expresion -> . count_insrt
    (304) expresion_dato -> . string_type
    (305) expresion_dato -> . MENOS ENTERO
    (306) expresion_dato -> . ID PUNTO ID
    (307) expresion_dato -> . expresion_numero
    (310) sum_insrt -> . SUM agrupacion_expresion
    (311) count_insrt -> . COUNT agrupacion_expresion
    (182) string_type -> . CADENA
    (183) string_type -> . ID
    (308) expresion_numero -> . ENTERO
    (309) expresion_numero -> . FLOTANTE

    NOTB            shift and go to state 288
    ORB             shift and go to state 289
    D_OR            shift and go to state 287
    PARA            shift and go to state 276
    TRUE            shift and go to state 290
    FALSE           shift and go to state 291
    MENOS           shift and go to state 286
    ID              shift and go to state 275
    SUM             shift and go to state 297
    COUNT           shift and go to state 298
    CADENA          shift and go to state 116
    ENTERO          shift and go to state 295
    FLOTANTE        shift and go to state 299

    string_type                    shift and go to state 281
    expresion                      shift and go to state 653
    expresion_dato                 shift and go to state 292
    sum_insrt                      shift and go to state 293
    count_insrt                    shift and go to state 294
    expresion_numero               shift and go to state 296

state 639

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 655
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 640

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    BEGIN           reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 669
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 641

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 670


state 642

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 671


state 643

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 672
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 644

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    BEGIN           reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 673
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 645

    (87) C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .

    NOT             reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    NULL            reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    UNIQUE          reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    CONSTRAINT      reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    PRIMARY         reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    FOREIGN         reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    DEFAULT         reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    CHECK           reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    PARC            reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)
    COMA            reduce using rule 87 (C_check -> CONSTRAINT ID CHECK PARA expresion_logica PARC .)


state 646

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC

    ID              shift and go to state 674


state 647

    (72) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC

    ID              shift and go to state 675


state 648

    (166) TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC .

    PTCOMA          reduce using rule 166 (TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 166 (TIPO_DATO -> DECIMAL PARA ENTERO COMA ENTERO PARC .)


state 649

    (167) TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC .

    PTCOMA          reduce using rule 167 (TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC .)
    COMA            reduce using rule 167 (TIPO_DATO -> NUMERIC PARA ENTERO COMA ENTERO PARC .)


state 650

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC PTCOMA

    ID              shift and go to state 676


state 651

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES . ID PARA ID PARC PTCOMA

    ID              shift and go to state 677


state 652

    (155) exclusiva_insert -> SUBSTRING PARA string_type COMA expresion COMA expresion . PARC
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    PARC            shift and go to state 678
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 653

    (156) exclusiva_insert -> SUBSTR PARA string_type COMA expresion COMA expresion . PARC
    (272) expresion -> expresion . MAS expresion
    (273) expresion -> expresion . MENOS expresion
    (274) expresion -> expresion . POR expresion
    (275) expresion -> expresion . DIV expresion
    (276) expresion -> expresion . MODULO expresion
    (277) expresion -> expresion . SHIFTD expresion
    (278) expresion -> expresion . SHIFTI expresion
    (279) expresion -> expresion . HASHTAG expresion
    (280) expresion -> expresion . ANDB expresion
    (281) expresion -> expresion . D_OR expresion

    PARC            shift and go to state 679
    MAS             shift and go to state 405
    MENOS           shift and go to state 406
    POR             shift and go to state 407
    DIV             shift and go to state 408
    MODULO          shift and go to state 409
    SHIFTD          shift and go to state 410
    SHIFTI          shift and go to state 411
    HASHTAG         shift and go to state 412
    ANDB            shift and go to state 413
    D_OR            shift and go to state 414


state 654

    (214) asignacion -> ID . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> ID . tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> ID . tipo PTCOMA
    (217) declaracion -> ID . tipo DEFAULT expresionPLSQL PTCOMA
    (218) tipo -> . INTEGER
    (219) tipo -> . SMALLINT
    (220) tipo -> . BIGINT
    (221) tipo -> . DECIMAL
    (222) tipo -> . NUMERIC
    (223) tipo -> . REAL
    (224) tipo -> . CHAR
    (225) tipo -> . DOUBLE
    (226) tipo -> . PRECISION
    (227) tipo -> . MONEY
    (228) tipo -> . FLOAT
    (229) tipo -> . BOOLEAN
    (230) tipo -> . VOID
    (231) tipo -> . CHAR PARA ENTERO PARC
    (232) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (233) tipo -> . VARCHAR PARA ENTERO PARC
    (234) tipo -> . CHARACTER PARA ENTERO PARC
    (235) tipo -> . TEXT
    (236) tipo -> . TIME
    (237) tipo -> . TIMESTAMP
    (238) tipo -> . DATE

    DOSPUNTOS       shift and go to state 680
    INTEGER         shift and go to state 172
    SMALLINT        shift and go to state 173
    BIGINT          shift and go to state 174
    DECIMAL         shift and go to state 175
    NUMERIC         shift and go to state 176
    REAL            shift and go to state 177
    CHAR            shift and go to state 178
    DOUBLE          shift and go to state 179
    PRECISION       shift and go to state 180
    MONEY           shift and go to state 181
    FLOAT           shift and go to state 182
    BOOLEAN         shift and go to state 183
    VOID            shift and go to state 184
    CHARACTER       shift and go to state 185
    VARCHAR         shift and go to state 186
    TEXT            shift and go to state 187
    TIME            shift and go to state 188
    TIMESTAMP       shift and go to state 189
    DATE            shift and go to state 190

    tipo                           shift and go to state 681

state 655

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 682
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 656

    (25) instrucciones_funct_sent -> PTCOMA .

    END             reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    PTCOMA          reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    error           reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    ID              reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    RAISE           reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    IF              reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    CASE            reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    SELECT          reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    CALL            reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    BEGIN           reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    ELSE            reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    ELSEIF          reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)
    WHEN            reduce using rule 25 (instrucciones_funct_sent -> PTCOMA .)


state 657

    (19) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PTCOMA          reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CALL            reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 19 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 658

    (20) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    PTCOMA          reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    CALL            reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 20 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 20 (instrucciones_funct_sent -> asignacion .)


state 659

    (21) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    PTCOMA          reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    CALL            reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 21 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 21 (instrucciones_funct_sent -> declaracion .)


state 660

    (22) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    PTCOMA          reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    CALL            reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 22 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 22 (instrucciones_funct_sent -> imprimir .)


state 661

    (23) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    PTCOMA          reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    CALL            reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 23 (instrucciones_funct_sent -> sentencia_if .)


state 662

    (24) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    PTCOMA          reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    CALL            reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 24 (instrucciones_funct_sent -> sentencia_switch .)


state 663

    (26) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    PTCOMA          reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    CALL            reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 26 (instrucciones_funct_sent -> llamada_funcion .)


state 664

    (27) instrucciones_funct_sent -> empty .

    END             reduce using rule 27 (instrucciones_funct_sent -> empty .)
    PTCOMA          reduce using rule 27 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 27 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 27 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 27 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 27 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 27 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 27 (instrucciones_funct_sent -> empty .)
    CALL            reduce using rule 27 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 27 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 27 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 27 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 27 (instrucciones_funct_sent -> empty .)


state 665

    (28) instrucciones_funct_sent -> error .

    END             reduce using rule 28 (instrucciones_funct_sent -> error .)
    PTCOMA          reduce using rule 28 (instrucciones_funct_sent -> error .)
    error           reduce using rule 28 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 28 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 28 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 28 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 28 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 28 (instrucciones_funct_sent -> error .)
    CALL            reduce using rule 28 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 28 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 28 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 28 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 28 (instrucciones_funct_sent -> error .)


state 666

    (210) imprimir -> RAISE . lista_imprimir PTCOMA
    (211) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (212) lista_imprimir -> . sent_imprimir
    (213) sent_imprimir -> . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    lista_imprimir                 shift and go to state 684
    sent_imprimir                  shift and go to state 685
    expresionPLSQL                 shift and go to state 686
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 667

    (206) sentencia_if -> IF . expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 687
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 668

    (201) sentencia_switch -> CASE . expresionPLSQL case_list END CASE PTCOMA
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 688
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 669

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 689
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! BEGIN           [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 670

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 690
    DECLARE         shift and go to state 691


state 671

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 692
    DECLARE         shift and go to state 693


state 672

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 694
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 673

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 695
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! BEGIN           [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 674

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC

    PARC            shift and go to state 696


state 675

    (72) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC

    PARA            shift and go to state 697


state 676

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC PTCOMA

    PARC            shift and go to state 698


state 677

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID . PARA ID PARC PTCOMA

    PARA            shift and go to state 699


state 678

    (155) exclusiva_insert -> SUBSTRING PARA string_type COMA expresion COMA expresion PARC .

    PARC            reduce using rule 155 (exclusiva_insert -> SUBSTRING PARA string_type COMA expresion COMA expresion PARC .)
    COMA            reduce using rule 155 (exclusiva_insert -> SUBSTRING PARA string_type COMA expresion COMA expresion PARC .)


state 679

    (156) exclusiva_insert -> SUBSTR PARA string_type COMA expresion COMA expresion PARC .

    PARC            reduce using rule 156 (exclusiva_insert -> SUBSTR PARA string_type COMA expresion COMA expresion PARC .)
    COMA            reduce using rule 156 (exclusiva_insert -> SUBSTR PARA string_type COMA expresion COMA expresion PARC .)


state 680

    (214) asignacion -> ID DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 700


state 681

    (215) declaracion -> ID tipo . DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> ID tipo . PTCOMA
    (217) declaracion -> ID tipo . DEFAULT expresionPLSQL PTCOMA

    DOSPUNTOS       shift and go to state 701
    PTCOMA          shift and go to state 702
    DEFAULT         shift and go to state 703


state 682

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 704


state 683

    (18) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PTCOMA          reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CALL            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 18 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 684

    (210) imprimir -> RAISE lista_imprimir . PTCOMA
    (211) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PTCOMA          shift and go to state 705
    COMA            shift and go to state 706


state 685

    (212) lista_imprimir -> sent_imprimir .

    PTCOMA          reduce using rule 212 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 212 (lista_imprimir -> sent_imprimir .)


state 686

    (213) sent_imprimir -> expresionPLSQL .
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          reduce using rule 213 (sent_imprimir -> expresionPLSQL .)
    COMA            reduce using rule 213 (sent_imprimir -> expresionPLSQL .)
    AND             shift and go to state 131
    OR              shift and go to state 132


state 687

    (206) sentencia_if -> IF expresionPLSQL . THEN instrucciones_funct_list else END IF PTCOMA
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 707
    AND             shift and go to state 131
    OR              shift and go to state 132


state 688

    (201) sentencia_switch -> CASE expresionPLSQL . case_list END CASE PTCOMA
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL
    (202) case_list -> . case_list case
    (203) case_list -> . case
    (204) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (205) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 131
    OR              shift and go to state 132
    WHEN            shift and go to state 710
    ELSE            shift and go to state 711

    case_list                      shift and go to state 708
    case                           shift and go to state 709

state 689

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 712
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 690

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 713
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 691

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    BEGIN           reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 714
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 692

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 715
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 693

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    BEGIN           reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 716
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 694

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 717


state 695

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 718
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 696

    (65) cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .

    PARC            reduce using rule 65 (cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)
    COMA            reduce using rule 65 (cuerpo_createTable -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)


state 697

    (72) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC

    ID              shift and go to state 719


state 698

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 720


state 699

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA . ID PARC PTCOMA

    ID              shift and go to state 721


state 700

    (214) asignacion -> ID DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 722
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 701

    (215) declaracion -> ID tipo DOSPUNTOS . IGUAL expresionPLSQL PTCOMA

    IGUAL           shift and go to state 723


state 702

    (216) declaracion -> ID tipo PTCOMA .

    END             reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    PTCOMA          reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    error           reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    ID              reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    RAISE           reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    IF              reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    CASE            reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    SELECT          reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    CALL            reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    BEGIN           reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    ELSE            reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    ELSEIF          reduce using rule 216 (declaracion -> ID tipo PTCOMA .)
    WHEN            reduce using rule 216 (declaracion -> ID tipo PTCOMA .)


state 703

    (217) declaracion -> ID tipo DEFAULT . expresionPLSQL PTCOMA
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 724
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 704

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 725


state 705

    (210) imprimir -> RAISE lista_imprimir PTCOMA .

    END             reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    PTCOMA          reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    error           reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ID              reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    RAISE           reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    IF              reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CASE            reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    SELECT          reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CALL            reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    BEGIN           reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSE            reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSEIF          reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)
    WHEN            reduce using rule 210 (imprimir -> RAISE lista_imprimir PTCOMA .)


state 706

    (211) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (213) sent_imprimir -> . expresionPLSQL
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    sent_imprimir                  shift and go to state 726
    expresionPLSQL                 shift and go to state 686
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 707

    (206) sentencia_if -> IF expresionPLSQL THEN . instrucciones_funct_list else END IF PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    ELSE            reduce using rule 270 (empty -> .)
    ELSEIF          reduce using rule 270 (empty -> .)
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 727
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 708

    (201) sentencia_switch -> CASE expresionPLSQL case_list . END CASE PTCOMA
    (202) case_list -> case_list . case
    (204) case -> . WHEN expresionPLSQL THEN instrucciones_funct_list
    (205) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 728
    WHEN            shift and go to state 710
    ELSE            shift and go to state 711

    case                           shift and go to state 729

state 709

    (203) case_list -> case .

    END             reduce using rule 203 (case_list -> case .)
    WHEN            reduce using rule 203 (case_list -> case .)
    ELSE            reduce using rule 203 (case_list -> case .)


state 710

    (204) case -> WHEN . expresionPLSQL THEN instrucciones_funct_list
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 730
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 711

    (205) case -> ELSE . instrucciones_funct_list
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)
    WHEN            reduce using rule 270 (empty -> .)
    ELSE            reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 731
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 712

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 732
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 713

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 733
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 714

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 734
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! BEGIN           [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 715

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 735
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 716

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 736
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! BEGIN           [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 717

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 737


state 718

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 738
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 719

    (72) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC

    PARC            shift and go to state 739


state 720

    (134) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .

    error           reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CALL            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    USE             reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    DROP            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    INSERT          reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    $end            reduce using rule 134 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)


state 721

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID . PARC PTCOMA

    PARC            shift and go to state 740


state 722

    (214) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 741
    AND             shift and go to state 131
    OR              shift and go to state 132


state 723

    (215) declaracion -> ID tipo DOSPUNTOS IGUAL . expresionPLSQL PTCOMA
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 742
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 724

    (217) declaracion -> ID tipo DEFAULT expresionPLSQL . PTCOMA
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 743
    AND             shift and go to state 131
    OR              shift and go to state 132


state 725

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 744


state 726

    (211) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PTCOMA          reduce using rule 211 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 211 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 727

    (206) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list . else END IF PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (207) else -> . ELSE instrucciones_funct_list
    (208) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (209) else -> .
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 209 (else -> .)
    ELSE            shift and go to state 746
    ELSEIF          shift and go to state 747
    END             reduce using rule 209 (else -> .)
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! ELSE            [ reduce using rule 270 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]
  ! END             [ reduce using rule 270 (empty -> .) ]

    else                           shift and go to state 745
    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 728

    (201) sentencia_switch -> CASE expresionPLSQL case_list END . CASE PTCOMA

    CASE            shift and go to state 748


state 729

    (202) case_list -> case_list case .

    END             reduce using rule 202 (case_list -> case_list case .)
    WHEN            reduce using rule 202 (case_list -> case_list case .)
    ELSE            reduce using rule 202 (case_list -> case_list case .)


state 730

    (204) case -> WHEN expresionPLSQL . THEN instrucciones_funct_list
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 749
    AND             shift and go to state 131
    OR              shift and go to state 132


state 731

    (205) case -> ELSE instrucciones_funct_list .
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 205 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 205 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 205 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 205 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 205 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 205 (case -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]
  ! END             [ reduce using rule 270 (empty -> .) ]
  ! WHEN            [ reduce using rule 270 (empty -> .) ]
  ! ELSE            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 732

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 750


state 733

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 751


state 734

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 752
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 735

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 753


state 736

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 754
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 737

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 755


state 738

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 756


state 739

    (72) constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .

    PARC            reduce using rule 72 (constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)
    COMA            reduce using rule 72 (constraint_esp -> FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC .)


state 740

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC . PTCOMA

    PTCOMA          shift and go to state 757


state 741

    (214) asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 214 (asignacion -> ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 742

    (215) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL . PTCOMA
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    PTCOMA          shift and go to state 758
    AND             shift and go to state 131
    OR              shift and go to state 132


state 743

    (217) declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .

    END             reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    error           reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ID              reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    IF              reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CASE            reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    CALL            reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 217 (declaracion -> ID tipo DEFAULT expresionPLSQL PTCOMA .)


state 744

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 759


state 745

    (206) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else . END IF PTCOMA

    END             shift and go to state 760


state 746

    (207) else -> ELSE . instrucciones_funct_list
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 761
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 747

    (208) else -> ELSEIF . expresionPLSQL THEN instrucciones_funct_list else
    (239) expresionPLSQL -> . log
    (240) log -> . expresionPLSQL AND expresionPLSQL
    (241) log -> . expresionPLSQL OR expresionPLSQL
    (242) log -> . rel
    (243) rel -> . arit MAYOR arit
    (244) rel -> . arit MENOR arit
    (245) rel -> . arit MAYORIGUAL arit
    (246) rel -> . arit MENORIGUAL arit
    (247) rel -> . arit IGUALIGUAL arit
    (248) rel -> . arit NOTIGUAL arit
    (249) rel -> . arit
    (250) arit -> . arit POR arit
    (251) arit -> . arit DIVISION arit
    (252) arit -> . arit MAS arit
    (253) arit -> . arit MENOS arit
    (254) arit -> . arit MODULO arit
    (255) arit -> . arit ANDB arit
    (256) arit -> . arit SHIFTI arit
    (257) arit -> . arit SHIFTD arit
    (258) arit -> . arit XORB arit
    (259) arit -> . arit ORB arit
    (260) arit -> . PARA expresionPLSQL PARC
    (261) arit -> . ID
    (262) arit -> . CADENA
    (263) arit -> . ENTERO
    (264) arit -> . FLOTANTE
    (265) arit -> . MENOS expresionPLSQL
    (266) arit -> . NOTB expresionPLSQL
    (267) arit -> . NOT expresionPLSQL
    (268) arit -> . TRUE
    (269) arit -> . FALSE

    PARA            shift and go to state 73
    ID              shift and go to state 72
    CADENA          shift and go to state 81
    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    MENOS           shift and go to state 80
    NOTB            shift and go to state 84
    NOT             shift and go to state 85
    TRUE            shift and go to state 86
    FALSE           shift and go to state 87

    expresionPLSQL                 shift and go to state 762
    log                            shift and go to state 77
    rel                            shift and go to state 78
    arit                           shift and go to state 79

state 748

    (201) sentencia_switch -> CASE expresionPLSQL case_list END CASE . PTCOMA

    PTCOMA          shift and go to state 763


state 749

    (204) case -> WHEN expresionPLSQL THEN . instrucciones_funct_list
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    END             reduce using rule 270 (empty -> .)
    WHEN            reduce using rule 270 (empty -> .)
    ELSE            reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 764
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 750

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 765


state 751

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 766


state 752

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 767
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 753

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 768


state 754

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 769
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! END             [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 755

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 770


state 756

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 771


state 757

    (137) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .

    error           reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CREATE          reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SELECT          reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    CALL            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    SHOW            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    USE             reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    DROP            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    ALTER           reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    INSERT          reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)
    $end            reduce using rule 137 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PARA ID PARC REFERENCES ID PARA ID PARC PTCOMA .)


state 758

    (215) declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .

    END             reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    PTCOMA          reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    error           reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ID              reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    RAISE           reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    IF              reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CASE            reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    SELECT          reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    CALL            reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    BEGIN           reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSE            reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    ELSEIF          reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)
    WHEN            reduce using rule 215 (declaracion -> ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA .)


state 759

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 772


state 760

    (206) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END . IF PTCOMA

    IF              shift and go to state 773


state 761

    (207) else -> ELSE instrucciones_funct_list .
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 207 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 207 (else -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]
  ! END             [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 762

    (208) else -> ELSEIF expresionPLSQL . THEN instrucciones_funct_list else
    (240) log -> expresionPLSQL . AND expresionPLSQL
    (241) log -> expresionPLSQL . OR expresionPLSQL

    THEN            shift and go to state 774
    AND             shift and go to state 131
    OR              shift and go to state 132


state 763

    (201) sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .

    END             reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    PTCOMA          reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    error           reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ID              reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    RAISE           reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    IF              reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CASE            reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    SELECT          reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    CALL            reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    BEGIN           reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSE            reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    ELSEIF          reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)
    WHEN            reduce using rule 201 (sentencia_switch -> CASE expresionPLSQL case_list END CASE PTCOMA .)


state 764

    (204) case -> WHEN expresionPLSQL THEN instrucciones_funct_list .
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 204 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 204 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 204 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    END             reduce using rule 204 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    WHEN            reduce using rule 204 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    ELSE            reduce using rule 204 (case -> WHEN expresionPLSQL THEN instrucciones_funct_list .)
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]
  ! END             [ reduce using rule 270 (empty -> .) ]
  ! WHEN            [ reduce using rule 270 (empty -> .) ]
  ! ELSE            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 765

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 775


state 766

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 776


state 767

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 777


state 768

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 778


state 769

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 779


state 770

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 780


state 771

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 781


state 772

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 782


state 773

    (206) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF . PTCOMA

    PTCOMA          shift and go to state 783


state 774

    (208) else -> ELSEIF expresionPLSQL THEN . instrucciones_funct_list else
    (18) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (19) instrucciones_funct_list -> . instrucciones_funct_sent
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20
    ELSE            reduce using rule 270 (empty -> .)
    ELSEIF          reduce using rule 270 (empty -> .)
    END             reduce using rule 270 (empty -> .)

  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 784
    instrucciones_funct_sent       shift and go to state 657
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 775

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 785


state 776

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 786


state 777

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 787


state 778

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 788


state 779

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 789


state 780

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 790


state 781

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 791


state 782

    (184) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 184 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 783

    (206) sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .

    END             reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    PTCOMA          reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    error           reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ID              reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    RAISE           reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    IF              reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CASE            reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    SELECT          reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    CALL            reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    BEGIN           reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSE            reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSEIF          reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)
    WHEN            reduce using rule 206 (sentencia_if -> IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA .)


state 784

    (208) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list . else
    (18) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (207) else -> . ELSE instrucciones_funct_list
    (208) else -> . ELSEIF expresionPLSQL THEN instrucciones_funct_list else
    (209) else -> .
    (20) instrucciones_funct_sent -> . asignacion
    (21) instrucciones_funct_sent -> . declaracion
    (22) instrucciones_funct_sent -> . imprimir
    (23) instrucciones_funct_sent -> . sentencia_if
    (24) instrucciones_funct_sent -> . sentencia_switch
    (25) instrucciones_funct_sent -> . PTCOMA
    (26) instrucciones_funct_sent -> . llamada_funcion
    (27) instrucciones_funct_sent -> . empty
    (28) instrucciones_funct_sent -> . error
    (214) asignacion -> . ID DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (215) declaracion -> . ID tipo DOSPUNTOS IGUAL expresionPLSQL PTCOMA
    (216) declaracion -> . ID tipo PTCOMA
    (217) declaracion -> . ID tipo DEFAULT expresionPLSQL PTCOMA
    (210) imprimir -> . RAISE lista_imprimir PTCOMA
    (206) sentencia_if -> . IF expresionPLSQL THEN instrucciones_funct_list else END IF PTCOMA
    (201) sentencia_switch -> . CASE expresionPLSQL case_list END CASE PTCOMA
    (192) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (193) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (270) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 209 (else -> .)
    ELSE            shift and go to state 746
    ELSEIF          shift and go to state 747
    END             reduce using rule 209 (else -> .)
    PTCOMA          shift and go to state 656
    error           shift and go to state 665
    ID              shift and go to state 654
    RAISE           shift and go to state 666
    IF              shift and go to state 667
    CASE            shift and go to state 668
    SELECT          shift and go to state 19
    CALL            shift and go to state 20

  ! ELSE            [ reduce using rule 270 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 270 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 270 (empty -> .) ]
  ! error           [ reduce using rule 270 (empty -> .) ]
  ! ID              [ reduce using rule 270 (empty -> .) ]
  ! RAISE           [ reduce using rule 270 (empty -> .) ]
  ! IF              [ reduce using rule 270 (empty -> .) ]
  ! CASE            [ reduce using rule 270 (empty -> .) ]
  ! SELECT          [ reduce using rule 270 (empty -> .) ]
  ! CALL            [ reduce using rule 270 (empty -> .) ]
  ! END             [ reduce using rule 270 (empty -> .) ]

    else                           shift and go to state 792
    instrucciones_funct_sent       shift and go to state 683
    asignacion                     shift and go to state 658
    declaracion                    shift and go to state 659
    imprimir                       shift and go to state 660
    sentencia_if                   shift and go to state 661
    sentencia_switch               shift and go to state 662
    llamada_funcion                shift and go to state 663
    empty                          shift and go to state 664

state 785

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 793


state 786

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 794


state 787

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 795


state 788

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 796


state 789

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 797


state 790

    (188) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 188 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 791

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 798


state 792

    (208) else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .

    END             reduce using rule 208 (else -> ELSEIF expresionPLSQL THEN instrucciones_funct_list else .)


state 793

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 799


state 794

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 800


state 795

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 801


state 796

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 802


state 797

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 803


state 798

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 804


state 799

    (185) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 185 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 800

    (186) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 186 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 801

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 805


state 802

    (190) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 190 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 803

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 806


state 804

    (189) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 189 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 805

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 807


state 806

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 808


state 807

    (187) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 187 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 808

    (191) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    ALTER           reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    INSERT          reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 191 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 79 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 79 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 79 resolved as shift
WARNING: shift/reduce conflict for POR in state 79 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 79 resolved as shift
WARNING: shift/reduce conflict for MAS in state 79 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 79 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 79 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 79 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 79 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 79 resolved as shift
WARNING: shift/reduce conflict for XORB in state 79 resolved as shift
WARNING: shift/reduce conflict for ORB in state 79 resolved as shift
WARNING: shift/reduce conflict for MAS in state 421 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 421 resolved as shift
WARNING: shift/reduce conflict for POR in state 421 resolved as shift
WARNING: shift/reduce conflict for DIV in state 421 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 421 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 421 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 421 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 421 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 421 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 421 resolved as shift
WARNING: shift/reduce conflict for MAS in state 510 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 510 resolved as shift
WARNING: shift/reduce conflict for POR in state 510 resolved as shift
WARNING: shift/reduce conflict for DIV in state 510 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 510 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 510 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 510 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 510 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 510 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 510 resolved as shift
WARNING: shift/reduce conflict for MAS in state 514 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 514 resolved as shift
WARNING: shift/reduce conflict for POR in state 514 resolved as shift
WARNING: shift/reduce conflict for DIV in state 514 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 514 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 514 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 514 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 514 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 514 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 514 resolved as shift
WARNING: shift/reduce conflict for MAS in state 516 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 516 resolved as shift
WARNING: shift/reduce conflict for POR in state 516 resolved as shift
WARNING: shift/reduce conflict for DIV in state 516 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 516 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 516 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 516 resolved as shift
WARNING: shift/reduce conflict for HASHTAG in state 516 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 516 resolved as shift
WARNING: shift/reduce conflict for D_OR in state 516 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 639 resolved as shift
WARNING: shift/reduce conflict for error in state 639 resolved as shift
WARNING: shift/reduce conflict for ID in state 639 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 639 resolved as shift
WARNING: shift/reduce conflict for IF in state 639 resolved as shift
WARNING: shift/reduce conflict for CASE in state 639 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 639 resolved as shift
WARNING: shift/reduce conflict for CALL in state 639 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 640 resolved as shift
WARNING: shift/reduce conflict for error in state 640 resolved as shift
WARNING: shift/reduce conflict for ID in state 640 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 640 resolved as shift
WARNING: shift/reduce conflict for IF in state 640 resolved as shift
WARNING: shift/reduce conflict for CASE in state 640 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 640 resolved as shift
WARNING: shift/reduce conflict for CALL in state 640 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 643 resolved as shift
WARNING: shift/reduce conflict for error in state 643 resolved as shift
WARNING: shift/reduce conflict for ID in state 643 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 643 resolved as shift
WARNING: shift/reduce conflict for IF in state 643 resolved as shift
WARNING: shift/reduce conflict for CASE in state 643 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 643 resolved as shift
WARNING: shift/reduce conflict for CALL in state 643 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 644 resolved as shift
WARNING: shift/reduce conflict for error in state 644 resolved as shift
WARNING: shift/reduce conflict for ID in state 644 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 644 resolved as shift
WARNING: shift/reduce conflict for IF in state 644 resolved as shift
WARNING: shift/reduce conflict for CASE in state 644 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 644 resolved as shift
WARNING: shift/reduce conflict for CALL in state 644 resolved as shift
WARNING: shift/reduce conflict for END in state 655 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 655 resolved as shift
WARNING: shift/reduce conflict for error in state 655 resolved as shift
WARNING: shift/reduce conflict for ID in state 655 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 655 resolved as shift
WARNING: shift/reduce conflict for IF in state 655 resolved as shift
WARNING: shift/reduce conflict for CASE in state 655 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 655 resolved as shift
WARNING: shift/reduce conflict for CALL in state 655 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 669 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 669 resolved as shift
WARNING: shift/reduce conflict for error in state 669 resolved as shift
WARNING: shift/reduce conflict for ID in state 669 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 669 resolved as shift
WARNING: shift/reduce conflict for IF in state 669 resolved as shift
WARNING: shift/reduce conflict for CASE in state 669 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 669 resolved as shift
WARNING: shift/reduce conflict for CALL in state 669 resolved as shift
WARNING: shift/reduce conflict for END in state 672 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 672 resolved as shift
WARNING: shift/reduce conflict for error in state 672 resolved as shift
WARNING: shift/reduce conflict for ID in state 672 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 672 resolved as shift
WARNING: shift/reduce conflict for IF in state 672 resolved as shift
WARNING: shift/reduce conflict for CASE in state 672 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 672 resolved as shift
WARNING: shift/reduce conflict for CALL in state 672 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 673 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 673 resolved as shift
WARNING: shift/reduce conflict for error in state 673 resolved as shift
WARNING: shift/reduce conflict for ID in state 673 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 673 resolved as shift
WARNING: shift/reduce conflict for IF in state 673 resolved as shift
WARNING: shift/reduce conflict for CASE in state 673 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 673 resolved as shift
WARNING: shift/reduce conflict for CALL in state 673 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 689 resolved as shift
WARNING: shift/reduce conflict for error in state 689 resolved as shift
WARNING: shift/reduce conflict for ID in state 689 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 689 resolved as shift
WARNING: shift/reduce conflict for IF in state 689 resolved as shift
WARNING: shift/reduce conflict for CASE in state 689 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 689 resolved as shift
WARNING: shift/reduce conflict for CALL in state 689 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 690 resolved as shift
WARNING: shift/reduce conflict for error in state 690 resolved as shift
WARNING: shift/reduce conflict for ID in state 690 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 690 resolved as shift
WARNING: shift/reduce conflict for IF in state 690 resolved as shift
WARNING: shift/reduce conflict for CASE in state 690 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 690 resolved as shift
WARNING: shift/reduce conflict for CALL in state 690 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 691 resolved as shift
WARNING: shift/reduce conflict for error in state 691 resolved as shift
WARNING: shift/reduce conflict for ID in state 691 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 691 resolved as shift
WARNING: shift/reduce conflict for IF in state 691 resolved as shift
WARNING: shift/reduce conflict for CASE in state 691 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 691 resolved as shift
WARNING: shift/reduce conflict for CALL in state 691 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 692 resolved as shift
WARNING: shift/reduce conflict for error in state 692 resolved as shift
WARNING: shift/reduce conflict for ID in state 692 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 692 resolved as shift
WARNING: shift/reduce conflict for IF in state 692 resolved as shift
WARNING: shift/reduce conflict for CASE in state 692 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 692 resolved as shift
WARNING: shift/reduce conflict for CALL in state 692 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 693 resolved as shift
WARNING: shift/reduce conflict for error in state 693 resolved as shift
WARNING: shift/reduce conflict for ID in state 693 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 693 resolved as shift
WARNING: shift/reduce conflict for IF in state 693 resolved as shift
WARNING: shift/reduce conflict for CASE in state 693 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 693 resolved as shift
WARNING: shift/reduce conflict for CALL in state 693 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 695 resolved as shift
WARNING: shift/reduce conflict for error in state 695 resolved as shift
WARNING: shift/reduce conflict for ID in state 695 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 695 resolved as shift
WARNING: shift/reduce conflict for IF in state 695 resolved as shift
WARNING: shift/reduce conflict for CASE in state 695 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 695 resolved as shift
WARNING: shift/reduce conflict for CALL in state 695 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 707 resolved as shift
WARNING: shift/reduce conflict for error in state 707 resolved as shift
WARNING: shift/reduce conflict for ID in state 707 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 707 resolved as shift
WARNING: shift/reduce conflict for IF in state 707 resolved as shift
WARNING: shift/reduce conflict for CASE in state 707 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 707 resolved as shift
WARNING: shift/reduce conflict for CALL in state 707 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 711 resolved as shift
WARNING: shift/reduce conflict for error in state 711 resolved as shift
WARNING: shift/reduce conflict for ID in state 711 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 711 resolved as shift
WARNING: shift/reduce conflict for IF in state 711 resolved as shift
WARNING: shift/reduce conflict for CASE in state 711 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 711 resolved as shift
WARNING: shift/reduce conflict for CALL in state 711 resolved as shift
WARNING: shift/reduce conflict for END in state 712 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 712 resolved as shift
WARNING: shift/reduce conflict for error in state 712 resolved as shift
WARNING: shift/reduce conflict for ID in state 712 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 712 resolved as shift
WARNING: shift/reduce conflict for IF in state 712 resolved as shift
WARNING: shift/reduce conflict for CASE in state 712 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 712 resolved as shift
WARNING: shift/reduce conflict for CALL in state 712 resolved as shift
WARNING: shift/reduce conflict for END in state 713 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 713 resolved as shift
WARNING: shift/reduce conflict for error in state 713 resolved as shift
WARNING: shift/reduce conflict for ID in state 713 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 713 resolved as shift
WARNING: shift/reduce conflict for IF in state 713 resolved as shift
WARNING: shift/reduce conflict for CASE in state 713 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 713 resolved as shift
WARNING: shift/reduce conflict for CALL in state 713 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 714 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 714 resolved as shift
WARNING: shift/reduce conflict for error in state 714 resolved as shift
WARNING: shift/reduce conflict for ID in state 714 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 714 resolved as shift
WARNING: shift/reduce conflict for IF in state 714 resolved as shift
WARNING: shift/reduce conflict for CASE in state 714 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 714 resolved as shift
WARNING: shift/reduce conflict for CALL in state 714 resolved as shift
WARNING: shift/reduce conflict for END in state 715 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 715 resolved as shift
WARNING: shift/reduce conflict for error in state 715 resolved as shift
WARNING: shift/reduce conflict for ID in state 715 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 715 resolved as shift
WARNING: shift/reduce conflict for IF in state 715 resolved as shift
WARNING: shift/reduce conflict for CASE in state 715 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 715 resolved as shift
WARNING: shift/reduce conflict for CALL in state 715 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 716 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 716 resolved as shift
WARNING: shift/reduce conflict for error in state 716 resolved as shift
WARNING: shift/reduce conflict for ID in state 716 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 716 resolved as shift
WARNING: shift/reduce conflict for IF in state 716 resolved as shift
WARNING: shift/reduce conflict for CASE in state 716 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 716 resolved as shift
WARNING: shift/reduce conflict for CALL in state 716 resolved as shift
WARNING: shift/reduce conflict for END in state 718 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 718 resolved as shift
WARNING: shift/reduce conflict for error in state 718 resolved as shift
WARNING: shift/reduce conflict for ID in state 718 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 718 resolved as shift
WARNING: shift/reduce conflict for IF in state 718 resolved as shift
WARNING: shift/reduce conflict for CASE in state 718 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 718 resolved as shift
WARNING: shift/reduce conflict for CALL in state 718 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 727 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 727 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 727 resolved as shift
WARNING: shift/reduce conflict for error in state 727 resolved as shift
WARNING: shift/reduce conflict for ID in state 727 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 727 resolved as shift
WARNING: shift/reduce conflict for IF in state 727 resolved as shift
WARNING: shift/reduce conflict for CASE in state 727 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 727 resolved as shift
WARNING: shift/reduce conflict for CALL in state 727 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 731 resolved as shift
WARNING: shift/reduce conflict for error in state 731 resolved as shift
WARNING: shift/reduce conflict for ID in state 731 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 731 resolved as shift
WARNING: shift/reduce conflict for IF in state 731 resolved as shift
WARNING: shift/reduce conflict for CASE in state 731 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 731 resolved as shift
WARNING: shift/reduce conflict for CALL in state 731 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 734 resolved as shift
WARNING: shift/reduce conflict for error in state 734 resolved as shift
WARNING: shift/reduce conflict for ID in state 734 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 734 resolved as shift
WARNING: shift/reduce conflict for IF in state 734 resolved as shift
WARNING: shift/reduce conflict for CASE in state 734 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 734 resolved as shift
WARNING: shift/reduce conflict for CALL in state 734 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 736 resolved as shift
WARNING: shift/reduce conflict for error in state 736 resolved as shift
WARNING: shift/reduce conflict for ID in state 736 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 736 resolved as shift
WARNING: shift/reduce conflict for IF in state 736 resolved as shift
WARNING: shift/reduce conflict for CASE in state 736 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 736 resolved as shift
WARNING: shift/reduce conflict for CALL in state 736 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 746 resolved as shift
WARNING: shift/reduce conflict for error in state 746 resolved as shift
WARNING: shift/reduce conflict for ID in state 746 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 746 resolved as shift
WARNING: shift/reduce conflict for IF in state 746 resolved as shift
WARNING: shift/reduce conflict for CASE in state 746 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 746 resolved as shift
WARNING: shift/reduce conflict for CALL in state 746 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 749 resolved as shift
WARNING: shift/reduce conflict for error in state 749 resolved as shift
WARNING: shift/reduce conflict for ID in state 749 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 749 resolved as shift
WARNING: shift/reduce conflict for IF in state 749 resolved as shift
WARNING: shift/reduce conflict for CASE in state 749 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 749 resolved as shift
WARNING: shift/reduce conflict for CALL in state 749 resolved as shift
WARNING: shift/reduce conflict for END in state 752 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 752 resolved as shift
WARNING: shift/reduce conflict for error in state 752 resolved as shift
WARNING: shift/reduce conflict for ID in state 752 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 752 resolved as shift
WARNING: shift/reduce conflict for IF in state 752 resolved as shift
WARNING: shift/reduce conflict for CASE in state 752 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 752 resolved as shift
WARNING: shift/reduce conflict for CALL in state 752 resolved as shift
WARNING: shift/reduce conflict for END in state 754 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 754 resolved as shift
WARNING: shift/reduce conflict for error in state 754 resolved as shift
WARNING: shift/reduce conflict for ID in state 754 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 754 resolved as shift
WARNING: shift/reduce conflict for IF in state 754 resolved as shift
WARNING: shift/reduce conflict for CASE in state 754 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 754 resolved as shift
WARNING: shift/reduce conflict for CALL in state 754 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 761 resolved as shift
WARNING: shift/reduce conflict for error in state 761 resolved as shift
WARNING: shift/reduce conflict for ID in state 761 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 761 resolved as shift
WARNING: shift/reduce conflict for IF in state 761 resolved as shift
WARNING: shift/reduce conflict for CASE in state 761 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 761 resolved as shift
WARNING: shift/reduce conflict for CALL in state 761 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 764 resolved as shift
WARNING: shift/reduce conflict for error in state 764 resolved as shift
WARNING: shift/reduce conflict for ID in state 764 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 764 resolved as shift
WARNING: shift/reduce conflict for IF in state 764 resolved as shift
WARNING: shift/reduce conflict for CASE in state 764 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 764 resolved as shift
WARNING: shift/reduce conflict for CALL in state 764 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 774 resolved as shift
WARNING: shift/reduce conflict for error in state 774 resolved as shift
WARNING: shift/reduce conflict for ID in state 774 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 774 resolved as shift
WARNING: shift/reduce conflict for IF in state 774 resolved as shift
WARNING: shift/reduce conflict for CASE in state 774 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 774 resolved as shift
WARNING: shift/reduce conflict for CALL in state 774 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 784 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 784 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 784 resolved as shift
WARNING: shift/reduce conflict for error in state 784 resolved as shift
WARNING: shift/reduce conflict for ID in state 784 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 784 resolved as shift
WARNING: shift/reduce conflict for IF in state 784 resolved as shift
WARNING: shift/reduce conflict for CASE in state 784 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 784 resolved as shift
WARNING: shift/reduce conflict for CALL in state 784 resolved as shift
WARNING: reduce/reduce conflict in state 727 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 727
WARNING: reduce/reduce conflict in state 731 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 731
WARNING: reduce/reduce conflict in state 761 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 761
WARNING: reduce/reduce conflict in state 764 resolved using rule (case -> WHEN expresionPLSQL THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 764
WARNING: reduce/reduce conflict in state 784 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 784
