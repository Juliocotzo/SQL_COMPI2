Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CORCHETEA
    CORCHETEC
    INTERVAL
    LLAVEA
    LLAVEC

Grammar

Rule 0     S' -> inicio
Rule 1     inicio -> codigo
Rule 2     codigo -> instrucciones_globales_list
Rule 3     instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent
Rule 4     instrucciones_globales_list -> instrucciones_global_sent
Rule 5     instrucciones_global_sent -> funcion
Rule 6     instrucciones_global_sent -> llamada_funcion
Rule 7     instrucciones_global_sent -> createDB_insrt
Rule 8     instrucciones_global_sent -> show_databases_instr
Rule 9     instrucciones_global_sent -> show_tables_instr
Rule 10    instrucciones_global_sent -> use_database_instr
Rule 11    instrucciones_global_sent -> drop_database_instr
Rule 12    instrucciones_global_sent -> error
Rule 13    instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent
Rule 14    instrucciones_funct_list -> instrucciones_funct_sent
Rule 15    instrucciones_funct_sent -> asignacion
Rule 16    instrucciones_funct_sent -> declaracion
Rule 17    instrucciones_funct_sent -> imprimir
Rule 18    instrucciones_funct_sent -> sentencia_if
Rule 19    instrucciones_funct_sent -> sentencia_switch
Rule 20    instrucciones_funct_sent -> PTCOMA
Rule 21    instrucciones_funct_sent -> llamada_funcion
Rule 22    instrucciones_funct_sent -> empty
Rule 23    instrucciones_funct_sent -> error
Rule 24    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 25    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 26    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 27    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 28    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 29    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 30    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 31    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 32    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 33    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 34    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 35    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 36    createDB_dosParam -> OWNER string_type MODE ENTERO
Rule 37    createDB_dosParam -> MODE ENTERO OWNER string_type
Rule 38    createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO
Rule 39    createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO
Rule 40    createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type
Rule 41    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 42    createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO
Rule 43    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 44    createDB_unParam -> OWNER IGUAL string_type
Rule 45    createDB_unParam -> MODE IGUAL ENTERO
Rule 46    createDB_unParam -> OWNER string_type
Rule 47    createDB_unParam -> MODE ENTERO
Rule 48    drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA
Rule 49    drop_database_instr -> DROP DATABASE ID PTCOMA
Rule 50    show_databases_instr -> SHOW DATABASES PTCOMA
Rule 51    show_tables_instr -> SHOW TABLES PTCOMA
Rule 52    use_database_instr -> USE ID PTCOMA
Rule 53    string_type -> CADENA
Rule 54    string_type -> ID
Rule 55    funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 56    funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 57    funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 58    funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 59    funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 60    funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 61    funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 62    funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
Rule 63    llamada_funcion -> SELECT ID PARA params PARC PTCOMA
Rule 64    llamada_funcion -> CALL ID PARA params PARC PTCOMA
Rule 65    params -> params COMA expresion
Rule 66    params -> expresion
Rule 67    params -> empty
Rule 68    parametros -> parametros COMA parametro
Rule 69    parametros -> parametro
Rule 70    parametro -> ID tipo
Rule 71    parametro -> empty
Rule 72    sentencia_switch -> CASE expresion case_list END CASE PTCOMA
Rule 73    case_list -> case_list case
Rule 74    case_list -> case
Rule 75    case -> WHEN expresion THEN instrucciones_funct_list
Rule 76    case -> ELSE instrucciones_funct_list
Rule 77    sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA
Rule 78    else -> ELSE instrucciones_funct_list
Rule 79    else -> ELSEIF expresion THEN instrucciones_funct_list else
Rule 80    else -> <empty>
Rule 81    imprimir -> RAISE lista_imprimir PTCOMA
Rule 82    lista_imprimir -> lista_imprimir COMA sent_imprimir
Rule 83    lista_imprimir -> sent_imprimir
Rule 84    sent_imprimir -> expresion
Rule 85    asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA
Rule 86    declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA
Rule 87    declaracion -> ID tipo PTCOMA
Rule 88    declaracion -> ID tipo DEFAULT expresion PTCOMA
Rule 89    tipo -> INTEGER
Rule 90    tipo -> SMALLINT
Rule 91    tipo -> BIGINT
Rule 92    tipo -> DECIMAL
Rule 93    tipo -> NUMERIC
Rule 94    tipo -> REAL
Rule 95    tipo -> CHAR
Rule 96    tipo -> DOUBLE
Rule 97    tipo -> PRECISION
Rule 98    tipo -> MONEY
Rule 99    tipo -> FLOAT
Rule 100   tipo -> BOOLEAN
Rule 101   tipo -> VOID
Rule 102   tipo -> CHAR PARA ENTERO PARC
Rule 103   tipo -> CHARACTER VARYING PARA ENTERO PARC
Rule 104   tipo -> VARCHAR PARA ENTERO PARC
Rule 105   tipo -> CHARACTER PARA ENTERO PARC
Rule 106   tipo -> TEXT
Rule 107   tipo -> TIME
Rule 108   tipo -> TIMESTAMP
Rule 109   tipo -> DATE
Rule 110   expresion -> log
Rule 111   log -> expresion AND expresion
Rule 112   log -> expresion ORR expresion
Rule 113   log -> rel
Rule 114   rel -> arit MAYOR arit
Rule 115   rel -> arit MENOR arit
Rule 116   rel -> arit MAYORIGUAL arit
Rule 117   rel -> arit MENORIGUAL arit
Rule 118   rel -> arit IGUALIGUAL arit
Rule 119   rel -> arit NOTIGUAL arit
Rule 120   rel -> arit
Rule 121   arit -> arit POR arit
Rule 122   arit -> arit DIV arit
Rule 123   arit -> arit MAS arit
Rule 124   arit -> arit MENOS arit
Rule 125   arit -> arit MOD arit
Rule 126   arit -> arit ANDB arit
Rule 127   arit -> arit SHIFTI arit
Rule 128   arit -> arit SHIFTD arit
Rule 129   arit -> arit XORB arit
Rule 130   arit -> arit ORB arit
Rule 131   arit -> PARA expresion PARC
Rule 132   arit -> ID
Rule 133   arit -> CADENA
Rule 134   arit -> ENTERO
Rule 135   arit -> FLOTANTE
Rule 136   arit -> MENOS expresion
Rule 137   arit -> NOTB expresion
Rule 138   arit -> NOTT expresion
Rule 139   arit -> TRUE
Rule 140   arit -> FALSE
Rule 141   empty -> <empty>

Terminals, with rules where they appear

AND                  : 111
ANDB                 : 126
AS                   : 55 56 57 58 59 60 61 62
BEGIN                : 55 56 57 58 59 60 61 62
BIGINT               : 91
BOOLEAN              : 100
CADENA               : 53 133
CALL                 : 64
CASE                 : 72 72
CHAR                 : 95 102
CHARACTER            : 103 105
COMA                 : 65 68 82
CORCHETEA            : 
CORCHETEC            : 
CREATE               : 24 25 26 27 28 29 30 31 32 33 34 35 55 56 57 58 59 60 61 62
DATABASE             : 24 25 26 27 28 29 30 31 32 33 34 35 48 49
DATABASES            : 50
DATE                 : 109
DECIMAL              : 92
DECLARE              : 56 58 60 62
DEFAULT              : 88
DIV                  : 122
DOLAR                : 55 55 55 55 56 56 56 56 57 57 57 57 58 58 58 58 59 59 59 59 60 60 60 60 61 61 61 61 62 62 62 62
DOSPUNTOS            : 85 86
DOUBLE               : 96
DROP                 : 48 49
ELSE                 : 76 78
ELSEIF               : 79
END                  : 55 56 57 58 59 60 61 62 72 77
ENTERO               : 36 37 38 39 40 41 42 43 45 47 102 103 104 105 134
EXISTS               : 26 27 30 31 34 35 48
FALSE                : 140
FLOAT                : 99
FLOTANTE             : 135
FUNCTION             : 55 56 57 58
ID                   : 24 25 26 27 28 29 30 31 32 33 34 35 41 43 48 49 52 54 55 56 57 58 59 60 61 62 63 64 70 85 86 87 88 132
IF                   : 26 27 30 31 34 35 48 77 77
IGUAL                : 38 39 40 41 42 42 43 43 44 45 85 86
IGUALIGUAL           : 118
INTEGER              : 89
INTERVAL             : 
LANGUAGE             : 55 56 57 58 59 60 61 62
LLAVEA               : 
LLAVEC               : 
MAS                  : 123
MAYOR                : 114
MAYORIGUAL           : 116
MENOR                : 115
MENORIGUAL           : 117
MENOS                : 124 136
MOD                  : 125
MODE                 : 36 37 38 39 40 41 42 43 45 47
MONEY                : 98
NOT                  : 26 27 30 31 34 35
NOTB                 : 137
NOTIGUAL             : 119
NOTT                 : 138
NUMERIC              : 93
OR                   : 25 27 29 31 33 35 57 58 61 62
ORB                  : 130
ORR                  : 112
OWNER                : 36 37 38 39 40 41 42 43 44 46
PARA                 : 55 56 57 58 59 60 61 62 63 64 102 103 104 105 131
PARC                 : 55 56 57 58 59 60 61 62 63 64 102 103 104 105 131
PLPGSQL              : 55 56 57 58 59 60 61 62
POR                  : 121
PRECISION            : 97
PROCEDURE            : 59 60 61 62
PTCOMA               : 20 24 25 26 27 28 29 30 31 32 33 34 35 48 49 50 51 52 55 55 56 56 57 57 58 58 59 59 60 60 61 61 62 62 63 64 72 77 81 85 86 87 88
RAISE                : 81
REAL                 : 94
REPLACE              : 25 27 29 31 33 35 57 58 61 62
RETURNS              : 55 56 57 58 59 60 61 62
SELECT               : 63
SHIFTD               : 128
SHIFTI               : 127
SHOW                 : 50 51
SMALLINT             : 90
TABLES               : 51
TEXT                 : 106
THEN                 : 75 77 79
TIME                 : 107
TIMESTAMP            : 108
TRUE                 : 139
USE                  : 52
VARCHAR              : 104
VARYING              : 103
VOID                 : 101
WHEN                 : 75
XORB                 : 129
error                : 12 23

Nonterminals, with rules where they appear

arit                 : 114 114 115 115 116 116 117 117 118 118 119 119 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130
asignacion           : 15
case                 : 73 74
case_list            : 72 73
codigo               : 1
createDB_dosParam    : 32 33 34 35
createDB_insrt       : 7
createDB_unParam     : 28 29 30 31
declaracion          : 16
drop_database_instr  : 11
else                 : 77 79
empty                : 22 67 71
expresion            : 65 66 72 75 77 79 84 85 86 88 111 111 112 112 131 136 137 138
funcion              : 5
imprimir             : 17
inicio               : 0
instrucciones_funct_list : 13 55 56 56 57 58 58 59 60 60 61 62 62 75 76 77 78 79
instrucciones_funct_sent : 13 14
instrucciones_global_sent : 3 4
instrucciones_globales_list : 2 3
lista_imprimir       : 81 82
llamada_funcion      : 6 21
log                  : 110
parametro            : 68 69
parametros           : 55 56 57 58 59 60 61 62 68
params               : 63 64 65
rel                  : 113
sent_imprimir        : 82 83
sentencia_if         : 18
sentencia_switch     : 19
show_databases_instr : 8
show_tables_instr    : 9
string_type          : 36 37 38 39 40 42 44 46
tipo                 : 55 56 57 58 59 60 61 62 70 86 87 88
use_database_instr   : 10

Parsing method: LALR

state 0

    (0) S' -> . inicio
    (1) inicio -> . codigo
    (2) codigo -> . instrucciones_globales_list
    (3) instrucciones_globales_list -> . instrucciones_globales_list instrucciones_global_sent
    (4) instrucciones_globales_list -> . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . error
    (55) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (57) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (59) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (61) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (24) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (25) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (26) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (30) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (31) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (50) show_databases_instr -> . SHOW DATABASES PTCOMA
    (51) show_tables_instr -> . SHOW TABLES PTCOMA
    (52) use_database_instr -> . USE ID PTCOMA
    (48) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (49) drop_database_instr -> . DROP DATABASE ID PTCOMA

    error           shift and go to state 12
    CREATE          shift and go to state 13
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    SHOW            shift and go to state 16
    USE             shift and go to state 17
    DROP            shift and go to state 18

    inicio                         shift and go to state 1
    codigo                         shift and go to state 2
    instrucciones_globales_list    shift and go to state 3
    instrucciones_global_sent      shift and go to state 4
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11

state 1

    (0) S' -> inicio .



state 2

    (1) inicio -> codigo .

    $end            reduce using rule 1 (inicio -> codigo .)


state 3

    (2) codigo -> instrucciones_globales_list .
    (3) instrucciones_globales_list -> instrucciones_globales_list . instrucciones_global_sent
    (5) instrucciones_global_sent -> . funcion
    (6) instrucciones_global_sent -> . llamada_funcion
    (7) instrucciones_global_sent -> . createDB_insrt
    (8) instrucciones_global_sent -> . show_databases_instr
    (9) instrucciones_global_sent -> . show_tables_instr
    (10) instrucciones_global_sent -> . use_database_instr
    (11) instrucciones_global_sent -> . drop_database_instr
    (12) instrucciones_global_sent -> . error
    (55) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> . CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (57) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> . CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (59) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> . CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (61) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> . CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (24) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (25) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (26) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (29) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (30) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (31) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (33) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (50) show_databases_instr -> . SHOW DATABASES PTCOMA
    (51) show_tables_instr -> . SHOW TABLES PTCOMA
    (52) use_database_instr -> . USE ID PTCOMA
    (48) drop_database_instr -> . DROP DATABASE IF EXISTS ID PTCOMA
    (49) drop_database_instr -> . DROP DATABASE ID PTCOMA

    $end            reduce using rule 2 (codigo -> instrucciones_globales_list .)
    error           shift and go to state 12
    CREATE          shift and go to state 13
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    SHOW            shift and go to state 16
    USE             shift and go to state 17
    DROP            shift and go to state 18

    instrucciones_global_sent      shift and go to state 19
    funcion                        shift and go to state 5
    llamada_funcion                shift and go to state 6
    createDB_insrt                 shift and go to state 7
    show_databases_instr           shift and go to state 8
    show_tables_instr              shift and go to state 9
    use_database_instr             shift and go to state 10
    drop_database_instr            shift and go to state 11

state 4

    (4) instrucciones_globales_list -> instrucciones_global_sent .

    error           reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CREATE          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SELECT          reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    CALL            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    SHOW            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    USE             reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    DROP            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)
    $end            reduce using rule 4 (instrucciones_globales_list -> instrucciones_global_sent .)


state 5

    (5) instrucciones_global_sent -> funcion .

    error           reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CREATE          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SELECT          reduce using rule 5 (instrucciones_global_sent -> funcion .)
    CALL            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    SHOW            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    USE             reduce using rule 5 (instrucciones_global_sent -> funcion .)
    DROP            reduce using rule 5 (instrucciones_global_sent -> funcion .)
    $end            reduce using rule 5 (instrucciones_global_sent -> funcion .)


state 6

    (6) instrucciones_global_sent -> llamada_funcion .

    error           reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CREATE          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SELECT          reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    CALL            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    SHOW            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    USE             reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    DROP            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)
    $end            reduce using rule 6 (instrucciones_global_sent -> llamada_funcion .)


state 7

    (7) instrucciones_global_sent -> createDB_insrt .

    error           reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CREATE          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SELECT          reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    CALL            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    SHOW            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    USE             reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    DROP            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)
    $end            reduce using rule 7 (instrucciones_global_sent -> createDB_insrt .)


state 8

    (8) instrucciones_global_sent -> show_databases_instr .

    error           reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CREATE          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SELECT          reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    CALL            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    SHOW            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    USE             reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    DROP            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)
    $end            reduce using rule 8 (instrucciones_global_sent -> show_databases_instr .)


state 9

    (9) instrucciones_global_sent -> show_tables_instr .

    error           reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CREATE          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SELECT          reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    CALL            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    SHOW            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    USE             reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    DROP            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)
    $end            reduce using rule 9 (instrucciones_global_sent -> show_tables_instr .)


state 10

    (10) instrucciones_global_sent -> use_database_instr .

    error           reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CREATE          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SELECT          reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    CALL            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    SHOW            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    USE             reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    DROP            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)
    $end            reduce using rule 10 (instrucciones_global_sent -> use_database_instr .)


state 11

    (11) instrucciones_global_sent -> drop_database_instr .

    error           reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CREATE          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SELECT          reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    CALL            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    SHOW            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    USE             reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    DROP            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)
    $end            reduce using rule 11 (instrucciones_global_sent -> drop_database_instr .)


state 12

    (12) instrucciones_global_sent -> error .

    error           reduce using rule 12 (instrucciones_global_sent -> error .)
    CREATE          reduce using rule 12 (instrucciones_global_sent -> error .)
    SELECT          reduce using rule 12 (instrucciones_global_sent -> error .)
    CALL            reduce using rule 12 (instrucciones_global_sent -> error .)
    SHOW            reduce using rule 12 (instrucciones_global_sent -> error .)
    USE             reduce using rule 12 (instrucciones_global_sent -> error .)
    DROP            reduce using rule 12 (instrucciones_global_sent -> error .)
    $end            reduce using rule 12 (instrucciones_global_sent -> error .)


state 13

    (55) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (57) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE . OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (59) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (61) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE . OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (24) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (25) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (26) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (27) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (33) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    FUNCTION        shift and go to state 20
    OR              shift and go to state 21
    PROCEDURE       shift and go to state 22
    DATABASE        shift and go to state 23


state 14

    (63) llamada_funcion -> SELECT . ID PARA params PARC PTCOMA

    ID              shift and go to state 24


state 15

    (64) llamada_funcion -> CALL . ID PARA params PARC PTCOMA

    ID              shift and go to state 25


state 16

    (50) show_databases_instr -> SHOW . DATABASES PTCOMA
    (51) show_tables_instr -> SHOW . TABLES PTCOMA

    DATABASES       shift and go to state 26
    TABLES          shift and go to state 27


state 17

    (52) use_database_instr -> USE . ID PTCOMA

    ID              shift and go to state 28


state 18

    (48) drop_database_instr -> DROP . DATABASE IF EXISTS ID PTCOMA
    (49) drop_database_instr -> DROP . DATABASE ID PTCOMA

    DATABASE        shift and go to state 29


state 19

    (3) instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .

    error           reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CREATE          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SELECT          reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    CALL            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    SHOW            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    USE             reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    DROP            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)
    $end            reduce using rule 3 (instrucciones_globales_list -> instrucciones_globales_list instrucciones_global_sent .)


state 20

    (55) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 30


state 21

    (57) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR . REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (61) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR . REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (25) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (27) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 31


state 22

    (59) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 32


state 23

    (24) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (26) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (28) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 33
    IF              shift and go to state 34


state 24

    (63) llamada_funcion -> SELECT ID . PARA params PARC PTCOMA

    PARA            shift and go to state 35


state 25

    (64) llamada_funcion -> CALL ID . PARA params PARC PTCOMA

    PARA            shift and go to state 36


state 26

    (50) show_databases_instr -> SHOW DATABASES . PTCOMA

    PTCOMA          shift and go to state 37


state 27

    (51) show_tables_instr -> SHOW TABLES . PTCOMA

    PTCOMA          shift and go to state 38


state 28

    (52) use_database_instr -> USE ID . PTCOMA

    PTCOMA          shift and go to state 39


state 29

    (48) drop_database_instr -> DROP DATABASE . IF EXISTS ID PTCOMA
    (49) drop_database_instr -> DROP DATABASE . ID PTCOMA

    IF              shift and go to state 40
    ID              shift and go to state 41


state 30

    (55) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 42


state 31

    (57) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE . FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (61) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE . PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (25) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    FUNCTION        shift and go to state 43
    PROCEDURE       shift and go to state 44
    DATABASE        shift and go to state 45


state 32

    (59) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 46


state 33

    (24) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (28) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (32) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (44) createDB_unParam -> . OWNER IGUAL string_type
    (45) createDB_unParam -> . MODE IGUAL ENTERO
    (46) createDB_unParam -> . OWNER string_type
    (47) createDB_unParam -> . MODE ENTERO
    (36) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (37) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (38) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (41) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 47
    OWNER           shift and go to state 50
    MODE            shift and go to state 51

    createDB_unParam               shift and go to state 48
    createDB_dosParam              shift and go to state 49

state 34

    (26) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 52


state 35

    (63) llamada_funcion -> SELECT ID PARA . params PARC PTCOMA
    (65) params -> . params COMA expresion
    (66) params -> . expresion
    (67) params -> . empty
    (110) expresion -> . log
    (141) empty -> .
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    params                         shift and go to state 55
    expresion                      shift and go to state 56
    empty                          shift and go to state 57
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 36

    (64) llamada_funcion -> CALL ID PARA . params PARC PTCOMA
    (65) params -> . params COMA expresion
    (66) params -> . expresion
    (67) params -> . empty
    (110) expresion -> . log
    (141) empty -> .
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)
    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    params                         shift and go to state 69
    expresion                      shift and go to state 56
    empty                          shift and go to state 57
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 37

    (50) show_databases_instr -> SHOW DATABASES PTCOMA .

    error           reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CREATE          reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SELECT          reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    CALL            reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    SHOW            reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    USE             reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    DROP            reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)
    $end            reduce using rule 50 (show_databases_instr -> SHOW DATABASES PTCOMA .)


state 38

    (51) show_tables_instr -> SHOW TABLES PTCOMA .

    error           reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CREATE          reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SELECT          reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    CALL            reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    SHOW            reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    USE             reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    DROP            reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)
    $end            reduce using rule 51 (show_tables_instr -> SHOW TABLES PTCOMA .)


state 39

    (52) use_database_instr -> USE ID PTCOMA .

    error           reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    CREATE          reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    SELECT          reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    CALL            reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    SHOW            reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    USE             reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    DROP            reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)
    $end            reduce using rule 52 (use_database_instr -> USE ID PTCOMA .)


state 40

    (48) drop_database_instr -> DROP DATABASE IF . EXISTS ID PTCOMA

    EXISTS          shift and go to state 70


state 41

    (49) drop_database_instr -> DROP DATABASE ID . PTCOMA

    PTCOMA          shift and go to state 71


state 42

    (55) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> . parametros COMA parametro
    (69) parametros -> . parametro
    (70) parametro -> . ID tipo
    (71) parametro -> . empty
    (141) empty -> .

    ID              shift and go to state 72
    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)

    parametros                     shift and go to state 73
    parametro                      shift and go to state 74
    empty                          shift and go to state 75

state 43

    (57) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 76


state 44

    (61) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE . ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    ID              shift and go to state 77


state 45

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (27) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 78
    IF              shift and go to state 79


state 46

    (59) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> . parametros COMA parametro
    (69) parametros -> . parametro
    (70) parametro -> . ID tipo
    (71) parametro -> . empty
    (141) empty -> .

    ID              shift and go to state 72
    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)

    parametros                     shift and go to state 80
    parametro                      shift and go to state 74
    empty                          shift and go to state 75

state 47

    (24) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    error           reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CALL            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    USE             reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 24 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 48

    (28) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 81


state 49

    (32) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 82


state 50

    (44) createDB_unParam -> OWNER . IGUAL string_type
    (46) createDB_unParam -> OWNER . string_type
    (36) createDB_dosParam -> OWNER . string_type MODE ENTERO
    (38) createDB_dosParam -> OWNER . string_type MODE IGUAL ENTERO
    (39) createDB_dosParam -> OWNER . IGUAL string_type MODE ENTERO
    (42) createDB_dosParam -> OWNER . IGUAL string_type MODE IGUAL ENTERO
    (53) string_type -> . CADENA
    (54) string_type -> . ID

    IGUAL           shift and go to state 83
    CADENA          shift and go to state 85
    ID              shift and go to state 86

    string_type                    shift and go to state 84

state 51

    (45) createDB_unParam -> MODE . IGUAL ENTERO
    (47) createDB_unParam -> MODE . ENTERO
    (37) createDB_dosParam -> MODE . ENTERO OWNER string_type
    (40) createDB_dosParam -> MODE . ENTERO OWNER IGUAL string_type
    (41) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (43) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    IGUAL           shift and go to state 87
    ENTERO          shift and go to state 88


state 52

    (26) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (30) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 89


state 53

    (132) arit -> ID .

    MAYOR           reduce using rule 132 (arit -> ID .)
    MENOR           reduce using rule 132 (arit -> ID .)
    MAYORIGUAL      reduce using rule 132 (arit -> ID .)
    MENORIGUAL      reduce using rule 132 (arit -> ID .)
    IGUALIGUAL      reduce using rule 132 (arit -> ID .)
    NOTIGUAL        reduce using rule 132 (arit -> ID .)
    POR             reduce using rule 132 (arit -> ID .)
    DIV             reduce using rule 132 (arit -> ID .)
    MAS             reduce using rule 132 (arit -> ID .)
    MENOS           reduce using rule 132 (arit -> ID .)
    MOD             reduce using rule 132 (arit -> ID .)
    ANDB            reduce using rule 132 (arit -> ID .)
    SHIFTI          reduce using rule 132 (arit -> ID .)
    SHIFTD          reduce using rule 132 (arit -> ID .)
    XORB            reduce using rule 132 (arit -> ID .)
    ORB             reduce using rule 132 (arit -> ID .)
    AND             reduce using rule 132 (arit -> ID .)
    ORR             reduce using rule 132 (arit -> ID .)
    PARC            reduce using rule 132 (arit -> ID .)
    COMA            reduce using rule 132 (arit -> ID .)
    PTCOMA          reduce using rule 132 (arit -> ID .)
    THEN            reduce using rule 132 (arit -> ID .)
    WHEN            reduce using rule 132 (arit -> ID .)
    ELSE            reduce using rule 132 (arit -> ID .)


state 54

    (131) arit -> PARA . expresion PARC
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 90
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 55

    (63) llamada_funcion -> SELECT ID PARA params . PARC PTCOMA
    (65) params -> params . COMA expresion

    PARC            shift and go to state 91
    COMA            shift and go to state 92


state 56

    (66) params -> expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PARC            reduce using rule 66 (params -> expresion .)
    COMA            reduce using rule 66 (params -> expresion .)
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 57

    (67) params -> empty .

    PARC            reduce using rule 67 (params -> empty .)
    COMA            reduce using rule 67 (params -> empty .)


state 58

    (110) expresion -> log .

    AND             reduce using rule 110 (expresion -> log .)
    ORR             reduce using rule 110 (expresion -> log .)
    PARC            reduce using rule 110 (expresion -> log .)
    COMA            reduce using rule 110 (expresion -> log .)
    MAYOR           reduce using rule 110 (expresion -> log .)
    MENOR           reduce using rule 110 (expresion -> log .)
    MAYORIGUAL      reduce using rule 110 (expresion -> log .)
    MENORIGUAL      reduce using rule 110 (expresion -> log .)
    IGUALIGUAL      reduce using rule 110 (expresion -> log .)
    NOTIGUAL        reduce using rule 110 (expresion -> log .)
    POR             reduce using rule 110 (expresion -> log .)
    DIV             reduce using rule 110 (expresion -> log .)
    MAS             reduce using rule 110 (expresion -> log .)
    MENOS           reduce using rule 110 (expresion -> log .)
    MOD             reduce using rule 110 (expresion -> log .)
    ANDB            reduce using rule 110 (expresion -> log .)
    SHIFTI          reduce using rule 110 (expresion -> log .)
    SHIFTD          reduce using rule 110 (expresion -> log .)
    XORB            reduce using rule 110 (expresion -> log .)
    ORB             reduce using rule 110 (expresion -> log .)
    PTCOMA          reduce using rule 110 (expresion -> log .)
    THEN            reduce using rule 110 (expresion -> log .)
    WHEN            reduce using rule 110 (expresion -> log .)
    ELSE            reduce using rule 110 (expresion -> log .)


state 59

    (113) log -> rel .

    AND             reduce using rule 113 (log -> rel .)
    ORR             reduce using rule 113 (log -> rel .)
    PARC            reduce using rule 113 (log -> rel .)
    COMA            reduce using rule 113 (log -> rel .)
    MAYOR           reduce using rule 113 (log -> rel .)
    MENOR           reduce using rule 113 (log -> rel .)
    MAYORIGUAL      reduce using rule 113 (log -> rel .)
    MENORIGUAL      reduce using rule 113 (log -> rel .)
    IGUALIGUAL      reduce using rule 113 (log -> rel .)
    NOTIGUAL        reduce using rule 113 (log -> rel .)
    POR             reduce using rule 113 (log -> rel .)
    DIV             reduce using rule 113 (log -> rel .)
    MAS             reduce using rule 113 (log -> rel .)
    MENOS           reduce using rule 113 (log -> rel .)
    MOD             reduce using rule 113 (log -> rel .)
    ANDB            reduce using rule 113 (log -> rel .)
    SHIFTI          reduce using rule 113 (log -> rel .)
    SHIFTD          reduce using rule 113 (log -> rel .)
    XORB            reduce using rule 113 (log -> rel .)
    ORB             reduce using rule 113 (log -> rel .)
    PTCOMA          reduce using rule 113 (log -> rel .)
    THEN            reduce using rule 113 (log -> rel .)
    WHEN            reduce using rule 113 (log -> rel .)
    ELSE            reduce using rule 113 (log -> rel .)


state 60

    (114) rel -> arit . MAYOR arit
    (115) rel -> arit . MENOR arit
    (116) rel -> arit . MAYORIGUAL arit
    (117) rel -> arit . MENORIGUAL arit
    (118) rel -> arit . IGUALIGUAL arit
    (119) rel -> arit . NOTIGUAL arit
    (120) rel -> arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for IGUALIGUAL resolved as shift
  ! shift/reduce conflict for NOTIGUAL resolved as shift
  ! shift/reduce conflict for POR resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for ANDB resolved as shift
  ! shift/reduce conflict for SHIFTI resolved as shift
  ! shift/reduce conflict for SHIFTD resolved as shift
  ! shift/reduce conflict for XORB resolved as shift
  ! shift/reduce conflict for ORB resolved as shift
    MAYOR           shift and go to state 95
    MENOR           shift and go to state 96
    MAYORIGUAL      shift and go to state 97
    MENORIGUAL      shift and go to state 98
    IGUALIGUAL      shift and go to state 99
    NOTIGUAL        shift and go to state 100
    AND             reduce using rule 120 (rel -> arit .)
    ORR             reduce using rule 120 (rel -> arit .)
    PARC            reduce using rule 120 (rel -> arit .)
    COMA            reduce using rule 120 (rel -> arit .)
    PTCOMA          reduce using rule 120 (rel -> arit .)
    THEN            reduce using rule 120 (rel -> arit .)
    WHEN            reduce using rule 120 (rel -> arit .)
    ELSE            reduce using rule 120 (rel -> arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    ANDB            shift and go to state 106
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108
    XORB            shift and go to state 109
    ORB             shift and go to state 110

  ! MAYOR           [ reduce using rule 120 (rel -> arit .) ]
  ! MENOR           [ reduce using rule 120 (rel -> arit .) ]
  ! MAYORIGUAL      [ reduce using rule 120 (rel -> arit .) ]
  ! MENORIGUAL      [ reduce using rule 120 (rel -> arit .) ]
  ! IGUALIGUAL      [ reduce using rule 120 (rel -> arit .) ]
  ! NOTIGUAL        [ reduce using rule 120 (rel -> arit .) ]
  ! POR             [ reduce using rule 120 (rel -> arit .) ]
  ! DIV             [ reduce using rule 120 (rel -> arit .) ]
  ! MAS             [ reduce using rule 120 (rel -> arit .) ]
  ! MENOS           [ reduce using rule 120 (rel -> arit .) ]
  ! MOD             [ reduce using rule 120 (rel -> arit .) ]
  ! ANDB            [ reduce using rule 120 (rel -> arit .) ]
  ! SHIFTI          [ reduce using rule 120 (rel -> arit .) ]
  ! SHIFTD          [ reduce using rule 120 (rel -> arit .) ]
  ! XORB            [ reduce using rule 120 (rel -> arit .) ]
  ! ORB             [ reduce using rule 120 (rel -> arit .) ]


state 61

    (136) arit -> MENOS . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 111
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 62

    (133) arit -> CADENA .

    MAYOR           reduce using rule 133 (arit -> CADENA .)
    MENOR           reduce using rule 133 (arit -> CADENA .)
    MAYORIGUAL      reduce using rule 133 (arit -> CADENA .)
    MENORIGUAL      reduce using rule 133 (arit -> CADENA .)
    IGUALIGUAL      reduce using rule 133 (arit -> CADENA .)
    NOTIGUAL        reduce using rule 133 (arit -> CADENA .)
    POR             reduce using rule 133 (arit -> CADENA .)
    DIV             reduce using rule 133 (arit -> CADENA .)
    MAS             reduce using rule 133 (arit -> CADENA .)
    MENOS           reduce using rule 133 (arit -> CADENA .)
    MOD             reduce using rule 133 (arit -> CADENA .)
    ANDB            reduce using rule 133 (arit -> CADENA .)
    SHIFTI          reduce using rule 133 (arit -> CADENA .)
    SHIFTD          reduce using rule 133 (arit -> CADENA .)
    XORB            reduce using rule 133 (arit -> CADENA .)
    ORB             reduce using rule 133 (arit -> CADENA .)
    AND             reduce using rule 133 (arit -> CADENA .)
    ORR             reduce using rule 133 (arit -> CADENA .)
    PARC            reduce using rule 133 (arit -> CADENA .)
    COMA            reduce using rule 133 (arit -> CADENA .)
    PTCOMA          reduce using rule 133 (arit -> CADENA .)
    THEN            reduce using rule 133 (arit -> CADENA .)
    WHEN            reduce using rule 133 (arit -> CADENA .)
    ELSE            reduce using rule 133 (arit -> CADENA .)


state 63

    (134) arit -> ENTERO .

    MAYOR           reduce using rule 134 (arit -> ENTERO .)
    MENOR           reduce using rule 134 (arit -> ENTERO .)
    MAYORIGUAL      reduce using rule 134 (arit -> ENTERO .)
    MENORIGUAL      reduce using rule 134 (arit -> ENTERO .)
    IGUALIGUAL      reduce using rule 134 (arit -> ENTERO .)
    NOTIGUAL        reduce using rule 134 (arit -> ENTERO .)
    POR             reduce using rule 134 (arit -> ENTERO .)
    DIV             reduce using rule 134 (arit -> ENTERO .)
    MAS             reduce using rule 134 (arit -> ENTERO .)
    MENOS           reduce using rule 134 (arit -> ENTERO .)
    MOD             reduce using rule 134 (arit -> ENTERO .)
    ANDB            reduce using rule 134 (arit -> ENTERO .)
    SHIFTI          reduce using rule 134 (arit -> ENTERO .)
    SHIFTD          reduce using rule 134 (arit -> ENTERO .)
    XORB            reduce using rule 134 (arit -> ENTERO .)
    ORB             reduce using rule 134 (arit -> ENTERO .)
    AND             reduce using rule 134 (arit -> ENTERO .)
    ORR             reduce using rule 134 (arit -> ENTERO .)
    PARC            reduce using rule 134 (arit -> ENTERO .)
    COMA            reduce using rule 134 (arit -> ENTERO .)
    PTCOMA          reduce using rule 134 (arit -> ENTERO .)
    THEN            reduce using rule 134 (arit -> ENTERO .)
    WHEN            reduce using rule 134 (arit -> ENTERO .)
    ELSE            reduce using rule 134 (arit -> ENTERO .)


state 64

    (135) arit -> FLOTANTE .

    MAYOR           reduce using rule 135 (arit -> FLOTANTE .)
    MENOR           reduce using rule 135 (arit -> FLOTANTE .)
    MAYORIGUAL      reduce using rule 135 (arit -> FLOTANTE .)
    MENORIGUAL      reduce using rule 135 (arit -> FLOTANTE .)
    IGUALIGUAL      reduce using rule 135 (arit -> FLOTANTE .)
    NOTIGUAL        reduce using rule 135 (arit -> FLOTANTE .)
    POR             reduce using rule 135 (arit -> FLOTANTE .)
    DIV             reduce using rule 135 (arit -> FLOTANTE .)
    MAS             reduce using rule 135 (arit -> FLOTANTE .)
    MENOS           reduce using rule 135 (arit -> FLOTANTE .)
    MOD             reduce using rule 135 (arit -> FLOTANTE .)
    ANDB            reduce using rule 135 (arit -> FLOTANTE .)
    SHIFTI          reduce using rule 135 (arit -> FLOTANTE .)
    SHIFTD          reduce using rule 135 (arit -> FLOTANTE .)
    XORB            reduce using rule 135 (arit -> FLOTANTE .)
    ORB             reduce using rule 135 (arit -> FLOTANTE .)
    AND             reduce using rule 135 (arit -> FLOTANTE .)
    ORR             reduce using rule 135 (arit -> FLOTANTE .)
    PARC            reduce using rule 135 (arit -> FLOTANTE .)
    COMA            reduce using rule 135 (arit -> FLOTANTE .)
    PTCOMA          reduce using rule 135 (arit -> FLOTANTE .)
    THEN            reduce using rule 135 (arit -> FLOTANTE .)
    WHEN            reduce using rule 135 (arit -> FLOTANTE .)
    ELSE            reduce using rule 135 (arit -> FLOTANTE .)


state 65

    (137) arit -> NOTB . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 112
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 66

    (138) arit -> NOTT . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 113
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 67

    (139) arit -> TRUE .

    MAYOR           reduce using rule 139 (arit -> TRUE .)
    MENOR           reduce using rule 139 (arit -> TRUE .)
    MAYORIGUAL      reduce using rule 139 (arit -> TRUE .)
    MENORIGUAL      reduce using rule 139 (arit -> TRUE .)
    IGUALIGUAL      reduce using rule 139 (arit -> TRUE .)
    NOTIGUAL        reduce using rule 139 (arit -> TRUE .)
    POR             reduce using rule 139 (arit -> TRUE .)
    DIV             reduce using rule 139 (arit -> TRUE .)
    MAS             reduce using rule 139 (arit -> TRUE .)
    MENOS           reduce using rule 139 (arit -> TRUE .)
    MOD             reduce using rule 139 (arit -> TRUE .)
    ANDB            reduce using rule 139 (arit -> TRUE .)
    SHIFTI          reduce using rule 139 (arit -> TRUE .)
    SHIFTD          reduce using rule 139 (arit -> TRUE .)
    XORB            reduce using rule 139 (arit -> TRUE .)
    ORB             reduce using rule 139 (arit -> TRUE .)
    AND             reduce using rule 139 (arit -> TRUE .)
    ORR             reduce using rule 139 (arit -> TRUE .)
    PARC            reduce using rule 139 (arit -> TRUE .)
    COMA            reduce using rule 139 (arit -> TRUE .)
    PTCOMA          reduce using rule 139 (arit -> TRUE .)
    THEN            reduce using rule 139 (arit -> TRUE .)
    WHEN            reduce using rule 139 (arit -> TRUE .)
    ELSE            reduce using rule 139 (arit -> TRUE .)


state 68

    (140) arit -> FALSE .

    MAYOR           reduce using rule 140 (arit -> FALSE .)
    MENOR           reduce using rule 140 (arit -> FALSE .)
    MAYORIGUAL      reduce using rule 140 (arit -> FALSE .)
    MENORIGUAL      reduce using rule 140 (arit -> FALSE .)
    IGUALIGUAL      reduce using rule 140 (arit -> FALSE .)
    NOTIGUAL        reduce using rule 140 (arit -> FALSE .)
    POR             reduce using rule 140 (arit -> FALSE .)
    DIV             reduce using rule 140 (arit -> FALSE .)
    MAS             reduce using rule 140 (arit -> FALSE .)
    MENOS           reduce using rule 140 (arit -> FALSE .)
    MOD             reduce using rule 140 (arit -> FALSE .)
    ANDB            reduce using rule 140 (arit -> FALSE .)
    SHIFTI          reduce using rule 140 (arit -> FALSE .)
    SHIFTD          reduce using rule 140 (arit -> FALSE .)
    XORB            reduce using rule 140 (arit -> FALSE .)
    ORB             reduce using rule 140 (arit -> FALSE .)
    AND             reduce using rule 140 (arit -> FALSE .)
    ORR             reduce using rule 140 (arit -> FALSE .)
    PARC            reduce using rule 140 (arit -> FALSE .)
    COMA            reduce using rule 140 (arit -> FALSE .)
    PTCOMA          reduce using rule 140 (arit -> FALSE .)
    THEN            reduce using rule 140 (arit -> FALSE .)
    WHEN            reduce using rule 140 (arit -> FALSE .)
    ELSE            reduce using rule 140 (arit -> FALSE .)


state 69

    (64) llamada_funcion -> CALL ID PARA params . PARC PTCOMA
    (65) params -> params . COMA expresion

    PARC            shift and go to state 114
    COMA            shift and go to state 92


state 70

    (48) drop_database_instr -> DROP DATABASE IF EXISTS . ID PTCOMA

    ID              shift and go to state 115


state 71

    (49) drop_database_instr -> DROP DATABASE ID PTCOMA .

    error           reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CREATE          reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SELECT          reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    CALL            reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    SHOW            reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    USE             reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    DROP            reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)
    $end            reduce using rule 49 (drop_database_instr -> DROP DATABASE ID PTCOMA .)


state 72

    (70) parametro -> ID . tipo
    (89) tipo -> . INTEGER
    (90) tipo -> . SMALLINT
    (91) tipo -> . BIGINT
    (92) tipo -> . DECIMAL
    (93) tipo -> . NUMERIC
    (94) tipo -> . REAL
    (95) tipo -> . CHAR
    (96) tipo -> . DOUBLE
    (97) tipo -> . PRECISION
    (98) tipo -> . MONEY
    (99) tipo -> . FLOAT
    (100) tipo -> . BOOLEAN
    (101) tipo -> . VOID
    (102) tipo -> . CHAR PARA ENTERO PARC
    (103) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (104) tipo -> . VARCHAR PARA ENTERO PARC
    (105) tipo -> . CHARACTER PARA ENTERO PARC
    (106) tipo -> . TEXT
    (107) tipo -> . TIME
    (108) tipo -> . TIMESTAMP
    (109) tipo -> . DATE

    INTEGER         shift and go to state 117
    SMALLINT        shift and go to state 118
    BIGINT          shift and go to state 119
    DECIMAL         shift and go to state 120
    NUMERIC         shift and go to state 121
    REAL            shift and go to state 122
    CHAR            shift and go to state 123
    DOUBLE          shift and go to state 124
    PRECISION       shift and go to state 125
    MONEY           shift and go to state 126
    FLOAT           shift and go to state 127
    BOOLEAN         shift and go to state 128
    VOID            shift and go to state 129
    CHARACTER       shift and go to state 130
    VARCHAR         shift and go to state 131
    TEXT            shift and go to state 132
    TIME            shift and go to state 133
    TIMESTAMP       shift and go to state 134
    DATE            shift and go to state 135

    tipo                           shift and go to state 116

state 73

    (55) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> parametros . COMA parametro

    PARC            shift and go to state 136
    COMA            shift and go to state 137


state 74

    (69) parametros -> parametro .

    PARC            reduce using rule 69 (parametros -> parametro .)
    COMA            reduce using rule 69 (parametros -> parametro .)


state 75

    (71) parametro -> empty .

    PARC            reduce using rule 71 (parametro -> empty .)
    COMA            reduce using rule 71 (parametro -> empty .)


state 76

    (57) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 138


state 77

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID . PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PARA            shift and go to state 139


state 78

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (29) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (44) createDB_unParam -> . OWNER IGUAL string_type
    (45) createDB_unParam -> . MODE IGUAL ENTERO
    (46) createDB_unParam -> . OWNER string_type
    (47) createDB_unParam -> . MODE ENTERO
    (36) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (37) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (38) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (41) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 140
    OWNER           shift and go to state 50
    MODE            shift and go to state 51

    createDB_unParam               shift and go to state 141
    createDB_dosParam              shift and go to state 142

state 79

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 143


state 80

    (59) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> parametros . COMA parametro

    PARC            shift and go to state 144
    COMA            shift and go to state 137


state 81

    (28) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 82

    (32) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 32 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 83

    (44) createDB_unParam -> OWNER IGUAL . string_type
    (39) createDB_dosParam -> OWNER IGUAL . string_type MODE ENTERO
    (42) createDB_dosParam -> OWNER IGUAL . string_type MODE IGUAL ENTERO
    (53) string_type -> . CADENA
    (54) string_type -> . ID

    CADENA          shift and go to state 85
    ID              shift and go to state 86

    string_type                    shift and go to state 145

state 84

    (46) createDB_unParam -> OWNER string_type .
    (36) createDB_dosParam -> OWNER string_type . MODE ENTERO
    (38) createDB_dosParam -> OWNER string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 46 (createDB_unParam -> OWNER string_type .)
    MODE            shift and go to state 146


state 85

    (53) string_type -> CADENA .

    MODE            reduce using rule 53 (string_type -> CADENA .)
    PTCOMA          reduce using rule 53 (string_type -> CADENA .)


state 86

    (54) string_type -> ID .

    MODE            reduce using rule 54 (string_type -> ID .)
    PTCOMA          reduce using rule 54 (string_type -> ID .)


state 87

    (45) createDB_unParam -> MODE IGUAL . ENTERO
    (41) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (43) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 147


state 88

    (47) createDB_unParam -> MODE ENTERO .
    (37) createDB_dosParam -> MODE ENTERO . OWNER string_type
    (40) createDB_dosParam -> MODE ENTERO . OWNER IGUAL string_type

    PTCOMA          reduce using rule 47 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 148


state 89

    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 149


state 90

    (131) arit -> PARA expresion . PARC
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PARC            shift and go to state 150
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 91

    (63) llamada_funcion -> SELECT ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 151


state 92

    (65) params -> params COMA . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 152
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 93

    (111) log -> expresion AND . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 153
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 94

    (112) log -> expresion ORR . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 154
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 95

    (114) rel -> arit MAYOR . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 155

state 96

    (115) rel -> arit MENOR . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 156

state 97

    (116) rel -> arit MAYORIGUAL . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 157

state 98

    (117) rel -> arit MENORIGUAL . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 158

state 99

    (118) rel -> arit IGUALIGUAL . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 159

state 100

    (119) rel -> arit NOTIGUAL . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 160

state 101

    (121) arit -> arit POR . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 161

state 102

    (122) arit -> arit DIV . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 162

state 103

    (123) arit -> arit MAS . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 163

state 104

    (124) arit -> arit MENOS . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 164

state 105

    (125) arit -> arit MOD . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 165

state 106

    (126) arit -> arit ANDB . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 166

state 107

    (127) arit -> arit SHIFTI . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 167

state 108

    (128) arit -> arit SHIFTD . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 168

state 109

    (129) arit -> arit XORB . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 169

state 110

    (130) arit -> arit ORB . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    arit                           shift and go to state 170

state 111

    (136) arit -> MENOS expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    MAYOR           reduce using rule 136 (arit -> MENOS expresion .)
    MENOR           reduce using rule 136 (arit -> MENOS expresion .)
    MAYORIGUAL      reduce using rule 136 (arit -> MENOS expresion .)
    MENORIGUAL      reduce using rule 136 (arit -> MENOS expresion .)
    IGUALIGUAL      reduce using rule 136 (arit -> MENOS expresion .)
    NOTIGUAL        reduce using rule 136 (arit -> MENOS expresion .)
    POR             reduce using rule 136 (arit -> MENOS expresion .)
    DIV             reduce using rule 136 (arit -> MENOS expresion .)
    MAS             reduce using rule 136 (arit -> MENOS expresion .)
    MENOS           reduce using rule 136 (arit -> MENOS expresion .)
    MOD             reduce using rule 136 (arit -> MENOS expresion .)
    ANDB            reduce using rule 136 (arit -> MENOS expresion .)
    SHIFTI          reduce using rule 136 (arit -> MENOS expresion .)
    SHIFTD          reduce using rule 136 (arit -> MENOS expresion .)
    XORB            reduce using rule 136 (arit -> MENOS expresion .)
    ORB             reduce using rule 136 (arit -> MENOS expresion .)
    AND             reduce using rule 136 (arit -> MENOS expresion .)
    ORR             reduce using rule 136 (arit -> MENOS expresion .)
    PARC            reduce using rule 136 (arit -> MENOS expresion .)
    COMA            reduce using rule 136 (arit -> MENOS expresion .)
    PTCOMA          reduce using rule 136 (arit -> MENOS expresion .)
    THEN            reduce using rule 136 (arit -> MENOS expresion .)
    WHEN            reduce using rule 136 (arit -> MENOS expresion .)
    ELSE            reduce using rule 136 (arit -> MENOS expresion .)

  ! AND             [ shift and go to state 93 ]
  ! ORR             [ shift and go to state 94 ]


state 112

    (137) arit -> NOTB expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    MAYOR           reduce using rule 137 (arit -> NOTB expresion .)
    MENOR           reduce using rule 137 (arit -> NOTB expresion .)
    MAYORIGUAL      reduce using rule 137 (arit -> NOTB expresion .)
    MENORIGUAL      reduce using rule 137 (arit -> NOTB expresion .)
    IGUALIGUAL      reduce using rule 137 (arit -> NOTB expresion .)
    NOTIGUAL        reduce using rule 137 (arit -> NOTB expresion .)
    POR             reduce using rule 137 (arit -> NOTB expresion .)
    DIV             reduce using rule 137 (arit -> NOTB expresion .)
    MAS             reduce using rule 137 (arit -> NOTB expresion .)
    MENOS           reduce using rule 137 (arit -> NOTB expresion .)
    MOD             reduce using rule 137 (arit -> NOTB expresion .)
    ANDB            reduce using rule 137 (arit -> NOTB expresion .)
    SHIFTI          reduce using rule 137 (arit -> NOTB expresion .)
    SHIFTD          reduce using rule 137 (arit -> NOTB expresion .)
    XORB            reduce using rule 137 (arit -> NOTB expresion .)
    ORB             reduce using rule 137 (arit -> NOTB expresion .)
    AND             reduce using rule 137 (arit -> NOTB expresion .)
    ORR             reduce using rule 137 (arit -> NOTB expresion .)
    PARC            reduce using rule 137 (arit -> NOTB expresion .)
    COMA            reduce using rule 137 (arit -> NOTB expresion .)
    PTCOMA          reduce using rule 137 (arit -> NOTB expresion .)
    THEN            reduce using rule 137 (arit -> NOTB expresion .)
    WHEN            reduce using rule 137 (arit -> NOTB expresion .)
    ELSE            reduce using rule 137 (arit -> NOTB expresion .)

  ! AND             [ shift and go to state 93 ]
  ! ORR             [ shift and go to state 94 ]


state 113

    (138) arit -> NOTT expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    MAYOR           reduce using rule 138 (arit -> NOTT expresion .)
    MENOR           reduce using rule 138 (arit -> NOTT expresion .)
    MAYORIGUAL      reduce using rule 138 (arit -> NOTT expresion .)
    MENORIGUAL      reduce using rule 138 (arit -> NOTT expresion .)
    IGUALIGUAL      reduce using rule 138 (arit -> NOTT expresion .)
    NOTIGUAL        reduce using rule 138 (arit -> NOTT expresion .)
    POR             reduce using rule 138 (arit -> NOTT expresion .)
    DIV             reduce using rule 138 (arit -> NOTT expresion .)
    MAS             reduce using rule 138 (arit -> NOTT expresion .)
    MENOS           reduce using rule 138 (arit -> NOTT expresion .)
    MOD             reduce using rule 138 (arit -> NOTT expresion .)
    ANDB            reduce using rule 138 (arit -> NOTT expresion .)
    SHIFTI          reduce using rule 138 (arit -> NOTT expresion .)
    SHIFTD          reduce using rule 138 (arit -> NOTT expresion .)
    XORB            reduce using rule 138 (arit -> NOTT expresion .)
    ORB             reduce using rule 138 (arit -> NOTT expresion .)
    AND             reduce using rule 138 (arit -> NOTT expresion .)
    ORR             reduce using rule 138 (arit -> NOTT expresion .)
    PARC            reduce using rule 138 (arit -> NOTT expresion .)
    COMA            reduce using rule 138 (arit -> NOTT expresion .)
    PTCOMA          reduce using rule 138 (arit -> NOTT expresion .)
    THEN            reduce using rule 138 (arit -> NOTT expresion .)
    WHEN            reduce using rule 138 (arit -> NOTT expresion .)
    ELSE            reduce using rule 138 (arit -> NOTT expresion .)

  ! AND             [ shift and go to state 93 ]
  ! ORR             [ shift and go to state 94 ]


state 114

    (64) llamada_funcion -> CALL ID PARA params PARC . PTCOMA

    PTCOMA          shift and go to state 171


state 115

    (48) drop_database_instr -> DROP DATABASE IF EXISTS ID . PTCOMA

    PTCOMA          shift and go to state 172


state 116

    (70) parametro -> ID tipo .

    PARC            reduce using rule 70 (parametro -> ID tipo .)
    COMA            reduce using rule 70 (parametro -> ID tipo .)


state 117

    (89) tipo -> INTEGER .

    PARC            reduce using rule 89 (tipo -> INTEGER .)
    COMA            reduce using rule 89 (tipo -> INTEGER .)
    AS              reduce using rule 89 (tipo -> INTEGER .)
    DOSPUNTOS       reduce using rule 89 (tipo -> INTEGER .)
    PTCOMA          reduce using rule 89 (tipo -> INTEGER .)
    DEFAULT         reduce using rule 89 (tipo -> INTEGER .)


state 118

    (90) tipo -> SMALLINT .

    PARC            reduce using rule 90 (tipo -> SMALLINT .)
    COMA            reduce using rule 90 (tipo -> SMALLINT .)
    AS              reduce using rule 90 (tipo -> SMALLINT .)
    DOSPUNTOS       reduce using rule 90 (tipo -> SMALLINT .)
    PTCOMA          reduce using rule 90 (tipo -> SMALLINT .)
    DEFAULT         reduce using rule 90 (tipo -> SMALLINT .)


state 119

    (91) tipo -> BIGINT .

    PARC            reduce using rule 91 (tipo -> BIGINT .)
    COMA            reduce using rule 91 (tipo -> BIGINT .)
    AS              reduce using rule 91 (tipo -> BIGINT .)
    DOSPUNTOS       reduce using rule 91 (tipo -> BIGINT .)
    PTCOMA          reduce using rule 91 (tipo -> BIGINT .)
    DEFAULT         reduce using rule 91 (tipo -> BIGINT .)


state 120

    (92) tipo -> DECIMAL .

    PARC            reduce using rule 92 (tipo -> DECIMAL .)
    COMA            reduce using rule 92 (tipo -> DECIMAL .)
    AS              reduce using rule 92 (tipo -> DECIMAL .)
    DOSPUNTOS       reduce using rule 92 (tipo -> DECIMAL .)
    PTCOMA          reduce using rule 92 (tipo -> DECIMAL .)
    DEFAULT         reduce using rule 92 (tipo -> DECIMAL .)


state 121

    (93) tipo -> NUMERIC .

    PARC            reduce using rule 93 (tipo -> NUMERIC .)
    COMA            reduce using rule 93 (tipo -> NUMERIC .)
    AS              reduce using rule 93 (tipo -> NUMERIC .)
    DOSPUNTOS       reduce using rule 93 (tipo -> NUMERIC .)
    PTCOMA          reduce using rule 93 (tipo -> NUMERIC .)
    DEFAULT         reduce using rule 93 (tipo -> NUMERIC .)


state 122

    (94) tipo -> REAL .

    PARC            reduce using rule 94 (tipo -> REAL .)
    COMA            reduce using rule 94 (tipo -> REAL .)
    AS              reduce using rule 94 (tipo -> REAL .)
    DOSPUNTOS       reduce using rule 94 (tipo -> REAL .)
    PTCOMA          reduce using rule 94 (tipo -> REAL .)
    DEFAULT         reduce using rule 94 (tipo -> REAL .)


state 123

    (95) tipo -> CHAR .
    (102) tipo -> CHAR . PARA ENTERO PARC

    PARC            reduce using rule 95 (tipo -> CHAR .)
    COMA            reduce using rule 95 (tipo -> CHAR .)
    AS              reduce using rule 95 (tipo -> CHAR .)
    DOSPUNTOS       reduce using rule 95 (tipo -> CHAR .)
    PTCOMA          reduce using rule 95 (tipo -> CHAR .)
    DEFAULT         reduce using rule 95 (tipo -> CHAR .)
    PARA            shift and go to state 173


state 124

    (96) tipo -> DOUBLE .

    PARC            reduce using rule 96 (tipo -> DOUBLE .)
    COMA            reduce using rule 96 (tipo -> DOUBLE .)
    AS              reduce using rule 96 (tipo -> DOUBLE .)
    DOSPUNTOS       reduce using rule 96 (tipo -> DOUBLE .)
    PTCOMA          reduce using rule 96 (tipo -> DOUBLE .)
    DEFAULT         reduce using rule 96 (tipo -> DOUBLE .)


state 125

    (97) tipo -> PRECISION .

    PARC            reduce using rule 97 (tipo -> PRECISION .)
    COMA            reduce using rule 97 (tipo -> PRECISION .)
    AS              reduce using rule 97 (tipo -> PRECISION .)
    DOSPUNTOS       reduce using rule 97 (tipo -> PRECISION .)
    PTCOMA          reduce using rule 97 (tipo -> PRECISION .)
    DEFAULT         reduce using rule 97 (tipo -> PRECISION .)


state 126

    (98) tipo -> MONEY .

    PARC            reduce using rule 98 (tipo -> MONEY .)
    COMA            reduce using rule 98 (tipo -> MONEY .)
    AS              reduce using rule 98 (tipo -> MONEY .)
    DOSPUNTOS       reduce using rule 98 (tipo -> MONEY .)
    PTCOMA          reduce using rule 98 (tipo -> MONEY .)
    DEFAULT         reduce using rule 98 (tipo -> MONEY .)


state 127

    (99) tipo -> FLOAT .

    PARC            reduce using rule 99 (tipo -> FLOAT .)
    COMA            reduce using rule 99 (tipo -> FLOAT .)
    AS              reduce using rule 99 (tipo -> FLOAT .)
    DOSPUNTOS       reduce using rule 99 (tipo -> FLOAT .)
    PTCOMA          reduce using rule 99 (tipo -> FLOAT .)
    DEFAULT         reduce using rule 99 (tipo -> FLOAT .)


state 128

    (100) tipo -> BOOLEAN .

    PARC            reduce using rule 100 (tipo -> BOOLEAN .)
    COMA            reduce using rule 100 (tipo -> BOOLEAN .)
    AS              reduce using rule 100 (tipo -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 100 (tipo -> BOOLEAN .)
    PTCOMA          reduce using rule 100 (tipo -> BOOLEAN .)
    DEFAULT         reduce using rule 100 (tipo -> BOOLEAN .)


state 129

    (101) tipo -> VOID .

    PARC            reduce using rule 101 (tipo -> VOID .)
    COMA            reduce using rule 101 (tipo -> VOID .)
    AS              reduce using rule 101 (tipo -> VOID .)
    DOSPUNTOS       reduce using rule 101 (tipo -> VOID .)
    PTCOMA          reduce using rule 101 (tipo -> VOID .)
    DEFAULT         reduce using rule 101 (tipo -> VOID .)


state 130

    (103) tipo -> CHARACTER . VARYING PARA ENTERO PARC
    (105) tipo -> CHARACTER . PARA ENTERO PARC

    VARYING         shift and go to state 174
    PARA            shift and go to state 175


state 131

    (104) tipo -> VARCHAR . PARA ENTERO PARC

    PARA            shift and go to state 176


state 132

    (106) tipo -> TEXT .

    PARC            reduce using rule 106 (tipo -> TEXT .)
    COMA            reduce using rule 106 (tipo -> TEXT .)
    AS              reduce using rule 106 (tipo -> TEXT .)
    DOSPUNTOS       reduce using rule 106 (tipo -> TEXT .)
    PTCOMA          reduce using rule 106 (tipo -> TEXT .)
    DEFAULT         reduce using rule 106 (tipo -> TEXT .)


state 133

    (107) tipo -> TIME .

    PARC            reduce using rule 107 (tipo -> TIME .)
    COMA            reduce using rule 107 (tipo -> TIME .)
    AS              reduce using rule 107 (tipo -> TIME .)
    DOSPUNTOS       reduce using rule 107 (tipo -> TIME .)
    PTCOMA          reduce using rule 107 (tipo -> TIME .)
    DEFAULT         reduce using rule 107 (tipo -> TIME .)


state 134

    (108) tipo -> TIMESTAMP .

    PARC            reduce using rule 108 (tipo -> TIMESTAMP .)
    COMA            reduce using rule 108 (tipo -> TIMESTAMP .)
    AS              reduce using rule 108 (tipo -> TIMESTAMP .)
    DOSPUNTOS       reduce using rule 108 (tipo -> TIMESTAMP .)
    PTCOMA          reduce using rule 108 (tipo -> TIMESTAMP .)
    DEFAULT         reduce using rule 108 (tipo -> TIMESTAMP .)


state 135

    (109) tipo -> DATE .

    PARC            reduce using rule 109 (tipo -> DATE .)
    COMA            reduce using rule 109 (tipo -> DATE .)
    AS              reduce using rule 109 (tipo -> DATE .)
    DOSPUNTOS       reduce using rule 109 (tipo -> DATE .)
    PTCOMA          reduce using rule 109 (tipo -> DATE .)
    DEFAULT         reduce using rule 109 (tipo -> DATE .)


state 136

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 177


state 137

    (68) parametros -> parametros COMA . parametro
    (70) parametro -> . ID tipo
    (71) parametro -> . empty
    (141) empty -> .

    ID              shift and go to state 72
    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)

    parametro                      shift and go to state 178
    empty                          shift and go to state 75

state 138

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> . parametros COMA parametro
    (69) parametros -> . parametro
    (70) parametro -> . ID tipo
    (71) parametro -> . empty
    (141) empty -> .

    ID              shift and go to state 72
    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)

    parametros                     shift and go to state 179
    parametro                      shift and go to state 74
    empty                          shift and go to state 75

state 139

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA . parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> . parametros COMA parametro
    (69) parametros -> . parametro
    (70) parametro -> . ID tipo
    (71) parametro -> . empty
    (141) empty -> .

    ID              shift and go to state 72
    PARC            reduce using rule 141 (empty -> .)
    COMA            reduce using rule 141 (empty -> .)

    parametros                     shift and go to state 180
    parametro                      shift and go to state 74
    empty                          shift and go to state 75

state 140

    (25) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    error           reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CALL            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SHOW            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    USE             reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 25 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 141

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 181


state 142

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 182


state 143

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 183


state 144

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 184


state 145

    (44) createDB_unParam -> OWNER IGUAL string_type .
    (39) createDB_dosParam -> OWNER IGUAL string_type . MODE ENTERO
    (42) createDB_dosParam -> OWNER IGUAL string_type . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 44 (createDB_unParam -> OWNER IGUAL string_type .)
    MODE            shift and go to state 185


state 146

    (36) createDB_dosParam -> OWNER string_type MODE . ENTERO
    (38) createDB_dosParam -> OWNER string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 186
    IGUAL           shift and go to state 187


state 147

    (45) createDB_unParam -> MODE IGUAL ENTERO .
    (41) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (43) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 45 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 188


state 148

    (37) createDB_dosParam -> MODE ENTERO OWNER . string_type
    (40) createDB_dosParam -> MODE ENTERO OWNER . IGUAL string_type
    (53) string_type -> . CADENA
    (54) string_type -> . ID

    IGUAL           shift and go to state 190
    CADENA          shift and go to state 85
    ID              shift and go to state 86

    string_type                    shift and go to state 189

state 149

    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (44) createDB_unParam -> . OWNER IGUAL string_type
    (45) createDB_unParam -> . MODE IGUAL ENTERO
    (46) createDB_unParam -> . OWNER string_type
    (47) createDB_unParam -> . MODE ENTERO
    (36) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (37) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (38) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (41) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 191
    OWNER           shift and go to state 50
    MODE            shift and go to state 51

    createDB_unParam               shift and go to state 192
    createDB_dosParam              shift and go to state 193

state 150

    (131) arit -> PARA expresion PARC .

    MAYOR           reduce using rule 131 (arit -> PARA expresion PARC .)
    MENOR           reduce using rule 131 (arit -> PARA expresion PARC .)
    MAYORIGUAL      reduce using rule 131 (arit -> PARA expresion PARC .)
    MENORIGUAL      reduce using rule 131 (arit -> PARA expresion PARC .)
    IGUALIGUAL      reduce using rule 131 (arit -> PARA expresion PARC .)
    NOTIGUAL        reduce using rule 131 (arit -> PARA expresion PARC .)
    POR             reduce using rule 131 (arit -> PARA expresion PARC .)
    DIV             reduce using rule 131 (arit -> PARA expresion PARC .)
    MAS             reduce using rule 131 (arit -> PARA expresion PARC .)
    MENOS           reduce using rule 131 (arit -> PARA expresion PARC .)
    MOD             reduce using rule 131 (arit -> PARA expresion PARC .)
    ANDB            reduce using rule 131 (arit -> PARA expresion PARC .)
    SHIFTI          reduce using rule 131 (arit -> PARA expresion PARC .)
    SHIFTD          reduce using rule 131 (arit -> PARA expresion PARC .)
    XORB            reduce using rule 131 (arit -> PARA expresion PARC .)
    ORB             reduce using rule 131 (arit -> PARA expresion PARC .)
    AND             reduce using rule 131 (arit -> PARA expresion PARC .)
    ORR             reduce using rule 131 (arit -> PARA expresion PARC .)
    PARC            reduce using rule 131 (arit -> PARA expresion PARC .)
    COMA            reduce using rule 131 (arit -> PARA expresion PARC .)
    PTCOMA          reduce using rule 131 (arit -> PARA expresion PARC .)
    THEN            reduce using rule 131 (arit -> PARA expresion PARC .)
    WHEN            reduce using rule 131 (arit -> PARA expresion PARC .)
    ELSE            reduce using rule 131 (arit -> PARA expresion PARC .)


state 151

    (63) llamada_funcion -> SELECT ID PARA params PARC PTCOMA .

    error           reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    USE             reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    $end            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    END             reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ID              reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    IF              reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 63 (llamada_funcion -> SELECT ID PARA params PARC PTCOMA .)


state 152

    (65) params -> params COMA expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PARC            reduce using rule 65 (params -> params COMA expresion .)
    COMA            reduce using rule 65 (params -> params COMA expresion .)
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 153

    (111) log -> expresion AND expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    AND             reduce using rule 111 (log -> expresion AND expresion .)
    ORR             reduce using rule 111 (log -> expresion AND expresion .)
    PARC            reduce using rule 111 (log -> expresion AND expresion .)
    COMA            reduce using rule 111 (log -> expresion AND expresion .)
    MAYOR           reduce using rule 111 (log -> expresion AND expresion .)
    MENOR           reduce using rule 111 (log -> expresion AND expresion .)
    MAYORIGUAL      reduce using rule 111 (log -> expresion AND expresion .)
    MENORIGUAL      reduce using rule 111 (log -> expresion AND expresion .)
    IGUALIGUAL      reduce using rule 111 (log -> expresion AND expresion .)
    NOTIGUAL        reduce using rule 111 (log -> expresion AND expresion .)
    POR             reduce using rule 111 (log -> expresion AND expresion .)
    DIV             reduce using rule 111 (log -> expresion AND expresion .)
    MAS             reduce using rule 111 (log -> expresion AND expresion .)
    MENOS           reduce using rule 111 (log -> expresion AND expresion .)
    MOD             reduce using rule 111 (log -> expresion AND expresion .)
    ANDB            reduce using rule 111 (log -> expresion AND expresion .)
    SHIFTI          reduce using rule 111 (log -> expresion AND expresion .)
    SHIFTD          reduce using rule 111 (log -> expresion AND expresion .)
    XORB            reduce using rule 111 (log -> expresion AND expresion .)
    ORB             reduce using rule 111 (log -> expresion AND expresion .)
    PTCOMA          reduce using rule 111 (log -> expresion AND expresion .)
    THEN            reduce using rule 111 (log -> expresion AND expresion .)
    WHEN            reduce using rule 111 (log -> expresion AND expresion .)
    ELSE            reduce using rule 111 (log -> expresion AND expresion .)

  ! AND             [ shift and go to state 93 ]
  ! ORR             [ shift and go to state 94 ]


state 154

    (112) log -> expresion ORR expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    ORR             reduce using rule 112 (log -> expresion ORR expresion .)
    PARC            reduce using rule 112 (log -> expresion ORR expresion .)
    COMA            reduce using rule 112 (log -> expresion ORR expresion .)
    MAYOR           reduce using rule 112 (log -> expresion ORR expresion .)
    MENOR           reduce using rule 112 (log -> expresion ORR expresion .)
    MAYORIGUAL      reduce using rule 112 (log -> expresion ORR expresion .)
    MENORIGUAL      reduce using rule 112 (log -> expresion ORR expresion .)
    IGUALIGUAL      reduce using rule 112 (log -> expresion ORR expresion .)
    NOTIGUAL        reduce using rule 112 (log -> expresion ORR expresion .)
    POR             reduce using rule 112 (log -> expresion ORR expresion .)
    DIV             reduce using rule 112 (log -> expresion ORR expresion .)
    MAS             reduce using rule 112 (log -> expresion ORR expresion .)
    MENOS           reduce using rule 112 (log -> expresion ORR expresion .)
    MOD             reduce using rule 112 (log -> expresion ORR expresion .)
    ANDB            reduce using rule 112 (log -> expresion ORR expresion .)
    SHIFTI          reduce using rule 112 (log -> expresion ORR expresion .)
    SHIFTD          reduce using rule 112 (log -> expresion ORR expresion .)
    XORB            reduce using rule 112 (log -> expresion ORR expresion .)
    ORB             reduce using rule 112 (log -> expresion ORR expresion .)
    PTCOMA          reduce using rule 112 (log -> expresion ORR expresion .)
    THEN            reduce using rule 112 (log -> expresion ORR expresion .)
    WHEN            reduce using rule 112 (log -> expresion ORR expresion .)
    ELSE            reduce using rule 112 (log -> expresion ORR expresion .)
    AND             shift and go to state 93

  ! AND             [ reduce using rule 112 (log -> expresion ORR expresion .) ]
  ! ORR             [ shift and go to state 94 ]


state 155

    (114) rel -> arit MAYOR arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    AND             reduce using rule 114 (rel -> arit MAYOR arit .)
    ORR             reduce using rule 114 (rel -> arit MAYOR arit .)
    PARC            reduce using rule 114 (rel -> arit MAYOR arit .)
    COMA            reduce using rule 114 (rel -> arit MAYOR arit .)
    MAYOR           reduce using rule 114 (rel -> arit MAYOR arit .)
    MENOR           reduce using rule 114 (rel -> arit MAYOR arit .)
    MAYORIGUAL      reduce using rule 114 (rel -> arit MAYOR arit .)
    MENORIGUAL      reduce using rule 114 (rel -> arit MAYOR arit .)
    IGUALIGUAL      reduce using rule 114 (rel -> arit MAYOR arit .)
    NOTIGUAL        reduce using rule 114 (rel -> arit MAYOR arit .)
    ANDB            reduce using rule 114 (rel -> arit MAYOR arit .)
    XORB            reduce using rule 114 (rel -> arit MAYOR arit .)
    ORB             reduce using rule 114 (rel -> arit MAYOR arit .)
    PTCOMA          reduce using rule 114 (rel -> arit MAYOR arit .)
    THEN            reduce using rule 114 (rel -> arit MAYOR arit .)
    WHEN            reduce using rule 114 (rel -> arit MAYOR arit .)
    ELSE            reduce using rule 114 (rel -> arit MAYOR arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! DIV             [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! MAS             [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! MENOS           [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! MOD             [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! SHIFTI          [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! SHIFTD          [ reduce using rule 114 (rel -> arit MAYOR arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 156

    (115) rel -> arit MENOR arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    AND             reduce using rule 115 (rel -> arit MENOR arit .)
    ORR             reduce using rule 115 (rel -> arit MENOR arit .)
    PARC            reduce using rule 115 (rel -> arit MENOR arit .)
    COMA            reduce using rule 115 (rel -> arit MENOR arit .)
    MAYOR           reduce using rule 115 (rel -> arit MENOR arit .)
    MENOR           reduce using rule 115 (rel -> arit MENOR arit .)
    MAYORIGUAL      reduce using rule 115 (rel -> arit MENOR arit .)
    MENORIGUAL      reduce using rule 115 (rel -> arit MENOR arit .)
    IGUALIGUAL      reduce using rule 115 (rel -> arit MENOR arit .)
    NOTIGUAL        reduce using rule 115 (rel -> arit MENOR arit .)
    ANDB            reduce using rule 115 (rel -> arit MENOR arit .)
    XORB            reduce using rule 115 (rel -> arit MENOR arit .)
    ORB             reduce using rule 115 (rel -> arit MENOR arit .)
    PTCOMA          reduce using rule 115 (rel -> arit MENOR arit .)
    THEN            reduce using rule 115 (rel -> arit MENOR arit .)
    WHEN            reduce using rule 115 (rel -> arit MENOR arit .)
    ELSE            reduce using rule 115 (rel -> arit MENOR arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! DIV             [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! MAS             [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! MENOS           [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! MOD             [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! SHIFTI          [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! SHIFTD          [ reduce using rule 115 (rel -> arit MENOR arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 157

    (116) rel -> arit MAYORIGUAL arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    AND             reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    ORR             reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    PARC            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    COMA            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    MAYOR           reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    MENOR           reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    MAYORIGUAL      reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    MENORIGUAL      reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    IGUALIGUAL      reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    NOTIGUAL        reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    ANDB            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    XORB            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    ORB             reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    PTCOMA          reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    THEN            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    WHEN            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    ELSE            reduce using rule 116 (rel -> arit MAYORIGUAL arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! DIV             [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! MAS             [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! MOD             [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 116 (rel -> arit MAYORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 158

    (117) rel -> arit MENORIGUAL arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    AND             reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    ORR             reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    PARC            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    COMA            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    MAYOR           reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    MENOR           reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    MAYORIGUAL      reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    MENORIGUAL      reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    IGUALIGUAL      reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    NOTIGUAL        reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    ANDB            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    XORB            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    ORB             reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    PTCOMA          reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    THEN            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    WHEN            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    ELSE            reduce using rule 117 (rel -> arit MENORIGUAL arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! DIV             [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! MAS             [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! MENOS           [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! MOD             [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 117 (rel -> arit MENORIGUAL arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 159

    (118) rel -> arit IGUALIGUAL arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    AND             reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    ORR             reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    PARC            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    COMA            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    MAYOR           reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    MENOR           reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    MAYORIGUAL      reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    MENORIGUAL      reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    IGUALIGUAL      reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    NOTIGUAL        reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    ANDB            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    XORB            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    ORB             reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    PTCOMA          reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    THEN            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    WHEN            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    ELSE            reduce using rule 118 (rel -> arit IGUALIGUAL arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! DIV             [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! MAS             [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! MENOS           [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! MOD             [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 118 (rel -> arit IGUALIGUAL arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 160

    (119) rel -> arit NOTIGUAL arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    AND             reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    ORR             reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    PARC            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    COMA            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    MAYOR           reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    MENOR           reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    MAYORIGUAL      reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    MENORIGUAL      reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    IGUALIGUAL      reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    NOTIGUAL        reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    ANDB            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    XORB            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    ORB             reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    PTCOMA          reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    THEN            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    WHEN            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    ELSE            reduce using rule 119 (rel -> arit NOTIGUAL arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! DIV             [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! MAS             [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! MENOS           [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! MOD             [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTI          [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! SHIFTD          [ reduce using rule 119 (rel -> arit NOTIGUAL arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 161

    (121) arit -> arit POR arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 121 (arit -> arit POR arit .)
    MENOR           reduce using rule 121 (arit -> arit POR arit .)
    MAYORIGUAL      reduce using rule 121 (arit -> arit POR arit .)
    MENORIGUAL      reduce using rule 121 (arit -> arit POR arit .)
    IGUALIGUAL      reduce using rule 121 (arit -> arit POR arit .)
    NOTIGUAL        reduce using rule 121 (arit -> arit POR arit .)
    POR             reduce using rule 121 (arit -> arit POR arit .)
    DIV             reduce using rule 121 (arit -> arit POR arit .)
    MAS             reduce using rule 121 (arit -> arit POR arit .)
    MENOS           reduce using rule 121 (arit -> arit POR arit .)
    MOD             reduce using rule 121 (arit -> arit POR arit .)
    ANDB            reduce using rule 121 (arit -> arit POR arit .)
    SHIFTI          reduce using rule 121 (arit -> arit POR arit .)
    SHIFTD          reduce using rule 121 (arit -> arit POR arit .)
    XORB            reduce using rule 121 (arit -> arit POR arit .)
    ORB             reduce using rule 121 (arit -> arit POR arit .)
    AND             reduce using rule 121 (arit -> arit POR arit .)
    ORR             reduce using rule 121 (arit -> arit POR arit .)
    PARC            reduce using rule 121 (arit -> arit POR arit .)
    COMA            reduce using rule 121 (arit -> arit POR arit .)
    PTCOMA          reduce using rule 121 (arit -> arit POR arit .)
    THEN            reduce using rule 121 (arit -> arit POR arit .)
    WHEN            reduce using rule 121 (arit -> arit POR arit .)
    ELSE            reduce using rule 121 (arit -> arit POR arit .)

  ! POR             [ shift and go to state 101 ]
  ! DIV             [ shift and go to state 102 ]
  ! MAS             [ shift and go to state 103 ]
  ! MENOS           [ shift and go to state 104 ]
  ! MOD             [ shift and go to state 105 ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 162

    (122) arit -> arit DIV arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 122 (arit -> arit DIV arit .)
    MENOR           reduce using rule 122 (arit -> arit DIV arit .)
    MAYORIGUAL      reduce using rule 122 (arit -> arit DIV arit .)
    MENORIGUAL      reduce using rule 122 (arit -> arit DIV arit .)
    IGUALIGUAL      reduce using rule 122 (arit -> arit DIV arit .)
    NOTIGUAL        reduce using rule 122 (arit -> arit DIV arit .)
    POR             reduce using rule 122 (arit -> arit DIV arit .)
    DIV             reduce using rule 122 (arit -> arit DIV arit .)
    MAS             reduce using rule 122 (arit -> arit DIV arit .)
    MENOS           reduce using rule 122 (arit -> arit DIV arit .)
    MOD             reduce using rule 122 (arit -> arit DIV arit .)
    ANDB            reduce using rule 122 (arit -> arit DIV arit .)
    SHIFTI          reduce using rule 122 (arit -> arit DIV arit .)
    SHIFTD          reduce using rule 122 (arit -> arit DIV arit .)
    XORB            reduce using rule 122 (arit -> arit DIV arit .)
    ORB             reduce using rule 122 (arit -> arit DIV arit .)
    AND             reduce using rule 122 (arit -> arit DIV arit .)
    ORR             reduce using rule 122 (arit -> arit DIV arit .)
    PARC            reduce using rule 122 (arit -> arit DIV arit .)
    COMA            reduce using rule 122 (arit -> arit DIV arit .)
    PTCOMA          reduce using rule 122 (arit -> arit DIV arit .)
    THEN            reduce using rule 122 (arit -> arit DIV arit .)
    WHEN            reduce using rule 122 (arit -> arit DIV arit .)
    ELSE            reduce using rule 122 (arit -> arit DIV arit .)

  ! POR             [ shift and go to state 101 ]
  ! DIV             [ shift and go to state 102 ]
  ! MAS             [ shift and go to state 103 ]
  ! MENOS           [ shift and go to state 104 ]
  ! MOD             [ shift and go to state 105 ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 163

    (123) arit -> arit MAS arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 123 (arit -> arit MAS arit .)
    MENOR           reduce using rule 123 (arit -> arit MAS arit .)
    MAYORIGUAL      reduce using rule 123 (arit -> arit MAS arit .)
    MENORIGUAL      reduce using rule 123 (arit -> arit MAS arit .)
    IGUALIGUAL      reduce using rule 123 (arit -> arit MAS arit .)
    NOTIGUAL        reduce using rule 123 (arit -> arit MAS arit .)
    MAS             reduce using rule 123 (arit -> arit MAS arit .)
    MENOS           reduce using rule 123 (arit -> arit MAS arit .)
    ANDB            reduce using rule 123 (arit -> arit MAS arit .)
    SHIFTI          reduce using rule 123 (arit -> arit MAS arit .)
    SHIFTD          reduce using rule 123 (arit -> arit MAS arit .)
    XORB            reduce using rule 123 (arit -> arit MAS arit .)
    ORB             reduce using rule 123 (arit -> arit MAS arit .)
    AND             reduce using rule 123 (arit -> arit MAS arit .)
    ORR             reduce using rule 123 (arit -> arit MAS arit .)
    PARC            reduce using rule 123 (arit -> arit MAS arit .)
    COMA            reduce using rule 123 (arit -> arit MAS arit .)
    PTCOMA          reduce using rule 123 (arit -> arit MAS arit .)
    THEN            reduce using rule 123 (arit -> arit MAS arit .)
    WHEN            reduce using rule 123 (arit -> arit MAS arit .)
    ELSE            reduce using rule 123 (arit -> arit MAS arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 105

  ! POR             [ reduce using rule 123 (arit -> arit MAS arit .) ]
  ! DIV             [ reduce using rule 123 (arit -> arit MAS arit .) ]
  ! MOD             [ reduce using rule 123 (arit -> arit MAS arit .) ]
  ! MAS             [ shift and go to state 103 ]
  ! MENOS           [ shift and go to state 104 ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 164

    (124) arit -> arit MENOS arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 124 (arit -> arit MENOS arit .)
    MENOR           reduce using rule 124 (arit -> arit MENOS arit .)
    MAYORIGUAL      reduce using rule 124 (arit -> arit MENOS arit .)
    MENORIGUAL      reduce using rule 124 (arit -> arit MENOS arit .)
    IGUALIGUAL      reduce using rule 124 (arit -> arit MENOS arit .)
    NOTIGUAL        reduce using rule 124 (arit -> arit MENOS arit .)
    MAS             reduce using rule 124 (arit -> arit MENOS arit .)
    MENOS           reduce using rule 124 (arit -> arit MENOS arit .)
    ANDB            reduce using rule 124 (arit -> arit MENOS arit .)
    SHIFTI          reduce using rule 124 (arit -> arit MENOS arit .)
    SHIFTD          reduce using rule 124 (arit -> arit MENOS arit .)
    XORB            reduce using rule 124 (arit -> arit MENOS arit .)
    ORB             reduce using rule 124 (arit -> arit MENOS arit .)
    AND             reduce using rule 124 (arit -> arit MENOS arit .)
    ORR             reduce using rule 124 (arit -> arit MENOS arit .)
    PARC            reduce using rule 124 (arit -> arit MENOS arit .)
    COMA            reduce using rule 124 (arit -> arit MENOS arit .)
    PTCOMA          reduce using rule 124 (arit -> arit MENOS arit .)
    THEN            reduce using rule 124 (arit -> arit MENOS arit .)
    WHEN            reduce using rule 124 (arit -> arit MENOS arit .)
    ELSE            reduce using rule 124 (arit -> arit MENOS arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MOD             shift and go to state 105

  ! POR             [ reduce using rule 124 (arit -> arit MENOS arit .) ]
  ! DIV             [ reduce using rule 124 (arit -> arit MENOS arit .) ]
  ! MOD             [ reduce using rule 124 (arit -> arit MENOS arit .) ]
  ! MAS             [ shift and go to state 103 ]
  ! MENOS           [ shift and go to state 104 ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 165

    (125) arit -> arit MOD arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 125 (arit -> arit MOD arit .)
    MENOR           reduce using rule 125 (arit -> arit MOD arit .)
    MAYORIGUAL      reduce using rule 125 (arit -> arit MOD arit .)
    MENORIGUAL      reduce using rule 125 (arit -> arit MOD arit .)
    IGUALIGUAL      reduce using rule 125 (arit -> arit MOD arit .)
    NOTIGUAL        reduce using rule 125 (arit -> arit MOD arit .)
    POR             reduce using rule 125 (arit -> arit MOD arit .)
    DIV             reduce using rule 125 (arit -> arit MOD arit .)
    MAS             reduce using rule 125 (arit -> arit MOD arit .)
    MENOS           reduce using rule 125 (arit -> arit MOD arit .)
    MOD             reduce using rule 125 (arit -> arit MOD arit .)
    ANDB            reduce using rule 125 (arit -> arit MOD arit .)
    SHIFTI          reduce using rule 125 (arit -> arit MOD arit .)
    SHIFTD          reduce using rule 125 (arit -> arit MOD arit .)
    XORB            reduce using rule 125 (arit -> arit MOD arit .)
    ORB             reduce using rule 125 (arit -> arit MOD arit .)
    AND             reduce using rule 125 (arit -> arit MOD arit .)
    ORR             reduce using rule 125 (arit -> arit MOD arit .)
    PARC            reduce using rule 125 (arit -> arit MOD arit .)
    COMA            reduce using rule 125 (arit -> arit MOD arit .)
    PTCOMA          reduce using rule 125 (arit -> arit MOD arit .)
    THEN            reduce using rule 125 (arit -> arit MOD arit .)
    WHEN            reduce using rule 125 (arit -> arit MOD arit .)
    ELSE            reduce using rule 125 (arit -> arit MOD arit .)

  ! POR             [ shift and go to state 101 ]
  ! DIV             [ shift and go to state 102 ]
  ! MAS             [ shift and go to state 103 ]
  ! MENOS           [ shift and go to state 104 ]
  ! MOD             [ shift and go to state 105 ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 166

    (126) arit -> arit ANDB arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 126 (arit -> arit ANDB arit .)
    MENOR           reduce using rule 126 (arit -> arit ANDB arit .)
    MAYORIGUAL      reduce using rule 126 (arit -> arit ANDB arit .)
    MENORIGUAL      reduce using rule 126 (arit -> arit ANDB arit .)
    IGUALIGUAL      reduce using rule 126 (arit -> arit ANDB arit .)
    NOTIGUAL        reduce using rule 126 (arit -> arit ANDB arit .)
    ANDB            reduce using rule 126 (arit -> arit ANDB arit .)
    XORB            reduce using rule 126 (arit -> arit ANDB arit .)
    ORB             reduce using rule 126 (arit -> arit ANDB arit .)
    AND             reduce using rule 126 (arit -> arit ANDB arit .)
    ORR             reduce using rule 126 (arit -> arit ANDB arit .)
    PARC            reduce using rule 126 (arit -> arit ANDB arit .)
    COMA            reduce using rule 126 (arit -> arit ANDB arit .)
    PTCOMA          reduce using rule 126 (arit -> arit ANDB arit .)
    THEN            reduce using rule 126 (arit -> arit ANDB arit .)
    WHEN            reduce using rule 126 (arit -> arit ANDB arit .)
    ELSE            reduce using rule 126 (arit -> arit ANDB arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! DIV             [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! MAS             [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! MENOS           [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! MOD             [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! SHIFTI          [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! SHIFTD          [ reduce using rule 126 (arit -> arit ANDB arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 167

    (127) arit -> arit SHIFTI arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 127 (arit -> arit SHIFTI arit .)
    MENOR           reduce using rule 127 (arit -> arit SHIFTI arit .)
    MAYORIGUAL      reduce using rule 127 (arit -> arit SHIFTI arit .)
    MENORIGUAL      reduce using rule 127 (arit -> arit SHIFTI arit .)
    IGUALIGUAL      reduce using rule 127 (arit -> arit SHIFTI arit .)
    NOTIGUAL        reduce using rule 127 (arit -> arit SHIFTI arit .)
    ANDB            reduce using rule 127 (arit -> arit SHIFTI arit .)
    SHIFTI          reduce using rule 127 (arit -> arit SHIFTI arit .)
    SHIFTD          reduce using rule 127 (arit -> arit SHIFTI arit .)
    XORB            reduce using rule 127 (arit -> arit SHIFTI arit .)
    ORB             reduce using rule 127 (arit -> arit SHIFTI arit .)
    AND             reduce using rule 127 (arit -> arit SHIFTI arit .)
    ORR             reduce using rule 127 (arit -> arit SHIFTI arit .)
    PARC            reduce using rule 127 (arit -> arit SHIFTI arit .)
    COMA            reduce using rule 127 (arit -> arit SHIFTI arit .)
    PTCOMA          reduce using rule 127 (arit -> arit SHIFTI arit .)
    THEN            reduce using rule 127 (arit -> arit SHIFTI arit .)
    WHEN            reduce using rule 127 (arit -> arit SHIFTI arit .)
    ELSE            reduce using rule 127 (arit -> arit SHIFTI arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105

  ! POR             [ reduce using rule 127 (arit -> arit SHIFTI arit .) ]
  ! DIV             [ reduce using rule 127 (arit -> arit SHIFTI arit .) ]
  ! MAS             [ reduce using rule 127 (arit -> arit SHIFTI arit .) ]
  ! MENOS           [ reduce using rule 127 (arit -> arit SHIFTI arit .) ]
  ! MOD             [ reduce using rule 127 (arit -> arit SHIFTI arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 168

    (128) arit -> arit SHIFTD arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 128 (arit -> arit SHIFTD arit .)
    MENOR           reduce using rule 128 (arit -> arit SHIFTD arit .)
    MAYORIGUAL      reduce using rule 128 (arit -> arit SHIFTD arit .)
    MENORIGUAL      reduce using rule 128 (arit -> arit SHIFTD arit .)
    IGUALIGUAL      reduce using rule 128 (arit -> arit SHIFTD arit .)
    NOTIGUAL        reduce using rule 128 (arit -> arit SHIFTD arit .)
    ANDB            reduce using rule 128 (arit -> arit SHIFTD arit .)
    SHIFTI          reduce using rule 128 (arit -> arit SHIFTD arit .)
    SHIFTD          reduce using rule 128 (arit -> arit SHIFTD arit .)
    XORB            reduce using rule 128 (arit -> arit SHIFTD arit .)
    ORB             reduce using rule 128 (arit -> arit SHIFTD arit .)
    AND             reduce using rule 128 (arit -> arit SHIFTD arit .)
    ORR             reduce using rule 128 (arit -> arit SHIFTD arit .)
    PARC            reduce using rule 128 (arit -> arit SHIFTD arit .)
    COMA            reduce using rule 128 (arit -> arit SHIFTD arit .)
    PTCOMA          reduce using rule 128 (arit -> arit SHIFTD arit .)
    THEN            reduce using rule 128 (arit -> arit SHIFTD arit .)
    WHEN            reduce using rule 128 (arit -> arit SHIFTD arit .)
    ELSE            reduce using rule 128 (arit -> arit SHIFTD arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105

  ! POR             [ reduce using rule 128 (arit -> arit SHIFTD arit .) ]
  ! DIV             [ reduce using rule 128 (arit -> arit SHIFTD arit .) ]
  ! MAS             [ reduce using rule 128 (arit -> arit SHIFTD arit .) ]
  ! MENOS           [ reduce using rule 128 (arit -> arit SHIFTD arit .) ]
  ! MOD             [ reduce using rule 128 (arit -> arit SHIFTD arit .) ]
  ! ANDB            [ shift and go to state 106 ]
  ! SHIFTI          [ shift and go to state 107 ]
  ! SHIFTD          [ shift and go to state 108 ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 169

    (129) arit -> arit XORB arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 129 (arit -> arit XORB arit .)
    MENOR           reduce using rule 129 (arit -> arit XORB arit .)
    MAYORIGUAL      reduce using rule 129 (arit -> arit XORB arit .)
    MENORIGUAL      reduce using rule 129 (arit -> arit XORB arit .)
    IGUALIGUAL      reduce using rule 129 (arit -> arit XORB arit .)
    NOTIGUAL        reduce using rule 129 (arit -> arit XORB arit .)
    XORB            reduce using rule 129 (arit -> arit XORB arit .)
    AND             reduce using rule 129 (arit -> arit XORB arit .)
    ORR             reduce using rule 129 (arit -> arit XORB arit .)
    PARC            reduce using rule 129 (arit -> arit XORB arit .)
    COMA            reduce using rule 129 (arit -> arit XORB arit .)
    PTCOMA          reduce using rule 129 (arit -> arit XORB arit .)
    THEN            reduce using rule 129 (arit -> arit XORB arit .)
    WHEN            reduce using rule 129 (arit -> arit XORB arit .)
    ELSE            reduce using rule 129 (arit -> arit XORB arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    ANDB            shift and go to state 106
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108
    ORB             shift and go to state 110

  ! POR             [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! DIV             [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! MAS             [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! MENOS           [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! MOD             [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! ANDB            [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! SHIFTI          [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! SHIFTD          [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! ORB             [ reduce using rule 129 (arit -> arit XORB arit .) ]
  ! XORB            [ shift and go to state 109 ]


state 170

    (130) arit -> arit ORB arit .
    (121) arit -> arit . POR arit
    (122) arit -> arit . DIV arit
    (123) arit -> arit . MAS arit
    (124) arit -> arit . MENOS arit
    (125) arit -> arit . MOD arit
    (126) arit -> arit . ANDB arit
    (127) arit -> arit . SHIFTI arit
    (128) arit -> arit . SHIFTD arit
    (129) arit -> arit . XORB arit
    (130) arit -> arit . ORB arit

    MAYOR           reduce using rule 130 (arit -> arit ORB arit .)
    MENOR           reduce using rule 130 (arit -> arit ORB arit .)
    MAYORIGUAL      reduce using rule 130 (arit -> arit ORB arit .)
    MENORIGUAL      reduce using rule 130 (arit -> arit ORB arit .)
    IGUALIGUAL      reduce using rule 130 (arit -> arit ORB arit .)
    NOTIGUAL        reduce using rule 130 (arit -> arit ORB arit .)
    XORB            reduce using rule 130 (arit -> arit ORB arit .)
    ORB             reduce using rule 130 (arit -> arit ORB arit .)
    AND             reduce using rule 130 (arit -> arit ORB arit .)
    ORR             reduce using rule 130 (arit -> arit ORB arit .)
    PARC            reduce using rule 130 (arit -> arit ORB arit .)
    COMA            reduce using rule 130 (arit -> arit ORB arit .)
    PTCOMA          reduce using rule 130 (arit -> arit ORB arit .)
    THEN            reduce using rule 130 (arit -> arit ORB arit .)
    WHEN            reduce using rule 130 (arit -> arit ORB arit .)
    ELSE            reduce using rule 130 (arit -> arit ORB arit .)
    POR             shift and go to state 101
    DIV             shift and go to state 102
    MAS             shift and go to state 103
    MENOS           shift and go to state 104
    MOD             shift and go to state 105
    ANDB            shift and go to state 106
    SHIFTI          shift and go to state 107
    SHIFTD          shift and go to state 108

  ! POR             [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! DIV             [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! MAS             [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! MENOS           [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! MOD             [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! ANDB            [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! SHIFTI          [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! SHIFTD          [ reduce using rule 130 (arit -> arit ORB arit .) ]
  ! XORB            [ shift and go to state 109 ]
  ! ORB             [ shift and go to state 110 ]


state 171

    (64) llamada_funcion -> CALL ID PARA params PARC PTCOMA .

    error           reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CREATE          reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SELECT          reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CALL            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    SHOW            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    USE             reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    DROP            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    $end            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    END             reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    PTCOMA          reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ID              reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    RAISE           reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    IF              reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    CASE            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    BEGIN           reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSE            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    ELSEIF          reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)
    WHEN            reduce using rule 64 (llamada_funcion -> CALL ID PARA params PARC PTCOMA .)


state 172

    (48) drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .

    error           reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CREATE          reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SELECT          reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    CALL            reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    SHOW            reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    USE             reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    DROP            reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)
    $end            reduce using rule 48 (drop_database_instr -> DROP DATABASE IF EXISTS ID PTCOMA .)


state 173

    (102) tipo -> CHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 194


state 174

    (103) tipo -> CHARACTER VARYING . PARA ENTERO PARC

    PARA            shift and go to state 195


state 175

    (105) tipo -> CHARACTER PARA . ENTERO PARC

    ENTERO          shift and go to state 196


state 176

    (104) tipo -> VARCHAR PARA . ENTERO PARC

    ENTERO          shift and go to state 197


state 177

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (89) tipo -> . INTEGER
    (90) tipo -> . SMALLINT
    (91) tipo -> . BIGINT
    (92) tipo -> . DECIMAL
    (93) tipo -> . NUMERIC
    (94) tipo -> . REAL
    (95) tipo -> . CHAR
    (96) tipo -> . DOUBLE
    (97) tipo -> . PRECISION
    (98) tipo -> . MONEY
    (99) tipo -> . FLOAT
    (100) tipo -> . BOOLEAN
    (101) tipo -> . VOID
    (102) tipo -> . CHAR PARA ENTERO PARC
    (103) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (104) tipo -> . VARCHAR PARA ENTERO PARC
    (105) tipo -> . CHARACTER PARA ENTERO PARC
    (106) tipo -> . TEXT
    (107) tipo -> . TIME
    (108) tipo -> . TIMESTAMP
    (109) tipo -> . DATE

    INTEGER         shift and go to state 117
    SMALLINT        shift and go to state 118
    BIGINT          shift and go to state 119
    DECIMAL         shift and go to state 120
    NUMERIC         shift and go to state 121
    REAL            shift and go to state 122
    CHAR            shift and go to state 123
    DOUBLE          shift and go to state 124
    PRECISION       shift and go to state 125
    MONEY           shift and go to state 126
    FLOAT           shift and go to state 127
    BOOLEAN         shift and go to state 128
    VOID            shift and go to state 129
    CHARACTER       shift and go to state 130
    VARCHAR         shift and go to state 131
    TEXT            shift and go to state 132
    TIME            shift and go to state 133
    TIMESTAMP       shift and go to state 134
    DATE            shift and go to state 135

    tipo                           shift and go to state 198

state 178

    (68) parametros -> parametros COMA parametro .

    PARC            reduce using rule 68 (parametros -> parametros COMA parametro .)
    COMA            reduce using rule 68 (parametros -> parametros COMA parametro .)


state 179

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> parametros . COMA parametro

    PARC            shift and go to state 199
    COMA            shift and go to state 137


state 180

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros . PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (68) parametros -> parametros . COMA parametro

    PARC            shift and go to state 200
    COMA            shift and go to state 137


state 181

    (29) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    error           reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    USE             reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 182

    (33) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    error           reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 33 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 183

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 201


state 184

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (89) tipo -> . INTEGER
    (90) tipo -> . SMALLINT
    (91) tipo -> . BIGINT
    (92) tipo -> . DECIMAL
    (93) tipo -> . NUMERIC
    (94) tipo -> . REAL
    (95) tipo -> . CHAR
    (96) tipo -> . DOUBLE
    (97) tipo -> . PRECISION
    (98) tipo -> . MONEY
    (99) tipo -> . FLOAT
    (100) tipo -> . BOOLEAN
    (101) tipo -> . VOID
    (102) tipo -> . CHAR PARA ENTERO PARC
    (103) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (104) tipo -> . VARCHAR PARA ENTERO PARC
    (105) tipo -> . CHARACTER PARA ENTERO PARC
    (106) tipo -> . TEXT
    (107) tipo -> . TIME
    (108) tipo -> . TIMESTAMP
    (109) tipo -> . DATE

    INTEGER         shift and go to state 117
    SMALLINT        shift and go to state 118
    BIGINT          shift and go to state 119
    DECIMAL         shift and go to state 120
    NUMERIC         shift and go to state 121
    REAL            shift and go to state 122
    CHAR            shift and go to state 123
    DOUBLE          shift and go to state 124
    PRECISION       shift and go to state 125
    MONEY           shift and go to state 126
    FLOAT           shift and go to state 127
    BOOLEAN         shift and go to state 128
    VOID            shift and go to state 129
    CHARACTER       shift and go to state 130
    VARCHAR         shift and go to state 131
    TEXT            shift and go to state 132
    TIME            shift and go to state 133
    TIMESTAMP       shift and go to state 134
    DATE            shift and go to state 135

    tipo                           shift and go to state 202

state 185

    (39) createDB_dosParam -> OWNER IGUAL string_type MODE . ENTERO
    (42) createDB_dosParam -> OWNER IGUAL string_type MODE . IGUAL ENTERO

    ENTERO          shift and go to state 204
    IGUAL           shift and go to state 203


state 186

    (36) createDB_dosParam -> OWNER string_type MODE ENTERO .

    PTCOMA          reduce using rule 36 (createDB_dosParam -> OWNER string_type MODE ENTERO .)


state 187

    (38) createDB_dosParam -> OWNER string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 205


state 188

    (41) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (43) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 207
    IGUAL           shift and go to state 206


state 189

    (37) createDB_dosParam -> MODE ENTERO OWNER string_type .

    PTCOMA          reduce using rule 37 (createDB_dosParam -> MODE ENTERO OWNER string_type .)


state 190

    (40) createDB_dosParam -> MODE ENTERO OWNER IGUAL . string_type
    (53) string_type -> . CADENA
    (54) string_type -> . ID

    CADENA          shift and go to state 85
    ID              shift and go to state 86

    string_type                    shift and go to state 208

state 191

    (26) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 26 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 192

    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 209


state 193

    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 210


state 194

    (102) tipo -> CHAR PARA ENTERO . PARC

    PARC            shift and go to state 211


state 195

    (103) tipo -> CHARACTER VARYING PARA . ENTERO PARC

    ENTERO          shift and go to state 212


state 196

    (105) tipo -> CHARACTER PARA ENTERO . PARC

    PARC            shift and go to state 213


state 197

    (104) tipo -> VARCHAR PARA ENTERO . PARC

    PARC            shift and go to state 214


state 198

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 215


state 199

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 216


state 200

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC . RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    RETURNS         shift and go to state 217


state 201

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (44) createDB_unParam -> . OWNER IGUAL string_type
    (45) createDB_unParam -> . MODE IGUAL ENTERO
    (46) createDB_unParam -> . OWNER string_type
    (47) createDB_unParam -> . MODE ENTERO
    (36) createDB_dosParam -> . OWNER string_type MODE ENTERO
    (37) createDB_dosParam -> . MODE ENTERO OWNER string_type
    (38) createDB_dosParam -> . OWNER string_type MODE IGUAL ENTERO
    (39) createDB_dosParam -> . OWNER IGUAL string_type MODE ENTERO
    (40) createDB_dosParam -> . MODE ENTERO OWNER IGUAL string_type
    (41) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (42) createDB_dosParam -> . OWNER IGUAL string_type MODE IGUAL ENTERO
    (43) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 218
    OWNER           shift and go to state 50
    MODE            shift and go to state 51

    createDB_unParam               shift and go to state 219
    createDB_dosParam              shift and go to state 220

state 202

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 221


state 203

    (42) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL . ENTERO

    ENTERO          shift and go to state 222


state 204

    (39) createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .

    PTCOMA          reduce using rule 39 (createDB_dosParam -> OWNER IGUAL string_type MODE ENTERO .)


state 205

    (38) createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 38 (createDB_dosParam -> OWNER string_type MODE IGUAL ENTERO .)


state 206

    (43) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 223


state 207

    (41) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 41 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 208

    (40) createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .

    PTCOMA          reduce using rule 40 (createDB_dosParam -> MODE ENTERO OWNER IGUAL string_type .)


state 209

    (30) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 210

    (34) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 34 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 211

    (102) tipo -> CHAR PARA ENTERO PARC .

    PARC            reduce using rule 102 (tipo -> CHAR PARA ENTERO PARC .)
    COMA            reduce using rule 102 (tipo -> CHAR PARA ENTERO PARC .)
    AS              reduce using rule 102 (tipo -> CHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 102 (tipo -> CHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 102 (tipo -> CHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 102 (tipo -> CHAR PARA ENTERO PARC .)


state 212

    (103) tipo -> CHARACTER VARYING PARA ENTERO . PARC

    PARC            shift and go to state 224


state 213

    (105) tipo -> CHARACTER PARA ENTERO PARC .

    PARC            reduce using rule 105 (tipo -> CHARACTER PARA ENTERO PARC .)
    COMA            reduce using rule 105 (tipo -> CHARACTER PARA ENTERO PARC .)
    AS              reduce using rule 105 (tipo -> CHARACTER PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 105 (tipo -> CHARACTER PARA ENTERO PARC .)
    PTCOMA          reduce using rule 105 (tipo -> CHARACTER PARA ENTERO PARC .)
    DEFAULT         reduce using rule 105 (tipo -> CHARACTER PARA ENTERO PARC .)


state 214

    (104) tipo -> VARCHAR PARA ENTERO PARC .

    PARC            reduce using rule 104 (tipo -> VARCHAR PARA ENTERO PARC .)
    COMA            reduce using rule 104 (tipo -> VARCHAR PARA ENTERO PARC .)
    AS              reduce using rule 104 (tipo -> VARCHAR PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 104 (tipo -> VARCHAR PARA ENTERO PARC .)
    PTCOMA          reduce using rule 104 (tipo -> VARCHAR PARA ENTERO PARC .)
    DEFAULT         reduce using rule 104 (tipo -> VARCHAR PARA ENTERO PARC .)


state 215

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 225


state 216

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (89) tipo -> . INTEGER
    (90) tipo -> . SMALLINT
    (91) tipo -> . BIGINT
    (92) tipo -> . DECIMAL
    (93) tipo -> . NUMERIC
    (94) tipo -> . REAL
    (95) tipo -> . CHAR
    (96) tipo -> . DOUBLE
    (97) tipo -> . PRECISION
    (98) tipo -> . MONEY
    (99) tipo -> . FLOAT
    (100) tipo -> . BOOLEAN
    (101) tipo -> . VOID
    (102) tipo -> . CHAR PARA ENTERO PARC
    (103) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (104) tipo -> . VARCHAR PARA ENTERO PARC
    (105) tipo -> . CHARACTER PARA ENTERO PARC
    (106) tipo -> . TEXT
    (107) tipo -> . TIME
    (108) tipo -> . TIMESTAMP
    (109) tipo -> . DATE

    INTEGER         shift and go to state 117
    SMALLINT        shift and go to state 118
    BIGINT          shift and go to state 119
    DECIMAL         shift and go to state 120
    NUMERIC         shift and go to state 121
    REAL            shift and go to state 122
    CHAR            shift and go to state 123
    DOUBLE          shift and go to state 124
    PRECISION       shift and go to state 125
    MONEY           shift and go to state 126
    FLOAT           shift and go to state 127
    BOOLEAN         shift and go to state 128
    VOID            shift and go to state 129
    CHARACTER       shift and go to state 130
    VARCHAR         shift and go to state 131
    TEXT            shift and go to state 132
    TIME            shift and go to state 133
    TIMESTAMP       shift and go to state 134
    DATE            shift and go to state 135

    tipo                           shift and go to state 226

state 217

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS . tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (89) tipo -> . INTEGER
    (90) tipo -> . SMALLINT
    (91) tipo -> . BIGINT
    (92) tipo -> . DECIMAL
    (93) tipo -> . NUMERIC
    (94) tipo -> . REAL
    (95) tipo -> . CHAR
    (96) tipo -> . DOUBLE
    (97) tipo -> . PRECISION
    (98) tipo -> . MONEY
    (99) tipo -> . FLOAT
    (100) tipo -> . BOOLEAN
    (101) tipo -> . VOID
    (102) tipo -> . CHAR PARA ENTERO PARC
    (103) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (104) tipo -> . VARCHAR PARA ENTERO PARC
    (105) tipo -> . CHARACTER PARA ENTERO PARC
    (106) tipo -> . TEXT
    (107) tipo -> . TIME
    (108) tipo -> . TIMESTAMP
    (109) tipo -> . DATE

    INTEGER         shift and go to state 117
    SMALLINT        shift and go to state 118
    BIGINT          shift and go to state 119
    DECIMAL         shift and go to state 120
    NUMERIC         shift and go to state 121
    REAL            shift and go to state 122
    CHAR            shift and go to state 123
    DOUBLE          shift and go to state 124
    PRECISION       shift and go to state 125
    MONEY           shift and go to state 126
    FLOAT           shift and go to state 127
    BOOLEAN         shift and go to state 128
    VOID            shift and go to state 129
    CHARACTER       shift and go to state 130
    VARCHAR         shift and go to state 131
    TEXT            shift and go to state 132
    TIME            shift and go to state 133
    TIMESTAMP       shift and go to state 134
    DATE            shift and go to state 135

    tipo                           shift and go to state 227

state 218

    (27) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    error           reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CALL            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SHOW            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    USE             reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 219

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 228


state 220

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 229


state 221

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 230


state 222

    (42) createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 42 (createDB_dosParam -> OWNER IGUAL string_type MODE IGUAL ENTERO .)


state 223

    (43) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 43 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 224

    (103) tipo -> CHARACTER VARYING PARA ENTERO PARC .

    PARC            reduce using rule 103 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    COMA            reduce using rule 103 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    AS              reduce using rule 103 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DOSPUNTOS       reduce using rule 103 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    PTCOMA          reduce using rule 103 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)
    DEFAULT         reduce using rule 103 (tipo -> CHARACTER VARYING PARA ENTERO PARC .)


state 225

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 231


state 226

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 232


state 227

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo . AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    AS              shift and go to state 233


state 228

    (31) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    error           reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CALL            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SHOW            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    USE             reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 31 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 229

    (35) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    error           reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CALL            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SHOW            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    USE             reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 35 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 230

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 234


state 231

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 235
    DECLARE         shift and go to state 236


state 232

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 237


state 233

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS . DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 238


state 234

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 239
    DECLARE         shift and go to state 240


state 235

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 242
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 236

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    BEGIN           reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 256
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 237

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 257


state 238

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR . DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 258


state 239

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 259
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 240

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    BEGIN           reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 260
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 241

    (85) asignacion -> ID . DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> ID . tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> ID . tipo PTCOMA
    (88) declaracion -> ID . tipo DEFAULT expresion PTCOMA
    (89) tipo -> . INTEGER
    (90) tipo -> . SMALLINT
    (91) tipo -> . BIGINT
    (92) tipo -> . DECIMAL
    (93) tipo -> . NUMERIC
    (94) tipo -> . REAL
    (95) tipo -> . CHAR
    (96) tipo -> . DOUBLE
    (97) tipo -> . PRECISION
    (98) tipo -> . MONEY
    (99) tipo -> . FLOAT
    (100) tipo -> . BOOLEAN
    (101) tipo -> . VOID
    (102) tipo -> . CHAR PARA ENTERO PARC
    (103) tipo -> . CHARACTER VARYING PARA ENTERO PARC
    (104) tipo -> . VARCHAR PARA ENTERO PARC
    (105) tipo -> . CHARACTER PARA ENTERO PARC
    (106) tipo -> . TEXT
    (107) tipo -> . TIME
    (108) tipo -> . TIMESTAMP
    (109) tipo -> . DATE

    DOSPUNTOS       shift and go to state 261
    INTEGER         shift and go to state 117
    SMALLINT        shift and go to state 118
    BIGINT          shift and go to state 119
    DECIMAL         shift and go to state 120
    NUMERIC         shift and go to state 121
    REAL            shift and go to state 122
    CHAR            shift and go to state 123
    DOUBLE          shift and go to state 124
    PRECISION       shift and go to state 125
    MONEY           shift and go to state 126
    FLOAT           shift and go to state 127
    BOOLEAN         shift and go to state 128
    VOID            shift and go to state 129
    CHARACTER       shift and go to state 130
    VARCHAR         shift and go to state 131
    TEXT            shift and go to state 132
    TIME            shift and go to state 133
    TIMESTAMP       shift and go to state 134
    DATE            shift and go to state 135

    tipo                           shift and go to state 262

state 242

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 263
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 243

    (20) instrucciones_funct_sent -> PTCOMA .

    END             reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    PTCOMA          reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    error           reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    ID              reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    RAISE           reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    IF              reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    CASE            reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    SELECT          reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    CALL            reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    BEGIN           reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    ELSE            reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    ELSEIF          reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)
    WHEN            reduce using rule 20 (instrucciones_funct_sent -> PTCOMA .)


state 244

    (14) instrucciones_funct_list -> instrucciones_funct_sent .

    END             reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    PTCOMA          reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    error           reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ID              reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    RAISE           reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    IF              reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CASE            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    SELECT          reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    CALL            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    BEGIN           reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSE            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    ELSEIF          reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)
    WHEN            reduce using rule 14 (instrucciones_funct_list -> instrucciones_funct_sent .)


state 245

    (15) instrucciones_funct_sent -> asignacion .

    END             reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    PTCOMA          reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    error           reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    ID              reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    RAISE           reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    IF              reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    CASE            reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    SELECT          reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    CALL            reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    BEGIN           reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    ELSE            reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    ELSEIF          reduce using rule 15 (instrucciones_funct_sent -> asignacion .)
    WHEN            reduce using rule 15 (instrucciones_funct_sent -> asignacion .)


state 246

    (16) instrucciones_funct_sent -> declaracion .

    END             reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    PTCOMA          reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    error           reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    ID              reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    RAISE           reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    IF              reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    CASE            reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    SELECT          reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    CALL            reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    BEGIN           reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    ELSE            reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    ELSEIF          reduce using rule 16 (instrucciones_funct_sent -> declaracion .)
    WHEN            reduce using rule 16 (instrucciones_funct_sent -> declaracion .)


state 247

    (17) instrucciones_funct_sent -> imprimir .

    END             reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    PTCOMA          reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    error           reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    ID              reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    RAISE           reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    IF              reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    CASE            reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    SELECT          reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    CALL            reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    BEGIN           reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    ELSE            reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    ELSEIF          reduce using rule 17 (instrucciones_funct_sent -> imprimir .)
    WHEN            reduce using rule 17 (instrucciones_funct_sent -> imprimir .)


state 248

    (18) instrucciones_funct_sent -> sentencia_if .

    END             reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    PTCOMA          reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    error           reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    ID              reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    RAISE           reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    IF              reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    CASE            reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    SELECT          reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    CALL            reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    BEGIN           reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    ELSE            reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    ELSEIF          reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)
    WHEN            reduce using rule 18 (instrucciones_funct_sent -> sentencia_if .)


state 249

    (19) instrucciones_funct_sent -> sentencia_switch .

    END             reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    PTCOMA          reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    error           reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    ID              reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    RAISE           reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    IF              reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    CASE            reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    SELECT          reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    CALL            reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    BEGIN           reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    ELSE            reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    ELSEIF          reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)
    WHEN            reduce using rule 19 (instrucciones_funct_sent -> sentencia_switch .)


state 250

    (21) instrucciones_funct_sent -> llamada_funcion .

    END             reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    PTCOMA          reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    error           reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    ID              reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    RAISE           reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    IF              reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    CASE            reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    SELECT          reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    CALL            reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    BEGIN           reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    ELSE            reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    ELSEIF          reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)
    WHEN            reduce using rule 21 (instrucciones_funct_sent -> llamada_funcion .)


state 251

    (22) instrucciones_funct_sent -> empty .

    END             reduce using rule 22 (instrucciones_funct_sent -> empty .)
    PTCOMA          reduce using rule 22 (instrucciones_funct_sent -> empty .)
    error           reduce using rule 22 (instrucciones_funct_sent -> empty .)
    ID              reduce using rule 22 (instrucciones_funct_sent -> empty .)
    RAISE           reduce using rule 22 (instrucciones_funct_sent -> empty .)
    IF              reduce using rule 22 (instrucciones_funct_sent -> empty .)
    CASE            reduce using rule 22 (instrucciones_funct_sent -> empty .)
    SELECT          reduce using rule 22 (instrucciones_funct_sent -> empty .)
    CALL            reduce using rule 22 (instrucciones_funct_sent -> empty .)
    BEGIN           reduce using rule 22 (instrucciones_funct_sent -> empty .)
    ELSE            reduce using rule 22 (instrucciones_funct_sent -> empty .)
    ELSEIF          reduce using rule 22 (instrucciones_funct_sent -> empty .)
    WHEN            reduce using rule 22 (instrucciones_funct_sent -> empty .)


state 252

    (23) instrucciones_funct_sent -> error .

    END             reduce using rule 23 (instrucciones_funct_sent -> error .)
    PTCOMA          reduce using rule 23 (instrucciones_funct_sent -> error .)
    error           reduce using rule 23 (instrucciones_funct_sent -> error .)
    ID              reduce using rule 23 (instrucciones_funct_sent -> error .)
    RAISE           reduce using rule 23 (instrucciones_funct_sent -> error .)
    IF              reduce using rule 23 (instrucciones_funct_sent -> error .)
    CASE            reduce using rule 23 (instrucciones_funct_sent -> error .)
    SELECT          reduce using rule 23 (instrucciones_funct_sent -> error .)
    CALL            reduce using rule 23 (instrucciones_funct_sent -> error .)
    BEGIN           reduce using rule 23 (instrucciones_funct_sent -> error .)
    ELSE            reduce using rule 23 (instrucciones_funct_sent -> error .)
    ELSEIF          reduce using rule 23 (instrucciones_funct_sent -> error .)
    WHEN            reduce using rule 23 (instrucciones_funct_sent -> error .)


state 253

    (81) imprimir -> RAISE . lista_imprimir PTCOMA
    (82) lista_imprimir -> . lista_imprimir COMA sent_imprimir
    (83) lista_imprimir -> . sent_imprimir
    (84) sent_imprimir -> . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    lista_imprimir                 shift and go to state 265
    sent_imprimir                  shift and go to state 266
    expresion                      shift and go to state 267
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 254

    (77) sentencia_if -> IF . expresion THEN instrucciones_funct_list else END IF PTCOMA
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 268
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 255

    (72) sentencia_switch -> CASE . expresion case_list END CASE PTCOMA
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 269
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 256

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 270
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! BEGIN           [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 257

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 271
    DECLARE         shift and go to state 272


state 258

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR . DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    BEGIN           shift and go to state 273
    DECLARE         shift and go to state 274


state 259

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 275
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 260

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 276
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! BEGIN           [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 261

    (85) asignacion -> ID DOSPUNTOS . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 277


state 262

    (86) declaracion -> ID tipo . DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> ID tipo . PTCOMA
    (88) declaracion -> ID tipo . DEFAULT expresion PTCOMA

    DOSPUNTOS       shift and go to state 278
    PTCOMA          shift and go to state 279
    DEFAULT         shift and go to state 280


state 263

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 281


state 264

    (13) instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .

    END             reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    PTCOMA          reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    error           reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ID              reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    RAISE           reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    IF              reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CASE            reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    SELECT          reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    CALL            reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    BEGIN           reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSE            reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    ELSEIF          reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)
    WHEN            reduce using rule 13 (instrucciones_funct_list -> instrucciones_funct_list instrucciones_funct_sent .)


state 265

    (81) imprimir -> RAISE lista_imprimir . PTCOMA
    (82) lista_imprimir -> lista_imprimir . COMA sent_imprimir

    PTCOMA          shift and go to state 282
    COMA            shift and go to state 283


state 266

    (83) lista_imprimir -> sent_imprimir .

    PTCOMA          reduce using rule 83 (lista_imprimir -> sent_imprimir .)
    COMA            reduce using rule 83 (lista_imprimir -> sent_imprimir .)


state 267

    (84) sent_imprimir -> expresion .
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PTCOMA          reduce using rule 84 (sent_imprimir -> expresion .)
    COMA            reduce using rule 84 (sent_imprimir -> expresion .)
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 268

    (77) sentencia_if -> IF expresion . THEN instrucciones_funct_list else END IF PTCOMA
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    THEN            shift and go to state 284
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 269

    (72) sentencia_switch -> CASE expresion . case_list END CASE PTCOMA
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion
    (73) case_list -> . case_list case
    (74) case_list -> . case
    (75) case -> . WHEN expresion THEN instrucciones_funct_list
    (76) case -> . ELSE instrucciones_funct_list

    AND             shift and go to state 93
    ORR             shift and go to state 94
    WHEN            shift and go to state 287
    ELSE            shift and go to state 288

    case_list                      shift and go to state 285
    case                           shift and go to state 286

state 270

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 289
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 271

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 290
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 272

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    BEGIN           reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 291
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 273

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 292
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 274

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE . instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    BEGIN           reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 293
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 275

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 294


state 276

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 295
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 277

    (85) asignacion -> ID DOSPUNTOS IGUAL . expresion PTCOMA
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 296
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 278

    (86) declaracion -> ID tipo DOSPUNTOS . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 297


state 279

    (87) declaracion -> ID tipo PTCOMA .

    END             reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    PTCOMA          reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    error           reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    ID              reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    RAISE           reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    IF              reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    CASE            reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    SELECT          reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    CALL            reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    BEGIN           reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    ELSE            reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    ELSEIF          reduce using rule 87 (declaracion -> ID tipo PTCOMA .)
    WHEN            reduce using rule 87 (declaracion -> ID tipo PTCOMA .)


state 280

    (88) declaracion -> ID tipo DEFAULT . expresion PTCOMA
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 298
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 281

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 299


state 282

    (81) imprimir -> RAISE lista_imprimir PTCOMA .

    END             reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    PTCOMA          reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    error           reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ID              reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    RAISE           reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    IF              reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CASE            reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    SELECT          reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    CALL            reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    BEGIN           reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSE            reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    ELSEIF          reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)
    WHEN            reduce using rule 81 (imprimir -> RAISE lista_imprimir PTCOMA .)


state 283

    (82) lista_imprimir -> lista_imprimir COMA . sent_imprimir
    (84) sent_imprimir -> . expresion
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    sent_imprimir                  shift and go to state 300
    expresion                      shift and go to state 267
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 284

    (77) sentencia_if -> IF expresion THEN . instrucciones_funct_list else END IF PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    ELSE            reduce using rule 141 (empty -> .)
    ELSEIF          reduce using rule 141 (empty -> .)
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 301
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 285

    (72) sentencia_switch -> CASE expresion case_list . END CASE PTCOMA
    (73) case_list -> case_list . case
    (75) case -> . WHEN expresion THEN instrucciones_funct_list
    (76) case -> . ELSE instrucciones_funct_list

    END             shift and go to state 302
    WHEN            shift and go to state 287
    ELSE            shift and go to state 288

    case                           shift and go to state 303

state 286

    (74) case_list -> case .

    END             reduce using rule 74 (case_list -> case .)
    WHEN            reduce using rule 74 (case_list -> case .)
    ELSE            reduce using rule 74 (case_list -> case .)


state 287

    (75) case -> WHEN . expresion THEN instrucciones_funct_list
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 304
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 288

    (76) case -> ELSE . instrucciones_funct_list
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)
    WHEN            reduce using rule 141 (empty -> .)
    ELSE            reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 305
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 289

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 306
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 290

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 307
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 291

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 308
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! BEGIN           [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 292

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 309
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 293

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list . BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    BEGIN           shift and go to state 310
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! BEGIN           [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 294

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 311


state 295

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 312
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 296

    (85) asignacion -> ID DOSPUNTOS IGUAL expresion . PTCOMA
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PTCOMA          shift and go to state 313
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 297

    (86) declaracion -> ID tipo DOSPUNTOS IGUAL . expresion PTCOMA
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 314
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 298

    (88) declaracion -> ID tipo DEFAULT expresion . PTCOMA
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PTCOMA          shift and go to state 315
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 299

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 316


state 300

    (82) lista_imprimir -> lista_imprimir COMA sent_imprimir .

    PTCOMA          reduce using rule 82 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)
    COMA            reduce using rule 82 (lista_imprimir -> lista_imprimir COMA sent_imprimir .)


state 301

    (77) sentencia_if -> IF expresion THEN instrucciones_funct_list . else END IF PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (78) else -> . ELSE instrucciones_funct_list
    (79) else -> . ELSEIF expresion THEN instrucciones_funct_list else
    (80) else -> .
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 80 (else -> .)
    ELSE            shift and go to state 318
    ELSEIF          shift and go to state 319
    END             reduce using rule 80 (else -> .)
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! ELSE            [ reduce using rule 141 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]
  ! END             [ reduce using rule 141 (empty -> .) ]

    else                           shift and go to state 317
    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 302

    (72) sentencia_switch -> CASE expresion case_list END . CASE PTCOMA

    CASE            shift and go to state 320


state 303

    (73) case_list -> case_list case .

    END             reduce using rule 73 (case_list -> case_list case .)
    WHEN            reduce using rule 73 (case_list -> case_list case .)
    ELSE            reduce using rule 73 (case_list -> case_list case .)


state 304

    (75) case -> WHEN expresion . THEN instrucciones_funct_list
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    THEN            shift and go to state 321
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 305

    (76) case -> ELSE instrucciones_funct_list .
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 76 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 76 (case -> ELSE instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 76 (case -> ELSE instrucciones_funct_list .)
    END             reduce using rule 76 (case -> ELSE instrucciones_funct_list .)
    WHEN            reduce using rule 76 (case -> ELSE instrucciones_funct_list .)
    ELSE            reduce using rule 76 (case -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]
  ! END             [ reduce using rule 141 (empty -> .) ]
  ! WHEN            [ reduce using rule 141 (empty -> .) ]
  ! ELSE            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 306

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 322


state 307

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 323


state 308

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 324
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 309

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 325


state 310

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN . instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 326
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 311

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 327


state 312

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 328


state 313

    (85) asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .

    END             reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    PTCOMA          reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    error           reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    ID              reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    RAISE           reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    IF              reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    CASE            reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    SELECT          reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    CALL            reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    BEGIN           reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    ELSE            reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    ELSEIF          reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)
    WHEN            reduce using rule 85 (asignacion -> ID DOSPUNTOS IGUAL expresion PTCOMA .)


state 314

    (86) declaracion -> ID tipo DOSPUNTOS IGUAL expresion . PTCOMA
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    PTCOMA          shift and go to state 329
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 315

    (88) declaracion -> ID tipo DEFAULT expresion PTCOMA .

    END             reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    PTCOMA          reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    error           reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    ID              reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    RAISE           reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    IF              reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    CASE            reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    SELECT          reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    CALL            reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    BEGIN           reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    ELSE            reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    ELSEIF          reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)
    WHEN            reduce using rule 88 (declaracion -> ID tipo DEFAULT expresion PTCOMA .)


state 316

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 330


state 317

    (77) sentencia_if -> IF expresion THEN instrucciones_funct_list else . END IF PTCOMA

    END             shift and go to state 331


state 318

    (78) else -> ELSE . instrucciones_funct_list
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 332
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 319

    (79) else -> ELSEIF . expresion THEN instrucciones_funct_list else
    (110) expresion -> . log
    (111) log -> . expresion AND expresion
    (112) log -> . expresion ORR expresion
    (113) log -> . rel
    (114) rel -> . arit MAYOR arit
    (115) rel -> . arit MENOR arit
    (116) rel -> . arit MAYORIGUAL arit
    (117) rel -> . arit MENORIGUAL arit
    (118) rel -> . arit IGUALIGUAL arit
    (119) rel -> . arit NOTIGUAL arit
    (120) rel -> . arit
    (121) arit -> . arit POR arit
    (122) arit -> . arit DIV arit
    (123) arit -> . arit MAS arit
    (124) arit -> . arit MENOS arit
    (125) arit -> . arit MOD arit
    (126) arit -> . arit ANDB arit
    (127) arit -> . arit SHIFTI arit
    (128) arit -> . arit SHIFTD arit
    (129) arit -> . arit XORB arit
    (130) arit -> . arit ORB arit
    (131) arit -> . PARA expresion PARC
    (132) arit -> . ID
    (133) arit -> . CADENA
    (134) arit -> . ENTERO
    (135) arit -> . FLOTANTE
    (136) arit -> . MENOS expresion
    (137) arit -> . NOTB expresion
    (138) arit -> . NOTT expresion
    (139) arit -> . TRUE
    (140) arit -> . FALSE

    PARA            shift and go to state 54
    ID              shift and go to state 53
    CADENA          shift and go to state 62
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 64
    MENOS           shift and go to state 61
    NOTB            shift and go to state 65
    NOTT            shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68

    expresion                      shift and go to state 333
    log                            shift and go to state 58
    rel                            shift and go to state 59
    arit                           shift and go to state 60

state 320

    (72) sentencia_switch -> CASE expresion case_list END CASE . PTCOMA

    PTCOMA          shift and go to state 334


state 321

    (75) case -> WHEN expresion THEN . instrucciones_funct_list
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    END             reduce using rule 141 (empty -> .)
    WHEN            reduce using rule 141 (empty -> .)
    ELSE            reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 335
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 322

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 336


state 323

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 337


state 324

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 338
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 325

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 339


state 326

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list . END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    END             shift and go to state 340
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! END             [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 327

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 341


state 328

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 342


state 329

    (86) declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .

    END             reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    PTCOMA          reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    error           reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    ID              reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    RAISE           reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    IF              reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    CASE            reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    SELECT          reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    CALL            reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    BEGIN           reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    ELSE            reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    ELSEIF          reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)
    WHEN            reduce using rule 86 (declaracion -> ID tipo DOSPUNTOS IGUAL expresion PTCOMA .)


state 330

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 343


state 331

    (77) sentencia_if -> IF expresion THEN instrucciones_funct_list else END . IF PTCOMA

    IF              shift and go to state 344


state 332

    (78) else -> ELSE instrucciones_funct_list .
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 78 (else -> ELSE instrucciones_funct_list .)
    END             reduce using rule 78 (else -> ELSE instrucciones_funct_list .)
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]
  ! END             [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 333

    (79) else -> ELSEIF expresion . THEN instrucciones_funct_list else
    (111) log -> expresion . AND expresion
    (112) log -> expresion . ORR expresion

    THEN            shift and go to state 345
    AND             shift and go to state 93
    ORR             shift and go to state 94


state 334

    (72) sentencia_switch -> CASE expresion case_list END CASE PTCOMA .

    END             reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    PTCOMA          reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    error           reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    ID              reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    RAISE           reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    IF              reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    CASE            reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    SELECT          reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    CALL            reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    BEGIN           reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    ELSE            reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    ELSEIF          reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)
    WHEN            reduce using rule 72 (sentencia_switch -> CASE expresion case_list END CASE PTCOMA .)


state 335

    (75) case -> WHEN expresion THEN instrucciones_funct_list .
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 75 (case -> WHEN expresion THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for WHEN resolved using rule 75 (case -> WHEN expresion THEN instrucciones_funct_list .)
  ! reduce/reduce conflict for ELSE resolved using rule 75 (case -> WHEN expresion THEN instrucciones_funct_list .)
    END             reduce using rule 75 (case -> WHEN expresion THEN instrucciones_funct_list .)
    WHEN            reduce using rule 75 (case -> WHEN expresion THEN instrucciones_funct_list .)
    ELSE            reduce using rule 75 (case -> WHEN expresion THEN instrucciones_funct_list .)
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]
  ! END             [ reduce using rule 141 (empty -> .) ]
  ! WHEN            [ reduce using rule 141 (empty -> .) ]
  ! ELSE            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 336

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 346


state 337

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 347


state 338

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 348


state 339

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 349


state 340

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END . PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    PTCOMA          shift and go to state 350


state 341

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 351


state 342

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 352


state 343

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 353


state 344

    (77) sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF . PTCOMA

    PTCOMA          shift and go to state 354


state 345

    (79) else -> ELSEIF expresion THEN . instrucciones_funct_list else
    (13) instrucciones_funct_list -> . instrucciones_funct_list instrucciones_funct_sent
    (14) instrucciones_funct_list -> . instrucciones_funct_sent
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15
    ELSE            reduce using rule 141 (empty -> .)
    ELSEIF          reduce using rule 141 (empty -> .)
    END             reduce using rule 141 (empty -> .)

  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]

    instrucciones_funct_list       shift and go to state 355
    instrucciones_funct_sent       shift and go to state 244
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 346

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 356


state 347

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 357


state 348

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 358


state 349

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 359


state 350

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA . DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 360


state 351

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 361


state 352

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 362


state 353

    (55) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 55 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 354

    (77) sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .

    END             reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    PTCOMA          reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    error           reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    ID              reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    RAISE           reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    IF              reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    CASE            reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    SELECT          reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    CALL            reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    BEGIN           reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSE            reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    ELSEIF          reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)
    WHEN            reduce using rule 77 (sentencia_if -> IF expresion THEN instrucciones_funct_list else END IF PTCOMA .)


state 355

    (79) else -> ELSEIF expresion THEN instrucciones_funct_list . else
    (13) instrucciones_funct_list -> instrucciones_funct_list . instrucciones_funct_sent
    (78) else -> . ELSE instrucciones_funct_list
    (79) else -> . ELSEIF expresion THEN instrucciones_funct_list else
    (80) else -> .
    (15) instrucciones_funct_sent -> . asignacion
    (16) instrucciones_funct_sent -> . declaracion
    (17) instrucciones_funct_sent -> . imprimir
    (18) instrucciones_funct_sent -> . sentencia_if
    (19) instrucciones_funct_sent -> . sentencia_switch
    (20) instrucciones_funct_sent -> . PTCOMA
    (21) instrucciones_funct_sent -> . llamada_funcion
    (22) instrucciones_funct_sent -> . empty
    (23) instrucciones_funct_sent -> . error
    (85) asignacion -> . ID DOSPUNTOS IGUAL expresion PTCOMA
    (86) declaracion -> . ID tipo DOSPUNTOS IGUAL expresion PTCOMA
    (87) declaracion -> . ID tipo PTCOMA
    (88) declaracion -> . ID tipo DEFAULT expresion PTCOMA
    (81) imprimir -> . RAISE lista_imprimir PTCOMA
    (77) sentencia_if -> . IF expresion THEN instrucciones_funct_list else END IF PTCOMA
    (72) sentencia_switch -> . CASE expresion case_list END CASE PTCOMA
    (63) llamada_funcion -> . SELECT ID PARA params PARC PTCOMA
    (64) llamada_funcion -> . CALL ID PARA params PARC PTCOMA
    (141) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for PTCOMA resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for RAISE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for SELECT resolved as shift
  ! shift/reduce conflict for CALL resolved as shift
  ! reduce/reduce conflict for END resolved using rule 80 (else -> .)
    ELSE            shift and go to state 318
    ELSEIF          shift and go to state 319
    END             reduce using rule 80 (else -> .)
    PTCOMA          shift and go to state 243
    error           shift and go to state 252
    ID              shift and go to state 241
    RAISE           shift and go to state 253
    IF              shift and go to state 254
    CASE            shift and go to state 255
    SELECT          shift and go to state 14
    CALL            shift and go to state 15

  ! ELSE            [ reduce using rule 141 (empty -> .) ]
  ! ELSEIF          [ reduce using rule 141 (empty -> .) ]
  ! PTCOMA          [ reduce using rule 141 (empty -> .) ]
  ! error           [ reduce using rule 141 (empty -> .) ]
  ! ID              [ reduce using rule 141 (empty -> .) ]
  ! RAISE           [ reduce using rule 141 (empty -> .) ]
  ! IF              [ reduce using rule 141 (empty -> .) ]
  ! CASE            [ reduce using rule 141 (empty -> .) ]
  ! SELECT          [ reduce using rule 141 (empty -> .) ]
  ! CALL            [ reduce using rule 141 (empty -> .) ]
  ! END             [ reduce using rule 141 (empty -> .) ]

    else                           shift and go to state 363
    instrucciones_funct_sent       shift and go to state 264
    asignacion                     shift and go to state 245
    declaracion                    shift and go to state 246
    imprimir                       shift and go to state 247
    sentencia_if                   shift and go to state 248
    sentencia_switch               shift and go to state 249
    llamada_funcion                shift and go to state 250
    empty                          shift and go to state 251

state 356

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 364


state 357

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 365


state 358

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 366


state 359

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 367


state 360

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR . DOLAR LANGUAGE PLPGSQL PTCOMA

    DOLAR           shift and go to state 368


state 361

    (59) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 59 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 362

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 369


state 363

    (79) else -> ELSEIF expresion THEN instrucciones_funct_list else .

    END             reduce using rule 79 (else -> ELSEIF expresion THEN instrucciones_funct_list else .)


state 364

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 370


state 365

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 371


state 366

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 372


state 367

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 373


state 368

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR . LANGUAGE PLPGSQL PTCOMA

    LANGUAGE        shift and go to state 374


state 369

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 375


state 370

    (56) funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 56 (funcion -> CREATE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 371

    (57) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 57 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 372

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 376


state 373

    (61) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 61 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 374

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE . PLPGSQL PTCOMA

    PLPGSQL         shift and go to state 377


state 375

    (60) funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 60 (funcion -> CREATE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 376

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 378


state 377

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL . PTCOMA

    PTCOMA          shift and go to state 379


state 378

    (58) funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 58 (funcion -> CREATE OR REPLACE FUNCTION ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)


state 379

    (62) funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .

    error           reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CREATE          reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SELECT          reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    CALL            reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    SHOW            reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    USE             reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    DROP            reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)
    $end            reduce using rule 62 (funcion -> CREATE OR REPLACE PROCEDURE ID PARA parametros PARC RETURNS tipo AS DOLAR DOLAR DECLARE instrucciones_funct_list BEGIN instrucciones_funct_list END PTCOMA DOLAR DOLAR LANGUAGE PLPGSQL PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAYOR in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 60 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for IGUALIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for NOTIGUAL in state 60 resolved as shift
WARNING: shift/reduce conflict for POR in state 60 resolved as shift
WARNING: shift/reduce conflict for DIV in state 60 resolved as shift
WARNING: shift/reduce conflict for MAS in state 60 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 60 resolved as shift
WARNING: shift/reduce conflict for MOD in state 60 resolved as shift
WARNING: shift/reduce conflict for ANDB in state 60 resolved as shift
WARNING: shift/reduce conflict for SHIFTI in state 60 resolved as shift
WARNING: shift/reduce conflict for SHIFTD in state 60 resolved as shift
WARNING: shift/reduce conflict for XORB in state 60 resolved as shift
WARNING: shift/reduce conflict for ORB in state 60 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 235 resolved as shift
WARNING: shift/reduce conflict for error in state 235 resolved as shift
WARNING: shift/reduce conflict for ID in state 235 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 235 resolved as shift
WARNING: shift/reduce conflict for IF in state 235 resolved as shift
WARNING: shift/reduce conflict for CASE in state 235 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 235 resolved as shift
WARNING: shift/reduce conflict for CALL in state 235 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 236 resolved as shift
WARNING: shift/reduce conflict for error in state 236 resolved as shift
WARNING: shift/reduce conflict for ID in state 236 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 236 resolved as shift
WARNING: shift/reduce conflict for IF in state 236 resolved as shift
WARNING: shift/reduce conflict for CASE in state 236 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 236 resolved as shift
WARNING: shift/reduce conflict for CALL in state 236 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 239 resolved as shift
WARNING: shift/reduce conflict for error in state 239 resolved as shift
WARNING: shift/reduce conflict for ID in state 239 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 239 resolved as shift
WARNING: shift/reduce conflict for IF in state 239 resolved as shift
WARNING: shift/reduce conflict for CASE in state 239 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 239 resolved as shift
WARNING: shift/reduce conflict for CALL in state 239 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 240 resolved as shift
WARNING: shift/reduce conflict for error in state 240 resolved as shift
WARNING: shift/reduce conflict for ID in state 240 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 240 resolved as shift
WARNING: shift/reduce conflict for IF in state 240 resolved as shift
WARNING: shift/reduce conflict for CASE in state 240 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 240 resolved as shift
WARNING: shift/reduce conflict for CALL in state 240 resolved as shift
WARNING: shift/reduce conflict for END in state 242 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 242 resolved as shift
WARNING: shift/reduce conflict for error in state 242 resolved as shift
WARNING: shift/reduce conflict for ID in state 242 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 242 resolved as shift
WARNING: shift/reduce conflict for IF in state 242 resolved as shift
WARNING: shift/reduce conflict for CASE in state 242 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 242 resolved as shift
WARNING: shift/reduce conflict for CALL in state 242 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 256 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 256 resolved as shift
WARNING: shift/reduce conflict for error in state 256 resolved as shift
WARNING: shift/reduce conflict for ID in state 256 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 256 resolved as shift
WARNING: shift/reduce conflict for IF in state 256 resolved as shift
WARNING: shift/reduce conflict for CASE in state 256 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 256 resolved as shift
WARNING: shift/reduce conflict for CALL in state 256 resolved as shift
WARNING: shift/reduce conflict for END in state 259 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 259 resolved as shift
WARNING: shift/reduce conflict for error in state 259 resolved as shift
WARNING: shift/reduce conflict for ID in state 259 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 259 resolved as shift
WARNING: shift/reduce conflict for IF in state 259 resolved as shift
WARNING: shift/reduce conflict for CASE in state 259 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 259 resolved as shift
WARNING: shift/reduce conflict for CALL in state 259 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 260 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 260 resolved as shift
WARNING: shift/reduce conflict for error in state 260 resolved as shift
WARNING: shift/reduce conflict for ID in state 260 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 260 resolved as shift
WARNING: shift/reduce conflict for IF in state 260 resolved as shift
WARNING: shift/reduce conflict for CASE in state 260 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 260 resolved as shift
WARNING: shift/reduce conflict for CALL in state 260 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 270 resolved as shift
WARNING: shift/reduce conflict for error in state 270 resolved as shift
WARNING: shift/reduce conflict for ID in state 270 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 270 resolved as shift
WARNING: shift/reduce conflict for IF in state 270 resolved as shift
WARNING: shift/reduce conflict for CASE in state 270 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 270 resolved as shift
WARNING: shift/reduce conflict for CALL in state 270 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 271 resolved as shift
WARNING: shift/reduce conflict for error in state 271 resolved as shift
WARNING: shift/reduce conflict for ID in state 271 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 271 resolved as shift
WARNING: shift/reduce conflict for IF in state 271 resolved as shift
WARNING: shift/reduce conflict for CASE in state 271 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 271 resolved as shift
WARNING: shift/reduce conflict for CALL in state 271 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 272 resolved as shift
WARNING: shift/reduce conflict for error in state 272 resolved as shift
WARNING: shift/reduce conflict for ID in state 272 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 272 resolved as shift
WARNING: shift/reduce conflict for IF in state 272 resolved as shift
WARNING: shift/reduce conflict for CASE in state 272 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 272 resolved as shift
WARNING: shift/reduce conflict for CALL in state 272 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 273 resolved as shift
WARNING: shift/reduce conflict for error in state 273 resolved as shift
WARNING: shift/reduce conflict for ID in state 273 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 273 resolved as shift
WARNING: shift/reduce conflict for IF in state 273 resolved as shift
WARNING: shift/reduce conflict for CASE in state 273 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 273 resolved as shift
WARNING: shift/reduce conflict for CALL in state 273 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 274 resolved as shift
WARNING: shift/reduce conflict for error in state 274 resolved as shift
WARNING: shift/reduce conflict for ID in state 274 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 274 resolved as shift
WARNING: shift/reduce conflict for IF in state 274 resolved as shift
WARNING: shift/reduce conflict for CASE in state 274 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 274 resolved as shift
WARNING: shift/reduce conflict for CALL in state 274 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 276 resolved as shift
WARNING: shift/reduce conflict for error in state 276 resolved as shift
WARNING: shift/reduce conflict for ID in state 276 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 276 resolved as shift
WARNING: shift/reduce conflict for IF in state 276 resolved as shift
WARNING: shift/reduce conflict for CASE in state 276 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 276 resolved as shift
WARNING: shift/reduce conflict for CALL in state 276 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 284 resolved as shift
WARNING: shift/reduce conflict for error in state 284 resolved as shift
WARNING: shift/reduce conflict for ID in state 284 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 284 resolved as shift
WARNING: shift/reduce conflict for IF in state 284 resolved as shift
WARNING: shift/reduce conflict for CASE in state 284 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 284 resolved as shift
WARNING: shift/reduce conflict for CALL in state 284 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 288 resolved as shift
WARNING: shift/reduce conflict for error in state 288 resolved as shift
WARNING: shift/reduce conflict for ID in state 288 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 288 resolved as shift
WARNING: shift/reduce conflict for IF in state 288 resolved as shift
WARNING: shift/reduce conflict for CASE in state 288 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 288 resolved as shift
WARNING: shift/reduce conflict for CALL in state 288 resolved as shift
WARNING: shift/reduce conflict for END in state 289 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 289 resolved as shift
WARNING: shift/reduce conflict for error in state 289 resolved as shift
WARNING: shift/reduce conflict for ID in state 289 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 289 resolved as shift
WARNING: shift/reduce conflict for IF in state 289 resolved as shift
WARNING: shift/reduce conflict for CASE in state 289 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 289 resolved as shift
WARNING: shift/reduce conflict for CALL in state 289 resolved as shift
WARNING: shift/reduce conflict for END in state 290 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 290 resolved as shift
WARNING: shift/reduce conflict for error in state 290 resolved as shift
WARNING: shift/reduce conflict for ID in state 290 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 290 resolved as shift
WARNING: shift/reduce conflict for IF in state 290 resolved as shift
WARNING: shift/reduce conflict for CASE in state 290 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 290 resolved as shift
WARNING: shift/reduce conflict for CALL in state 290 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 291 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 291 resolved as shift
WARNING: shift/reduce conflict for error in state 291 resolved as shift
WARNING: shift/reduce conflict for ID in state 291 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 291 resolved as shift
WARNING: shift/reduce conflict for IF in state 291 resolved as shift
WARNING: shift/reduce conflict for CASE in state 291 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 291 resolved as shift
WARNING: shift/reduce conflict for CALL in state 291 resolved as shift
WARNING: shift/reduce conflict for END in state 292 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 292 resolved as shift
WARNING: shift/reduce conflict for error in state 292 resolved as shift
WARNING: shift/reduce conflict for ID in state 292 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 292 resolved as shift
WARNING: shift/reduce conflict for IF in state 292 resolved as shift
WARNING: shift/reduce conflict for CASE in state 292 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 292 resolved as shift
WARNING: shift/reduce conflict for CALL in state 292 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 293 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 293 resolved as shift
WARNING: shift/reduce conflict for error in state 293 resolved as shift
WARNING: shift/reduce conflict for ID in state 293 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 293 resolved as shift
WARNING: shift/reduce conflict for IF in state 293 resolved as shift
WARNING: shift/reduce conflict for CASE in state 293 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 293 resolved as shift
WARNING: shift/reduce conflict for CALL in state 293 resolved as shift
WARNING: shift/reduce conflict for END in state 295 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 295 resolved as shift
WARNING: shift/reduce conflict for error in state 295 resolved as shift
WARNING: shift/reduce conflict for ID in state 295 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 295 resolved as shift
WARNING: shift/reduce conflict for IF in state 295 resolved as shift
WARNING: shift/reduce conflict for CASE in state 295 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 295 resolved as shift
WARNING: shift/reduce conflict for CALL in state 295 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 301 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 301 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 301 resolved as shift
WARNING: shift/reduce conflict for error in state 301 resolved as shift
WARNING: shift/reduce conflict for ID in state 301 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 301 resolved as shift
WARNING: shift/reduce conflict for IF in state 301 resolved as shift
WARNING: shift/reduce conflict for CASE in state 301 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 301 resolved as shift
WARNING: shift/reduce conflict for CALL in state 301 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 305 resolved as shift
WARNING: shift/reduce conflict for error in state 305 resolved as shift
WARNING: shift/reduce conflict for ID in state 305 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 305 resolved as shift
WARNING: shift/reduce conflict for IF in state 305 resolved as shift
WARNING: shift/reduce conflict for CASE in state 305 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 305 resolved as shift
WARNING: shift/reduce conflict for CALL in state 305 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 308 resolved as shift
WARNING: shift/reduce conflict for error in state 308 resolved as shift
WARNING: shift/reduce conflict for ID in state 308 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 308 resolved as shift
WARNING: shift/reduce conflict for IF in state 308 resolved as shift
WARNING: shift/reduce conflict for CASE in state 308 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 308 resolved as shift
WARNING: shift/reduce conflict for CALL in state 308 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 310 resolved as shift
WARNING: shift/reduce conflict for error in state 310 resolved as shift
WARNING: shift/reduce conflict for ID in state 310 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 310 resolved as shift
WARNING: shift/reduce conflict for IF in state 310 resolved as shift
WARNING: shift/reduce conflict for CASE in state 310 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 310 resolved as shift
WARNING: shift/reduce conflict for CALL in state 310 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 318 resolved as shift
WARNING: shift/reduce conflict for error in state 318 resolved as shift
WARNING: shift/reduce conflict for ID in state 318 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 318 resolved as shift
WARNING: shift/reduce conflict for IF in state 318 resolved as shift
WARNING: shift/reduce conflict for CASE in state 318 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 318 resolved as shift
WARNING: shift/reduce conflict for CALL in state 318 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 321 resolved as shift
WARNING: shift/reduce conflict for error in state 321 resolved as shift
WARNING: shift/reduce conflict for ID in state 321 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 321 resolved as shift
WARNING: shift/reduce conflict for IF in state 321 resolved as shift
WARNING: shift/reduce conflict for CASE in state 321 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 321 resolved as shift
WARNING: shift/reduce conflict for CALL in state 321 resolved as shift
WARNING: shift/reduce conflict for END in state 324 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 324 resolved as shift
WARNING: shift/reduce conflict for error in state 324 resolved as shift
WARNING: shift/reduce conflict for ID in state 324 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 324 resolved as shift
WARNING: shift/reduce conflict for IF in state 324 resolved as shift
WARNING: shift/reduce conflict for CASE in state 324 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 324 resolved as shift
WARNING: shift/reduce conflict for CALL in state 324 resolved as shift
WARNING: shift/reduce conflict for END in state 326 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 326 resolved as shift
WARNING: shift/reduce conflict for error in state 326 resolved as shift
WARNING: shift/reduce conflict for ID in state 326 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 326 resolved as shift
WARNING: shift/reduce conflict for IF in state 326 resolved as shift
WARNING: shift/reduce conflict for CASE in state 326 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 326 resolved as shift
WARNING: shift/reduce conflict for CALL in state 326 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 332 resolved as shift
WARNING: shift/reduce conflict for error in state 332 resolved as shift
WARNING: shift/reduce conflict for ID in state 332 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 332 resolved as shift
WARNING: shift/reduce conflict for IF in state 332 resolved as shift
WARNING: shift/reduce conflict for CASE in state 332 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 332 resolved as shift
WARNING: shift/reduce conflict for CALL in state 332 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 335 resolved as shift
WARNING: shift/reduce conflict for error in state 335 resolved as shift
WARNING: shift/reduce conflict for ID in state 335 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 335 resolved as shift
WARNING: shift/reduce conflict for IF in state 335 resolved as shift
WARNING: shift/reduce conflict for CASE in state 335 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 335 resolved as shift
WARNING: shift/reduce conflict for CALL in state 335 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 345 resolved as shift
WARNING: shift/reduce conflict for error in state 345 resolved as shift
WARNING: shift/reduce conflict for ID in state 345 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 345 resolved as shift
WARNING: shift/reduce conflict for IF in state 345 resolved as shift
WARNING: shift/reduce conflict for CASE in state 345 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 345 resolved as shift
WARNING: shift/reduce conflict for CALL in state 345 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 355 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 355 resolved as shift
WARNING: shift/reduce conflict for PTCOMA in state 355 resolved as shift
WARNING: shift/reduce conflict for error in state 355 resolved as shift
WARNING: shift/reduce conflict for ID in state 355 resolved as shift
WARNING: shift/reduce conflict for RAISE in state 355 resolved as shift
WARNING: shift/reduce conflict for IF in state 355 resolved as shift
WARNING: shift/reduce conflict for CASE in state 355 resolved as shift
WARNING: shift/reduce conflict for SELECT in state 355 resolved as shift
WARNING: shift/reduce conflict for CALL in state 355 resolved as shift
WARNING: reduce/reduce conflict in state 301 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 301
WARNING: reduce/reduce conflict in state 305 resolved using rule (case -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 305
WARNING: reduce/reduce conflict in state 332 resolved using rule (else -> ELSE instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 332
WARNING: reduce/reduce conflict in state 335 resolved using rule (case -> WHEN expresion THEN instrucciones_funct_list)
WARNING: rejected rule (empty -> <empty>) in state 335
WARNING: reduce/reduce conflict in state 355 resolved using rule (else -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 355
