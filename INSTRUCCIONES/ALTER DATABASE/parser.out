Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABS
    ACOS
    ACOSD
    ACOSH
    ALL
    ANY
    ASIN
    ASIND
    ASINH
    ATAN
    ATAN2
    ATAN2D
    ATAND
    ATANH
    AVG
    CBRT
    CEIL
    CEILING
    CEJILLA
    CONVERT
    COS
    COSD
    COSH
    COT
    COTD
    COUNT
    DECODE
    DEGREES
    DIV
    D_OR
    ENCODE
    EXP
    FACTORIAL
    FLOOR
    FLOTANTE
    GCD
    GET_BYTE
    HASHTAG
    IN
    LCM
    LENGTH
    LIKE
    LN
    LOG
    LOG10
    MAX
    MAYMAY
    MD5
    MENMEN
    MIN
    MIN_SCALE
    MOD
    MODULO
    MULTI
    PI
    POWER
    PUNTO
    RADIANS
    RANDOM
    ROUND
    SCALE
    SETSEED
    SET_BYTE
    SHA256
    SIGN
    SIN
    SIND
    SINH
    SOME
    SQRT
    SUBSTR
    SUBSTRING
    SUM
    S_OR
    TAN
    TAND
    TANH
    TRIM
    TRIM_SCALE
    TRUC
    WIDTH_BUCKET
    Y

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> create_Table_isnrt
Rule 5     instruccion -> select_insrt
Rule 6     instruccion -> insert_insrt
Rule 7     instruccion -> delete_insrt
Rule 8     instruccion -> update_insrt
Rule 9     instruccion -> createDB_insrt
Rule 10    instruccion -> drop_insrt
Rule 11    instruccion -> alterDB_insrt
Rule 12    instruccion -> alterTable_insrt
Rule 13    instruccion -> USE ID DATABASE PTCOMA
Rule 14    instruccion -> TIPO_ENUM_INSRT
Rule 15    createDB_insrt -> CREATE DATABASE ID PTCOMA
Rule 16    createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA
Rule 17    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA
Rule 18    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
Rule 19    createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA
Rule 20    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
Rule 21    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 22    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
Rule 23    createDB_unParam -> OWNER ID
Rule 24    createDB_unParam -> MODE ENTERO
Rule 25    createDB_unParam -> OWNER IGUAL ID
Rule 26    createDB_unParam -> MODE IGUAL ENTERO
Rule 27    createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA
Rule 28    createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
Rule 29    createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 30    createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
Rule 31    createDB_dosParam -> OWNER ID MODE ENTERO
Rule 32    createDB_dosParam -> OWNER ID MODE IGUAL ENTERO
Rule 33    createDB_dosParam -> MODE ENTERO OWNER ID
Rule 34    createDB_dosParam -> MODE ENTERO OWNER IGUAL ID
Rule 35    createDB_dosParam -> OWNER IGUAL ID MODE ENTERO
Rule 36    createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO
Rule 37    createDB_dosParam -> MODE IGUAL ENTERO OWNER ID
Rule 38    createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID
Rule 39    TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA
Rule 40    drop_insrt -> DROP TABLE lista_drop_id PTCOMA
Rule 41    lista_drop_id -> lista_drop_id COMA ID
Rule 42    lista_drop_id -> ID
Rule 43    alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA
Rule 44    alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
Rule 45    usuariosDB -> ID
Rule 46    usuariosDB -> CURRENT_USER
Rule 47    usuariosDB -> SESSION_USER
Rule 48    usuariosDB -> CADENA
Rule 49    Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO
Rule 50    alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
Rule 51    alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
Rule 52    alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
Rule 53    campos_add_Column -> campos_add_Column COMA ID TIPO_DATO
Rule 54    campos_add_Column -> ID TIPO_DATO
Rule 55    alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
Rule 56    alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
Rule 57    alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
Rule 58    alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
Rule 59    alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
Rule 60    alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA
Rule 61    alterTable_alter -> alterTable_alter COMA Table_alter
Rule 62    alterTable_alter -> Table_alter
Rule 63    Table_alter -> ALTER COLUMN ID SET NOT NULL
Rule 64    campos_c -> campos_c COMA ID
Rule 65    campos_c -> ID
Rule 66    create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia
Rule 67    opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA
Rule 68    opcion_herencia -> PTCOMA
Rule 69    cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable
Rule 70    cuerpo_createTable_lista -> cuerpo_createTable
Rule 71    cuerpo_createTable -> ID TIPO_DATO
Rule 72    cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY
Rule 73    cuerpo_createTable -> ID TIPO_DATO REFERENCES ID
Rule 74    cuerpo_createTable -> ID TIPO_DATO NOT NULL
Rule 75    cuerpo_createTable -> ID TIPO_DATO NULL
Rule 76    cuerpo_createTable -> PRIMARY KEY PAR_A campos_c PAR_C
Rule 77    cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C
Rule 78    cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C
Rule 79    cuerpo_createTable -> CONSTRAINT ID
Rule 80    TIPO_DATO -> TEXT
Rule 81    TIPO_DATO -> FLOAT
Rule 82    TIPO_DATO -> INTEGER
Rule 83    TIPO_DATO -> SMALLINT
Rule 84    TIPO_DATO -> MONEY
Rule 85    TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
Rule 86    TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
Rule 87    TIPO_DATO -> BIGINT
Rule 88    TIPO_DATO -> REAL
Rule 89    TIPO_DATO -> DOUBLE PRECISION
Rule 90    TIPO_DATO -> INTERVAL extract_time TO extract_time
Rule 91    TIPO_DATO -> INTERVAL
Rule 92    TIPO_DATO -> TIME
Rule 93    TIPO_DATO -> TIMESTAMP
Rule 94    TIPO_DATO -> DATE
Rule 95    TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C
Rule 96    TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C
Rule 97    TIPO_DATO -> CHAR PAR_A ENTERO PAR_C
Rule 98    TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C
Rule 99    TIPO_DATO -> CHAR PAR_A PAR_C
Rule 100   TIPO_DATO -> CHARACTER PAR_A PAR_C
Rule 101   update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA
Rule 102   lista_update -> lista_update COMA parametro_update
Rule 103   lista_update -> parametro_update
Rule 104   parametro_update -> ID IGUAL expresion
Rule 105   delete_insrt -> DELETE FROM ONLY ID PTCOMA
Rule 106   delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA
Rule 107   delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA
Rule 108   delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
Rule 109   delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA
Rule 110   delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
Rule 111   delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA
Rule 112   delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
Rule 113   delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
Rule 114   delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA
Rule 115   delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA
Rule 116   delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA
Rule 117   delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
Rule 118   delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA
Rule 119   delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA
Rule 120   returning_exp -> ASTERISCO
Rule 121   returning_exp -> campos_c
Rule 122   as_ID -> ID
Rule 123   as_ID -> CADENA
Rule 124   select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA
Rule 125   select_insrt -> select_insrt UNION select_insrt
Rule 126   select_insrt -> select_insrt INTERSECT select_insrt
Rule 127   select_insrt -> select_insrt EXCEPT select_insrt
Rule 128   opcion_select_tm -> opcion_select_lista FROM opcion_from
Rule 129   opcion_select_tm -> opcion_select_lista AS as_ID FROM opcion_from
Rule 130   opcion_select_tm -> EXTRACT PAR_A extract_time FROM TIMESTAMP CADENA PAR_C PTCOMA
Rule 131   opcion_select_tm -> DATE_PART PAR_A CADENA COMA INTERVAL CADENA PAR_C PTCOMA
Rule 132   opcion_select_tm -> NOW PAR_A PAR_C PTCOMA
Rule 133   opcion_select_tm -> CURRENT_DATE PTCOMA
Rule 134   opcion_select_tm -> CURRENT_TIME PTCOMA
Rule 135   opcion_select_tm -> TIMESTAMP CADENA PTCOMA
Rule 136   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 137   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 138   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 139   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 140   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 141   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 142   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 143   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 144   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 145   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 146   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 147   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 148   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 149   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 150   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 151   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 152   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 153   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 154   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 155   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 156   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 157   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 158   opcion_from -> ID opcion_sobrenombre WHERE expresion_where LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 159   opcion_from -> ID opcion_sobrenombre LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 160   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 161   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 162   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 163   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 164   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 165   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 166   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 167   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 168   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 169   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 170   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 171   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 172   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 173   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 174   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 175   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 176   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 177   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 178   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 179   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 180   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c LIMIT opc_lim PTCOMA
Rule 181   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c LIMIT opc_lim PTCOMA
Rule 182   opcion_from -> ID opcion_sobrenombre WHERE expresion_where LIMIT opc_lim PTCOMA
Rule 183   opcion_from -> ID opcion_sobrenombre LIMIT opc_lim PTCOMA
Rule 184   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 185   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 186   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 187   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 188   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden PTCOMA
Rule 189   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c orden PTCOMA
Rule 190   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c orden PTCOMA
Rule 191   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c orden PTCOMA
Rule 192   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 193   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 194   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 195   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 196   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c PTCOMA
Rule 197   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c PTCOMA
Rule 198   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c PTCOMA
Rule 199   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c PTCOMA
Rule 200   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica PTCOMA
Rule 201   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica PTCOMA
Rule 202   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica PTCOMA
Rule 203   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica PTCOMA
Rule 204   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c PTCOMA
Rule 205   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c PTCOMA
Rule 206   opcion_from -> ID opcion_sobrenombre WHERE expresion_where PTCOMA
Rule 207   opcion_from -> ID opcion_sobrenombre PTCOMA
Rule 208   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 209   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 210   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 211   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 212   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 213   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 214   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 215   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 216   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 217   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 218   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 219   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 220   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 221   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 222   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 223   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 224   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 225   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 226   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 227   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 228   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 229   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 230   opcion_from -> ID opcion_sobrenombre WHERE expresion_where LIMIT opc_lim OFFSET ENTERO
Rule 231   opcion_from -> ID opcion_sobrenombre LIMIT opc_lim OFFSET ENTERO
Rule 232   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 233   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 234   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 235   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 236   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim
Rule 237   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim
Rule 238   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim
Rule 239   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c orden LIMIT opc_lim
Rule 240   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 241   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 242   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 243   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 244   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim
Rule 245   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim
Rule 246   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c LIMIT opc_lim
Rule 247   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c LIMIT opc_lim
Rule 248   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim
Rule 249   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim
Rule 250   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica LIMIT opc_lim
Rule 251   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica LIMIT opc_lim
Rule 252   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c LIMIT opc_lim
Rule 253   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c LIMIT opc_lim
Rule 254   opcion_from -> ID opcion_sobrenombre WHERE expresion_where LIMIT opc_lim
Rule 255   opcion_from -> ID opcion_sobrenombre LIMIT opc_lim
Rule 256   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden
Rule 257   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden
Rule 258   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden
Rule 259   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c orden
Rule 260   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden
Rule 261   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c orden
Rule 262   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c orden
Rule 263   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c orden
Rule 264   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c
Rule 265   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c
Rule 266   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica ORDER BY campos_c
Rule 267   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica ORDER BY campos_c
Rule 268   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c ORDER BY campos_c
Rule 269   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c ORDER BY campos_c
Rule 270   opcion_from -> ID opcion_sobrenombre WHERE expresion_where ORDER BY campos_c
Rule 271   opcion_from -> ID opcion_sobrenombre ORDER BY campos_c
Rule 272   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c HAVING expresion_logica
Rule 273   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c HAVING expresion_logica
Rule 274   opcion_from -> ID opcion_sobrenombre WHERE expresion_where HAVING expresion_logica
Rule 275   opcion_from -> ID opcion_sobrenombre HAVING expresion_logica
Rule 276   opcion_from -> ID opcion_sobrenombre WHERE expresion_where GROUP BY campos_c
Rule 277   opcion_from -> ID opcion_sobrenombre GROUP BY campos_c
Rule 278   opcion_from -> ID opcion_sobrenombre WHERE expresion_where
Rule 279   opcion_from -> ID opcion_sobrenombre
Rule 280   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 281   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 282   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 283   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 284   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 285   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 286   opcion_from -> ID WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 287   opcion_from -> ID ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 288   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 289   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 290   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 291   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 292   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 293   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 294   opcion_from -> ID WHERE expresion_where ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 295   opcion_from -> ID ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 296   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 297   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 298   opcion_from -> ID WHERE expresion_where HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 299   opcion_from -> ID HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 300   opcion_from -> ID WHERE expresion_where GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 301   opcion_from -> ID GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 302   opcion_from -> ID WHERE expresion_where LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 303   opcion_from -> ID LIMIT opc_lim OFFSET ENTERO PTCOMA
Rule 304   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 305   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 306   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 307   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 308   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 309   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 310   opcion_from -> ID WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 311   opcion_from -> ID ORDER BY campos_c orden LIMIT opc_lim PTCOMA
Rule 312   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 313   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 314   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 315   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 316   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 317   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 318   opcion_from -> ID WHERE expresion_where ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 319   opcion_from -> ID ORDER BY campos_c LIMIT opc_lim PTCOMA
Rule 320   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 321   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 322   opcion_from -> ID WHERE expresion_where HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 323   opcion_from -> ID HAVING expresion_logica LIMIT opc_lim PTCOMA
Rule 324   opcion_from -> ID WHERE expresion_where GROUP BY campos_c LIMIT opc_lim PTCOMA
Rule 325   opcion_from -> ID GROUP BY campos_c LIMIT opc_lim PTCOMA
Rule 326   opcion_from -> ID WHERE expresion_where LIMIT opc_lim PTCOMA
Rule 327   opcion_from -> ID LIMIT opc_lim PTCOMA
Rule 328   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 329   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 330   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 331   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c orden PTCOMA
Rule 332   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden PTCOMA
Rule 333   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c orden PTCOMA
Rule 334   opcion_from -> ID WHERE expresion_where ORDER BY campos_c orden PTCOMA
Rule 335   opcion_from -> ID ORDER BY campos_c orden PTCOMA
Rule 336   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 337   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 338   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 339   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c PTCOMA
Rule 340   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c PTCOMA
Rule 341   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c PTCOMA
Rule 342   opcion_from -> ID WHERE expresion_where ORDER BY campos_c PTCOMA
Rule 343   opcion_from -> ID ORDER BY campos_c PTCOMA
Rule 344   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica PTCOMA
Rule 345   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica PTCOMA
Rule 346   opcion_from -> ID WHERE expresion_where HAVING expresion_logica PTCOMA
Rule 347   opcion_from -> ID HAVING expresion_logica PTCOMA
Rule 348   opcion_from -> ID WHERE expresion_where GROUP BY campos_c PTCOMA
Rule 349   opcion_from -> ID GROUP BY campos_c PTCOMA
Rule 350   opcion_from -> ID WHERE expresion_where PTCOMA
Rule 351   opcion_from -> ID PTCOMA
Rule 352   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 353   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 354   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 355   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 356   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 357   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 358   opcion_from -> ID WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 359   opcion_from -> ID ORDER BY campos_c orden LIMIT opc_lim OFFSET ENTERO
Rule 360   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 361   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 362   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 363   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 364   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 365   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 366   opcion_from -> ID WHERE expresion_where ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 367   opcion_from -> ID ORDER BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 368   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 369   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 370   opcion_from -> ID WHERE expresion_where HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 371   opcion_from -> ID HAVING expresion_logica LIMIT opc_lim OFFSET ENTERO
Rule 372   opcion_from -> ID WHERE expresion_where GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 373   opcion_from -> ID GROUP BY campos_c LIMIT opc_lim OFFSET ENTERO
Rule 374   opcion_from -> ID WHERE expresion_where LIMIT opc_lim OFFSET ENTERO
Rule 375   opcion_from -> ID LIMIT opc_lim OFFSET ENTERO
Rule 376   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 377   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 378   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 379   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c orden LIMIT opc_lim
Rule 380   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim
Rule 381   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c orden LIMIT opc_lim
Rule 382   opcion_from -> ID WHERE expresion_where ORDER BY campos_c orden LIMIT opc_lim
Rule 383   opcion_from -> ID ORDER BY campos_c orden LIMIT opc_lim
Rule 384   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 385   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 386   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 387   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c LIMIT opc_lim
Rule 388   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim
Rule 389   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c LIMIT opc_lim
Rule 390   opcion_from -> ID WHERE expresion_where ORDER BY campos_c LIMIT opc_lim
Rule 391   opcion_from -> ID ORDER BY campos_c LIMIT opc_lim
Rule 392   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim
Rule 393   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica LIMIT opc_lim
Rule 394   opcion_from -> ID WHERE expresion_where HAVING expresion_logica LIMIT opc_lim
Rule 395   opcion_from -> ID HAVING expresion_logica LIMIT opc_lim
Rule 396   opcion_from -> ID WHERE expresion_where GROUP BY campos_c LIMIT opc_lim
Rule 397   opcion_from -> ID GROUP BY campos_c LIMIT opc_lim
Rule 398   opcion_from -> ID WHERE expresion_where LIMIT opc_lim
Rule 399   opcion_from -> ID LIMIT opc_lim
Rule 400   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden
Rule 401   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c orden
Rule 402   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c orden
Rule 403   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c orden
Rule 404   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c orden
Rule 405   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c orden
Rule 406   opcion_from -> ID WHERE expresion_where ORDER BY campos_c orden
Rule 407   opcion_from -> ID ORDER BY campos_c orden
Rule 408   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c
Rule 409   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica ORDER BY campos_c
Rule 410   opcion_from -> ID WHERE expresion_where HAVING expresion_logica ORDER BY campos_c
Rule 411   opcion_from -> ID HAVING expresion_logica ORDER BY campos_c
Rule 412   opcion_from -> ID WHERE expresion_where GROUP BY campos_c ORDER BY campos_c
Rule 413   opcion_from -> ID GROUP BY campos_c ORDER BY campos_c
Rule 414   opcion_from -> ID WHERE expresion_where ORDER BY campos_c
Rule 415   opcion_from -> ID ORDER BY campos_c
Rule 416   opcion_from -> ID WHERE expresion_where GROUP BY campos_c HAVING expresion_logica
Rule 417   opcion_from -> ID GROUP BY campos_c HAVING expresion_logica
Rule 418   opcion_from -> ID WHERE expresion_where HAVING expresion_logica
Rule 419   opcion_from -> ID HAVING expresion_logica
Rule 420   opcion_from -> ID WHERE expresion_where GROUP BY campos_c
Rule 421   opcion_from -> ID GROUP BY campos_c
Rule 422   opcion_from -> ID WHERE expresion_where
Rule 423   opcion_from -> ID
Rule 424   opcion_from -> PAR_A select_insrt PAR_C ID PTCOMA
Rule 425   opcion_from -> PAR_A select_insrt PAR_C PTCOMA
Rule 426   extract_time -> YEAR
Rule 427   extract_time -> DAY
Rule 428   extract_time -> MONTH
Rule 429   extract_time -> HOUR
Rule 430   extract_time -> MINUTE
Rule 431   extract_time -> SECOND
Rule 432   opcion_sobrenombre -> AS ID
Rule 433   opcion_sobrenombre -> ID
Rule 434   empty -> <empty>
Rule 435   opc_lim -> ENTERO
Rule 436   opc_lim -> ASTERISCO
Rule 437   orden -> DESC
Rule 438   orden -> ASC
Rule 439   expresion_where -> expresion_logica
Rule 440   expresion_where -> expresion_dato BETWEEN expresion_dato AND expresion_dato
Rule 441   expresion_where -> expresion_dato NOT BETWEEN expresion_dato AND expresion_dato
Rule 442   expresion_where -> expresion_dato BETWEEN SYMMETRIC expresion_dato AND expresion_dato
Rule 443   expresion_where -> expresion_dato NOT BETWEEN SYMMETRIC expresion_dato AND expresion_dato
Rule 444   expresion_where -> expresion_dato IS DISTINCT FROM expresion_dato
Rule 445   expresion_where -> expresion_dato IS NOT DISTINCT FROM expresion_dato
Rule 446   expresion_where -> expresion_dato IS NOT DISTINCT FROM expresion_dato AND expresion_dato
Rule 447   expresion_where -> expresion_dato IS NULL
Rule 448   expresion_where -> expresion_dato IS NOT NULL
Rule 449   expresion_where -> expresion_dato ISNULL
Rule 450   expresion_where -> expresion_dato NOTNULL
Rule 451   expresion_where -> expresion_dato IS TRUE
Rule 452   expresion_where -> expresion_dato IS FALSE
Rule 453   expresion_where -> expresion_dato IS NOT TRUE
Rule 454   expresion_where -> expresion_dato IS NOT FALSE
Rule 455   expresion_where -> expresion_dato IS UNKNOWN
Rule 456   expresion_where -> expresion_dato IS NOT UNKNOWN
Rule 457   opcion_select_lista -> DISTINCT campos_c
Rule 458   opcion_select_lista -> opciones_select_lista
Rule 459   opciones_select_lista -> opciones_select_lista COMA opcion_select
Rule 460   opciones_select_lista -> opcion_select
Rule 461   opcion_select_lista -> opcion_select
Rule 462   opcion_select -> case_insrt
Rule 463   opcion_select -> PAR_A select_insrt PAR_C
Rule 464   opcion_select -> expresion
Rule 465   case_insrt -> CASE estructura_when_lista ELSE expresion END
Rule 466   estructura_when_lista -> estructura_when_lista estructura_when
Rule 467   estructura_when_lista -> estructura_when
Rule 468   estructura_when -> WHEN expresion_logica THEN expresion
Rule 469   INNER_JOIN -> join_lista JOIN ID opcional_join
Rule 470   join_lista -> INNER
Rule 471   join_lista -> OUTER
Rule 472   join_lista -> LEFT
Rule 473   join_lista -> RIGHT
Rule 474   join_lista -> FULL
Rule 475   join_lista -> NATURAL
Rule 476   opcional_join -> AS as_ID ON CONDICION_INNER_JOIN
Rule 477   opcional_join -> ON expresion_relacional
Rule 478   opcional_join -> USING PAR_A campos_c PAR_C
Rule 479   opcional_join -> JOIN ID
Rule 480   CONDICION_INNER_JOIN -> expresion_logica
Rule 481   insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
Rule 482   opcion_lista_parametros_lista -> lista_parametros_lista
Rule 483   opcion_lista_parametros_lista -> empty
Rule 484   lista_parametros_lista -> lista_parametros_lista COMA lista_parametros
Rule 485   lista_parametros_lista -> lista_parametros
Rule 486   lista_parametros -> ID
Rule 487   lista_datos -> lista_datos COMA CADENA
Rule 488   lista_datos -> CADENA
Rule 489   expresion -> ENTERO
Rule 490   expresion_dato -> ID
Rule 491   expresion -> expresion SUMA expresion
Rule 492   expresion -> expresion RESTA expresion
Rule 493   expresion -> expresion ASTERISCO expresion
Rule 494   expresion -> expresion DIVISION expresion
Rule 495   expresion_relacional -> expresion MAYQUE expresion
Rule 496   expresion_relacional -> expresion MENQUE expresion
Rule 497   expresion_relacional -> expresion MAYIGQUE expresion
Rule 498   expresion_relacional -> expresion MENIGQUE expresion
Rule 499   expresion_relacional -> expresion DOBLEIG expresion
Rule 500   expresion_relacional -> expresion IGUAL expresion
Rule 501   expresion_relacional -> expresion NOIG expresion
Rule 502   expresion_relacional -> expresion NOIGUAL expresion
Rule 503   expresion_relacional -> expresion
Rule 504   expresion_logica -> expresion_relacional AND expresion_logica
Rule 505   expresion_logica -> expresion_relacional OR expresion_logica
Rule 506   expresion_logica -> NOT expresion_logica
Rule 507   expresion_logica -> expresion_relacional

Terminals, with rules where they appear

ABS                  : 
ACOS                 : 
ACOSD                : 
ACOSH                : 
ADD                  : 52 55 56 57 58 59
ALL                  : 
ALTER                : 43 44 49 50 51 52 55 56 57 58 59 60 63
AND                  : 440 441 442 443 446 504
ANY                  : 
AS                   : 39 116 117 118 119 129 432 476
ASC                  : 438
ASIN                 : 
ASIND                : 
ASINH                : 
ASTERISCO            : 120 436 493
ATAN                 : 
ATAN2                : 
ATAN2D               : 
ATAND                : 
ATANH                : 
AVG                  : 
BETWEEN              : 440 441 442 443
BIGINT               : 87
BY                   : 136 136 137 137 138 139 140 140 141 141 142 143 144 144 145 145 146 147 148 148 149 149 150 151 152 153 156 157 160 160 161 161 162 163 164 164 165 165 166 167 168 168 169 169 170 171 172 172 173 173 174 175 176 177 180 181 184 184 185 185 186 187 188 188 189 189 190 191 192 192 193 193 194 195 196 196 197 197 198 199 200 201 204 205 208 208 209 209 210 211 212 212 213 213 214 215 216 216 217 217 218 219 220 220 221 221 222 223 224 225 228 229 232 232 233 233 234 235 236 236 237 237 238 239 240 240 241 241 242 243 244 244 245 245 246 247 248 249 252 253 256 256 257 257 258 259 260 260 261 261 262 263 264 264 265 265 266 267 268 268 269 269 270 271 272 273 276 277 280 280 281 281 282 283 284 284 285 285 286 287 288 288 289 289 290 291 292 292 293 293 294 295 296 297 300 301 304 304 305 305 306 307 308 308 309 309 310 311 312 312 313 313 314 315 316 316 317 317 318 319 320 321 324 325 328 328 329 329 330 331 332 332 333 333 334 335 336 336 337 337 338 339 340 340 341 341 342 343 344 345 348 349 352 352 353 353 354 355 356 356 357 357 358 359 360 360 361 361 362 363 364 364 365 365 366 367 368 369 372 373 376 376 377 377 378 379 380 380 381 381 382 383 384 384 385 385 386 387 388 388 389 389 390 391 392 393 396 397 400 400 401 401 402 403 404 404 405 405 406 407 408 408 409 409 410 411 412 412 413 413 414 415 416 417 420 421
CADENA               : 48 123 130 131 131 135 487 488
CASE                 : 465
CBRT                 : 
CEIL                 : 
CEILING              : 
CEJILLA              : 
CHAR                 : 97 99
CHARACTER            : 95 98 100
CHECK                : 55 57
COLUMN               : 49 51 52 63
COMA                 : 41 53 61 64 69 85 86 102 131 459 484 487
CONSTRAINT           : 50 57 58 59 79
CONVERT              : 
COS                  : 
COSD                 : 
COSH                 : 
COT                  : 
COTD                 : 
COUNT                : 
CREATE               : 15 16 17 18 19 20 21 22 27 28 29 30 39 66
CURRENT_DATE         : 133
CURRENT_TIME         : 134
CURRENT_USER         : 46
DATABASE             : 13 15 16 17 18 19 20 21 22 27 28 29 30 43 44
DATE                 : 94
DATE_PART            : 131
DAY                  : 427
DECIMAL              : 85
DECODE               : 
DEGREES              : 
DELETE               : 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119
DESC                 : 437
DISTINCT             : 124 444 445 446 457
DIV                  : 
DIVISION             : 494
DOBLEIG              : 499
DOUBLE               : 89
DROP                 : 40 50
D_OR                 : 
ELSE                 : 465
ENCODE               : 
END                  : 465
ENTERO               : 24 26 31 32 33 34 35 36 37 38 85 85 86 86 95 96 97 98 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 435 489
ENUM                 : 39
EXCEPT               : 127
EXISTS               : 17 18 21 22 29 30 107 108 112 113 116 117
EXP                  : 
EXTRACT              : 130
FACTORIAL            : 
FALSE                : 452 454
FLOAT                : 81
FLOOR                : 
FLOTANTE             : 
FOREIGN              : 56 59
FOREING              : 77
FROM                 : 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 124 128 129 130 444 445 446
FULL                 : 474
GCD                  : 
GET_BYTE             : 
GROUP                : 136 137 140 141 144 145 148 149 152 153 156 157 160 161 164 165 168 169 172 173 176 177 180 181 184 185 188 189 192 193 196 197 200 201 204 205 208 209 212 213 216 217 220 221 224 225 228 229 232 233 236 237 240 241 244 245 248 249 252 253 256 257 260 261 264 265 268 269 272 273 276 277 280 281 284 285 288 289 292 293 296 297 300 301 304 305 308 309 312 313 316 317 320 321 324 325 328 329 332 333 336 337 340 341 344 345 348 349 352 353 356 357 360 361 364 365 368 369 372 373 376 377 380 381 384 385 388 389 392 393 396 397 400 401 404 405 408 409 412 413 416 417 420 421
HASHTAG              : 
HAVING               : 136 137 138 139 144 145 146 147 152 153 154 155 160 161 162 163 168 169 170 171 176 177 178 179 184 185 186 187 192 193 194 195 200 201 202 203 208 209 210 211 216 217 218 219 224 225 226 227 232 233 234 235 240 241 242 243 248 249 250 251 256 257 258 259 264 265 266 267 272 273 274 275 280 281 282 283 288 289 290 291 296 297 298 299 304 305 306 307 312 313 314 315 320 321 322 323 328 329 330 331 336 337 338 339 344 345 346 347 352 353 354 355 360 361 362 363 368 369 370 371 376 377 378 379 384 385 386 387 392 393 394 395 400 401 402 403 408 409 410 411 416 417 418 419
HOUR                 : 429
ID                   : 13 15 16 17 18 19 20 21 22 23 25 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 43 44 45 49 50 51 51 51 52 53 54 55 56 57 57 58 58 59 59 60 63 64 65 66 67 71 72 73 73 74 75 77 79 101 101 104 105 106 107 108 109 110 111 112 112 113 113 114 114 115 115 116 117 118 119 122 124 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 432 433 469 479 481 486 490
IF                   : 17 18 21 22 29 30
IGUAL                : 25 26 32 34 35 36 36 37 38 38 101 104 500
IN                   : 
INHERITS             : 67
INNER                : 470
INSERT               : 481
INTEGER              : 82
INTERSECT            : 126
INTERVAL             : 90 91 131
INTO                 : 481
IS                   : 444 445 446 447 448 451 452 453 454 455 456
ISNULL               : 449
JOIN                 : 469 479
KEY                  : 56 59 72 76 77
LCM                  : 
LEFT                 : 472
LENGTH               : 
LIKE                 : 
LIMIT                : 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399
LN                   : 
LOG                  : 
LOG10                : 
MAX                  : 
MAYIGQUE             : 497
MAYMAY               : 
MAYQUE               : 495
MD5                  : 
MENIGQUE             : 498
MENMEN               : 
MENQUE               : 496
MIN                  : 
MINUTE               : 430
MIN_SCALE            : 
MOD                  : 
MODE                 : 24 26 31 32 33 34 35 36 37 38
MODULO               : 
MONEY                : 84
MONTH                : 428
MULTI                : 
NATURAL              : 475
NOIG                 : 501
NOIGUAL              : 502
NOT                  : 17 18 21 22 29 30 63 74 441 443 445 446 448 453 454 456 506
NOTNULL              : 450
NOW                  : 132
NULL                 : 63 74 75 447 448
NUMERIC              : 86
OFFSET               : 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375
ON                   : 476 477
ONLY                 : 105 106
OR                   : 16 18 20 22 28 30 505
ORDER                : 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415
OUTER                : 471
OWNER                : 23 25 31 32 33 34 35 36 37 38 44
PAR_A                : 39 55 56 57 58 59 66 67 76 77 77 78 85 86 95 96 97 98 99 100 130 131 132 424 425 463 478 481 481
PAR_C                : 39 55 56 57 58 59 66 67 76 77 77 78 85 86 95 96 97 98 99 100 130 131 132 424 425 463 478 481 481
PI                   : 
POWER                : 
PRECISION            : 89
PRIMARY              : 72 76
PTCOMA               : 13 15 16 17 18 19 20 21 22 27 28 29 30 39 40 43 44 50 51 52 55 56 57 58 59 60 67 68 101 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 124 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 424 425 481
PUNTO                : 
RADIANS              : 
RANDOM               : 
REAL                 : 88
REFERENCES           : 56 59 73 77
RENAME               : 43 51
REPLACE              : 16 18 20 22 28 30
RESTA                : 492
RETURNING            : 106 108 110 111 113 115 117 119
RIGHT                : 473
ROUND                : 
SCALE                : 
SECOND               : 431
SELECT               : 124
SESSION_USER         : 47
SET                  : 63 101
SETSEED              : 
SET_BYTE             : 
SHA256               : 
SIGN                 : 
SIN                  : 
SIND                 : 
SINH                 : 
SMALLINT             : 83
SOME                 : 
SQRT                 : 
SUBSTR               : 
SUBSTRING            : 
SUM                  : 
SUMA                 : 491
SYMMETRIC            : 442 443
S_OR                 : 
TABLE                : 40 50 51 52 55 56 57 58 59 60 66
TAN                  : 
TAND                 : 
TANH                 : 
TEXT                 : 80
THEN                 : 468
TIME                 : 92
TIMESTAMP            : 93 130 135
TO                   : 43 44 51 90
TRIM                 : 
TRIM_SCALE           : 
TRUC                 : 
TRUE                 : 451 453
TYPE                 : 39 49
UNION                : 125
UNIQUE               : 58 78
UNKNOWN              : 455 456
UPDATE               : 101
USE                  : 13
USING                : 112 113 114 115 478
VALUES               : 481
VARCHAR              : 96
VARYING              : 95
WHEN                 : 468
WHERE                : 101 107 108 109 110 112 113 114 115 116 117 118 119 136 138 140 142 144 146 148 150 152 154 156 158 160 162 164 166 168 170 172 174 176 178 180 182 184 186 188 190 192 194 196 198 200 202 204 206 208 210 212 214 216 218 220 222 224 226 228 230 232 234 236 238 240 242 244 246 248 250 252 254 256 258 260 262 264 266 268 270 272 274 276 278 280 282 284 286 288 290 292 294 296 298 300 302 304 306 308 310 312 314 316 318 320 322 324 326 328 330 332 334 336 338 340 342 344 346 348 350 352 354 356 358 360 362 364 366 368 370 372 374 376 378 380 382 384 386 388 390 392 394 396 398 400 402 404 406 408 410 412 414 416 418 420 422
WIDTH_BUCKET         : 
Y                    : 
YEAR                 : 426
error                : 

Nonterminals, with rules where they appear

CONDICION_INNER_JOIN : 476
INNER_JOIN           : 
TIPO_DATO            : 49 53 54 71 72 73 74 75
TIPO_ENUM_INSRT      : 14
Table_alter          : 61 62
alterDB_insrt        : 11
alterTable_alter     : 60 61
alterTable_insrt     : 12
as_ID                : 116 117 118 119 129 476
campos_add_Column    : 52 53
campos_c             : 50 56 56 58 59 59 64 76 77 77 78 121 124 136 136 137 137 138 139 140 140 141 141 142 143 144 144 145 145 146 147 148 148 149 149 150 151 152 153 156 157 160 160 161 161 162 163 164 164 165 165 166 167 168 168 169 169 170 171 172 172 173 173 174 175 176 177 180 181 184 184 185 185 186 187 188 188 189 189 190 191 192 192 193 193 194 195 196 196 197 197 198 199 200 201 204 205 208 208 209 209 210 211 212 212 213 213 214 215 216 216 217 217 218 219 220 220 221 221 222 223 224 225 228 229 232 232 233 233 234 235 236 236 237 237 238 239 240 240 241 241 242 243 244 244 245 245 246 247 248 249 252 253 256 256 257 257 258 259 260 260 261 261 262 263 264 264 265 265 266 267 268 268 269 269 270 271 272 273 276 277 280 280 281 281 282 283 284 284 285 285 286 287 288 288 289 289 290 291 292 292 293 293 294 295 296 297 300 301 304 304 305 305 306 307 308 308 309 309 310 311 312 312 313 313 314 315 316 316 317 317 318 319 320 321 324 325 328 328 329 329 330 331 332 332 333 333 334 335 336 336 337 337 338 339 340 340 341 341 342 343 344 345 348 349 352 352 353 353 354 355 356 356 357 357 358 359 360 360 361 361 362 363 364 364 365 365 366 367 368 369 372 373 376 376 377 377 378 379 380 380 381 381 382 383 384 384 385 385 386 387 388 388 389 389 390 391 392 393 396 397 400 400 401 401 402 403 404 404 405 405 406 407 408 408 409 409 410 411 412 412 413 413 414 415 416 417 420 421 457 478
case_insrt           : 462
createDB_dosParam    : 27 28 29 30
createDB_insrt       : 9
createDB_unParam     : 19 20 21 22
create_Table_isnrt   : 4
cuerpo_createTable   : 69 70
cuerpo_createTable_lista : 66 69
delete_insrt         : 7
drop_insrt           : 10
empty                : 483
estructura_when      : 466 467
estructura_when_lista : 465 466
expresion            : 101 104 464 465 468 491 491 492 492 493 493 494 494 495 495 496 496 497 497 498 498 499 499 500 500 501 501 502 502 503
expresion_dato       : 440 440 440 441 441 441 442 442 442 443 443 443 444 444 445 445 446 446 446 447 448 449 450 451 452 453 454 455 456
expresion_logica
expresion_relacional : 477 504 505 507
expresion_where
extract_time         : 90 90 130
init                 : 0
insert_insrt         : 6
instruccion          : 2 3
instrucciones        : 1 2
join_lista           : 469
lista_datos          : 39 481 487
lista_drop_id        : 40 41
lista_parametros     : 484 485
lista_parametros_lista : 482 484
lista_update         : 101 102
opc_lim              : 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399
opcion_from          : 128 129
opcion_herencia      : 66
opcion_lista_parametros_lista : 481
opcion_select        : 459 460 461
opcion_select_lista  : 128 129
opcion_select_tm     : 
opcion_sobrenombre
opcional_join        : 469
opciones_select_lista : 458 459
orden                : 136 137 138 139 140 141 142 143 160 161 162 163 164 165 166 167 184 185 186 187 188 189 190 191 208 209 210 211 212 213 214 215 232 233 234 235 236 237 238 239 256 257 258 259 260 261 262 263 280 281 282 283 284 285 286 287 304 305 306 307 308 309 310 311 328 329 330 331 332 333 334 335 352 353 354 355 356 357 358 359 376 377 378 379 380 381 382 383 400 401 402 403 404 405 406 407
parametro_update     : 102 103
returning_exp        : 106 108 110 111 113 115 117 119
select_insrt         : 5 125 125 126 126 127 127 424 425 463
update_insrt         : 8
usuariosDB           : 44

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . create_Table_isnrt
    (5) instruccion -> . select_insrt
    (6) instruccion -> . insert_insrt
    (7) instruccion -> . delete_insrt
    (8) instruccion -> . update_insrt
    (9) instruccion -> . createDB_insrt
    (10) instruccion -> . drop_insrt
    (11) instruccion -> . alterDB_insrt
    (12) instruccion -> . alterTable_insrt
    (13) instruccion -> . USE ID DATABASE PTCOMA
    (14) instruccion -> . TIPO_ENUM_INSRT
    (66) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia
    (124) select_insrt -> . SELECT DISTINCT campos_c FROM ID PTCOMA
    (125) select_insrt -> . select_insrt UNION select_insrt
    (126) select_insrt -> . select_insrt INTERSECT select_insrt
    (127) select_insrt -> . select_insrt EXCEPT select_insrt
    (481) insert_insrt -> . INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (105) delete_insrt -> . DELETE FROM ONLY ID PTCOMA
    (106) delete_insrt -> . DELETE FROM ONLY ID RETURNING returning_exp PTCOMA
    (107) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA
    (108) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (109) delete_insrt -> . DELETE FROM ID WHERE expresion_logica PTCOMA
    (110) delete_insrt -> . DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (111) delete_insrt -> . DELETE FROM ID RETURNING returning_exp PTCOMA
    (112) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> . DELETE FROM ID USING ID WHERE expresion_logica PTCOMA
    (115) delete_insrt -> . DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (116) delete_insrt -> . DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> . DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> . DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA
    (119) delete_insrt -> . DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (101) update_insrt -> . UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA
    (15) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (16) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (17) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (18) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (19) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (20) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (21) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (22) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (40) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (43) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (44) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (50) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (51) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (52) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (55) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (56) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (57) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (60) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA
    (39) TIPO_ENUM_INSRT -> . CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA

    USE             shift and go to state 13
    CREATE          shift and go to state 15
    SELECT          shift and go to state 16
    INSERT          shift and go to state 17
    DELETE          shift and go to state 18
    UPDATE          shift and go to state 19
    DROP            shift and go to state 20
    ALTER           shift and go to state 21

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    create_Table_isnrt             shift and go to state 4
    select_insrt                   shift and go to state 5
    insert_insrt                   shift and go to state 6
    delete_insrt                   shift and go to state 7
    update_insrt                   shift and go to state 8
    createDB_insrt                 shift and go to state 9
    drop_insrt                     shift and go to state 10
    alterDB_insrt                  shift and go to state 11
    alterTable_insrt               shift and go to state 12
    TIPO_ENUM_INSRT                shift and go to state 14

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . create_Table_isnrt
    (5) instruccion -> . select_insrt
    (6) instruccion -> . insert_insrt
    (7) instruccion -> . delete_insrt
    (8) instruccion -> . update_insrt
    (9) instruccion -> . createDB_insrt
    (10) instruccion -> . drop_insrt
    (11) instruccion -> . alterDB_insrt
    (12) instruccion -> . alterTable_insrt
    (13) instruccion -> . USE ID DATABASE PTCOMA
    (14) instruccion -> . TIPO_ENUM_INSRT
    (66) create_Table_isnrt -> . CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia
    (124) select_insrt -> . SELECT DISTINCT campos_c FROM ID PTCOMA
    (125) select_insrt -> . select_insrt UNION select_insrt
    (126) select_insrt -> . select_insrt INTERSECT select_insrt
    (127) select_insrt -> . select_insrt EXCEPT select_insrt
    (481) insert_insrt -> . INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (105) delete_insrt -> . DELETE FROM ONLY ID PTCOMA
    (106) delete_insrt -> . DELETE FROM ONLY ID RETURNING returning_exp PTCOMA
    (107) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA
    (108) delete_insrt -> . DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (109) delete_insrt -> . DELETE FROM ID WHERE expresion_logica PTCOMA
    (110) delete_insrt -> . DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (111) delete_insrt -> . DELETE FROM ID RETURNING returning_exp PTCOMA
    (112) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> . DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> . DELETE FROM ID USING ID WHERE expresion_logica PTCOMA
    (115) delete_insrt -> . DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (116) delete_insrt -> . DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> . DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> . DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA
    (119) delete_insrt -> . DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (101) update_insrt -> . UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA
    (15) createDB_insrt -> . CREATE DATABASE ID PTCOMA
    (16) createDB_insrt -> . CREATE OR REPLACE DATABASE ID PTCOMA
    (17) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID PTCOMA
    (18) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (19) createDB_insrt -> . CREATE DATABASE ID createDB_unParam PTCOMA
    (20) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (21) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (22) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> . CREATE DATABASE ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> . CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (29) createDB_insrt -> . CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (30) createDB_insrt -> . CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (40) drop_insrt -> . DROP TABLE lista_drop_id PTCOMA
    (43) alterDB_insrt -> . ALTER DATABASE ID RENAME TO ID PTCOMA
    (44) alterDB_insrt -> . ALTER DATABASE ID OWNER TO usuariosDB PTCOMA
    (50) alterTable_insrt -> . ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (51) alterTable_insrt -> . ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (52) alterTable_insrt -> . ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (55) alterTable_insrt -> . ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (56) alterTable_insrt -> . ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (57) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> . ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (60) alterTable_insrt -> . ALTER TABLE ID alterTable_alter PTCOMA
    (39) TIPO_ENUM_INSRT -> . CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA

    $end            reduce using rule 1 (init -> instrucciones .)
    USE             shift and go to state 13
    CREATE          shift and go to state 15
    SELECT          shift and go to state 16
    INSERT          shift and go to state 17
    DELETE          shift and go to state 18
    UPDATE          shift and go to state 19
    DROP            shift and go to state 20
    ALTER           shift and go to state 21

    instruccion                    shift and go to state 22
    create_Table_isnrt             shift and go to state 4
    select_insrt                   shift and go to state 5
    insert_insrt                   shift and go to state 6
    delete_insrt                   shift and go to state 7
    update_insrt                   shift and go to state 8
    createDB_insrt                 shift and go to state 9
    drop_insrt                     shift and go to state 10
    alterDB_insrt                  shift and go to state 11
    alterTable_insrt               shift and go to state 12
    TIPO_ENUM_INSRT                shift and go to state 14

state 3

    (3) instrucciones -> instruccion .

    USE             reduce using rule 3 (instrucciones -> instruccion .)
    CREATE          reduce using rule 3 (instrucciones -> instruccion .)
    SELECT          reduce using rule 3 (instrucciones -> instruccion .)
    INSERT          reduce using rule 3 (instrucciones -> instruccion .)
    DELETE          reduce using rule 3 (instrucciones -> instruccion .)
    UPDATE          reduce using rule 3 (instrucciones -> instruccion .)
    DROP            reduce using rule 3 (instrucciones -> instruccion .)
    ALTER           reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> create_Table_isnrt .

    USE             reduce using rule 4 (instruccion -> create_Table_isnrt .)
    CREATE          reduce using rule 4 (instruccion -> create_Table_isnrt .)
    SELECT          reduce using rule 4 (instruccion -> create_Table_isnrt .)
    INSERT          reduce using rule 4 (instruccion -> create_Table_isnrt .)
    DELETE          reduce using rule 4 (instruccion -> create_Table_isnrt .)
    UPDATE          reduce using rule 4 (instruccion -> create_Table_isnrt .)
    DROP            reduce using rule 4 (instruccion -> create_Table_isnrt .)
    ALTER           reduce using rule 4 (instruccion -> create_Table_isnrt .)
    $end            reduce using rule 4 (instruccion -> create_Table_isnrt .)


state 5

    (5) instruccion -> select_insrt .
    (125) select_insrt -> select_insrt . UNION select_insrt
    (126) select_insrt -> select_insrt . INTERSECT select_insrt
    (127) select_insrt -> select_insrt . EXCEPT select_insrt

    USE             reduce using rule 5 (instruccion -> select_insrt .)
    CREATE          reduce using rule 5 (instruccion -> select_insrt .)
    SELECT          reduce using rule 5 (instruccion -> select_insrt .)
    INSERT          reduce using rule 5 (instruccion -> select_insrt .)
    DELETE          reduce using rule 5 (instruccion -> select_insrt .)
    UPDATE          reduce using rule 5 (instruccion -> select_insrt .)
    DROP            reduce using rule 5 (instruccion -> select_insrt .)
    ALTER           reduce using rule 5 (instruccion -> select_insrt .)
    $end            reduce using rule 5 (instruccion -> select_insrt .)
    UNION           shift and go to state 23
    INTERSECT       shift and go to state 24
    EXCEPT          shift and go to state 25


state 6

    (6) instruccion -> insert_insrt .

    USE             reduce using rule 6 (instruccion -> insert_insrt .)
    CREATE          reduce using rule 6 (instruccion -> insert_insrt .)
    SELECT          reduce using rule 6 (instruccion -> insert_insrt .)
    INSERT          reduce using rule 6 (instruccion -> insert_insrt .)
    DELETE          reduce using rule 6 (instruccion -> insert_insrt .)
    UPDATE          reduce using rule 6 (instruccion -> insert_insrt .)
    DROP            reduce using rule 6 (instruccion -> insert_insrt .)
    ALTER           reduce using rule 6 (instruccion -> insert_insrt .)
    $end            reduce using rule 6 (instruccion -> insert_insrt .)


state 7

    (7) instruccion -> delete_insrt .

    USE             reduce using rule 7 (instruccion -> delete_insrt .)
    CREATE          reduce using rule 7 (instruccion -> delete_insrt .)
    SELECT          reduce using rule 7 (instruccion -> delete_insrt .)
    INSERT          reduce using rule 7 (instruccion -> delete_insrt .)
    DELETE          reduce using rule 7 (instruccion -> delete_insrt .)
    UPDATE          reduce using rule 7 (instruccion -> delete_insrt .)
    DROP            reduce using rule 7 (instruccion -> delete_insrt .)
    ALTER           reduce using rule 7 (instruccion -> delete_insrt .)
    $end            reduce using rule 7 (instruccion -> delete_insrt .)


state 8

    (8) instruccion -> update_insrt .

    USE             reduce using rule 8 (instruccion -> update_insrt .)
    CREATE          reduce using rule 8 (instruccion -> update_insrt .)
    SELECT          reduce using rule 8 (instruccion -> update_insrt .)
    INSERT          reduce using rule 8 (instruccion -> update_insrt .)
    DELETE          reduce using rule 8 (instruccion -> update_insrt .)
    UPDATE          reduce using rule 8 (instruccion -> update_insrt .)
    DROP            reduce using rule 8 (instruccion -> update_insrt .)
    ALTER           reduce using rule 8 (instruccion -> update_insrt .)
    $end            reduce using rule 8 (instruccion -> update_insrt .)


state 9

    (9) instruccion -> createDB_insrt .

    USE             reduce using rule 9 (instruccion -> createDB_insrt .)
    CREATE          reduce using rule 9 (instruccion -> createDB_insrt .)
    SELECT          reduce using rule 9 (instruccion -> createDB_insrt .)
    INSERT          reduce using rule 9 (instruccion -> createDB_insrt .)
    DELETE          reduce using rule 9 (instruccion -> createDB_insrt .)
    UPDATE          reduce using rule 9 (instruccion -> createDB_insrt .)
    DROP            reduce using rule 9 (instruccion -> createDB_insrt .)
    ALTER           reduce using rule 9 (instruccion -> createDB_insrt .)
    $end            reduce using rule 9 (instruccion -> createDB_insrt .)


state 10

    (10) instruccion -> drop_insrt .

    USE             reduce using rule 10 (instruccion -> drop_insrt .)
    CREATE          reduce using rule 10 (instruccion -> drop_insrt .)
    SELECT          reduce using rule 10 (instruccion -> drop_insrt .)
    INSERT          reduce using rule 10 (instruccion -> drop_insrt .)
    DELETE          reduce using rule 10 (instruccion -> drop_insrt .)
    UPDATE          reduce using rule 10 (instruccion -> drop_insrt .)
    DROP            reduce using rule 10 (instruccion -> drop_insrt .)
    ALTER           reduce using rule 10 (instruccion -> drop_insrt .)
    $end            reduce using rule 10 (instruccion -> drop_insrt .)


state 11

    (11) instruccion -> alterDB_insrt .

    USE             reduce using rule 11 (instruccion -> alterDB_insrt .)
    CREATE          reduce using rule 11 (instruccion -> alterDB_insrt .)
    SELECT          reduce using rule 11 (instruccion -> alterDB_insrt .)
    INSERT          reduce using rule 11 (instruccion -> alterDB_insrt .)
    DELETE          reduce using rule 11 (instruccion -> alterDB_insrt .)
    UPDATE          reduce using rule 11 (instruccion -> alterDB_insrt .)
    DROP            reduce using rule 11 (instruccion -> alterDB_insrt .)
    ALTER           reduce using rule 11 (instruccion -> alterDB_insrt .)
    $end            reduce using rule 11 (instruccion -> alterDB_insrt .)


state 12

    (12) instruccion -> alterTable_insrt .

    USE             reduce using rule 12 (instruccion -> alterTable_insrt .)
    CREATE          reduce using rule 12 (instruccion -> alterTable_insrt .)
    SELECT          reduce using rule 12 (instruccion -> alterTable_insrt .)
    INSERT          reduce using rule 12 (instruccion -> alterTable_insrt .)
    DELETE          reduce using rule 12 (instruccion -> alterTable_insrt .)
    UPDATE          reduce using rule 12 (instruccion -> alterTable_insrt .)
    DROP            reduce using rule 12 (instruccion -> alterTable_insrt .)
    ALTER           reduce using rule 12 (instruccion -> alterTable_insrt .)
    $end            reduce using rule 12 (instruccion -> alterTable_insrt .)


state 13

    (13) instruccion -> USE . ID DATABASE PTCOMA

    ID              shift and go to state 26


state 14

    (14) instruccion -> TIPO_ENUM_INSRT .

    USE             reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    CREATE          reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    SELECT          reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    INSERT          reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    DELETE          reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    UPDATE          reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    DROP            reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    ALTER           reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)
    $end            reduce using rule 14 (instruccion -> TIPO_ENUM_INSRT .)


state 15

    (66) create_Table_isnrt -> CREATE . TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia
    (15) createDB_insrt -> CREATE . DATABASE ID PTCOMA
    (16) createDB_insrt -> CREATE . OR REPLACE DATABASE ID PTCOMA
    (17) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID PTCOMA
    (18) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (19) createDB_insrt -> CREATE . DATABASE ID createDB_unParam PTCOMA
    (20) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_unParam PTCOMA
    (21) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE . DATABASE ID createDB_dosParam PTCOMA
    (28) createDB_insrt -> CREATE . OR REPLACE DATABASE ID createDB_dosParam PTCOMA
    (29) createDB_insrt -> CREATE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (30) createDB_insrt -> CREATE . OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA
    (39) TIPO_ENUM_INSRT -> CREATE . TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA

    TABLE           shift and go to state 27
    DATABASE        shift and go to state 28
    OR              shift and go to state 29
    TYPE            shift and go to state 30


state 16

    (124) select_insrt -> SELECT . DISTINCT campos_c FROM ID PTCOMA

    DISTINCT        shift and go to state 31


state 17

    (481) insert_insrt -> INSERT . INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA

    INTO            shift and go to state 32


state 18

    (105) delete_insrt -> DELETE . FROM ONLY ID PTCOMA
    (106) delete_insrt -> DELETE . FROM ONLY ID RETURNING returning_exp PTCOMA
    (107) delete_insrt -> DELETE . FROM ID WHERE EXISTS expresion_logica PTCOMA
    (108) delete_insrt -> DELETE . FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (109) delete_insrt -> DELETE . FROM ID WHERE expresion_logica PTCOMA
    (110) delete_insrt -> DELETE . FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (111) delete_insrt -> DELETE . FROM ID RETURNING returning_exp PTCOMA
    (112) delete_insrt -> DELETE . FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> DELETE . FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> DELETE . FROM ID USING ID WHERE expresion_logica PTCOMA
    (115) delete_insrt -> DELETE . FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (116) delete_insrt -> DELETE . FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> DELETE . FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> DELETE . FROM ID AS as_ID WHERE expresion_logica PTCOMA
    (119) delete_insrt -> DELETE . FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA

    FROM            shift and go to state 33


state 19

    (101) update_insrt -> UPDATE . ID SET lista_update WHERE ID IGUAL expresion PTCOMA

    ID              shift and go to state 34


state 20

    (40) drop_insrt -> DROP . TABLE lista_drop_id PTCOMA

    TABLE           shift and go to state 35


state 21

    (43) alterDB_insrt -> ALTER . DATABASE ID RENAME TO ID PTCOMA
    (44) alterDB_insrt -> ALTER . DATABASE ID OWNER TO usuariosDB PTCOMA
    (50) alterTable_insrt -> ALTER . TABLE ID DROP CONSTRAINT campos_c PTCOMA
    (51) alterTable_insrt -> ALTER . TABLE ID RENAME COLUMN ID TO ID PTCOMA
    (52) alterTable_insrt -> ALTER . TABLE ID ADD COLUMN campos_add_Column PTCOMA
    (55) alterTable_insrt -> ALTER . TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (56) alterTable_insrt -> ALTER . TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (57) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> ALTER . TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (60) alterTable_insrt -> ALTER . TABLE ID alterTable_alter PTCOMA

    DATABASE        shift and go to state 36
    TABLE           shift and go to state 37


state 22

    (2) instrucciones -> instrucciones instruccion .

    USE             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    CREATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    SELECT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    INSERT          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DELETE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    UPDATE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    DROP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ALTER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 23

    (125) select_insrt -> select_insrt UNION . select_insrt
    (124) select_insrt -> . SELECT DISTINCT campos_c FROM ID PTCOMA
    (125) select_insrt -> . select_insrt UNION select_insrt
    (126) select_insrt -> . select_insrt INTERSECT select_insrt
    (127) select_insrt -> . select_insrt EXCEPT select_insrt

    SELECT          shift and go to state 16

    select_insrt                   shift and go to state 38

state 24

    (126) select_insrt -> select_insrt INTERSECT . select_insrt
    (124) select_insrt -> . SELECT DISTINCT campos_c FROM ID PTCOMA
    (125) select_insrt -> . select_insrt UNION select_insrt
    (126) select_insrt -> . select_insrt INTERSECT select_insrt
    (127) select_insrt -> . select_insrt EXCEPT select_insrt

    SELECT          shift and go to state 16

    select_insrt                   shift and go to state 39

state 25

    (127) select_insrt -> select_insrt EXCEPT . select_insrt
    (124) select_insrt -> . SELECT DISTINCT campos_c FROM ID PTCOMA
    (125) select_insrt -> . select_insrt UNION select_insrt
    (126) select_insrt -> . select_insrt INTERSECT select_insrt
    (127) select_insrt -> . select_insrt EXCEPT select_insrt

    SELECT          shift and go to state 16

    select_insrt                   shift and go to state 40

state 26

    (13) instruccion -> USE ID . DATABASE PTCOMA

    DATABASE        shift and go to state 41


state 27

    (66) create_Table_isnrt -> CREATE TABLE . ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia

    ID              shift and go to state 42


state 28

    (15) createDB_insrt -> CREATE DATABASE . ID PTCOMA
    (17) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID PTCOMA
    (19) createDB_insrt -> CREATE DATABASE . ID createDB_unParam PTCOMA
    (21) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE . ID createDB_dosParam PTCOMA
    (29) createDB_insrt -> CREATE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 43
    IF              shift and go to state 44


state 29

    (16) createDB_insrt -> CREATE OR . REPLACE DATABASE ID PTCOMA
    (18) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID PTCOMA
    (20) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR . REPLACE DATABASE ID createDB_dosParam PTCOMA
    (30) createDB_insrt -> CREATE OR . REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    REPLACE         shift and go to state 45


state 30

    (39) TIPO_ENUM_INSRT -> CREATE TYPE . ID AS ENUM PAR_A lista_datos PAR_C PTCOMA

    ID              shift and go to state 46


state 31

    (124) select_insrt -> SELECT DISTINCT . campos_c FROM ID PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 47

state 32

    (481) insert_insrt -> INSERT INTO . ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA

    ID              shift and go to state 49


state 33

    (105) delete_insrt -> DELETE FROM . ONLY ID PTCOMA
    (106) delete_insrt -> DELETE FROM . ONLY ID RETURNING returning_exp PTCOMA
    (107) delete_insrt -> DELETE FROM . ID WHERE EXISTS expresion_logica PTCOMA
    (108) delete_insrt -> DELETE FROM . ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (109) delete_insrt -> DELETE FROM . ID WHERE expresion_logica PTCOMA
    (110) delete_insrt -> DELETE FROM . ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (111) delete_insrt -> DELETE FROM . ID RETURNING returning_exp PTCOMA
    (112) delete_insrt -> DELETE FROM . ID USING ID WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> DELETE FROM . ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> DELETE FROM . ID USING ID WHERE expresion_logica PTCOMA
    (115) delete_insrt -> DELETE FROM . ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (116) delete_insrt -> DELETE FROM . ID AS as_ID WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> DELETE FROM . ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> DELETE FROM . ID AS as_ID WHERE expresion_logica PTCOMA
    (119) delete_insrt -> DELETE FROM . ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA

    ONLY            shift and go to state 50
    ID              shift and go to state 51


state 34

    (101) update_insrt -> UPDATE ID . SET lista_update WHERE ID IGUAL expresion PTCOMA

    SET             shift and go to state 52


state 35

    (40) drop_insrt -> DROP TABLE . lista_drop_id PTCOMA
    (41) lista_drop_id -> . lista_drop_id COMA ID
    (42) lista_drop_id -> . ID

    ID              shift and go to state 54

    lista_drop_id                  shift and go to state 53

state 36

    (43) alterDB_insrt -> ALTER DATABASE . ID RENAME TO ID PTCOMA
    (44) alterDB_insrt -> ALTER DATABASE . ID OWNER TO usuariosDB PTCOMA

    ID              shift and go to state 55


state 37

    (50) alterTable_insrt -> ALTER TABLE . ID DROP CONSTRAINT campos_c PTCOMA
    (51) alterTable_insrt -> ALTER TABLE . ID RENAME COLUMN ID TO ID PTCOMA
    (52) alterTable_insrt -> ALTER TABLE . ID ADD COLUMN campos_add_Column PTCOMA
    (55) alterTable_insrt -> ALTER TABLE . ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (56) alterTable_insrt -> ALTER TABLE . ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (57) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> ALTER TABLE . ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (60) alterTable_insrt -> ALTER TABLE . ID alterTable_alter PTCOMA

    ID              shift and go to state 56


state 38

    (125) select_insrt -> select_insrt UNION select_insrt .
    (125) select_insrt -> select_insrt . UNION select_insrt
    (126) select_insrt -> select_insrt . INTERSECT select_insrt
    (127) select_insrt -> select_insrt . EXCEPT select_insrt

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    USE             reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    CREATE          reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    SELECT          reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    INSERT          reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    DELETE          reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    UPDATE          reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    DROP            reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    ALTER           reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    $end            reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .)
    UNION           shift and go to state 23
    INTERSECT       shift and go to state 24
    EXCEPT          shift and go to state 25

  ! UNION           [ reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .) ]
  ! INTERSECT       [ reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .) ]
  ! EXCEPT          [ reduce using rule 125 (select_insrt -> select_insrt UNION select_insrt .) ]


state 39

    (126) select_insrt -> select_insrt INTERSECT select_insrt .
    (125) select_insrt -> select_insrt . UNION select_insrt
    (126) select_insrt -> select_insrt . INTERSECT select_insrt
    (127) select_insrt -> select_insrt . EXCEPT select_insrt

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    USE             reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    CREATE          reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    SELECT          reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    INSERT          reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    DELETE          reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    UPDATE          reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    DROP            reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    ALTER           reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    $end            reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .)
    UNION           shift and go to state 23
    INTERSECT       shift and go to state 24
    EXCEPT          shift and go to state 25

  ! UNION           [ reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .) ]
  ! INTERSECT       [ reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .) ]
  ! EXCEPT          [ reduce using rule 126 (select_insrt -> select_insrt INTERSECT select_insrt .) ]


state 40

    (127) select_insrt -> select_insrt EXCEPT select_insrt .
    (125) select_insrt -> select_insrt . UNION select_insrt
    (126) select_insrt -> select_insrt . INTERSECT select_insrt
    (127) select_insrt -> select_insrt . EXCEPT select_insrt

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
    USE             reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    CREATE          reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    SELECT          reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    INSERT          reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    DELETE          reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    UPDATE          reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    DROP            reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    ALTER           reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    $end            reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .)
    UNION           shift and go to state 23
    INTERSECT       shift and go to state 24
    EXCEPT          shift and go to state 25

  ! UNION           [ reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .) ]
  ! INTERSECT       [ reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .) ]
  ! EXCEPT          [ reduce using rule 127 (select_insrt -> select_insrt EXCEPT select_insrt .) ]


state 41

    (13) instruccion -> USE ID DATABASE . PTCOMA

    PTCOMA          shift and go to state 57


state 42

    (66) create_Table_isnrt -> CREATE TABLE ID . PAR_A cuerpo_createTable_lista PAR_C opcion_herencia

    PAR_A           shift and go to state 58


state 43

    (15) createDB_insrt -> CREATE DATABASE ID . PTCOMA
    (19) createDB_insrt -> CREATE DATABASE ID . createDB_unParam PTCOMA
    (27) createDB_insrt -> CREATE DATABASE ID . createDB_dosParam PTCOMA
    (23) createDB_unParam -> . OWNER ID
    (24) createDB_unParam -> . MODE ENTERO
    (25) createDB_unParam -> . OWNER IGUAL ID
    (26) createDB_unParam -> . MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (36) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (37) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (38) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 59
    OWNER           shift and go to state 62
    MODE            shift and go to state 63

    createDB_unParam               shift and go to state 60
    createDB_dosParam              shift and go to state 61

state 44

    (17) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID PTCOMA
    (21) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 64


state 45

    (16) createDB_insrt -> CREATE OR REPLACE . DATABASE ID PTCOMA
    (18) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE . DATABASE ID createDB_dosParam PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE . DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA

    DATABASE        shift and go to state 65


state 46

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID . AS ENUM PAR_A lista_datos PAR_C PTCOMA

    AS              shift and go to state 66


state 47

    (124) select_insrt -> SELECT DISTINCT campos_c . FROM ID PTCOMA
    (64) campos_c -> campos_c . COMA ID

    FROM            shift and go to state 67
    COMA            shift and go to state 68


state 48

    (65) campos_c -> ID .

    FROM            reduce using rule 65 (campos_c -> ID .)
    COMA            reduce using rule 65 (campos_c -> ID .)
    PTCOMA          reduce using rule 65 (campos_c -> ID .)
    PAR_C           reduce using rule 65 (campos_c -> ID .)


state 49

    (481) insert_insrt -> INSERT INTO ID . PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 69


state 50

    (105) delete_insrt -> DELETE FROM ONLY . ID PTCOMA
    (106) delete_insrt -> DELETE FROM ONLY . ID RETURNING returning_exp PTCOMA

    ID              shift and go to state 70


state 51

    (107) delete_insrt -> DELETE FROM ID . WHERE EXISTS expresion_logica PTCOMA
    (108) delete_insrt -> DELETE FROM ID . WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (109) delete_insrt -> DELETE FROM ID . WHERE expresion_logica PTCOMA
    (110) delete_insrt -> DELETE FROM ID . WHERE expresion_logica RETURNING returning_exp PTCOMA
    (111) delete_insrt -> DELETE FROM ID . RETURNING returning_exp PTCOMA
    (112) delete_insrt -> DELETE FROM ID . USING ID WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> DELETE FROM ID . USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> DELETE FROM ID . USING ID WHERE expresion_logica PTCOMA
    (115) delete_insrt -> DELETE FROM ID . USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (116) delete_insrt -> DELETE FROM ID . AS as_ID WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> DELETE FROM ID . AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> DELETE FROM ID . AS as_ID WHERE expresion_logica PTCOMA
    (119) delete_insrt -> DELETE FROM ID . AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA

    WHERE           shift and go to state 71
    RETURNING       shift and go to state 72
    USING           shift and go to state 73
    AS              shift and go to state 74


state 52

    (101) update_insrt -> UPDATE ID SET . lista_update WHERE ID IGUAL expresion PTCOMA
    (102) lista_update -> . lista_update COMA parametro_update
    (103) lista_update -> . parametro_update
    (104) parametro_update -> . ID IGUAL expresion

    ID              shift and go to state 75

    lista_update                   shift and go to state 76
    parametro_update               shift and go to state 77

state 53

    (40) drop_insrt -> DROP TABLE lista_drop_id . PTCOMA
    (41) lista_drop_id -> lista_drop_id . COMA ID

    PTCOMA          shift and go to state 78
    COMA            shift and go to state 79


state 54

    (42) lista_drop_id -> ID .

    PTCOMA          reduce using rule 42 (lista_drop_id -> ID .)
    COMA            reduce using rule 42 (lista_drop_id -> ID .)


state 55

    (43) alterDB_insrt -> ALTER DATABASE ID . RENAME TO ID PTCOMA
    (44) alterDB_insrt -> ALTER DATABASE ID . OWNER TO usuariosDB PTCOMA

    RENAME          shift and go to state 80
    OWNER           shift and go to state 81


state 56

    (50) alterTable_insrt -> ALTER TABLE ID . DROP CONSTRAINT campos_c PTCOMA
    (51) alterTable_insrt -> ALTER TABLE ID . RENAME COLUMN ID TO ID PTCOMA
    (52) alterTable_insrt -> ALTER TABLE ID . ADD COLUMN campos_add_Column PTCOMA
    (55) alterTable_insrt -> ALTER TABLE ID . ADD CHECK PAR_A expresion_logica PAR_C PTCOMA
    (56) alterTable_insrt -> ALTER TABLE ID . ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (57) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> ALTER TABLE ID . ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (60) alterTable_insrt -> ALTER TABLE ID . alterTable_alter PTCOMA
    (61) alterTable_alter -> . alterTable_alter COMA Table_alter
    (62) alterTable_alter -> . Table_alter
    (49) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO
    (63) Table_alter -> . ALTER COLUMN ID SET NOT NULL

    DROP            shift and go to state 83
    RENAME          shift and go to state 84
    ADD             shift and go to state 85
    ALTER           shift and go to state 82

    alterTable_alter               shift and go to state 86
    Table_alter                    shift and go to state 87

state 57

    (13) instruccion -> USE ID DATABASE PTCOMA .

    USE             reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    CREATE          reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    SELECT          reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    INSERT          reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    DELETE          reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    UPDATE          reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    DROP            reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    ALTER           reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)
    $end            reduce using rule 13 (instruccion -> USE ID DATABASE PTCOMA .)


state 58

    (66) create_Table_isnrt -> CREATE TABLE ID PAR_A . cuerpo_createTable_lista PAR_C opcion_herencia
    (69) cuerpo_createTable_lista -> . cuerpo_createTable_lista COMA cuerpo_createTable
    (70) cuerpo_createTable_lista -> . cuerpo_createTable
    (71) cuerpo_createTable -> . ID TIPO_DATO
    (72) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (73) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (74) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (75) cuerpo_createTable -> . ID TIPO_DATO NULL
    (76) cuerpo_createTable -> . PRIMARY KEY PAR_A campos_c PAR_C
    (77) cuerpo_createTable -> . FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C
    (78) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (79) cuerpo_createTable -> . CONSTRAINT ID

    ID              shift and go to state 88
    PRIMARY         shift and go to state 91
    FOREING         shift and go to state 92
    UNIQUE          shift and go to state 93
    CONSTRAINT      shift and go to state 94

    cuerpo_createTable_lista       shift and go to state 89
    cuerpo_createTable             shift and go to state 90

state 59

    (15) createDB_insrt -> CREATE DATABASE ID PTCOMA .

    USE             reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    INSERT          reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DELETE          reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    DROP            reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)
    $end            reduce using rule 15 (createDB_insrt -> CREATE DATABASE ID PTCOMA .)


state 60

    (19) createDB_insrt -> CREATE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 95


state 61

    (27) createDB_insrt -> CREATE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 96


state 62

    (23) createDB_unParam -> OWNER . ID
    (25) createDB_unParam -> OWNER . IGUAL ID
    (31) createDB_dosParam -> OWNER . ID MODE ENTERO
    (32) createDB_dosParam -> OWNER . ID MODE IGUAL ENTERO
    (35) createDB_dosParam -> OWNER . IGUAL ID MODE ENTERO
    (36) createDB_dosParam -> OWNER . IGUAL ID MODE IGUAL ENTERO

    ID              shift and go to state 97
    IGUAL           shift and go to state 98


state 63

    (24) createDB_unParam -> MODE . ENTERO
    (26) createDB_unParam -> MODE . IGUAL ENTERO
    (33) createDB_dosParam -> MODE . ENTERO OWNER ID
    (34) createDB_dosParam -> MODE . ENTERO OWNER IGUAL ID
    (37) createDB_dosParam -> MODE . IGUAL ENTERO OWNER ID
    (38) createDB_dosParam -> MODE . IGUAL ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 99
    IGUAL           shift and go to state 100


state 64

    (17) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID PTCOMA
    (21) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 101


state 65

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE . ID PTCOMA
    (18) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_unParam PTCOMA
    (22) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE . ID createDB_dosParam PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE . IF NOT EXISTS ID createDB_dosParam PTCOMA

    ID              shift and go to state 102
    IF              shift and go to state 103


state 66

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID AS . ENUM PAR_A lista_datos PAR_C PTCOMA

    ENUM            shift and go to state 104


state 67

    (124) select_insrt -> SELECT DISTINCT campos_c FROM . ID PTCOMA

    ID              shift and go to state 105


state 68

    (64) campos_c -> campos_c COMA . ID

    ID              shift and go to state 106


state 69

    (481) insert_insrt -> INSERT INTO ID PAR_A . opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA
    (482) opcion_lista_parametros_lista -> . lista_parametros_lista
    (483) opcion_lista_parametros_lista -> . empty
    (484) lista_parametros_lista -> . lista_parametros_lista COMA lista_parametros
    (485) lista_parametros_lista -> . lista_parametros
    (434) empty -> .
    (486) lista_parametros -> . ID

    PAR_C           reduce using rule 434 (empty -> .)
    ID              shift and go to state 107

    opcion_lista_parametros_lista  shift and go to state 108
    lista_parametros_lista         shift and go to state 109
    empty                          shift and go to state 110
    lista_parametros               shift and go to state 111

state 70

    (105) delete_insrt -> DELETE FROM ONLY ID . PTCOMA
    (106) delete_insrt -> DELETE FROM ONLY ID . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 112
    RETURNING       shift and go to state 113


state 71

    (107) delete_insrt -> DELETE FROM ID WHERE . EXISTS expresion_logica PTCOMA
    (108) delete_insrt -> DELETE FROM ID WHERE . EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (109) delete_insrt -> DELETE FROM ID WHERE . expresion_logica PTCOMA
    (110) delete_insrt -> DELETE FROM ID WHERE . expresion_logica RETURNING returning_exp PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    EXISTS          shift and go to state 114
    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 115
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 72

    (111) delete_insrt -> DELETE FROM ID RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 120
    campos_c                       shift and go to state 122

state 73

    (112) delete_insrt -> DELETE FROM ID USING . ID WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> DELETE FROM ID USING . ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> DELETE FROM ID USING . ID WHERE expresion_logica PTCOMA
    (115) delete_insrt -> DELETE FROM ID USING . ID WHERE expresion_logica RETURNING returning_exp PTCOMA

    ID              shift and go to state 123


state 74

    (116) delete_insrt -> DELETE FROM ID AS . as_ID WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> DELETE FROM ID AS . as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> DELETE FROM ID AS . as_ID WHERE expresion_logica PTCOMA
    (119) delete_insrt -> DELETE FROM ID AS . as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA
    (122) as_ID -> . ID
    (123) as_ID -> . CADENA

    ID              shift and go to state 124
    CADENA          shift and go to state 126

    as_ID                          shift and go to state 125

state 75

    (104) parametro_update -> ID . IGUAL expresion

    IGUAL           shift and go to state 127


state 76

    (101) update_insrt -> UPDATE ID SET lista_update . WHERE ID IGUAL expresion PTCOMA
    (102) lista_update -> lista_update . COMA parametro_update

    WHERE           shift and go to state 128
    COMA            shift and go to state 129


state 77

    (103) lista_update -> parametro_update .

    WHERE           reduce using rule 103 (lista_update -> parametro_update .)
    COMA            reduce using rule 103 (lista_update -> parametro_update .)


state 78

    (40) drop_insrt -> DROP TABLE lista_drop_id PTCOMA .

    USE             reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    CREATE          reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    SELECT          reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    INSERT          reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DELETE          reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    UPDATE          reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    DROP            reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    ALTER           reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)
    $end            reduce using rule 40 (drop_insrt -> DROP TABLE lista_drop_id PTCOMA .)


state 79

    (41) lista_drop_id -> lista_drop_id COMA . ID

    ID              shift and go to state 130


state 80

    (43) alterDB_insrt -> ALTER DATABASE ID RENAME . TO ID PTCOMA

    TO              shift and go to state 131


state 81

    (44) alterDB_insrt -> ALTER DATABASE ID OWNER . TO usuariosDB PTCOMA

    TO              shift and go to state 132


state 82

    (49) Table_alter -> ALTER . COLUMN ID TYPE TIPO_DATO
    (63) Table_alter -> ALTER . COLUMN ID SET NOT NULL

    COLUMN          shift and go to state 133


state 83

    (50) alterTable_insrt -> ALTER TABLE ID DROP . CONSTRAINT campos_c PTCOMA

    CONSTRAINT      shift and go to state 134


state 84

    (51) alterTable_insrt -> ALTER TABLE ID RENAME . COLUMN ID TO ID PTCOMA

    COLUMN          shift and go to state 135


state 85

    (52) alterTable_insrt -> ALTER TABLE ID ADD . COLUMN campos_add_Column PTCOMA
    (55) alterTable_insrt -> ALTER TABLE ID ADD . CHECK PAR_A expresion_logica PAR_C PTCOMA
    (56) alterTable_insrt -> ALTER TABLE ID ADD . FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA
    (57) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> ALTER TABLE ID ADD . CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    COLUMN          shift and go to state 136
    CHECK           shift and go to state 137
    FOREIGN         shift and go to state 138
    CONSTRAINT      shift and go to state 139


state 86

    (60) alterTable_insrt -> ALTER TABLE ID alterTable_alter . PTCOMA
    (61) alterTable_alter -> alterTable_alter . COMA Table_alter

    PTCOMA          shift and go to state 140
    COMA            shift and go to state 141


state 87

    (62) alterTable_alter -> Table_alter .

    PTCOMA          reduce using rule 62 (alterTable_alter -> Table_alter .)
    COMA            reduce using rule 62 (alterTable_alter -> Table_alter .)


state 88

    (71) cuerpo_createTable -> ID . TIPO_DATO
    (72) cuerpo_createTable -> ID . TIPO_DATO PRIMARY KEY
    (73) cuerpo_createTable -> ID . TIPO_DATO REFERENCES ID
    (74) cuerpo_createTable -> ID . TIPO_DATO NOT NULL
    (75) cuerpo_createTable -> ID . TIPO_DATO NULL
    (80) TIPO_DATO -> . TEXT
    (81) TIPO_DATO -> . FLOAT
    (82) TIPO_DATO -> . INTEGER
    (83) TIPO_DATO -> . SMALLINT
    (84) TIPO_DATO -> . MONEY
    (85) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (86) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (87) TIPO_DATO -> . BIGINT
    (88) TIPO_DATO -> . REAL
    (89) TIPO_DATO -> . DOUBLE PRECISION
    (90) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (91) TIPO_DATO -> . INTERVAL
    (92) TIPO_DATO -> . TIME
    (93) TIPO_DATO -> . TIMESTAMP
    (94) TIPO_DATO -> . DATE
    (95) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (96) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (97) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (98) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (99) TIPO_DATO -> . CHAR PAR_A PAR_C
    (100) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 143
    FLOAT           shift and go to state 144
    INTEGER         shift and go to state 145
    SMALLINT        shift and go to state 146
    MONEY           shift and go to state 147
    DECIMAL         shift and go to state 148
    NUMERIC         shift and go to state 149
    BIGINT          shift and go to state 150
    REAL            shift and go to state 151
    DOUBLE          shift and go to state 152
    INTERVAL        shift and go to state 153
    TIME            shift and go to state 154
    TIMESTAMP       shift and go to state 155
    DATE            shift and go to state 156
    CHARACTER       shift and go to state 157
    VARCHAR         shift and go to state 158
    CHAR            shift and go to state 159

    TIPO_DATO                      shift and go to state 142

state 89

    (66) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista . PAR_C opcion_herencia
    (69) cuerpo_createTable_lista -> cuerpo_createTable_lista . COMA cuerpo_createTable

    PAR_C           shift and go to state 160
    COMA            shift and go to state 161


state 90

    (70) cuerpo_createTable_lista -> cuerpo_createTable .

    PAR_C           reduce using rule 70 (cuerpo_createTable_lista -> cuerpo_createTable .)
    COMA            reduce using rule 70 (cuerpo_createTable_lista -> cuerpo_createTable .)


state 91

    (76) cuerpo_createTable -> PRIMARY . KEY PAR_A campos_c PAR_C

    KEY             shift and go to state 162


state 92

    (77) cuerpo_createTable -> FOREING . KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C

    KEY             shift and go to state 163


state 93

    (78) cuerpo_createTable -> UNIQUE . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 164


state 94

    (79) cuerpo_createTable -> CONSTRAINT . ID

    ID              shift and go to state 165


state 95

    (19) createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .

    USE             reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 19 (createDB_insrt -> CREATE DATABASE ID createDB_unParam PTCOMA .)


state 96

    (27) createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .

    USE             reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 27 (createDB_insrt -> CREATE DATABASE ID createDB_dosParam PTCOMA .)


state 97

    (23) createDB_unParam -> OWNER ID .
    (31) createDB_dosParam -> OWNER ID . MODE ENTERO
    (32) createDB_dosParam -> OWNER ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 23 (createDB_unParam -> OWNER ID .)
    MODE            shift and go to state 166


state 98

    (25) createDB_unParam -> OWNER IGUAL . ID
    (35) createDB_dosParam -> OWNER IGUAL . ID MODE ENTERO
    (36) createDB_dosParam -> OWNER IGUAL . ID MODE IGUAL ENTERO

    ID              shift and go to state 167


state 99

    (24) createDB_unParam -> MODE ENTERO .
    (33) createDB_dosParam -> MODE ENTERO . OWNER ID
    (34) createDB_dosParam -> MODE ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 24 (createDB_unParam -> MODE ENTERO .)
    OWNER           shift and go to state 168


state 100

    (26) createDB_unParam -> MODE IGUAL . ENTERO
    (37) createDB_dosParam -> MODE IGUAL . ENTERO OWNER ID
    (38) createDB_dosParam -> MODE IGUAL . ENTERO OWNER IGUAL ID

    ENTERO          shift and go to state 169


state 101

    (17) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID PTCOMA
    (21) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 170


state 102

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE ID . PTCOMA
    (20) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_unParam PTCOMA
    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID . createDB_dosParam PTCOMA
    (23) createDB_unParam -> . OWNER ID
    (24) createDB_unParam -> . MODE ENTERO
    (25) createDB_unParam -> . OWNER IGUAL ID
    (26) createDB_unParam -> . MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (36) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (37) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (38) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 171
    OWNER           shift and go to state 62
    MODE            shift and go to state 63

    createDB_unParam               shift and go to state 172
    createDB_dosParam              shift and go to state 173

state 103

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID PTCOMA
    (22) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF . NOT EXISTS ID createDB_dosParam PTCOMA

    NOT             shift and go to state 174


state 104

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM . PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 175


state 105

    (124) select_insrt -> SELECT DISTINCT campos_c FROM ID . PTCOMA

    PTCOMA          shift and go to state 176


state 106

    (64) campos_c -> campos_c COMA ID .

    FROM            reduce using rule 64 (campos_c -> campos_c COMA ID .)
    COMA            reduce using rule 64 (campos_c -> campos_c COMA ID .)
    PTCOMA          reduce using rule 64 (campos_c -> campos_c COMA ID .)
    PAR_C           reduce using rule 64 (campos_c -> campos_c COMA ID .)


state 107

    (486) lista_parametros -> ID .

    COMA            reduce using rule 486 (lista_parametros -> ID .)
    PAR_C           reduce using rule 486 (lista_parametros -> ID .)


state 108

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista . PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA

    PAR_C           shift and go to state 177


state 109

    (482) opcion_lista_parametros_lista -> lista_parametros_lista .
    (484) lista_parametros_lista -> lista_parametros_lista . COMA lista_parametros

    PAR_C           reduce using rule 482 (opcion_lista_parametros_lista -> lista_parametros_lista .)
    COMA            shift and go to state 178


state 110

    (483) opcion_lista_parametros_lista -> empty .

    PAR_C           reduce using rule 483 (opcion_lista_parametros_lista -> empty .)


state 111

    (485) lista_parametros_lista -> lista_parametros .

    COMA            reduce using rule 485 (lista_parametros_lista -> lista_parametros .)
    PAR_C           reduce using rule 485 (lista_parametros_lista -> lista_parametros .)


state 112

    (105) delete_insrt -> DELETE FROM ONLY ID PTCOMA .

    USE             reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    CREATE          reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    SELECT          reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    INSERT          reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    DELETE          reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    UPDATE          reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    DROP            reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    ALTER           reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)
    $end            reduce using rule 105 (delete_insrt -> DELETE FROM ONLY ID PTCOMA .)


state 113

    (106) delete_insrt -> DELETE FROM ONLY ID RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 179
    campos_c                       shift and go to state 122

state 114

    (107) delete_insrt -> DELETE FROM ID WHERE EXISTS . expresion_logica PTCOMA
    (108) delete_insrt -> DELETE FROM ID WHERE EXISTS . expresion_logica RETURNING returning_exp PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 180
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 115

    (109) delete_insrt -> DELETE FROM ID WHERE expresion_logica . PTCOMA
    (110) delete_insrt -> DELETE FROM ID WHERE expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 181
    RETURNING       shift and go to state 182


state 116

    (504) expresion_logica -> expresion_relacional . AND expresion_logica
    (505) expresion_logica -> expresion_relacional . OR expresion_logica
    (507) expresion_logica -> expresion_relacional .

    AND             shift and go to state 183
    OR              shift and go to state 184
    PTCOMA          reduce using rule 507 (expresion_logica -> expresion_relacional .)
    RETURNING       reduce using rule 507 (expresion_logica -> expresion_relacional .)
    PAR_C           reduce using rule 507 (expresion_logica -> expresion_relacional .)


state 117

    (506) expresion_logica -> NOT . expresion_logica
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 185
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 118

    (495) expresion_relacional -> expresion . MAYQUE expresion
    (496) expresion_relacional -> expresion . MENQUE expresion
    (497) expresion_relacional -> expresion . MAYIGQUE expresion
    (498) expresion_relacional -> expresion . MENIGQUE expresion
    (499) expresion_relacional -> expresion . DOBLEIG expresion
    (500) expresion_relacional -> expresion . IGUAL expresion
    (501) expresion_relacional -> expresion . NOIG expresion
    (502) expresion_relacional -> expresion . NOIGUAL expresion
    (503) expresion_relacional -> expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    MAYQUE          shift and go to state 186
    MENQUE          shift and go to state 187
    MAYIGQUE        shift and go to state 188
    MENIGQUE        shift and go to state 189
    DOBLEIG         shift and go to state 190
    IGUAL           shift and go to state 191
    NOIG            shift and go to state 192
    NOIGUAL         shift and go to state 193
    AND             reduce using rule 503 (expresion_relacional -> expresion .)
    OR              reduce using rule 503 (expresion_relacional -> expresion .)
    PTCOMA          reduce using rule 503 (expresion_relacional -> expresion .)
    RETURNING       reduce using rule 503 (expresion_relacional -> expresion .)
    PAR_C           reduce using rule 503 (expresion_relacional -> expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 119

    (489) expresion -> ENTERO .

    MAYQUE          reduce using rule 489 (expresion -> ENTERO .)
    MENQUE          reduce using rule 489 (expresion -> ENTERO .)
    MAYIGQUE        reduce using rule 489 (expresion -> ENTERO .)
    MENIGQUE        reduce using rule 489 (expresion -> ENTERO .)
    DOBLEIG         reduce using rule 489 (expresion -> ENTERO .)
    IGUAL           reduce using rule 489 (expresion -> ENTERO .)
    NOIG            reduce using rule 489 (expresion -> ENTERO .)
    NOIGUAL         reduce using rule 489 (expresion -> ENTERO .)
    SUMA            reduce using rule 489 (expresion -> ENTERO .)
    RESTA           reduce using rule 489 (expresion -> ENTERO .)
    ASTERISCO       reduce using rule 489 (expresion -> ENTERO .)
    DIVISION        reduce using rule 489 (expresion -> ENTERO .)
    AND             reduce using rule 489 (expresion -> ENTERO .)
    OR              reduce using rule 489 (expresion -> ENTERO .)
    PTCOMA          reduce using rule 489 (expresion -> ENTERO .)
    RETURNING       reduce using rule 489 (expresion -> ENTERO .)
    PAR_C           reduce using rule 489 (expresion -> ENTERO .)
    WHERE           reduce using rule 489 (expresion -> ENTERO .)
    COMA            reduce using rule 489 (expresion -> ENTERO .)


state 120

    (111) delete_insrt -> DELETE FROM ID RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 198


state 121

    (120) returning_exp -> ASTERISCO .

    PTCOMA          reduce using rule 120 (returning_exp -> ASTERISCO .)


state 122

    (121) returning_exp -> campos_c .
    (64) campos_c -> campos_c . COMA ID

    PTCOMA          reduce using rule 121 (returning_exp -> campos_c .)
    COMA            shift and go to state 68


state 123

    (112) delete_insrt -> DELETE FROM ID USING ID . WHERE EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> DELETE FROM ID USING ID . WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> DELETE FROM ID USING ID . WHERE expresion_logica PTCOMA
    (115) delete_insrt -> DELETE FROM ID USING ID . WHERE expresion_logica RETURNING returning_exp PTCOMA

    WHERE           shift and go to state 199


state 124

    (122) as_ID -> ID .

    WHERE           reduce using rule 122 (as_ID -> ID .)


state 125

    (116) delete_insrt -> DELETE FROM ID AS as_ID . WHERE EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> DELETE FROM ID AS as_ID . WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> DELETE FROM ID AS as_ID . WHERE expresion_logica PTCOMA
    (119) delete_insrt -> DELETE FROM ID AS as_ID . WHERE expresion_logica RETURNING returning_exp PTCOMA

    WHERE           shift and go to state 200


state 126

    (123) as_ID -> CADENA .

    WHERE           reduce using rule 123 (as_ID -> CADENA .)


state 127

    (104) parametro_update -> ID IGUAL . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 201

state 128

    (101) update_insrt -> UPDATE ID SET lista_update WHERE . ID IGUAL expresion PTCOMA

    ID              shift and go to state 202


state 129

    (102) lista_update -> lista_update COMA . parametro_update
    (104) parametro_update -> . ID IGUAL expresion

    ID              shift and go to state 75

    parametro_update               shift and go to state 203

state 130

    (41) lista_drop_id -> lista_drop_id COMA ID .

    PTCOMA          reduce using rule 41 (lista_drop_id -> lista_drop_id COMA ID .)
    COMA            reduce using rule 41 (lista_drop_id -> lista_drop_id COMA ID .)


state 131

    (43) alterDB_insrt -> ALTER DATABASE ID RENAME TO . ID PTCOMA

    ID              shift and go to state 204


state 132

    (44) alterDB_insrt -> ALTER DATABASE ID OWNER TO . usuariosDB PTCOMA
    (45) usuariosDB -> . ID
    (46) usuariosDB -> . CURRENT_USER
    (47) usuariosDB -> . SESSION_USER
    (48) usuariosDB -> . CADENA

    ID              shift and go to state 205
    CURRENT_USER    shift and go to state 207
    SESSION_USER    shift and go to state 208
    CADENA          shift and go to state 209

    usuariosDB                     shift and go to state 206

state 133

    (49) Table_alter -> ALTER COLUMN . ID TYPE TIPO_DATO
    (63) Table_alter -> ALTER COLUMN . ID SET NOT NULL

    ID              shift and go to state 210


state 134

    (50) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT . campos_c PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 211

state 135

    (51) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN . ID TO ID PTCOMA

    ID              shift and go to state 212


state 136

    (52) alterTable_insrt -> ALTER TABLE ID ADD COLUMN . campos_add_Column PTCOMA
    (53) campos_add_Column -> . campos_add_Column COMA ID TIPO_DATO
    (54) campos_add_Column -> . ID TIPO_DATO

    ID              shift and go to state 213

    campos_add_Column              shift and go to state 214

state 137

    (55) alterTable_insrt -> ALTER TABLE ID ADD CHECK . PAR_A expresion_logica PAR_C PTCOMA

    PAR_A           shift and go to state 215


state 138

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN . KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    KEY             shift and go to state 216


state 139

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT . ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    ID              shift and go to state 217


state 140

    (60) alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .

    USE             reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    CREATE          reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    SELECT          reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    INSERT          reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    DELETE          reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    UPDATE          reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    DROP            reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    ALTER           reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)
    $end            reduce using rule 60 (alterTable_insrt -> ALTER TABLE ID alterTable_alter PTCOMA .)


state 141

    (61) alterTable_alter -> alterTable_alter COMA . Table_alter
    (49) Table_alter -> . ALTER COLUMN ID TYPE TIPO_DATO
    (63) Table_alter -> . ALTER COLUMN ID SET NOT NULL

    ALTER           shift and go to state 82

    Table_alter                    shift and go to state 218

state 142

    (71) cuerpo_createTable -> ID TIPO_DATO .
    (72) cuerpo_createTable -> ID TIPO_DATO . PRIMARY KEY
    (73) cuerpo_createTable -> ID TIPO_DATO . REFERENCES ID
    (74) cuerpo_createTable -> ID TIPO_DATO . NOT NULL
    (75) cuerpo_createTable -> ID TIPO_DATO . NULL

    PAR_C           reduce using rule 71 (cuerpo_createTable -> ID TIPO_DATO .)
    COMA            reduce using rule 71 (cuerpo_createTable -> ID TIPO_DATO .)
    PRIMARY         shift and go to state 219
    REFERENCES      shift and go to state 220
    NOT             shift and go to state 221
    NULL            shift and go to state 222


state 143

    (80) TIPO_DATO -> TEXT .

    PRIMARY         reduce using rule 80 (TIPO_DATO -> TEXT .)
    REFERENCES      reduce using rule 80 (TIPO_DATO -> TEXT .)
    NOT             reduce using rule 80 (TIPO_DATO -> TEXT .)
    NULL            reduce using rule 80 (TIPO_DATO -> TEXT .)
    PAR_C           reduce using rule 80 (TIPO_DATO -> TEXT .)
    COMA            reduce using rule 80 (TIPO_DATO -> TEXT .)
    PTCOMA          reduce using rule 80 (TIPO_DATO -> TEXT .)


state 144

    (81) TIPO_DATO -> FLOAT .

    PRIMARY         reduce using rule 81 (TIPO_DATO -> FLOAT .)
    REFERENCES      reduce using rule 81 (TIPO_DATO -> FLOAT .)
    NOT             reduce using rule 81 (TIPO_DATO -> FLOAT .)
    NULL            reduce using rule 81 (TIPO_DATO -> FLOAT .)
    PAR_C           reduce using rule 81 (TIPO_DATO -> FLOAT .)
    COMA            reduce using rule 81 (TIPO_DATO -> FLOAT .)
    PTCOMA          reduce using rule 81 (TIPO_DATO -> FLOAT .)


state 145

    (82) TIPO_DATO -> INTEGER .

    PRIMARY         reduce using rule 82 (TIPO_DATO -> INTEGER .)
    REFERENCES      reduce using rule 82 (TIPO_DATO -> INTEGER .)
    NOT             reduce using rule 82 (TIPO_DATO -> INTEGER .)
    NULL            reduce using rule 82 (TIPO_DATO -> INTEGER .)
    PAR_C           reduce using rule 82 (TIPO_DATO -> INTEGER .)
    COMA            reduce using rule 82 (TIPO_DATO -> INTEGER .)
    PTCOMA          reduce using rule 82 (TIPO_DATO -> INTEGER .)


state 146

    (83) TIPO_DATO -> SMALLINT .

    PRIMARY         reduce using rule 83 (TIPO_DATO -> SMALLINT .)
    REFERENCES      reduce using rule 83 (TIPO_DATO -> SMALLINT .)
    NOT             reduce using rule 83 (TIPO_DATO -> SMALLINT .)
    NULL            reduce using rule 83 (TIPO_DATO -> SMALLINT .)
    PAR_C           reduce using rule 83 (TIPO_DATO -> SMALLINT .)
    COMA            reduce using rule 83 (TIPO_DATO -> SMALLINT .)
    PTCOMA          reduce using rule 83 (TIPO_DATO -> SMALLINT .)


state 147

    (84) TIPO_DATO -> MONEY .

    PRIMARY         reduce using rule 84 (TIPO_DATO -> MONEY .)
    REFERENCES      reduce using rule 84 (TIPO_DATO -> MONEY .)
    NOT             reduce using rule 84 (TIPO_DATO -> MONEY .)
    NULL            reduce using rule 84 (TIPO_DATO -> MONEY .)
    PAR_C           reduce using rule 84 (TIPO_DATO -> MONEY .)
    COMA            reduce using rule 84 (TIPO_DATO -> MONEY .)
    PTCOMA          reduce using rule 84 (TIPO_DATO -> MONEY .)


state 148

    (85) TIPO_DATO -> DECIMAL . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 223


state 149

    (86) TIPO_DATO -> NUMERIC . PAR_A ENTERO COMA ENTERO PAR_C

    PAR_A           shift and go to state 224


state 150

    (87) TIPO_DATO -> BIGINT .

    PRIMARY         reduce using rule 87 (TIPO_DATO -> BIGINT .)
    REFERENCES      reduce using rule 87 (TIPO_DATO -> BIGINT .)
    NOT             reduce using rule 87 (TIPO_DATO -> BIGINT .)
    NULL            reduce using rule 87 (TIPO_DATO -> BIGINT .)
    PAR_C           reduce using rule 87 (TIPO_DATO -> BIGINT .)
    COMA            reduce using rule 87 (TIPO_DATO -> BIGINT .)
    PTCOMA          reduce using rule 87 (TIPO_DATO -> BIGINT .)


state 151

    (88) TIPO_DATO -> REAL .

    PRIMARY         reduce using rule 88 (TIPO_DATO -> REAL .)
    REFERENCES      reduce using rule 88 (TIPO_DATO -> REAL .)
    NOT             reduce using rule 88 (TIPO_DATO -> REAL .)
    NULL            reduce using rule 88 (TIPO_DATO -> REAL .)
    PAR_C           reduce using rule 88 (TIPO_DATO -> REAL .)
    COMA            reduce using rule 88 (TIPO_DATO -> REAL .)
    PTCOMA          reduce using rule 88 (TIPO_DATO -> REAL .)


state 152

    (89) TIPO_DATO -> DOUBLE . PRECISION

    PRECISION       shift and go to state 225


state 153

    (90) TIPO_DATO -> INTERVAL . extract_time TO extract_time
    (91) TIPO_DATO -> INTERVAL .
    (426) extract_time -> . YEAR
    (427) extract_time -> . DAY
    (428) extract_time -> . MONTH
    (429) extract_time -> . HOUR
    (430) extract_time -> . MINUTE
    (431) extract_time -> . SECOND

    PRIMARY         reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    REFERENCES      reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    NOT             reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    NULL            reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    PAR_C           reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    COMA            reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    PTCOMA          reduce using rule 91 (TIPO_DATO -> INTERVAL .)
    YEAR            shift and go to state 227
    DAY             shift and go to state 228
    MONTH           shift and go to state 229
    HOUR            shift and go to state 230
    MINUTE          shift and go to state 231
    SECOND          shift and go to state 232

    extract_time                   shift and go to state 226

state 154

    (92) TIPO_DATO -> TIME .

    PRIMARY         reduce using rule 92 (TIPO_DATO -> TIME .)
    REFERENCES      reduce using rule 92 (TIPO_DATO -> TIME .)
    NOT             reduce using rule 92 (TIPO_DATO -> TIME .)
    NULL            reduce using rule 92 (TIPO_DATO -> TIME .)
    PAR_C           reduce using rule 92 (TIPO_DATO -> TIME .)
    COMA            reduce using rule 92 (TIPO_DATO -> TIME .)
    PTCOMA          reduce using rule 92 (TIPO_DATO -> TIME .)


state 155

    (93) TIPO_DATO -> TIMESTAMP .

    PRIMARY         reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)
    REFERENCES      reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)
    NOT             reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)
    NULL            reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)
    PAR_C           reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)
    COMA            reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)
    PTCOMA          reduce using rule 93 (TIPO_DATO -> TIMESTAMP .)


state 156

    (94) TIPO_DATO -> DATE .

    PRIMARY         reduce using rule 94 (TIPO_DATO -> DATE .)
    REFERENCES      reduce using rule 94 (TIPO_DATO -> DATE .)
    NOT             reduce using rule 94 (TIPO_DATO -> DATE .)
    NULL            reduce using rule 94 (TIPO_DATO -> DATE .)
    PAR_C           reduce using rule 94 (TIPO_DATO -> DATE .)
    COMA            reduce using rule 94 (TIPO_DATO -> DATE .)
    PTCOMA          reduce using rule 94 (TIPO_DATO -> DATE .)


state 157

    (95) TIPO_DATO -> CHARACTER . VARYING PAR_A ENTERO PAR_C
    (98) TIPO_DATO -> CHARACTER . PAR_A ENTERO PAR_C
    (100) TIPO_DATO -> CHARACTER . PAR_A PAR_C

    VARYING         shift and go to state 233
    PAR_A           shift and go to state 234


state 158

    (96) TIPO_DATO -> VARCHAR . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 235


state 159

    (97) TIPO_DATO -> CHAR . PAR_A ENTERO PAR_C
    (99) TIPO_DATO -> CHAR . PAR_A PAR_C

    PAR_A           shift and go to state 236


state 160

    (66) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C . opcion_herencia
    (67) opcion_herencia -> . INHERITS PAR_A ID PAR_C PTCOMA
    (68) opcion_herencia -> . PTCOMA

    INHERITS        shift and go to state 238
    PTCOMA          shift and go to state 239

    opcion_herencia                shift and go to state 237

state 161

    (69) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA . cuerpo_createTable
    (71) cuerpo_createTable -> . ID TIPO_DATO
    (72) cuerpo_createTable -> . ID TIPO_DATO PRIMARY KEY
    (73) cuerpo_createTable -> . ID TIPO_DATO REFERENCES ID
    (74) cuerpo_createTable -> . ID TIPO_DATO NOT NULL
    (75) cuerpo_createTable -> . ID TIPO_DATO NULL
    (76) cuerpo_createTable -> . PRIMARY KEY PAR_A campos_c PAR_C
    (77) cuerpo_createTable -> . FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C
    (78) cuerpo_createTable -> . UNIQUE PAR_A campos_c PAR_C
    (79) cuerpo_createTable -> . CONSTRAINT ID

    ID              shift and go to state 88
    PRIMARY         shift and go to state 91
    FOREING         shift and go to state 92
    UNIQUE          shift and go to state 93
    CONSTRAINT      shift and go to state 94

    cuerpo_createTable             shift and go to state 240

state 162

    (76) cuerpo_createTable -> PRIMARY KEY . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 241


state 163

    (77) cuerpo_createTable -> FOREING KEY . PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C

    PAR_A           shift and go to state 242


state 164

    (78) cuerpo_createTable -> UNIQUE PAR_A . campos_c PAR_C
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 243

state 165

    (79) cuerpo_createTable -> CONSTRAINT ID .

    PAR_C           reduce using rule 79 (cuerpo_createTable -> CONSTRAINT ID .)
    COMA            reduce using rule 79 (cuerpo_createTable -> CONSTRAINT ID .)


state 166

    (31) createDB_dosParam -> OWNER ID MODE . ENTERO
    (32) createDB_dosParam -> OWNER ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 244
    IGUAL           shift and go to state 245


state 167

    (25) createDB_unParam -> OWNER IGUAL ID .
    (35) createDB_dosParam -> OWNER IGUAL ID . MODE ENTERO
    (36) createDB_dosParam -> OWNER IGUAL ID . MODE IGUAL ENTERO

    PTCOMA          reduce using rule 25 (createDB_unParam -> OWNER IGUAL ID .)
    MODE            shift and go to state 246


state 168

    (33) createDB_dosParam -> MODE ENTERO OWNER . ID
    (34) createDB_dosParam -> MODE ENTERO OWNER . IGUAL ID

    ID              shift and go to state 247
    IGUAL           shift and go to state 248


state 169

    (26) createDB_unParam -> MODE IGUAL ENTERO .
    (37) createDB_dosParam -> MODE IGUAL ENTERO . OWNER ID
    (38) createDB_dosParam -> MODE IGUAL ENTERO . OWNER IGUAL ID

    PTCOMA          reduce using rule 26 (createDB_unParam -> MODE IGUAL ENTERO .)
    OWNER           shift and go to state 249


state 170

    (17) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . PTCOMA
    (21) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (23) createDB_unParam -> . OWNER ID
    (24) createDB_unParam -> . MODE ENTERO
    (25) createDB_unParam -> . OWNER IGUAL ID
    (26) createDB_unParam -> . MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (36) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (37) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (38) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 250
    OWNER           shift and go to state 62
    MODE            shift and go to state 63

    createDB_unParam               shift and go to state 251
    createDB_dosParam              shift and go to state 252

state 171

    (16) createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .

    USE             reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    CREATE          reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    SELECT          reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    INSERT          reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DELETE          reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    UPDATE          reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    DROP            reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    ALTER           reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)
    $end            reduce using rule 16 (createDB_insrt -> CREATE OR REPLACE DATABASE ID PTCOMA .)


state 172

    (20) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 253


state 173

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 254


state 174

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID PTCOMA
    (22) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT . EXISTS ID createDB_dosParam PTCOMA

    EXISTS          shift and go to state 255


state 175

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A . lista_datos PAR_C PTCOMA
    (487) lista_datos -> . lista_datos COMA CADENA
    (488) lista_datos -> . CADENA

    CADENA          shift and go to state 257

    lista_datos                    shift and go to state 256

state 176

    (124) select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .

    UNION           reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    INTERSECT       reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    EXCEPT          reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    USE             reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    CREATE          reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    SELECT          reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    INSERT          reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    DELETE          reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    UPDATE          reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    DROP            reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    ALTER           reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)
    $end            reduce using rule 124 (select_insrt -> SELECT DISTINCT campos_c FROM ID PTCOMA .)


state 177

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C . VALUES PAR_A lista_datos PAR_C PTCOMA

    VALUES          shift and go to state 258


state 178

    (484) lista_parametros_lista -> lista_parametros_lista COMA . lista_parametros
    (486) lista_parametros -> . ID

    ID              shift and go to state 107

    lista_parametros               shift and go to state 259

state 179

    (106) delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 260


state 180

    (107) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica . PTCOMA
    (108) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 261
    RETURNING       shift and go to state 262


state 181

    (109) delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .

    USE             reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    CREATE          reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    SELECT          reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    INSERT          reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    DELETE          reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    UPDATE          reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    DROP            reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    ALTER           reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)
    $end            reduce using rule 109 (delete_insrt -> DELETE FROM ID WHERE expresion_logica PTCOMA .)


state 182

    (110) delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 263
    campos_c                       shift and go to state 122

state 183

    (504) expresion_logica -> expresion_relacional AND . expresion_logica
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_relacional           shift and go to state 116
    expresion_logica               shift and go to state 264
    expresion                      shift and go to state 118

state 184

    (505) expresion_logica -> expresion_relacional OR . expresion_logica
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_relacional           shift and go to state 116
    expresion_logica               shift and go to state 265
    expresion                      shift and go to state 118

state 185

    (506) expresion_logica -> NOT expresion_logica .

    PTCOMA          reduce using rule 506 (expresion_logica -> NOT expresion_logica .)
    RETURNING       reduce using rule 506 (expresion_logica -> NOT expresion_logica .)
    PAR_C           reduce using rule 506 (expresion_logica -> NOT expresion_logica .)


state 186

    (495) expresion_relacional -> expresion MAYQUE . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 266

state 187

    (496) expresion_relacional -> expresion MENQUE . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 267

state 188

    (497) expresion_relacional -> expresion MAYIGQUE . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 268

state 189

    (498) expresion_relacional -> expresion MENIGQUE . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 269

state 190

    (499) expresion_relacional -> expresion DOBLEIG . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 270

state 191

    (500) expresion_relacional -> expresion IGUAL . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 271

state 192

    (501) expresion_relacional -> expresion NOIG . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 272

state 193

    (502) expresion_relacional -> expresion NOIGUAL . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 273

state 194

    (491) expresion -> expresion SUMA . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 274

state 195

    (492) expresion -> expresion RESTA . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 275

state 196

    (493) expresion -> expresion ASTERISCO . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 276

state 197

    (494) expresion -> expresion DIVISION . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 277

state 198

    (111) delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .

    USE             reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 111 (delete_insrt -> DELETE FROM ID RETURNING returning_exp PTCOMA .)


state 199

    (112) delete_insrt -> DELETE FROM ID USING ID WHERE . EXISTS expresion_logica PTCOMA
    (113) delete_insrt -> DELETE FROM ID USING ID WHERE . EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (114) delete_insrt -> DELETE FROM ID USING ID WHERE . expresion_logica PTCOMA
    (115) delete_insrt -> DELETE FROM ID USING ID WHERE . expresion_logica RETURNING returning_exp PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    EXISTS          shift and go to state 278
    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 279
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 200

    (116) delete_insrt -> DELETE FROM ID AS as_ID WHERE . EXISTS expresion_logica PTCOMA
    (117) delete_insrt -> DELETE FROM ID AS as_ID WHERE . EXISTS expresion_logica RETURNING returning_exp PTCOMA
    (118) delete_insrt -> DELETE FROM ID AS as_ID WHERE . expresion_logica PTCOMA
    (119) delete_insrt -> DELETE FROM ID AS as_ID WHERE . expresion_logica RETURNING returning_exp PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    EXISTS          shift and go to state 280
    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 281
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 201

    (104) parametro_update -> ID IGUAL expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    WHERE           reduce using rule 104 (parametro_update -> ID IGUAL expresion .)
    COMA            reduce using rule 104 (parametro_update -> ID IGUAL expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 202

    (101) update_insrt -> UPDATE ID SET lista_update WHERE ID . IGUAL expresion PTCOMA

    IGUAL           shift and go to state 282


state 203

    (102) lista_update -> lista_update COMA parametro_update .

    WHERE           reduce using rule 102 (lista_update -> lista_update COMA parametro_update .)
    COMA            reduce using rule 102 (lista_update -> lista_update COMA parametro_update .)


state 204

    (43) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID . PTCOMA

    PTCOMA          shift and go to state 283


state 205

    (45) usuariosDB -> ID .

    PTCOMA          reduce using rule 45 (usuariosDB -> ID .)


state 206

    (44) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB . PTCOMA

    PTCOMA          shift and go to state 284


state 207

    (46) usuariosDB -> CURRENT_USER .

    PTCOMA          reduce using rule 46 (usuariosDB -> CURRENT_USER .)


state 208

    (47) usuariosDB -> SESSION_USER .

    PTCOMA          reduce using rule 47 (usuariosDB -> SESSION_USER .)


state 209

    (48) usuariosDB -> CADENA .

    PTCOMA          reduce using rule 48 (usuariosDB -> CADENA .)


state 210

    (49) Table_alter -> ALTER COLUMN ID . TYPE TIPO_DATO
    (63) Table_alter -> ALTER COLUMN ID . SET NOT NULL

    TYPE            shift and go to state 285
    SET             shift and go to state 286


state 211

    (50) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c . PTCOMA
    (64) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 287
    COMA            shift and go to state 68


state 212

    (51) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID . TO ID PTCOMA

    TO              shift and go to state 288


state 213

    (54) campos_add_Column -> ID . TIPO_DATO
    (80) TIPO_DATO -> . TEXT
    (81) TIPO_DATO -> . FLOAT
    (82) TIPO_DATO -> . INTEGER
    (83) TIPO_DATO -> . SMALLINT
    (84) TIPO_DATO -> . MONEY
    (85) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (86) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (87) TIPO_DATO -> . BIGINT
    (88) TIPO_DATO -> . REAL
    (89) TIPO_DATO -> . DOUBLE PRECISION
    (90) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (91) TIPO_DATO -> . INTERVAL
    (92) TIPO_DATO -> . TIME
    (93) TIPO_DATO -> . TIMESTAMP
    (94) TIPO_DATO -> . DATE
    (95) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (96) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (97) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (98) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (99) TIPO_DATO -> . CHAR PAR_A PAR_C
    (100) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 143
    FLOAT           shift and go to state 144
    INTEGER         shift and go to state 145
    SMALLINT        shift and go to state 146
    MONEY           shift and go to state 147
    DECIMAL         shift and go to state 148
    NUMERIC         shift and go to state 149
    BIGINT          shift and go to state 150
    REAL            shift and go to state 151
    DOUBLE          shift and go to state 152
    INTERVAL        shift and go to state 153
    TIME            shift and go to state 154
    TIMESTAMP       shift and go to state 155
    DATE            shift and go to state 156
    CHARACTER       shift and go to state 157
    VARCHAR         shift and go to state 158
    CHAR            shift and go to state 159

    TIPO_DATO                      shift and go to state 289

state 214

    (52) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column . PTCOMA
    (53) campos_add_Column -> campos_add_Column . COMA ID TIPO_DATO

    PTCOMA          shift and go to state 290
    COMA            shift and go to state 291


state 215

    (55) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A . expresion_logica PAR_C PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 292
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 216

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY . PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    PAR_A           shift and go to state 293


state 217

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . CHECK PAR_A expresion_logica PAR_C PTCOMA
    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . UNIQUE PAR_A campos_c PAR_C PTCOMA
    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID . FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    CHECK           shift and go to state 294
    UNIQUE          shift and go to state 295
    FOREIGN         shift and go to state 296


state 218

    (61) alterTable_alter -> alterTable_alter COMA Table_alter .

    PTCOMA          reduce using rule 61 (alterTable_alter -> alterTable_alter COMA Table_alter .)
    COMA            reduce using rule 61 (alterTable_alter -> alterTable_alter COMA Table_alter .)


state 219

    (72) cuerpo_createTable -> ID TIPO_DATO PRIMARY . KEY

    KEY             shift and go to state 297


state 220

    (73) cuerpo_createTable -> ID TIPO_DATO REFERENCES . ID

    ID              shift and go to state 298


state 221

    (74) cuerpo_createTable -> ID TIPO_DATO NOT . NULL

    NULL            shift and go to state 299


state 222

    (75) cuerpo_createTable -> ID TIPO_DATO NULL .

    PAR_C           reduce using rule 75 (cuerpo_createTable -> ID TIPO_DATO NULL .)
    COMA            reduce using rule 75 (cuerpo_createTable -> ID TIPO_DATO NULL .)


state 223

    (85) TIPO_DATO -> DECIMAL PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 300


state 224

    (86) TIPO_DATO -> NUMERIC PAR_A . ENTERO COMA ENTERO PAR_C

    ENTERO          shift and go to state 301


state 225

    (89) TIPO_DATO -> DOUBLE PRECISION .

    PRIMARY         reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)
    REFERENCES      reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)
    NOT             reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)
    NULL            reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)
    PAR_C           reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)
    COMA            reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)
    PTCOMA          reduce using rule 89 (TIPO_DATO -> DOUBLE PRECISION .)


state 226

    (90) TIPO_DATO -> INTERVAL extract_time . TO extract_time

    TO              shift and go to state 302


state 227

    (426) extract_time -> YEAR .

    TO              reduce using rule 426 (extract_time -> YEAR .)
    PRIMARY         reduce using rule 426 (extract_time -> YEAR .)
    REFERENCES      reduce using rule 426 (extract_time -> YEAR .)
    NOT             reduce using rule 426 (extract_time -> YEAR .)
    NULL            reduce using rule 426 (extract_time -> YEAR .)
    PAR_C           reduce using rule 426 (extract_time -> YEAR .)
    COMA            reduce using rule 426 (extract_time -> YEAR .)
    PTCOMA          reduce using rule 426 (extract_time -> YEAR .)


state 228

    (427) extract_time -> DAY .

    TO              reduce using rule 427 (extract_time -> DAY .)
    PRIMARY         reduce using rule 427 (extract_time -> DAY .)
    REFERENCES      reduce using rule 427 (extract_time -> DAY .)
    NOT             reduce using rule 427 (extract_time -> DAY .)
    NULL            reduce using rule 427 (extract_time -> DAY .)
    PAR_C           reduce using rule 427 (extract_time -> DAY .)
    COMA            reduce using rule 427 (extract_time -> DAY .)
    PTCOMA          reduce using rule 427 (extract_time -> DAY .)


state 229

    (428) extract_time -> MONTH .

    TO              reduce using rule 428 (extract_time -> MONTH .)
    PRIMARY         reduce using rule 428 (extract_time -> MONTH .)
    REFERENCES      reduce using rule 428 (extract_time -> MONTH .)
    NOT             reduce using rule 428 (extract_time -> MONTH .)
    NULL            reduce using rule 428 (extract_time -> MONTH .)
    PAR_C           reduce using rule 428 (extract_time -> MONTH .)
    COMA            reduce using rule 428 (extract_time -> MONTH .)
    PTCOMA          reduce using rule 428 (extract_time -> MONTH .)


state 230

    (429) extract_time -> HOUR .

    TO              reduce using rule 429 (extract_time -> HOUR .)
    PRIMARY         reduce using rule 429 (extract_time -> HOUR .)
    REFERENCES      reduce using rule 429 (extract_time -> HOUR .)
    NOT             reduce using rule 429 (extract_time -> HOUR .)
    NULL            reduce using rule 429 (extract_time -> HOUR .)
    PAR_C           reduce using rule 429 (extract_time -> HOUR .)
    COMA            reduce using rule 429 (extract_time -> HOUR .)
    PTCOMA          reduce using rule 429 (extract_time -> HOUR .)


state 231

    (430) extract_time -> MINUTE .

    TO              reduce using rule 430 (extract_time -> MINUTE .)
    PRIMARY         reduce using rule 430 (extract_time -> MINUTE .)
    REFERENCES      reduce using rule 430 (extract_time -> MINUTE .)
    NOT             reduce using rule 430 (extract_time -> MINUTE .)
    NULL            reduce using rule 430 (extract_time -> MINUTE .)
    PAR_C           reduce using rule 430 (extract_time -> MINUTE .)
    COMA            reduce using rule 430 (extract_time -> MINUTE .)
    PTCOMA          reduce using rule 430 (extract_time -> MINUTE .)


state 232

    (431) extract_time -> SECOND .

    TO              reduce using rule 431 (extract_time -> SECOND .)
    PRIMARY         reduce using rule 431 (extract_time -> SECOND .)
    REFERENCES      reduce using rule 431 (extract_time -> SECOND .)
    NOT             reduce using rule 431 (extract_time -> SECOND .)
    NULL            reduce using rule 431 (extract_time -> SECOND .)
    PAR_C           reduce using rule 431 (extract_time -> SECOND .)
    COMA            reduce using rule 431 (extract_time -> SECOND .)
    PTCOMA          reduce using rule 431 (extract_time -> SECOND .)


state 233

    (95) TIPO_DATO -> CHARACTER VARYING . PAR_A ENTERO PAR_C

    PAR_A           shift and go to state 303


state 234

    (98) TIPO_DATO -> CHARACTER PAR_A . ENTERO PAR_C
    (100) TIPO_DATO -> CHARACTER PAR_A . PAR_C

    ENTERO          shift and go to state 304
    PAR_C           shift and go to state 305


state 235

    (96) TIPO_DATO -> VARCHAR PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 306


state 236

    (97) TIPO_DATO -> CHAR PAR_A . ENTERO PAR_C
    (99) TIPO_DATO -> CHAR PAR_A . PAR_C

    ENTERO          shift and go to state 307
    PAR_C           shift and go to state 308


state 237

    (66) create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .

    USE             reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    CREATE          reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    SELECT          reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    INSERT          reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    DELETE          reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    UPDATE          reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    DROP            reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    ALTER           reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)
    $end            reduce using rule 66 (create_Table_isnrt -> CREATE TABLE ID PAR_A cuerpo_createTable_lista PAR_C opcion_herencia .)


state 238

    (67) opcion_herencia -> INHERITS . PAR_A ID PAR_C PTCOMA

    PAR_A           shift and go to state 309


state 239

    (68) opcion_herencia -> PTCOMA .

    USE             reduce using rule 68 (opcion_herencia -> PTCOMA .)
    CREATE          reduce using rule 68 (opcion_herencia -> PTCOMA .)
    SELECT          reduce using rule 68 (opcion_herencia -> PTCOMA .)
    INSERT          reduce using rule 68 (opcion_herencia -> PTCOMA .)
    DELETE          reduce using rule 68 (opcion_herencia -> PTCOMA .)
    UPDATE          reduce using rule 68 (opcion_herencia -> PTCOMA .)
    DROP            reduce using rule 68 (opcion_herencia -> PTCOMA .)
    ALTER           reduce using rule 68 (opcion_herencia -> PTCOMA .)
    $end            reduce using rule 68 (opcion_herencia -> PTCOMA .)


state 240

    (69) cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .

    PAR_C           reduce using rule 69 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)
    COMA            reduce using rule 69 (cuerpo_createTable_lista -> cuerpo_createTable_lista COMA cuerpo_createTable .)


state 241

    (76) cuerpo_createTable -> PRIMARY KEY PAR_A . campos_c PAR_C
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 310

state 242

    (77) cuerpo_createTable -> FOREING KEY PAR_A . campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 311

state 243

    (78) cuerpo_createTable -> UNIQUE PAR_A campos_c . PAR_C
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 312
    COMA            shift and go to state 68


state 244

    (31) createDB_dosParam -> OWNER ID MODE ENTERO .

    PTCOMA          reduce using rule 31 (createDB_dosParam -> OWNER ID MODE ENTERO .)


state 245

    (32) createDB_dosParam -> OWNER ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 313


state 246

    (35) createDB_dosParam -> OWNER IGUAL ID MODE . ENTERO
    (36) createDB_dosParam -> OWNER IGUAL ID MODE . IGUAL ENTERO

    ENTERO          shift and go to state 315
    IGUAL           shift and go to state 314


state 247

    (33) createDB_dosParam -> MODE ENTERO OWNER ID .

    PTCOMA          reduce using rule 33 (createDB_dosParam -> MODE ENTERO OWNER ID .)


state 248

    (34) createDB_dosParam -> MODE ENTERO OWNER IGUAL . ID

    ID              shift and go to state 316


state 249

    (37) createDB_dosParam -> MODE IGUAL ENTERO OWNER . ID
    (38) createDB_dosParam -> MODE IGUAL ENTERO OWNER . IGUAL ID

    ID              shift and go to state 318
    IGUAL           shift and go to state 317


state 250

    (17) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .

    USE             reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    INSERT          reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DELETE          reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 17 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID PTCOMA .)


state 251

    (21) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 319


state 252

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 320


state 253

    (20) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .

    USE             reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)
    $end            reduce using rule 20 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_unParam PTCOMA .)


state 254

    (28) createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .

    USE             reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 28 (createDB_insrt -> CREATE OR REPLACE DATABASE ID createDB_dosParam PTCOMA .)


state 255

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID PTCOMA
    (22) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS . ID createDB_dosParam PTCOMA

    ID              shift and go to state 321


state 256

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos . PAR_C PTCOMA
    (487) lista_datos -> lista_datos . COMA CADENA

    PAR_C           shift and go to state 322
    COMA            shift and go to state 323


state 257

    (488) lista_datos -> CADENA .

    PAR_C           reduce using rule 488 (lista_datos -> CADENA .)
    COMA            reduce using rule 488 (lista_datos -> CADENA .)


state 258

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES . PAR_A lista_datos PAR_C PTCOMA

    PAR_A           shift and go to state 324


state 259

    (484) lista_parametros_lista -> lista_parametros_lista COMA lista_parametros .

    COMA            reduce using rule 484 (lista_parametros_lista -> lista_parametros_lista COMA lista_parametros .)
    PAR_C           reduce using rule 484 (lista_parametros_lista -> lista_parametros_lista COMA lista_parametros .)


state 260

    (106) delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .

    USE             reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 106 (delete_insrt -> DELETE FROM ONLY ID RETURNING returning_exp PTCOMA .)


state 261

    (107) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .

    USE             reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    CREATE          reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    SELECT          reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    INSERT          reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    DELETE          reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    UPDATE          reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    DROP            reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    ALTER           reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)
    $end            reduce using rule 107 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica PTCOMA .)


state 262

    (108) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 325
    campos_c                       shift and go to state 122

state 263

    (110) delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 326


state 264

    (504) expresion_logica -> expresion_relacional AND expresion_logica .

    PTCOMA          reduce using rule 504 (expresion_logica -> expresion_relacional AND expresion_logica .)
    RETURNING       reduce using rule 504 (expresion_logica -> expresion_relacional AND expresion_logica .)
    PAR_C           reduce using rule 504 (expresion_logica -> expresion_relacional AND expresion_logica .)


state 265

    (505) expresion_logica -> expresion_relacional OR expresion_logica .

    PTCOMA          reduce using rule 505 (expresion_logica -> expresion_relacional OR expresion_logica .)
    RETURNING       reduce using rule 505 (expresion_logica -> expresion_relacional OR expresion_logica .)
    PAR_C           reduce using rule 505 (expresion_logica -> expresion_relacional OR expresion_logica .)


state 266

    (495) expresion_relacional -> expresion MAYQUE expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 495 (expresion_relacional -> expresion MAYQUE expresion .)
    OR              reduce using rule 495 (expresion_relacional -> expresion MAYQUE expresion .)
    PTCOMA          reduce using rule 495 (expresion_relacional -> expresion MAYQUE expresion .)
    RETURNING       reduce using rule 495 (expresion_relacional -> expresion MAYQUE expresion .)
    PAR_C           reduce using rule 495 (expresion_relacional -> expresion MAYQUE expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 267

    (496) expresion_relacional -> expresion MENQUE expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 496 (expresion_relacional -> expresion MENQUE expresion .)
    OR              reduce using rule 496 (expresion_relacional -> expresion MENQUE expresion .)
    PTCOMA          reduce using rule 496 (expresion_relacional -> expresion MENQUE expresion .)
    RETURNING       reduce using rule 496 (expresion_relacional -> expresion MENQUE expresion .)
    PAR_C           reduce using rule 496 (expresion_relacional -> expresion MENQUE expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 268

    (497) expresion_relacional -> expresion MAYIGQUE expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 497 (expresion_relacional -> expresion MAYIGQUE expresion .)
    OR              reduce using rule 497 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PTCOMA          reduce using rule 497 (expresion_relacional -> expresion MAYIGQUE expresion .)
    RETURNING       reduce using rule 497 (expresion_relacional -> expresion MAYIGQUE expresion .)
    PAR_C           reduce using rule 497 (expresion_relacional -> expresion MAYIGQUE expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 269

    (498) expresion_relacional -> expresion MENIGQUE expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 498 (expresion_relacional -> expresion MENIGQUE expresion .)
    OR              reduce using rule 498 (expresion_relacional -> expresion MENIGQUE expresion .)
    PTCOMA          reduce using rule 498 (expresion_relacional -> expresion MENIGQUE expresion .)
    RETURNING       reduce using rule 498 (expresion_relacional -> expresion MENIGQUE expresion .)
    PAR_C           reduce using rule 498 (expresion_relacional -> expresion MENIGQUE expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 270

    (499) expresion_relacional -> expresion DOBLEIG expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 499 (expresion_relacional -> expresion DOBLEIG expresion .)
    OR              reduce using rule 499 (expresion_relacional -> expresion DOBLEIG expresion .)
    PTCOMA          reduce using rule 499 (expresion_relacional -> expresion DOBLEIG expresion .)
    RETURNING       reduce using rule 499 (expresion_relacional -> expresion DOBLEIG expresion .)
    PAR_C           reduce using rule 499 (expresion_relacional -> expresion DOBLEIG expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 271

    (500) expresion_relacional -> expresion IGUAL expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 500 (expresion_relacional -> expresion IGUAL expresion .)
    OR              reduce using rule 500 (expresion_relacional -> expresion IGUAL expresion .)
    PTCOMA          reduce using rule 500 (expresion_relacional -> expresion IGUAL expresion .)
    RETURNING       reduce using rule 500 (expresion_relacional -> expresion IGUAL expresion .)
    PAR_C           reduce using rule 500 (expresion_relacional -> expresion IGUAL expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 272

    (501) expresion_relacional -> expresion NOIG expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 501 (expresion_relacional -> expresion NOIG expresion .)
    OR              reduce using rule 501 (expresion_relacional -> expresion NOIG expresion .)
    PTCOMA          reduce using rule 501 (expresion_relacional -> expresion NOIG expresion .)
    RETURNING       reduce using rule 501 (expresion_relacional -> expresion NOIG expresion .)
    PAR_C           reduce using rule 501 (expresion_relacional -> expresion NOIG expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 273

    (502) expresion_relacional -> expresion NOIGUAL expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    AND             reduce using rule 502 (expresion_relacional -> expresion NOIGUAL expresion .)
    OR              reduce using rule 502 (expresion_relacional -> expresion NOIGUAL expresion .)
    PTCOMA          reduce using rule 502 (expresion_relacional -> expresion NOIGUAL expresion .)
    RETURNING       reduce using rule 502 (expresion_relacional -> expresion NOIGUAL expresion .)
    PAR_C           reduce using rule 502 (expresion_relacional -> expresion NOIGUAL expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 274

    (491) expresion -> expresion SUMA expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    MAYQUE          reduce using rule 491 (expresion -> expresion SUMA expresion .)
    MENQUE          reduce using rule 491 (expresion -> expresion SUMA expresion .)
    MAYIGQUE        reduce using rule 491 (expresion -> expresion SUMA expresion .)
    MENIGQUE        reduce using rule 491 (expresion -> expresion SUMA expresion .)
    DOBLEIG         reduce using rule 491 (expresion -> expresion SUMA expresion .)
    IGUAL           reduce using rule 491 (expresion -> expresion SUMA expresion .)
    NOIG            reduce using rule 491 (expresion -> expresion SUMA expresion .)
    NOIGUAL         reduce using rule 491 (expresion -> expresion SUMA expresion .)
    SUMA            reduce using rule 491 (expresion -> expresion SUMA expresion .)
    RESTA           reduce using rule 491 (expresion -> expresion SUMA expresion .)
    ASTERISCO       reduce using rule 491 (expresion -> expresion SUMA expresion .)
    AND             reduce using rule 491 (expresion -> expresion SUMA expresion .)
    OR              reduce using rule 491 (expresion -> expresion SUMA expresion .)
    PTCOMA          reduce using rule 491 (expresion -> expresion SUMA expresion .)
    RETURNING       reduce using rule 491 (expresion -> expresion SUMA expresion .)
    PAR_C           reduce using rule 491 (expresion -> expresion SUMA expresion .)
    WHERE           reduce using rule 491 (expresion -> expresion SUMA expresion .)
    COMA            reduce using rule 491 (expresion -> expresion SUMA expresion .)
    DIVISION        shift and go to state 197

  ! DIVISION        [ reduce using rule 491 (expresion -> expresion SUMA expresion .) ]
  ! SUMA            [ shift and go to state 194 ]
  ! RESTA           [ shift and go to state 195 ]
  ! ASTERISCO       [ shift and go to state 196 ]


state 275

    (492) expresion -> expresion RESTA expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    MAYQUE          reduce using rule 492 (expresion -> expresion RESTA expresion .)
    MENQUE          reduce using rule 492 (expresion -> expresion RESTA expresion .)
    MAYIGQUE        reduce using rule 492 (expresion -> expresion RESTA expresion .)
    MENIGQUE        reduce using rule 492 (expresion -> expresion RESTA expresion .)
    DOBLEIG         reduce using rule 492 (expresion -> expresion RESTA expresion .)
    IGUAL           reduce using rule 492 (expresion -> expresion RESTA expresion .)
    NOIG            reduce using rule 492 (expresion -> expresion RESTA expresion .)
    NOIGUAL         reduce using rule 492 (expresion -> expresion RESTA expresion .)
    SUMA            reduce using rule 492 (expresion -> expresion RESTA expresion .)
    RESTA           reduce using rule 492 (expresion -> expresion RESTA expresion .)
    ASTERISCO       reduce using rule 492 (expresion -> expresion RESTA expresion .)
    AND             reduce using rule 492 (expresion -> expresion RESTA expresion .)
    OR              reduce using rule 492 (expresion -> expresion RESTA expresion .)
    PTCOMA          reduce using rule 492 (expresion -> expresion RESTA expresion .)
    RETURNING       reduce using rule 492 (expresion -> expresion RESTA expresion .)
    PAR_C           reduce using rule 492 (expresion -> expresion RESTA expresion .)
    WHERE           reduce using rule 492 (expresion -> expresion RESTA expresion .)
    COMA            reduce using rule 492 (expresion -> expresion RESTA expresion .)
    DIVISION        shift and go to state 197

  ! DIVISION        [ reduce using rule 492 (expresion -> expresion RESTA expresion .) ]
  ! SUMA            [ shift and go to state 194 ]
  ! RESTA           [ shift and go to state 195 ]
  ! ASTERISCO       [ shift and go to state 196 ]


state 276

    (493) expresion -> expresion ASTERISCO expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ASTERISCO resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    MAYQUE          reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    MENQUE          reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    MAYIGQUE        reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    MENIGQUE        reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    DOBLEIG         reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    IGUAL           reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    NOIG            reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    NOIGUAL         reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    AND             reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    OR              reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    PTCOMA          reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    RETURNING       reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    PAR_C           reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    WHERE           reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    COMA            reduce using rule 493 (expresion -> expresion ASTERISCO expresion .)
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197

  ! SUMA            [ reduce using rule 493 (expresion -> expresion ASTERISCO expresion .) ]
  ! RESTA           [ reduce using rule 493 (expresion -> expresion ASTERISCO expresion .) ]
  ! ASTERISCO       [ reduce using rule 493 (expresion -> expresion ASTERISCO expresion .) ]
  ! DIVISION        [ reduce using rule 493 (expresion -> expresion ASTERISCO expresion .) ]


state 277

    (494) expresion -> expresion DIVISION expresion .
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    MAYQUE          reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    MENQUE          reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    MAYIGQUE        reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    MENIGQUE        reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    DOBLEIG         reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    IGUAL           reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    NOIG            reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    NOIGUAL         reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    SUMA            reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    RESTA           reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    ASTERISCO       reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    DIVISION        reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    AND             reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    OR              reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    PTCOMA          reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    RETURNING       reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    PAR_C           reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    WHERE           reduce using rule 494 (expresion -> expresion DIVISION expresion .)
    COMA            reduce using rule 494 (expresion -> expresion DIVISION expresion .)

  ! SUMA            [ shift and go to state 194 ]
  ! RESTA           [ shift and go to state 195 ]
  ! ASTERISCO       [ shift and go to state 196 ]
  ! DIVISION        [ shift and go to state 197 ]


state 278

    (112) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS . expresion_logica PTCOMA
    (113) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS . expresion_logica RETURNING returning_exp PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 327
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 279

    (114) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica . PTCOMA
    (115) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 328
    RETURNING       shift and go to state 329


state 280

    (116) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS . expresion_logica PTCOMA
    (117) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS . expresion_logica RETURNING returning_exp PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 330
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 281

    (118) delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica . PTCOMA
    (119) delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 331
    RETURNING       shift and go to state 332


state 282

    (101) update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL . expresion PTCOMA
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    ENTERO          shift and go to state 119

    expresion                      shift and go to state 333

state 283

    (43) alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .

    USE             reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    CREATE          reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    SELECT          reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    INSERT          reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DELETE          reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    UPDATE          reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    DROP            reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    ALTER           reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)
    $end            reduce using rule 43 (alterDB_insrt -> ALTER DATABASE ID RENAME TO ID PTCOMA .)


state 284

    (44) alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .

    USE             reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    CREATE          reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    SELECT          reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    INSERT          reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DELETE          reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    UPDATE          reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    DROP            reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    ALTER           reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)
    $end            reduce using rule 44 (alterDB_insrt -> ALTER DATABASE ID OWNER TO usuariosDB PTCOMA .)


state 285

    (49) Table_alter -> ALTER COLUMN ID TYPE . TIPO_DATO
    (80) TIPO_DATO -> . TEXT
    (81) TIPO_DATO -> . FLOAT
    (82) TIPO_DATO -> . INTEGER
    (83) TIPO_DATO -> . SMALLINT
    (84) TIPO_DATO -> . MONEY
    (85) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (86) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (87) TIPO_DATO -> . BIGINT
    (88) TIPO_DATO -> . REAL
    (89) TIPO_DATO -> . DOUBLE PRECISION
    (90) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (91) TIPO_DATO -> . INTERVAL
    (92) TIPO_DATO -> . TIME
    (93) TIPO_DATO -> . TIMESTAMP
    (94) TIPO_DATO -> . DATE
    (95) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (96) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (97) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (98) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (99) TIPO_DATO -> . CHAR PAR_A PAR_C
    (100) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 143
    FLOAT           shift and go to state 144
    INTEGER         shift and go to state 145
    SMALLINT        shift and go to state 146
    MONEY           shift and go to state 147
    DECIMAL         shift and go to state 148
    NUMERIC         shift and go to state 149
    BIGINT          shift and go to state 150
    REAL            shift and go to state 151
    DOUBLE          shift and go to state 152
    INTERVAL        shift and go to state 153
    TIME            shift and go to state 154
    TIMESTAMP       shift and go to state 155
    DATE            shift and go to state 156
    CHARACTER       shift and go to state 157
    VARCHAR         shift and go to state 158
    CHAR            shift and go to state 159

    TIPO_DATO                      shift and go to state 334

state 286

    (63) Table_alter -> ALTER COLUMN ID SET . NOT NULL

    NOT             shift and go to state 335


state 287

    (50) alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .

    USE             reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    CREATE          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    SELECT          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    INSERT          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    DELETE          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    UPDATE          reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    DROP            reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    ALTER           reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)
    $end            reduce using rule 50 (alterTable_insrt -> ALTER TABLE ID DROP CONSTRAINT campos_c PTCOMA .)


state 288

    (51) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO . ID PTCOMA

    ID              shift and go to state 336


state 289

    (54) campos_add_Column -> ID TIPO_DATO .

    PTCOMA          reduce using rule 54 (campos_add_Column -> ID TIPO_DATO .)
    COMA            reduce using rule 54 (campos_add_Column -> ID TIPO_DATO .)


state 290

    (52) alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .

    USE             reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    CREATE          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    SELECT          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    INSERT          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    DELETE          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    UPDATE          reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    DROP            reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    ALTER           reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)
    $end            reduce using rule 52 (alterTable_insrt -> ALTER TABLE ID ADD COLUMN campos_add_Column PTCOMA .)


state 291

    (53) campos_add_Column -> campos_add_Column COMA . ID TIPO_DATO

    ID              shift and go to state 337


state 292

    (55) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica . PAR_C PTCOMA

    PAR_C           shift and go to state 338


state 293

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A . campos_c PAR_C REFERENCES campos_c PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 339

state 294

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK . PAR_A expresion_logica PAR_C PTCOMA

    PAR_A           shift and go to state 340


state 295

    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE . PAR_A campos_c PAR_C PTCOMA

    PAR_A           shift and go to state 341


state 296

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN . KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    KEY             shift and go to state 342


state 297

    (72) cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .

    PAR_C           reduce using rule 72 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)
    COMA            reduce using rule 72 (cuerpo_createTable -> ID TIPO_DATO PRIMARY KEY .)


state 298

    (73) cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .

    PAR_C           reduce using rule 73 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)
    COMA            reduce using rule 73 (cuerpo_createTable -> ID TIPO_DATO REFERENCES ID .)


state 299

    (74) cuerpo_createTable -> ID TIPO_DATO NOT NULL .

    PAR_C           reduce using rule 74 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)
    COMA            reduce using rule 74 (cuerpo_createTable -> ID TIPO_DATO NOT NULL .)


state 300

    (85) TIPO_DATO -> DECIMAL PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 343


state 301

    (86) TIPO_DATO -> NUMERIC PAR_A ENTERO . COMA ENTERO PAR_C

    COMA            shift and go to state 344


state 302

    (90) TIPO_DATO -> INTERVAL extract_time TO . extract_time
    (426) extract_time -> . YEAR
    (427) extract_time -> . DAY
    (428) extract_time -> . MONTH
    (429) extract_time -> . HOUR
    (430) extract_time -> . MINUTE
    (431) extract_time -> . SECOND

    YEAR            shift and go to state 227
    DAY             shift and go to state 228
    MONTH           shift and go to state 229
    HOUR            shift and go to state 230
    MINUTE          shift and go to state 231
    SECOND          shift and go to state 232

    extract_time                   shift and go to state 345

state 303

    (95) TIPO_DATO -> CHARACTER VARYING PAR_A . ENTERO PAR_C

    ENTERO          shift and go to state 346


state 304

    (98) TIPO_DATO -> CHARACTER PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 347


state 305

    (100) TIPO_DATO -> CHARACTER PAR_A PAR_C .

    PRIMARY         reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    REFERENCES      reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NOT             reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    NULL            reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PAR_C           reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    COMA            reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)
    PTCOMA          reduce using rule 100 (TIPO_DATO -> CHARACTER PAR_A PAR_C .)


state 306

    (96) TIPO_DATO -> VARCHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 348


state 307

    (97) TIPO_DATO -> CHAR PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 349


state 308

    (99) TIPO_DATO -> CHAR PAR_A PAR_C .

    PRIMARY         reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    REFERENCES      reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NOT             reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    NULL            reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PAR_C           reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    COMA            reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)
    PTCOMA          reduce using rule 99 (TIPO_DATO -> CHAR PAR_A PAR_C .)


state 309

    (67) opcion_herencia -> INHERITS PAR_A . ID PAR_C PTCOMA

    ID              shift and go to state 350


state 310

    (76) cuerpo_createTable -> PRIMARY KEY PAR_A campos_c . PAR_C
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 351
    COMA            shift and go to state 68


state 311

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c . PAR_C REFERENCES ID PAR_A campos_c PAR_C
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 352
    COMA            shift and go to state 68


state 312

    (78) cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 78 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)
    COMA            reduce using rule 78 (cuerpo_createTable -> UNIQUE PAR_A campos_c PAR_C .)


state 313

    (32) createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 32 (createDB_dosParam -> OWNER ID MODE IGUAL ENTERO .)


state 314

    (36) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL . ENTERO

    ENTERO          shift and go to state 353


state 315

    (35) createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .

    PTCOMA          reduce using rule 35 (createDB_dosParam -> OWNER IGUAL ID MODE ENTERO .)


state 316

    (34) createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 34 (createDB_dosParam -> MODE ENTERO OWNER IGUAL ID .)


state 317

    (38) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL . ID

    ID              shift and go to state 354


state 318

    (37) createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .

    PTCOMA          reduce using rule 37 (createDB_dosParam -> MODE IGUAL ENTERO OWNER ID .)


state 319

    (21) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    USE             reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 21 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 320

    (29) createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    USE             reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 29 (createDB_insrt -> CREATE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 321

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . PTCOMA
    (22) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_unParam PTCOMA
    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID . createDB_dosParam PTCOMA
    (23) createDB_unParam -> . OWNER ID
    (24) createDB_unParam -> . MODE ENTERO
    (25) createDB_unParam -> . OWNER IGUAL ID
    (26) createDB_unParam -> . MODE IGUAL ENTERO
    (31) createDB_dosParam -> . OWNER ID MODE ENTERO
    (32) createDB_dosParam -> . OWNER ID MODE IGUAL ENTERO
    (33) createDB_dosParam -> . MODE ENTERO OWNER ID
    (34) createDB_dosParam -> . MODE ENTERO OWNER IGUAL ID
    (35) createDB_dosParam -> . OWNER IGUAL ID MODE ENTERO
    (36) createDB_dosParam -> . OWNER IGUAL ID MODE IGUAL ENTERO
    (37) createDB_dosParam -> . MODE IGUAL ENTERO OWNER ID
    (38) createDB_dosParam -> . MODE IGUAL ENTERO OWNER IGUAL ID

    PTCOMA          shift and go to state 355
    OWNER           shift and go to state 62
    MODE            shift and go to state 63

    createDB_unParam               shift and go to state 356
    createDB_dosParam              shift and go to state 357

state 322

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C . PTCOMA

    PTCOMA          shift and go to state 358


state 323

    (487) lista_datos -> lista_datos COMA . CADENA

    CADENA          shift and go to state 359


state 324

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A . lista_datos PAR_C PTCOMA
    (487) lista_datos -> . lista_datos COMA CADENA
    (488) lista_datos -> . CADENA

    CADENA          shift and go to state 257

    lista_datos                    shift and go to state 360

state 325

    (108) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 361


state 326

    (110) delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .

    USE             reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 110 (delete_insrt -> DELETE FROM ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)


state 327

    (112) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica . PTCOMA
    (113) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 362
    RETURNING       shift and go to state 363


state 328

    (114) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .

    USE             reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    CREATE          reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    SELECT          reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    INSERT          reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    DELETE          reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    UPDATE          reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    DROP            reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    ALTER           reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)
    $end            reduce using rule 114 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica PTCOMA .)


state 329

    (115) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 364
    campos_c                       shift and go to state 122

state 330

    (116) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica . PTCOMA
    (117) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica . RETURNING returning_exp PTCOMA

    PTCOMA          shift and go to state 365
    RETURNING       shift and go to state 366


state 331

    (118) delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .

    USE             reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    CREATE          reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    SELECT          reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    INSERT          reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    DELETE          reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    UPDATE          reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    DROP            reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    ALTER           reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)
    $end            reduce using rule 118 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica PTCOMA .)


state 332

    (119) delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 367
    campos_c                       shift and go to state 122

state 333

    (101) update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion . PTCOMA
    (491) expresion -> expresion . SUMA expresion
    (492) expresion -> expresion . RESTA expresion
    (493) expresion -> expresion . ASTERISCO expresion
    (494) expresion -> expresion . DIVISION expresion

    PTCOMA          shift and go to state 368
    SUMA            shift and go to state 194
    RESTA           shift and go to state 195
    ASTERISCO       shift and go to state 196
    DIVISION        shift and go to state 197


state 334

    (49) Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .

    PTCOMA          reduce using rule 49 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)
    COMA            reduce using rule 49 (Table_alter -> ALTER COLUMN ID TYPE TIPO_DATO .)


state 335

    (63) Table_alter -> ALTER COLUMN ID SET NOT . NULL

    NULL            shift and go to state 369


state 336

    (51) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID . PTCOMA

    PTCOMA          shift and go to state 370


state 337

    (53) campos_add_Column -> campos_add_Column COMA ID . TIPO_DATO
    (80) TIPO_DATO -> . TEXT
    (81) TIPO_DATO -> . FLOAT
    (82) TIPO_DATO -> . INTEGER
    (83) TIPO_DATO -> . SMALLINT
    (84) TIPO_DATO -> . MONEY
    (85) TIPO_DATO -> . DECIMAL PAR_A ENTERO COMA ENTERO PAR_C
    (86) TIPO_DATO -> . NUMERIC PAR_A ENTERO COMA ENTERO PAR_C
    (87) TIPO_DATO -> . BIGINT
    (88) TIPO_DATO -> . REAL
    (89) TIPO_DATO -> . DOUBLE PRECISION
    (90) TIPO_DATO -> . INTERVAL extract_time TO extract_time
    (91) TIPO_DATO -> . INTERVAL
    (92) TIPO_DATO -> . TIME
    (93) TIPO_DATO -> . TIMESTAMP
    (94) TIPO_DATO -> . DATE
    (95) TIPO_DATO -> . CHARACTER VARYING PAR_A ENTERO PAR_C
    (96) TIPO_DATO -> . VARCHAR PAR_A ENTERO PAR_C
    (97) TIPO_DATO -> . CHAR PAR_A ENTERO PAR_C
    (98) TIPO_DATO -> . CHARACTER PAR_A ENTERO PAR_C
    (99) TIPO_DATO -> . CHAR PAR_A PAR_C
    (100) TIPO_DATO -> . CHARACTER PAR_A PAR_C

    TEXT            shift and go to state 143
    FLOAT           shift and go to state 144
    INTEGER         shift and go to state 145
    SMALLINT        shift and go to state 146
    MONEY           shift and go to state 147
    DECIMAL         shift and go to state 148
    NUMERIC         shift and go to state 149
    BIGINT          shift and go to state 150
    REAL            shift and go to state 151
    DOUBLE          shift and go to state 152
    INTERVAL        shift and go to state 153
    TIME            shift and go to state 154
    TIMESTAMP       shift and go to state 155
    DATE            shift and go to state 156
    CHARACTER       shift and go to state 157
    VARCHAR         shift and go to state 158
    CHAR            shift and go to state 159

    TIPO_DATO                      shift and go to state 371

state 338

    (55) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C . PTCOMA

    PTCOMA          shift and go to state 372


state 339

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c . PAR_C REFERENCES campos_c PTCOMA
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 373
    COMA            shift and go to state 68


state 340

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A . expresion_logica PAR_C PTCOMA
    (504) expresion_logica -> . expresion_relacional AND expresion_logica
    (505) expresion_logica -> . expresion_relacional OR expresion_logica
    (506) expresion_logica -> . NOT expresion_logica
    (507) expresion_logica -> . expresion_relacional
    (495) expresion_relacional -> . expresion MAYQUE expresion
    (496) expresion_relacional -> . expresion MENQUE expresion
    (497) expresion_relacional -> . expresion MAYIGQUE expresion
    (498) expresion_relacional -> . expresion MENIGQUE expresion
    (499) expresion_relacional -> . expresion DOBLEIG expresion
    (500) expresion_relacional -> . expresion IGUAL expresion
    (501) expresion_relacional -> . expresion NOIG expresion
    (502) expresion_relacional -> . expresion NOIGUAL expresion
    (503) expresion_relacional -> . expresion
    (489) expresion -> . ENTERO
    (491) expresion -> . expresion SUMA expresion
    (492) expresion -> . expresion RESTA expresion
    (493) expresion -> . expresion ASTERISCO expresion
    (494) expresion -> . expresion DIVISION expresion

    NOT             shift and go to state 117
    ENTERO          shift and go to state 119

    expresion_logica               shift and go to state 374
    expresion_relacional           shift and go to state 116
    expresion                      shift and go to state 118

state 341

    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A . campos_c PAR_C PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 375

state 342

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY . PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA

    PAR_A           shift and go to state 376


state 343

    (85) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 377


state 344

    (86) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA . ENTERO PAR_C

    ENTERO          shift and go to state 378


state 345

    (90) TIPO_DATO -> INTERVAL extract_time TO extract_time .

    PRIMARY         reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    REFERENCES      reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NOT             reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    NULL            reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PAR_C           reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    COMA            reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)
    PTCOMA          reduce using rule 90 (TIPO_DATO -> INTERVAL extract_time TO extract_time .)


state 346

    (95) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO . PAR_C

    PAR_C           shift and go to state 379


state 347

    (98) TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)
    PTCOMA          reduce using rule 98 (TIPO_DATO -> CHARACTER PAR_A ENTERO PAR_C .)


state 348

    (96) TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)
    PTCOMA          reduce using rule 96 (TIPO_DATO -> VARCHAR PAR_A ENTERO PAR_C .)


state 349

    (97) TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)
    PTCOMA          reduce using rule 97 (TIPO_DATO -> CHAR PAR_A ENTERO PAR_C .)


state 350

    (67) opcion_herencia -> INHERITS PAR_A ID . PAR_C PTCOMA

    PAR_C           shift and go to state 380


state 351

    (76) cuerpo_createTable -> PRIMARY KEY PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 76 (cuerpo_createTable -> PRIMARY KEY PAR_A campos_c PAR_C .)
    COMA            reduce using rule 76 (cuerpo_createTable -> PRIMARY KEY PAR_A campos_c PAR_C .)


state 352

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C . REFERENCES ID PAR_A campos_c PAR_C

    REFERENCES      shift and go to state 381


state 353

    (36) createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .

    PTCOMA          reduce using rule 36 (createDB_dosParam -> OWNER IGUAL ID MODE IGUAL ENTERO .)


state 354

    (38) createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .

    PTCOMA          reduce using rule 38 (createDB_dosParam -> MODE IGUAL ENTERO OWNER IGUAL ID .)


state 355

    (18) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .

    USE             reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    CREATE          reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    SELECT          reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    INSERT          reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DELETE          reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    UPDATE          reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    DROP            reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    ALTER           reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)
    $end            reduce using rule 18 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID PTCOMA .)


state 356

    (22) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam . PTCOMA

    PTCOMA          shift and go to state 382


state 357

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam . PTCOMA

    PTCOMA          shift and go to state 383


state 358

    (39) TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .

    USE             reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    CREATE          reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    SELECT          reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    INSERT          reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    DELETE          reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    UPDATE          reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    DROP            reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    ALTER           reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)
    $end            reduce using rule 39 (TIPO_ENUM_INSRT -> CREATE TYPE ID AS ENUM PAR_A lista_datos PAR_C PTCOMA .)


state 359

    (487) lista_datos -> lista_datos COMA CADENA .

    PAR_C           reduce using rule 487 (lista_datos -> lista_datos COMA CADENA .)
    COMA            reduce using rule 487 (lista_datos -> lista_datos COMA CADENA .)


state 360

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos . PAR_C PTCOMA
    (487) lista_datos -> lista_datos . COMA CADENA

    PAR_C           shift and go to state 384
    COMA            shift and go to state 323


state 361

    (108) delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .

    USE             reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 108 (delete_insrt -> DELETE FROM ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)


state 362

    (112) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .

    USE             reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    CREATE          reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    SELECT          reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    INSERT          reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    DELETE          reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    UPDATE          reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    DROP            reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    ALTER           reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)
    $end            reduce using rule 112 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica PTCOMA .)


state 363

    (113) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 385
    campos_c                       shift and go to state 122

state 364

    (115) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 386


state 365

    (116) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .

    USE             reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    CREATE          reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    SELECT          reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    INSERT          reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    DELETE          reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    UPDATE          reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    DROP            reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    ALTER           reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)
    $end            reduce using rule 116 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica PTCOMA .)


state 366

    (117) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING . returning_exp PTCOMA
    (120) returning_exp -> . ASTERISCO
    (121) returning_exp -> . campos_c
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ASTERISCO       shift and go to state 121
    ID              shift and go to state 48

    returning_exp                  shift and go to state 387
    campos_c                       shift and go to state 122

state 367

    (119) delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 388


state 368

    (101) update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .

    USE             reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    CREATE          reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    SELECT          reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    INSERT          reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    DELETE          reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    UPDATE          reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    DROP            reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    ALTER           reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)
    $end            reduce using rule 101 (update_insrt -> UPDATE ID SET lista_update WHERE ID IGUAL expresion PTCOMA .)


state 369

    (63) Table_alter -> ALTER COLUMN ID SET NOT NULL .

    PTCOMA          reduce using rule 63 (Table_alter -> ALTER COLUMN ID SET NOT NULL .)
    COMA            reduce using rule 63 (Table_alter -> ALTER COLUMN ID SET NOT NULL .)


state 370

    (51) alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .

    USE             reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    CREATE          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    SELECT          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    INSERT          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    DELETE          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    UPDATE          reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    DROP            reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    ALTER           reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)
    $end            reduce using rule 51 (alterTable_insrt -> ALTER TABLE ID RENAME COLUMN ID TO ID PTCOMA .)


state 371

    (53) campos_add_Column -> campos_add_Column COMA ID TIPO_DATO .

    PTCOMA          reduce using rule 53 (campos_add_Column -> campos_add_Column COMA ID TIPO_DATO .)
    COMA            reduce using rule 53 (campos_add_Column -> campos_add_Column COMA ID TIPO_DATO .)


state 372

    (55) alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .

    USE             reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    CREATE          reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    SELECT          reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    INSERT          reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DELETE          reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    UPDATE          reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DROP            reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    ALTER           reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    $end            reduce using rule 55 (alterTable_insrt -> ALTER TABLE ID ADD CHECK PAR_A expresion_logica PAR_C PTCOMA .)


state 373

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C . REFERENCES campos_c PTCOMA

    REFERENCES      shift and go to state 389


state 374

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica . PAR_C PTCOMA

    PAR_C           shift and go to state 390


state 375

    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c . PAR_C PTCOMA
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 391
    COMA            shift and go to state 68


state 376

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A . campos_c PAR_C REFERENCES campos_c PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 392

state 377

    (85) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 393


state 378

    (86) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO . PAR_C

    PAR_C           shift and go to state 394


state 379

    (95) TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .

    PRIMARY         reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    REFERENCES      reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NOT             reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    NULL            reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PAR_C           reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    COMA            reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)
    PTCOMA          reduce using rule 95 (TIPO_DATO -> CHARACTER VARYING PAR_A ENTERO PAR_C .)


state 380

    (67) opcion_herencia -> INHERITS PAR_A ID PAR_C . PTCOMA

    PTCOMA          shift and go to state 395


state 381

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES . ID PAR_A campos_c PAR_C

    ID              shift and go to state 396


state 382

    (22) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .

    USE             reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    CREATE          reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    SELECT          reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    INSERT          reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DELETE          reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    UPDATE          reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    DROP            reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    ALTER           reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)
    $end            reduce using rule 22 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_unParam PTCOMA .)


state 383

    (30) createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .

    USE             reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    CREATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    SELECT          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    INSERT          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DELETE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    UPDATE          reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    DROP            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    ALTER           reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)
    $end            reduce using rule 30 (createDB_insrt -> CREATE OR REPLACE DATABASE IF NOT EXISTS ID createDB_dosParam PTCOMA .)


state 384

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C . PTCOMA

    PTCOMA          shift and go to state 397


state 385

    (113) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 398


state 386

    (115) delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .

    USE             reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 115 (delete_insrt -> DELETE FROM ID USING ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)


state 387

    (117) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp . PTCOMA

    PTCOMA          shift and go to state 399


state 388

    (119) delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .

    USE             reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 119 (delete_insrt -> DELETE FROM ID AS as_ID WHERE expresion_logica RETURNING returning_exp PTCOMA .)


state 389

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES . campos_c PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 400

state 390

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C . PTCOMA

    PTCOMA          shift and go to state 401


state 391

    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C . PTCOMA

    PTCOMA          shift and go to state 402


state 392

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c . PAR_C REFERENCES campos_c PTCOMA
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 403
    COMA            shift and go to state 68


state 393

    (85) TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)
    PTCOMA          reduce using rule 85 (TIPO_DATO -> DECIMAL PAR_A ENTERO COMA ENTERO PAR_C .)


state 394

    (86) TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .

    PRIMARY         reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    REFERENCES      reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NOT             reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    NULL            reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PAR_C           reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    COMA            reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)
    PTCOMA          reduce using rule 86 (TIPO_DATO -> NUMERIC PAR_A ENTERO COMA ENTERO PAR_C .)


state 395

    (67) opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .

    USE             reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    CREATE          reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    SELECT          reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    INSERT          reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    DELETE          reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    UPDATE          reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    DROP            reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    ALTER           reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)
    $end            reduce using rule 67 (opcion_herencia -> INHERITS PAR_A ID PAR_C PTCOMA .)


state 396

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID . PAR_A campos_c PAR_C

    PAR_A           shift and go to state 404


state 397

    (481) insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .

    USE             reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    CREATE          reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    SELECT          reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    INSERT          reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DELETE          reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    UPDATE          reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    DROP            reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    ALTER           reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)
    $end            reduce using rule 481 (insert_insrt -> INSERT INTO ID PAR_A opcion_lista_parametros_lista PAR_C VALUES PAR_A lista_datos PAR_C PTCOMA .)


state 398

    (113) delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .

    USE             reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 113 (delete_insrt -> DELETE FROM ID USING ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)


state 399

    (117) delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .

    USE             reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    CREATE          reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    SELECT          reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    INSERT          reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DELETE          reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    UPDATE          reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    DROP            reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    ALTER           reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)
    $end            reduce using rule 117 (delete_insrt -> DELETE FROM ID AS as_ID WHERE EXISTS expresion_logica RETURNING returning_exp PTCOMA .)


state 400

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c . PTCOMA
    (64) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 405
    COMA            shift and go to state 68


state 401

    (57) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .

    USE             reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    CREATE          reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    SELECT          reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    INSERT          reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DELETE          reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    UPDATE          reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    DROP            reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    ALTER           reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)
    $end            reduce using rule 57 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID CHECK PAR_A expresion_logica PAR_C PTCOMA .)


state 402

    (58) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .

    USE             reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    CREATE          reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    SELECT          reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    INSERT          reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    DELETE          reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    UPDATE          reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    DROP            reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    ALTER           reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)
    $end            reduce using rule 58 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID UNIQUE PAR_A campos_c PAR_C PTCOMA .)


state 403

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C . REFERENCES campos_c PTCOMA

    REFERENCES      shift and go to state 406


state 404

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A . campos_c PAR_C
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 407

state 405

    (56) alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .

    USE             reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    CREATE          reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    SELECT          reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    INSERT          reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DELETE          reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    UPDATE          reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DROP            reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    ALTER           reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    $end            reduce using rule 56 (alterTable_insrt -> ALTER TABLE ID ADD FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)


state 406

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES . campos_c PTCOMA
    (64) campos_c -> . campos_c COMA ID
    (65) campos_c -> . ID

    ID              shift and go to state 48

    campos_c                       shift and go to state 408

state 407

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c . PAR_C
    (64) campos_c -> campos_c . COMA ID

    PAR_C           shift and go to state 409
    COMA            shift and go to state 68


state 408

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c . PTCOMA
    (64) campos_c -> campos_c . COMA ID

    PTCOMA          shift and go to state 410
    COMA            shift and go to state 68


state 409

    (77) cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C .

    PAR_C           reduce using rule 77 (cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C .)
    COMA            reduce using rule 77 (cuerpo_createTable -> FOREING KEY PAR_A campos_c PAR_C REFERENCES ID PAR_A campos_c PAR_C .)


state 410

    (59) alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .

    USE             reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    CREATE          reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    SELECT          reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    INSERT          reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DELETE          reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    UPDATE          reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    DROP            reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    ALTER           reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)
    $end            reduce using rule 59 (alterTable_insrt -> ALTER TABLE ID ADD CONSTRAINT ID FOREIGN KEY PAR_A campos_c PAR_C REFERENCES campos_c PTCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for UNION in state 38 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 38 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 38 resolved as shift
WARNING: shift/reduce conflict for UNION in state 39 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 39 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 39 resolved as shift
WARNING: shift/reduce conflict for UNION in state 40 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 40 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 40 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 276 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 276 resolved as shift
WARNING: shift/reduce conflict for ASTERISCO in state 276 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 276 resolved as shift
